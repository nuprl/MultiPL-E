language: notypes.py
name: HumanEval_24_largest_divisor
results:
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    divisor = n - 1\n    while divisor > 0:\n        if n\
    \ % divisor == 0:\n            return divisor\n        divisor -= 1\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    divisor = n - 1\n    while divisor > 0:\n        if n\
    \ % divisor == 0:\n            return divisor\n        divisor -= 1\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    i = n - 1\n    while i\
    \ > 0:\n        if n % i == 0:\n            return i\n        i -= 1\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: -1
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    # start with n-1, and work down to 2\n    for i in range(n-1,\
    \ 1, -1):\n        if n % i == 0:\n            return i\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp190upwqq.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp190upwqq.py\", line 19,\
    \ in test_check\n    check(largest_divisor)\n  File \"/tmp/tmp190upwqq.py\", line\
    \ 12, in check\n    assert candidate(3) == 1\nAssertionError\n"
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    i = n - 1\n    while i > 0:\n        if n % i == 0:\n\
    \            return i\n        i -= 1\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    divisor = n - 1\n    while divisor > 0:\n        if n\
    \ % divisor == 0:\n            return divisor\n        divisor -= 1\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: -1
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n     \
    \   return 1\n    else:\n        for i in range(n-1, 1, -1):\n            if n\
    \ % i == 0:\n                return i\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpihsqiccy.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpihsqiccy.py\", line 23,\
    \ in test_check\n    check(largest_divisor)\n  File \"/tmp/tmpihsqiccy.py\", line\
    \ 16, in check\n    assert candidate(3) == 1\nAssertionError\n"
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    divisor = n - 1\n    while n % divisor != 0:\n       \
    \ divisor -= 1\n    return divisor\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    i = n - 1\n    while i > 0:\n        if n % i == 0:\n\
    \            return i\n        i -= 1\n    return 0\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    i = n - 1\n    while i > 0:\n        if n % i == 0:\n\
    \            return i\n        i -= 1\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: -1
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    if n == 1:\n        return 1\n    else:\n        for i\
    \ in range(n-1, 1, -1):\n            if n % i == 0:\n                return i\n\
    \ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuwf49bez.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpuwf49bez.py\", line 21,\
    \ in test_check\n    check(largest_divisor)\n  File \"/tmp/tmpuwf49bez.py\", line\
    \ 14, in check\n    assert candidate(3) == 1\nAssertionError\n"
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    divisor = n - 1\n    while divisor > 0:\n        if n\
    \ % divisor == 0:\n            return divisor\n        divisor -= 1\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    divisor = n - 1\n    while divisor > 0:\n        if n\
    \ % divisor == 0:\n            return divisor\n        divisor -= 1\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    divisor = n - 1\n    while divisor > 0:\n        if n\
    \ % divisor == 0:\n            return divisor\n        divisor -= 1\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    divisor = n - 1\n    while divisor > 0:\n        if n\
    \ % divisor == 0:\n            return divisor\n        divisor -= 1\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    divisor = n - 1\n    while divisor > 0:\n        if n\
    \ % divisor == 0:\n            return divisor\n        divisor -= 1\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    divisor = n - 1\n    while divisor > 0:\n        if n\
    \ % divisor == 0:\n            return divisor\n        divisor -= 1\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    divisor = n - 1\n    while\
    \ divisor > 0:\n        if n % divisor == 0:\n            return divisor\n   \
    \     divisor -= 1\n\ndef check(candidate):\n    assert candidate(3) == 1\n  \
    \  assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    divisor = n - 1\n    while divisor > 0:\n        if n\
    \ % divisor == 0:\n            return divisor\n        divisor -= 1\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n    i = n - 1\n    while i\
    \ > 0:\n        if n % i == 0:\n            return i\n        i -= 1\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    i = n - 1\n    while i > 0:\n        if n % i == 0:\n\
    \            return i\n        i -= 1\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    divisor = n - 1\n    while divisor > 0:\n        if n\
    \ % divisor == 0:\n            return divisor\n        divisor -= 1\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    divisor = n - 1\n    while divisor > 0:\n        if n\
    \ % divisor == 0:\n            return divisor\n        divisor -= 1\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    i = n - 1\n    while i > 0:\n        if n % i == 0:\n\
    \            return i\n        i -= 1\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    divisor = n - 1\n    while divisor > 0:\n        if n\
    \ % divisor == 0:\n            return divisor\n        divisor -= 1\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    divisor = n - 1\n    while divisor > 0:\n        if n\
    \ % divisor == 0:\n            return divisor\n        divisor -= 1\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: -1
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    if n == 1:\n        return 1\n    else:\n        for i\
    \ in range(n-1, 1, -1):\n            if n % i == 0:\n                return i\n\
    \ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuwf49bez.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpuwf49bez.py\", line 21,\
    \ in test_check\n    check(largest_divisor)\n  File \"/tmp/tmpuwf49bez.py\", line\
    \ 14, in check\n    assert candidate(3) == 1\nAssertionError\n"
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    divisor = n - 1\n    while divisor > 0:\n        if n\
    \ % divisor == 0:\n            return divisor\n        divisor -= 1\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    i = n - 1\n    while i > 0:\n        if n % i == 0:\n\
    \            return i\n        i -= 1\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    divisor = n - 1\n    while n % divisor != 0:\n       \
    \ divisor -= 1\n    return divisor\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    i = n - 1\n    while i > 0:\n        if n % i == 0:\n\
    \            return i\n        i -= 1\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    if n == 0:\n        return 0\n    else:\n        divisor\
    \ = n - 1\n        while n % divisor != 0:\n            divisor -= 1\n       \
    \ return divisor\n\ndef check(candidate):\n    assert candidate(3) == 1\n    assert\
    \ candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    divisor = n - 1\n    while divisor > 0:\n        if n\
    \ % divisor == 0:\n            return divisor\n        divisor -= 1\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    divisor = n - 1\n    while divisor > 0:\n        if n\
    \ % divisor == 0:\n            return divisor\n        divisor -= 1\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    divisor = n - 1\n    while divisor > 0:\n        if n\
    \ % divisor == 0:\n            return divisor\n        divisor -= 1\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    divisor = n - 1\n    while divisor > 0:\n        if n\
    \ % divisor == 0:\n            return divisor\n        divisor -= 1\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    divisor = n - 1\n    while divisor > 0:\n        if n\
    \ % divisor == 0:\n            return divisor\n        divisor -= 1\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    divisor = n - 1\n    while n % divisor != 0:\n       \
    \ divisor -= 1\n    return divisor\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    i = n - 1\n    while i > 0:\n        if n % i == 0:\n\
    \            return i\n        i -= 1\n    return 1\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    i = n - 1\n    while i > 0:\n        if n % i == 0:\n\
    \            return i\n        i -= 1\n    return 1\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    divisor = n - 1\n    while divisor > 0:\n        if n\
    \ % divisor == 0:\n            return divisor\n        divisor -= 1\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    divisor = n - 1\n    while divisor > 0:\n        if n\
    \ % divisor == 0:\n            return divisor\n        divisor -= 1\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: -1
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    if n == 1:\n        return 1\n    else:\n        for i\
    \ in range(n-1, 1, -1):\n            if n % i == 0:\n                return i\n\
    \ndef check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
    \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
    \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuwf49bez.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpuwf49bez.py\", line 21,\
    \ in test_check\n    check(largest_divisor)\n  File \"/tmp/tmpuwf49bez.py\", line\
    \ 14, in check\n    assert candidate(3) == 1\nAssertionError\n"
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    divisor = n - 1\n    while divisor > 0:\n        if n\
    \ % divisor == 0:\n            return divisor\n        divisor -= 1\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    i = n - 1\n    while i > 0:\n        if n % i == 0:\n\
    \            return i\n        i -= 1\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    i = n - 1\n    while i > 0:\n        if n % i == 0:\n\
    \            return i\n        i -= 1\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    divisor = n - 1\n    while divisor > 0:\n        if n\
    \ % divisor == 0:\n            return divisor\n        divisor -= 1\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n - 1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n    return 1\n\ndef check(candidate):\n    assert candidate(3)\
    \ == 1\n    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert\
    \ candidate(100) == 50\n    assert candidate(49) == 7\n\ndef test_check():\n \
    \   check(largest_divisor)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    divisor = n - 1\n    while divisor > 0:\n        if n\
    \ % divisor == 0:\n            return divisor\n        divisor -= 1\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    divisor = n - 1\n    while divisor > 0:\n        if n\
    \ % divisor == 0:\n            return divisor\n        divisor -= 1\n\ndef check(candidate):\n\
    \    assert candidate(3) == 1\n    assert candidate(7) == 1\n    assert candidate(10)\
    \ == 5\n    assert candidate(100) == 50\n    assert candidate(49) == 7\n\ndef\
    \ test_check():\n    check(largest_divisor)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948
- exit_code: 0
  program: "def largest_divisor(n):\n    \"\"\" For a given number n, find the largest\
    \ number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
    \    5\n    \"\"\"\n    for i in range(n-1, 0, -1):\n        if n % i == 0:\n\
    \            return i\n\ndef check(candidate):\n    assert candidate(3) == 1\n\
    \    assert candidate(7) == 1\n    assert candidate(10) == 5\n    assert candidate(100)\
    \ == 50\n    assert candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270948

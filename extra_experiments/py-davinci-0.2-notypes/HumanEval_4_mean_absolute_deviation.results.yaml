language: notypes.py
name: HumanEval_4_mean_absolute_deviation
results:
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    # TODO: Implement this function\n    # Hint: https://en.wikipedia.org/wiki/Mean_absolute_deviation\n\
    \    # Hint: https://en.wikipedia.org/wiki/Absolute_deviation\n    # Hint: https://en.wikipedia.org/wiki/Average\n\
    \    # Hint: https://docs.python.org/3/library/functions.html#abs\n    # Hint:\
    \ https://docs.python.org/3/library/statistics.html#statistics.mean\n    # Hint:\
    \ https://docs.python.org/3/library/functions.html#sum\n    # Hint: https://docs.python.org/3/library/functions.html#len\n\
    \    # Hint: https://docs.python.org/3/library/operator.html#operator.truediv\n\
    \    # Hint: https://docs.python.org/3/library/operator.html#operator.sub\n  \
    \  # Hint: https://docs.python.org/3/library/functions.html#map\n    # Hint: https://docs.python.org/3/library/functions.html#abs\n\
    \    # Hint: https://docs.python.org/3/library/functions.html#float\n    # Hint:\
    \ https://docs.python.org/3/library/functions.html#round\n    # Hint: https://docs.python.org/3/library/functions.html#zip\n\
    \    # Hint: https://docs.python.org/3/library/functions.html#enumerate\n    #\
    \ Hint: https://docs.python.org/3/library/functions.html#range\n    # Hint: https://docs.python.org/3/library/functions.html#max\n\
    \    # Hint: https://docs.python.org/3/library/functions.html#min\n    # Hint:\
    \ https://docs.python.org/3/library/functions.html#divmod\n    # Hint: https://docs.python.org/3/library/functions.html#pow\n\
    \    # Hint: https://docs.python.org/3/library/functions.html#\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef\
    \ test_check():\n    check(mean_absolute_deviation)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd8eavpim.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpd8eavpim.py\", line 38,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpd8eavpim.py\"\
    , line 33, in check\n    assert candidate([1.0, 2.0]) == 0.5\nAssertionError\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: 0
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = sum(numbers) / len(numbers)\n    return sum([abs(x - mean)\
    \ for x in numbers]) / len(numbers)\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    absolute_deviations = [abs(number\
    \ - mean) for number in numbers]\n    return mean_of_numbers(absolute_deviations)\n\
    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpunjoj8jd.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpunjoj8jd.py\", line 21,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpunjoj8jd.py\"\
    , line 16, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpunjoj8jd.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: 0
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = sum(numbers) / len(numbers)\n    return sum([abs(x - mean)\
    \ for x in numbers]) / len(numbers)\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    absolute_deviations = [abs(x\
    \ - mean) for x in numbers]\n    return mean_of_numbers(absolute_deviations)\n\
    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9ubhljd7.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp9ubhljd7.py\", line 21,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp9ubhljd7.py\"\
    , line 16, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp9ubhljd7.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    return mean_of_numbers([abs(x\
    \ - mean) for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpduhd1jkz.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpduhd1jkz.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    return sum(abs(n - mean(numbers)) for n in numbers) / len(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplpolnn1o.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmplpolnn1o.py\", line 19,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmplpolnn1o.py\"\
    , line 14, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmplpolnn1o.py\"\
    , line 10, in mean_absolute_deviation\n    return sum(abs(n - mean(numbers)) for\
    \ n in numbers) / len(numbers)\n  File \"/tmp/tmplpolnn1o.py\", line 10, in <genexpr>\n\
    \    return sum(abs(n - mean(numbers)) for n in numbers) / len(numbers)\nNameError:\
    \ name 'mean' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    deviations = [abs(x - mean)\
    \ for x in numbers]\n    return mean_of_numbers(deviations)\n\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef\
    \ test_check():\n    check(mean_absolute_deviation)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpht3yuxmo.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpht3yuxmo.py\", line 21,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpht3yuxmo.py\"\
    , line 16, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpht3yuxmo.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    absolute_deviations = [abs(x\
    \ - mean) for x in numbers]\n    return mean_of_numbers(absolute_deviations)\n\
    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9ubhljd7.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp9ubhljd7.py\", line 21,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp9ubhljd7.py\"\
    , line 16, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp9ubhljd7.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    return np.mean(np.abs(numbers - np.mean(numbers)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef\
    \ test_check():\n    check(mean_absolute_deviation)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpomia8eey.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpomia8eey.py\", line 19,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpomia8eey.py\"\
    , line 14, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpomia8eey.py\"\
    , line 10, in mean_absolute_deviation\n    return np.mean(np.abs(numbers - np.mean(numbers)))\n\
    NameError: name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: 0
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = sum(numbers) / len(numbers)\n    return sum([abs(x - mean)\
    \ for x in numbers]) / len(numbers)\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270946
- exit_code: 0
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    # Calculate mean of the input numbers\n    mean = sum(numbers)\
    \ / len(numbers)\n    # Calculate absolute difference between each element and\
    \ the mean\n    differences = [abs(number - mean) for number in numbers]\n   \
    \ # Return the average of the absolute differences\n    return sum(differences)\
    \ / len(differences)\n\ndef check(candidate):\n    assert candidate([1.0, 2.0])\
    \ == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    return np.mean(np.abs(numbers - np.mean(numbers)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef\
    \ test_check():\n    check(mean_absolute_deviation)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpomia8eey.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpomia8eey.py\", line 19,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpomia8eey.py\"\
    , line 14, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpomia8eey.py\"\
    , line 10, in mean_absolute_deviation\n    return np.mean(np.abs(numbers - np.mean(numbers)))\n\
    NameError: name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = np.mean(numbers)\n    return np.mean(np.abs(numbers -\
    \ mean))\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n\
    \    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk78dab0v.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpk78dab0v.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 10, in mean_absolute_deviation\n    mean = np.mean(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    return mean_of_numbers([abs(x\
    \ - mean) for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpduhd1jkz.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpduhd1jkz.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = np.mean(numbers)\n    return np.mean(np.abs(numbers -\
    \ mean))\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n\
    \    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk78dab0v.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpk78dab0v.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 10, in mean_absolute_deviation\n    mean = np.mean(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    return np.mean(np.abs(numbers - np.mean(numbers)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef\
    \ test_check():\n    check(mean_absolute_deviation)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpomia8eey.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpomia8eey.py\", line 19,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpomia8eey.py\"\
    , line 14, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpomia8eey.py\"\
    , line 10, in mean_absolute_deviation\n    return np.mean(np.abs(numbers - np.mean(numbers)))\n\
    NameError: name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_value(numbers)\n    return mean_value([abs(x - mean)\
    \ for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0])\
    \ == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7h7w00zs.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmp7h7w00zs.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp7h7w00zs.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp7h7w00zs.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_value(numbers)\nNameError:\
    \ name 'mean_value' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: 0
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = sum(numbers) / len(numbers)\n    return sum([abs(x - mean)\
    \ for x in numbers]) / len(numbers)\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    numbers = np.array(numbers)\n    return np.mean(np.abs(numbers\
    \ - np.mean(numbers)))\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk5t29xw0.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpk5t29xw0.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpk5t29xw0.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpk5t29xw0.py\"\
    , line 10, in mean_absolute_deviation\n    numbers = np.array(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    return mean_of_numbers([abs(x\
    \ - mean) for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpduhd1jkz.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpduhd1jkz.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_value(numbers)\n    return mean_value([abs(x - mean)\
    \ for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0])\
    \ == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7h7w00zs.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmp7h7w00zs.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp7h7w00zs.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp7h7w00zs.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_value(numbers)\nNameError:\
    \ name 'mean_value' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: 0
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    if len(numbers) == 0:\n        return 0\n    mean = sum(numbers)\
    \ / len(numbers)\n    return sum([abs(x - mean) for x in numbers]) / len(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270946
- exit_code: 0
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = sum(numbers) / len(numbers)\n    return sum([abs(x - mean)\
    \ for x in numbers]) / len(numbers)\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    absolute_deviations = [abs(x\
    \ - mean) for x in numbers]\n    return mean_of_numbers(absolute_deviations)\n\
    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9ubhljd7.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp9ubhljd7.py\", line 21,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp9ubhljd7.py\"\
    , line 16, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp9ubhljd7.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    absolute_deviations = [abs(x\
    \ - mean) for x in numbers]\n    return mean_of_numbers(absolute_deviations)\n\
    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9ubhljd7.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp9ubhljd7.py\", line 21,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp9ubhljd7.py\"\
    , line 16, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp9ubhljd7.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_value(numbers)\n    return mean_value([abs(x - mean)\
    \ for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0])\
    \ == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7h7w00zs.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmp7h7w00zs.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp7h7w00zs.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp7h7w00zs.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_value(numbers)\nNameError:\
    \ name 'mean_value' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: 0
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = sum(numbers) / len(numbers)\n    return sum([abs(x - mean)\
    \ for x in numbers]) / len(numbers)\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_value(numbers)\n    return mean_value([abs(x - mean)\
    \ for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0])\
    \ == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7h7w00zs.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmp7h7w00zs.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp7h7w00zs.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp7h7w00zs.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_value(numbers)\nNameError:\
    \ name 'mean_value' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    absolute_deviations = [abs(x\
    \ - mean) for x in numbers]\n    return sum(absolute_deviations) / len(absolute_deviations)\n\
    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpka1j2lm0.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpka1j2lm0.py\", line 21,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpka1j2lm0.py\"\
    , line 16, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpka1j2lm0.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    return mean_of_numbers([abs(x\
    \ - mean) for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpduhd1jkz.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpduhd1jkz.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: 0
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = sum(numbers) / len(numbers)\n    return sum([abs(x - mean)\
    \ for x in numbers]) / len(numbers)\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270946
- exit_code: 0
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = sum(numbers) / len(numbers)\n    return sum([abs(x - mean)\
    \ for x in numbers]) / len(numbers)\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270946
- exit_code: 0
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = sum(numbers) / len(numbers)\n    return sum([abs(x - mean)\
    \ for x in numbers]) / len(numbers)\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    absolute_deviations = [abs(x\
    \ - mean) for x in numbers]\n    return mean_of_numbers(absolute_deviations)\n\
    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9ubhljd7.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp9ubhljd7.py\", line 21,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp9ubhljd7.py\"\
    , line 16, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp9ubhljd7.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_value(numbers)\n    return mean_value([abs(x - mean)\
    \ for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0])\
    \ == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7h7w00zs.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmp7h7w00zs.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp7h7w00zs.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp7h7w00zs.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_value(numbers)\nNameError:\
    \ name 'mean_value' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    # TODO: Write this function\n    # Hint: You may find the abs()\
    \ function useful\n    # Hint: You may find the sum() function useful\n    # Hint:\
    \ You may find the len() function useful\n    # Hint: You may find the mean()\
    \ function useful\n    # Hint: You may find the zip() function useful\n    # Hint:\
    \ You may find the map() function useful\n    # Hint: You may find the list()\
    \ function useful\n    # Hint: You may find the round() function useful\n    #\
    \ Hint: You may find the divmod() function useful\n    # Hint: You may find the\
    \ isinstance() function useful\n    # Hint: You may find the type() function useful\n\
    \    # Hint: You may find the str() function useful\n    # Hint: You may find\
    \ the float() function useful\n    # Hint: You may find the int() function useful\n\
    \    # Hint: You may find the enumerate() function useful\n    # Hint: You may\
    \ find the range() function useful\n    # Hint: You may find the abs() function\
    \ useful\n    # Hint: You may find the sum() function useful\n    # Hint: You\
    \ may find the len() function useful\n    # Hint: You may find the mean() function\
    \ useful\n    # Hint: You may find the zip() function useful\n    # Hint: You\
    \ may find the map() function useful\n    # Hint: You may find the list() function\
    \ useful\n    # Hint: You may find the round() function useful\n    # Hint: You\
    \ may find the divmod() function useful\n    # Hint: You may find the isinstance()\
    \ function useful\n    # Hint: You may find the type() function useful\n    #\
    \ Hint: You may find the str() function useful\n    # Hint: You may find the float()\
    \ function useful\n    # Hint: You may find the int() function useful\n    # Hint:\
    \ You may find the enumerate() function useful\n    # Hint: You may find the range()\
    \ function useful\n    # Hint: You may find the abs() function useful\n    # Hint:\
    \ You may find the sum() function useful\n    # Hint: You may find the len() function\
    \ useful\n    # Hint: You\ndef check(candidate):\n    assert candidate([1.0, 2.0])\
    \ == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpys2poob9.py\", line\
    \ 55, in <module>\n    test_check()\n  File \"/tmp/tmpys2poob9.py\", line 53,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpys2poob9.py\"\
    , line 48, in check\n    assert candidate([1.0, 2.0]) == 0.5\nAssertionError\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = np.mean(numbers)\n    return np.mean(np.abs(numbers -\
    \ mean))\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n\
    \    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk78dab0v.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpk78dab0v.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 10, in mean_absolute_deviation\n    mean = np.mean(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    return mean_of_numbers([abs(x\
    \ - mean) for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpduhd1jkz.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpduhd1jkz.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    numbers = np.array(numbers)\n    mean = numbers.mean()\n    return\
    \ np.abs(numbers - mean).mean()\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3uo7adna.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp3uo7adna.py\", line 21,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp3uo7adna.py\"\
    , line 16, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp3uo7adna.py\"\
    , line 10, in mean_absolute_deviation\n    numbers = np.array(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = np.mean(numbers)\n    return np.mean(np.abs(numbers -\
    \ mean))\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n\
    \    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk78dab0v.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpk78dab0v.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 10, in mean_absolute_deviation\n    mean = np.mean(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_value(numbers)\n    return mean_value([abs(x - mean)\
    \ for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0])\
    \ == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7h7w00zs.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmp7h7w00zs.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp7h7w00zs.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp7h7w00zs.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_value(numbers)\nNameError:\
    \ name 'mean_value' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    numbers = np.array(numbers)\n    return np.mean(np.abs(numbers\
    \ - np.mean(numbers)))\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk5t29xw0.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpk5t29xw0.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpk5t29xw0.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpk5t29xw0.py\"\
    , line 10, in mean_absolute_deviation\n    numbers = np.array(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = np.mean(numbers)\n    deviations = [abs(number - mean)\
    \ for number in numbers]\n    return np.mean(deviations)\n\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef\
    \ test_check():\n    check(mean_absolute_deviation)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpn7rpqb_s.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpn7rpqb_s.py\", line 21,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpn7rpqb_s.py\"\
    , line 16, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpn7rpqb_s.py\"\
    , line 10, in mean_absolute_deviation\n    mean = np.mean(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    return mean_of_numbers([abs(x\
    \ - mean) for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpduhd1jkz.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpduhd1jkz.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    # Calculate mean of the input numbers\n    mean = mean_of_numbers(numbers)\n\
    \    # Calculate absolute difference between each element and the mean\n    #\
    \ and store it in a list\n    absolute_differences = []\n    for number in numbers:\n\
    \        absolute_differences.append(abs(number - mean))\n    # Calculate mean\
    \ of the absolute differences\n    mean_absolute_differences = mean_of_numbers(absolute_differences)\n\
    \    return mean_absolute_differences\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_xxo5ppf.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp_xxo5ppf.py\", line 28,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp_xxo5ppf.py\"\
    , line 23, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp_xxo5ppf.py\"\
    , line 11, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    # TODO: implement this function\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef\
    \ test_check():\n    check(mean_absolute_deviation)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1bnm7uw6.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmp1bnm7uw6.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp1bnm7uw6.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\nAssertionError\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    # TODO: implement this function\n    mean = mean_value(numbers)\n\
    \    sum = 0\n    for i in numbers:\n        sum += abs(i - mean)\n    return\
    \ sum / len(numbers)\n\ndef check(candidate):\n    assert candidate([1.0, 2.0])\
    \ == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy4nlxu0l.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpy4nlxu0l.py\", line 23,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpy4nlxu0l.py\"\
    , line 18, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpy4nlxu0l.py\"\
    , line 11, in mean_absolute_deviation\n    mean = mean_value(numbers)\nNameError:\
    \ name 'mean_value' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    return mean_of_numbers([abs(number\
    \ - mean) for number in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprk4b9i68.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmprk4b9i68.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmprk4b9i68.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmprk4b9i68.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = np.mean(numbers)\n    return np.mean(np.abs(numbers -\
    \ mean))\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n\
    \    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk78dab0v.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpk78dab0v.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 10, in mean_absolute_deviation\n    mean = np.mean(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_value(numbers)\n    return mean_value([abs(x - mean)\
    \ for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0])\
    \ == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7h7w00zs.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmp7h7w00zs.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp7h7w00zs.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp7h7w00zs.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_value(numbers)\nNameError:\
    \ name 'mean_value' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_value(numbers)\n    return mean_value([abs(x - mean)\
    \ for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0])\
    \ == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7h7w00zs.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmp7h7w00zs.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp7h7w00zs.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp7h7w00zs.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_value(numbers)\nNameError:\
    \ name 'mean_value' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    return mean_of_numbers([abs(x\
    \ - mean) for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpduhd1jkz.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpduhd1jkz.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = np.mean(numbers)\n    return np.mean(np.abs(numbers -\
    \ mean))\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n\
    \    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk78dab0v.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpk78dab0v.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 10, in mean_absolute_deviation\n    mean = np.mean(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = np.mean(numbers)\n    return np.mean(np.abs(numbers -\
    \ mean))\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n\
    \    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk78dab0v.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpk78dab0v.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 10, in mean_absolute_deviation\n    mean = np.mean(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    return mean_of_numbers([abs(x\
    \ - mean) for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpduhd1jkz.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpduhd1jkz.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = np.mean(numbers)\n    return np.mean(np.abs(numbers -\
    \ mean))\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n\
    \    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk78dab0v.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpk78dab0v.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 10, in mean_absolute_deviation\n    mean = np.mean(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    return sum(abs(x - mean(numbers)) for x in numbers) / len(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpg_6dfd5t.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpg_6dfd5t.py\", line 19,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpg_6dfd5t.py\"\
    , line 14, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpg_6dfd5t.py\"\
    , line 10, in mean_absolute_deviation\n    return sum(abs(x - mean(numbers)) for\
    \ x in numbers) / len(numbers)\n  File \"/tmp/tmpg_6dfd5t.py\", line 10, in <genexpr>\n\
    \    return sum(abs(x - mean(numbers)) for x in numbers) / len(numbers)\nNameError:\
    \ name 'mean' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_value(numbers)\n    return mean_value([abs(x - mean)\
    \ for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0])\
    \ == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7h7w00zs.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmp7h7w00zs.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp7h7w00zs.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp7h7w00zs.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_value(numbers)\nNameError:\
    \ name 'mean_value' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    absolute_deviations = [abs(x\
    \ - mean) for x in numbers]\n    return mean_of_numbers(absolute_deviations)\n\
    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9ubhljd7.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp9ubhljd7.py\", line 21,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp9ubhljd7.py\"\
    , line 16, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp9ubhljd7.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    x_mean = mean(numbers)\n    abs_deviations = [abs(x - x_mean)\
    \ for x in numbers]\n    return mean(abs_deviations)\n\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef\
    \ test_check():\n    check(mean_absolute_deviation)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd91nxzn6.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpd91nxzn6.py\", line 21,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpd91nxzn6.py\"\
    , line 16, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpd91nxzn6.py\"\
    , line 10, in mean_absolute_deviation\n    x_mean = mean(numbers)\nNameError:\
    \ name 'mean' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: 0
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    # Calculate mean of the dataset\n    mean = sum(numbers) / len(numbers)\n\
    \    # Calculate absolute difference between each element and the mean\n    abs_differences\
    \ = [abs(number - mean) for number in numbers]\n    # Calculate the mean of the\
    \ absolute differences\n    return sum(abs_differences) / len(abs_differences)\n\
    \ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\
    \ndef test_check():\n    check(mean_absolute_deviation)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = np.mean(numbers)\n    return np.mean(np.abs(numbers -\
    \ mean))\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n\
    \    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk78dab0v.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpk78dab0v.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 10, in mean_absolute_deviation\n    mean = np.mean(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    return mean_of_numbers([abs(x\
    \ - mean) for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpduhd1jkz.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpduhd1jkz.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = np.mean(numbers)\n    return np.mean(np.abs(numbers -\
    \ mean))\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n\
    \    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk78dab0v.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpk78dab0v.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 10, in mean_absolute_deviation\n    mean = np.mean(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: 0
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    # Calculate mean of input numbers\n    mean = sum(numbers) /\
    \ len(numbers)\n    # Calculate absolute difference between each element and mean\n\
    \    abs_differences = [abs(number - mean) for number in numbers]\n    # Calculate\
    \ mean of absolute differences\n    return sum(abs_differences) / len(abs_differences)\n\
    \ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\
    \ndef test_check():\n    check(mean_absolute_deviation)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    return mean_of_numbers([abs(x\
    \ - mean) for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpduhd1jkz.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpduhd1jkz.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    return sum(abs(x - mean(numbers)) for x in numbers) / len(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpg_6dfd5t.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpg_6dfd5t.py\", line 19,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpg_6dfd5t.py\"\
    , line 14, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpg_6dfd5t.py\"\
    , line 10, in mean_absolute_deviation\n    return sum(abs(x - mean(numbers)) for\
    \ x in numbers) / len(numbers)\n  File \"/tmp/tmpg_6dfd5t.py\", line 10, in <genexpr>\n\
    \    return sum(abs(x - mean(numbers)) for x in numbers) / len(numbers)\nNameError:\
    \ name 'mean' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    # TODO: implement this function\n    # Hint: use the absolute_deviation\
    \ function you just wrote\n    # Hint: use the mean function you just wrote\n\
    \    # Hint: use the sum function you just wrote\n    # Hint: use the len function\
    \ you just wrote\n    # Hint: use the divide function you just wrote\n    return\
    \ divide(sum(absolute_deviation(numbers, mean(numbers))), len(numbers))\n\ndef\
    \ check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\
    \ndef test_check():\n    check(mean_absolute_deviation)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdf85cawq.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpdf85cawq.py\", line 24,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpdf85cawq.py\"\
    , line 19, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpdf85cawq.py\"\
    , line 16, in mean_absolute_deviation\n    return divide(sum(absolute_deviation(numbers,\
    \ mean(numbers))), len(numbers))\nNameError: name 'divide' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    # TODO: Implement this function\n    # Hint: use the absolute_deviation\
    \ function\n    mean = mean(numbers)\n    return mean(absolute_deviation(numbers,\
    \ mean))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n \
    \   assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgpqytt5e.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpgpqytt5e.py\", line 21,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpgpqytt5e.py\"\
    , line 16, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpgpqytt5e.py\"\
    , line 12, in mean_absolute_deviation\n    mean = mean(numbers)\nUnboundLocalError:\
    \ local variable 'mean' referenced before assignment\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    absolute_deviations = [abs(number\
    \ - mean) for number in numbers]\n    return mean_of_numbers(absolute_deviations)\n\
    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpunjoj8jd.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpunjoj8jd.py\", line 21,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpunjoj8jd.py\"\
    , line 16, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpunjoj8jd.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    # Calculate mean of input numbers\n    mean = np.mean(numbers)\n\
    \    # Calculate absolute difference between each element and mean\n    absolute_deviations\
    \ = np.abs(numbers - mean)\n    # Return average of absolute differences\n   \
    \ return np.mean(absolute_deviations)\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr73uiddt.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpr73uiddt.py\", line 23,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpr73uiddt.py\"\
    , line 18, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpr73uiddt.py\"\
    , line 11, in mean_absolute_deviation\n    mean = np.mean(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = np.mean(numbers)\n    return np.mean(np.abs(numbers -\
    \ mean))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n \
    \   assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpx6zhjpbu.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpx6zhjpbu.py\", line 19,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpx6zhjpbu.py\"\
    , line 14, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpx6zhjpbu.py\"\
    , line 10, in mean_absolute_deviation\n    mean = np.mean(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = np.mean(numbers)\n    return np.mean(np.abs(numbers -\
    \ mean))\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n\
    \    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk78dab0v.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpk78dab0v.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 10, in mean_absolute_deviation\n    mean = np.mean(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    return mean_of_numbers([abs(x\
    \ - mean) for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpduhd1jkz.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpduhd1jkz.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    # TODO: implement this function\n    mean = mean_of_numbers(numbers)\n\
    \    absolute_deviation = []\n    for i in numbers:\n        absolute_deviation.append(abs(i\
    \ - mean))\n    return mean_of_numbers(absolute_deviation)\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef\
    \ test_check():\n    check(mean_absolute_deviation)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5n9etjxz.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp5n9etjxz.py\", line 23,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp5n9etjxz.py\"\
    , line 18, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp5n9etjxz.py\"\
    , line 11, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: 0
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = sum(numbers) / len(numbers)\n    return sum([abs(x - mean)\
    \ for x in numbers]) / len(numbers)\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = np.mean(numbers)\n    return np.mean(np.abs(numbers -\
    \ mean))\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n\
    \    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk78dab0v.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpk78dab0v.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 10, in mean_absolute_deviation\n    mean = np.mean(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_list(numbers)\n    absolute_deviations = [abs(x\
    \ - mean) for x in numbers]\n    return mean_of_list(absolute_deviations)\n\n\n\
    def check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\
    \ndef test_check():\n    check(mean_absolute_deviation)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7fzwmtgz.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp7fzwmtgz.py\", line 21,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp7fzwmtgz.py\"\
    , line 16, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp7fzwmtgz.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_list(numbers)\nNameError:\
    \ name 'mean_of_list' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    sum_of_absolute_deviations\
    \ = 0.0\n    for number in numbers:\n        sum_of_absolute_deviations += abs(number\
    \ - mean)\n    return sum_of_absolute_deviations / len(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef\
    \ test_check():\n    check(mean_absolute_deviation)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpohvjvdgn.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpohvjvdgn.py\", line 23,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpohvjvdgn.py\"\
    , line 18, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpohvjvdgn.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = np.mean(numbers)\n    return np.mean(np.abs(numbers -\
    \ mean))\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n\
    \    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk78dab0v.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpk78dab0v.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 10, in mean_absolute_deviation\n    mean = np.mean(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    return mean_of_numbers([abs(number\
    \ - mean) for number in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprk4b9i68.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmprk4b9i68.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmprk4b9i68.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmprk4b9i68.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    absolute_deviations = [abs(number\
    \ - mean) for number in numbers]\n    return mean_of_numbers(absolute_deviations)\n\
    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpunjoj8jd.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpunjoj8jd.py\", line 21,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpunjoj8jd.py\"\
    , line 16, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpunjoj8jd.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: 0
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = sum(numbers) / len(numbers)\n    return sum([abs(x - mean)\
    \ for x in numbers]) / len(numbers)\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    # Your code goes here\n    mean = mean_of_numbers(numbers)\n\
    \    abs_deviation = [abs(x - mean) for x in numbers]\n    return mean_of_numbers(abs_deviation)\n\
    \ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\
    \ndef test_check():\n    check(mean_absolute_deviation)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_0rkbio4.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp_0rkbio4.py\", line 21,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp_0rkbio4.py\"\
    , line 16, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp_0rkbio4.py\"\
    , line 11, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: 0
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = sum(numbers) / len(numbers)\n    return sum([abs(x - mean)\
    \ for x in numbers]) / len(numbers)\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = np.mean(numbers)\n    return np.mean(np.abs(numbers -\
    \ mean))\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n\
    \    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk78dab0v.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpk78dab0v.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 10, in mean_absolute_deviation\n    mean = np.mean(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    return mean_of_numbers([abs(x\
    \ - mean) for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpduhd1jkz.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpduhd1jkz.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: 0
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    # Calculate mean\n    mean = sum(numbers) / len(numbers)\n  \
    \  # Calculate absolute difference between each element and mean\n    absolute_differences\
    \ = [abs(number - mean) for number in numbers]\n    # Calculate mean of absolute\
    \ differences\n    return sum(absolute_differences) / len(absolute_differences)\n\
    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    return mean_of_numbers([abs(x\
    \ - mean) for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpduhd1jkz.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpduhd1jkz.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: 0
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = sum(numbers) / len(numbers)\n    return sum([abs(x - mean)\
    \ for x in numbers]) / len(numbers)\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270946
- exit_code: 0
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = sum(numbers) / len(numbers)\n    return sum([abs(x - mean)\
    \ for x in numbers]) / len(numbers)\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    return np.mean(np.abs(numbers - np.mean(numbers)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef\
    \ test_check():\n    check(mean_absolute_deviation)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpomia8eey.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpomia8eey.py\", line 19,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpomia8eey.py\"\
    , line 14, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpomia8eey.py\"\
    , line 10, in mean_absolute_deviation\n    return np.mean(np.abs(numbers - np.mean(numbers)))\n\
    NameError: name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    absolute_deviations = [abs(x\
    \ - mean) for x in numbers]\n    return mean_of_numbers(absolute_deviations)\n\
    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9ubhljd7.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp9ubhljd7.py\", line 21,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp9ubhljd7.py\"\
    , line 16, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp9ubhljd7.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: 0
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = sum(numbers) / len(numbers)\n    return sum([abs(x - mean)\
    \ for x in numbers]) / len(numbers)\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    absolute_deviations = [abs(x\
    \ - mean) for x in numbers]\n    return mean_of_numbers(absolute_deviations)\n\
    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9ubhljd7.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp9ubhljd7.py\", line 21,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp9ubhljd7.py\"\
    , line 16, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp9ubhljd7.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = np.mean(numbers)\n    return np.mean(np.abs(numbers -\
    \ mean))\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n\
    \    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk78dab0v.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpk78dab0v.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 10, in mean_absolute_deviation\n    mean = np.mean(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: 0
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = sum(numbers) / len(numbers)\n    return sum([abs(x - mean)\
    \ for x in numbers]) / len(numbers)\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_value(numbers)\n    return mean_value([abs(x - mean)\
    \ for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0])\
    \ == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7h7w00zs.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmp7h7w00zs.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp7h7w00zs.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp7h7w00zs.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_value(numbers)\nNameError:\
    \ name 'mean_value' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = np.mean(numbers)\n    absolute_deviations = [abs(x - mean)\
    \ for x in numbers]\n    return np.mean(absolute_deviations)\n\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef\
    \ test_check():\n    check(mean_absolute_deviation)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5_ow25nr.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp5_ow25nr.py\", line 21,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp5_ow25nr.py\"\
    , line 16, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp5_ow25nr.py\"\
    , line 10, in mean_absolute_deviation\n    mean = np.mean(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = np.mean(numbers)\n    return np.mean(np.abs(numbers -\
    \ mean))\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n\
    \    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk78dab0v.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpk78dab0v.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 10, in mean_absolute_deviation\n    mean = np.mean(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    deviations = [abs(x - mean)\
    \ for x in numbers]\n    return mean_of_numbers(deviations)\n\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef\
    \ test_check():\n    check(mean_absolute_deviation)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpht3yuxmo.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpht3yuxmo.py\", line 21,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpht3yuxmo.py\"\
    , line 16, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpht3yuxmo.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = np.mean(numbers)\n    return np.mean(np.abs(numbers -\
    \ mean))\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n\
    \    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk78dab0v.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpk78dab0v.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 10, in mean_absolute_deviation\n    mean = np.mean(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    absolute_deviations = [abs(x\
    \ - mean) for x in numbers]\n    return mean_of_numbers(absolute_deviations)\n\
    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9ubhljd7.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp9ubhljd7.py\", line 21,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp9ubhljd7.py\"\
    , line 16, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp9ubhljd7.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    return mean_of_numbers([abs(x\
    \ - mean) for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpduhd1jkz.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpduhd1jkz.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_value(numbers)\n    return mean_value([abs(x - mean)\
    \ for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0])\
    \ == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7h7w00zs.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmp7h7w00zs.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp7h7w00zs.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp7h7w00zs.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_value(numbers)\nNameError:\
    \ name 'mean_value' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    abs_deviations = [abs(x\
    \ - mean) for x in numbers]\n    return mean_of_numbers(abs_deviations)\n\n\n\
    def check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\
    \ndef test_check():\n    check(mean_absolute_deviation)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcn90rqx6.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpcn90rqx6.py\", line 21,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpcn90rqx6.py\"\
    , line 16, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpcn90rqx6.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    return mean_of_numbers([abs(x\
    \ - mean) for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpduhd1jkz.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpduhd1jkz.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: 0
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = sum(numbers) / len(numbers)\n    deviations = [abs(number\
    \ - mean) for number in numbers]\n    return sum(deviations) / len(deviations)\n\
    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270946
- exit_code: 0
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    # Calculate mean of input numbers\n    mean = sum(numbers) /\
    \ len(numbers)\n    # Calculate absolute difference between each element and mean\n\
    \    abs_differences = [abs(number - mean) for number in numbers]\n    # Calculate\
    \ mean of absolute differences\n    mean_abs_differences = sum(abs_differences)\
    \ / len(abs_differences)\n    return mean_abs_differences\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef\
    \ test_check():\n    check(mean_absolute_deviation)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    return mean_of_numbers([abs(x\
    \ - mean) for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpduhd1jkz.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpduhd1jkz.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    return mean_of_numbers([abs(x\
    \ - mean) for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpduhd1jkz.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpduhd1jkz.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_value(numbers)\n    return mean_value([abs(x - mean)\
    \ for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0])\
    \ == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7h7w00zs.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmp7h7w00zs.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp7h7w00zs.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp7h7w00zs.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_value(numbers)\nNameError:\
    \ name 'mean_value' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    numbers = np.array(numbers)\n    return np.mean(np.abs(numbers\
    \ - np.mean(numbers)))\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk5t29xw0.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpk5t29xw0.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpk5t29xw0.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpk5t29xw0.py\"\
    , line 10, in mean_absolute_deviation\n    numbers = np.array(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = np.mean(numbers)\n    absolute_deviations = [abs(x - mean)\
    \ for x in numbers]\n    return np.mean(absolute_deviations)\n\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef\
    \ test_check():\n    check(mean_absolute_deviation)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5_ow25nr.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp5_ow25nr.py\", line 21,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp5_ow25nr.py\"\
    , line 16, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp5_ow25nr.py\"\
    , line 10, in mean_absolute_deviation\n    mean = np.mean(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    return mean_of_numbers([abs(x\
    \ - mean) for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpduhd1jkz.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpduhd1jkz.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: 0
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    # Calculate mean of dataset\n    mean = sum(numbers) / len(numbers)\n\
    \    # Calculate absolute difference between each element and mean\n    absolute_differences\
    \ = [abs(x - mean) for x in numbers]\n    # Calculate mean of absolute differences\n\
    \    return sum(absolute_differences) / len(absolute_differences)\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef\
    \ test_check():\n    check(mean_absolute_deviation)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    numbers = np.array(numbers)\n    return np.mean(np.abs(numbers\
    \ - np.mean(numbers)))\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk5t29xw0.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpk5t29xw0.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpk5t29xw0.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpk5t29xw0.py\"\
    , line 10, in mean_absolute_deviation\n    numbers = np.array(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = np.mean(numbers)\n    return np.mean(np.abs(numbers -\
    \ mean))\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n\
    \    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk78dab0v.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpk78dab0v.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 10, in mean_absolute_deviation\n    mean = np.mean(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = np.mean(numbers)\n    absolute_deviations = [abs(x - mean)\
    \ for x in numbers]\n    return np.mean(absolute_deviations)\n\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef\
    \ test_check():\n    check(mean_absolute_deviation)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5_ow25nr.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp5_ow25nr.py\", line 21,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp5_ow25nr.py\"\
    , line 16, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp5_ow25nr.py\"\
    , line 10, in mean_absolute_deviation\n    mean = np.mean(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    return mean_of_numbers([abs(x\
    \ - mean) for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpduhd1jkz.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpduhd1jkz.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_value(numbers)\n    return mean_value([abs(x - mean)\
    \ for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0])\
    \ == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7h7w00zs.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmp7h7w00zs.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp7h7w00zs.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp7h7w00zs.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_value(numbers)\nNameError:\
    \ name 'mean_value' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = np.mean(numbers)\n    return np.mean(np.abs(numbers -\
    \ mean))\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n\
    \    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk78dab0v.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpk78dab0v.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 10, in mean_absolute_deviation\n    mean = np.mean(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    return mean_of_numbers([abs(x\
    \ - mean) for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpduhd1jkz.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpduhd1jkz.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = np.mean(numbers)\n    return np.mean(np.abs(numbers -\
    \ mean))\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n\
    \    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk78dab0v.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpk78dab0v.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 10, in mean_absolute_deviation\n    mean = np.mean(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = np.mean(numbers)\n    return np.mean(np.abs(numbers -\
    \ mean))\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n\
    \    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk78dab0v.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpk78dab0v.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 10, in mean_absolute_deviation\n    mean = np.mean(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_value(numbers)\n    return mean_value([abs(x - mean)\
    \ for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0])\
    \ == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7h7w00zs.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmp7h7w00zs.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp7h7w00zs.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp7h7w00zs.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_value(numbers)\nNameError:\
    \ name 'mean_value' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    return mean_of_numbers([abs(x\
    \ - mean) for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpduhd1jkz.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpduhd1jkz.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    abs_deviations = [abs(number\
    \ - mean) for number in numbers]\n    return mean_of_numbers(abs_deviations)\n\
    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4miqsrx7.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp4miqsrx7.py\", line 21,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp4miqsrx7.py\"\
    , line 16, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp4miqsrx7.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_value(numbers)\n    return mean_value([abs(x - mean)\
    \ for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0])\
    \ == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7h7w00zs.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmp7h7w00zs.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp7h7w00zs.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp7h7w00zs.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_value(numbers)\nNameError:\
    \ name 'mean_value' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    absolute_deviations = [abs(x\
    \ - mean) for x in numbers]\n    return mean_of_numbers(absolute_deviations)\n\
    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9ubhljd7.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp9ubhljd7.py\", line 21,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp9ubhljd7.py\"\
    , line 16, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp9ubhljd7.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    return mean_of_numbers([abs(x\
    \ - mean) for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpduhd1jkz.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpduhd1jkz.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    return np.mean(np.abs(numbers - np.mean(numbers)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef\
    \ test_check():\n    check(mean_absolute_deviation)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpomia8eey.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpomia8eey.py\", line 19,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpomia8eey.py\"\
    , line 14, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpomia8eey.py\"\
    , line 10, in mean_absolute_deviation\n    return np.mean(np.abs(numbers - np.mean(numbers)))\n\
    NameError: name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: 0
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = sum(numbers) / len(numbers)\n    return sum([abs(x - mean)\
    \ for x in numbers]) / len(numbers)\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    return mean_absolute_difference(numbers, mean(numbers))\n\n\n\
    def check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\
    \ndef test_check():\n    check(mean_absolute_deviation)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptebay4pe.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmptebay4pe.py\", line 19,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmptebay4pe.py\"\
    , line 14, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmptebay4pe.py\"\
    , line 10, in mean_absolute_deviation\n    return mean_absolute_difference(numbers,\
    \ mean(numbers))\nNameError: name 'mean_absolute_difference' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    return mean_of_numbers([abs(x\
    \ - mean) for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpduhd1jkz.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpduhd1jkz.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    return mean_of_numbers([abs(x\
    \ - mean) for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpduhd1jkz.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpduhd1jkz.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    return np.mean(np.abs(numbers - np.mean(numbers)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef\
    \ test_check():\n    check(mean_absolute_deviation)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpomia8eey.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpomia8eey.py\", line 19,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpomia8eey.py\"\
    , line 14, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpomia8eey.py\"\
    , line 10, in mean_absolute_deviation\n    return np.mean(np.abs(numbers - np.mean(numbers)))\n\
    NameError: name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    return np.mean(np.abs(numbers - np.mean(numbers)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef\
    \ test_check():\n    check(mean_absolute_deviation)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpomia8eey.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpomia8eey.py\", line 19,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpomia8eey.py\"\
    , line 14, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpomia8eey.py\"\
    , line 10, in mean_absolute_deviation\n    return np.mean(np.abs(numbers - np.mean(numbers)))\n\
    NameError: name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    return mean_of_numbers([abs(x\
    \ - mean) for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpduhd1jkz.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpduhd1jkz.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    # TODO: Write this function\n    return 0.0\n\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef\
    \ test_check():\n    check(mean_absolute_deviation)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd_q2yh3q.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpd_q2yh3q.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpd_q2yh3q.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\nAssertionError\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    absolute_deviations = [abs(number\
    \ - mean) for number in numbers]\n    return mean_of_numbers(absolute_deviations)\n\
    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpunjoj8jd.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpunjoj8jd.py\", line 21,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpunjoj8jd.py\"\
    , line 16, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpunjoj8jd.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    absolute_deviations = [abs(x\
    \ - mean) for x in numbers]\n    return mean_of_numbers(absolute_deviations)\n\
    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9ubhljd7.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp9ubhljd7.py\", line 21,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp9ubhljd7.py\"\
    , line 16, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp9ubhljd7.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = np.mean(numbers)\n    return np.mean(np.abs(numbers -\
    \ mean))\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n\
    \    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk78dab0v.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpk78dab0v.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 10, in mean_absolute_deviation\n    mean = np.mean(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = np.mean(numbers)\n    return np.mean(np.abs(numbers -\
    \ mean))\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n\
    \    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk78dab0v.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpk78dab0v.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 10, in mean_absolute_deviation\n    mean = np.mean(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    absolute_deviations = [abs(x\
    \ - mean) for x in numbers]\n    return mean_of_numbers(absolute_deviations)\n\
    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9ubhljd7.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp9ubhljd7.py\", line 21,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp9ubhljd7.py\"\
    , line 16, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp9ubhljd7.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_value(numbers)\n    return mean_value([abs(x - mean)\
    \ for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0])\
    \ == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7h7w00zs.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmp7h7w00zs.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp7h7w00zs.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp7h7w00zs.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_value(numbers)\nNameError:\
    \ name 'mean_value' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    absolute_deviations = [abs(x\
    \ - mean) for x in numbers]\n    return mean_of_numbers(absolute_deviations)\n\
    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9ubhljd7.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp9ubhljd7.py\", line 21,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp9ubhljd7.py\"\
    , line 16, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp9ubhljd7.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    absolute_deviations = [abs(number\
    \ - mean) for number in numbers]\n    return mean_of_numbers(absolute_deviations)\n\
    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpunjoj8jd.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpunjoj8jd.py\", line 21,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpunjoj8jd.py\"\
    , line 16, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpunjoj8jd.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    return mean_of_numbers([abs(x\
    \ - mean) for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpduhd1jkz.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpduhd1jkz.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: 0
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    # Calculate the mean of the input numbers\n    mean = sum(numbers)\
    \ / len(numbers)\n    # Calculate the absolute difference between each element\
    \ and the mean\n    absolute_differences = [abs(number - mean) for number in numbers]\n\
    \    # Calculate the mean of the absolute differences\n    return sum(absolute_differences)\
    \ / len(absolute_differences)\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_value(numbers)\n    return mean_value([abs(x - mean)\
    \ for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0])\
    \ == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7h7w00zs.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmp7h7w00zs.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp7h7w00zs.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp7h7w00zs.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_value(numbers)\nNameError:\
    \ name 'mean_value' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_list(numbers)\n    deviations = [abs(x - mean)\
    \ for x in numbers]\n    return mean_of_list(deviations)\n\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef\
    \ test_check():\n    check(mean_absolute_deviation)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplrf656nf.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmplrf656nf.py\", line 21,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmplrf656nf.py\"\
    , line 16, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmplrf656nf.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_list(numbers)\nNameError:\
    \ name 'mean_of_list' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = np.mean(numbers)\n    return np.mean(np.abs(numbers -\
    \ mean))\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n\
    \    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk78dab0v.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpk78dab0v.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 10, in mean_absolute_deviation\n    mean = np.mean(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    return mean_of_numbers([abs(x\
    \ - mean) for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpduhd1jkz.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpduhd1jkz.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    return np.mean(np.abs(numbers - np.mean(numbers)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef\
    \ test_check():\n    check(mean_absolute_deviation)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpomia8eey.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpomia8eey.py\", line 19,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpomia8eey.py\"\
    , line 14, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpomia8eey.py\"\
    , line 10, in mean_absolute_deviation\n    return np.mean(np.abs(numbers - np.mean(numbers)))\n\
    NameError: name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_value(numbers)\n    return mean_value([abs(x - mean)\
    \ for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0])\
    \ == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7h7w00zs.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmp7h7w00zs.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp7h7w00zs.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp7h7w00zs.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_value(numbers)\nNameError:\
    \ name 'mean_value' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = np.mean(numbers)\n    return np.mean(np.abs(numbers -\
    \ mean))\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n\
    \    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk78dab0v.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpk78dab0v.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 10, in mean_absolute_deviation\n    mean = np.mean(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = np.mean(numbers)\n    absolute_deviations = [abs(x - mean)\
    \ for x in numbers]\n    return np.mean(absolute_deviations)\n\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef\
    \ test_check():\n    check(mean_absolute_deviation)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5_ow25nr.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp5_ow25nr.py\", line 21,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp5_ow25nr.py\"\
    , line 16, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp5_ow25nr.py\"\
    , line 10, in mean_absolute_deviation\n    mean = np.mean(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = np.mean(numbers)\n    return np.mean(np.abs(numbers -\
    \ mean))\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n\
    \    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk78dab0v.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpk78dab0v.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 10, in mean_absolute_deviation\n    mean = np.mean(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = np.mean(numbers)\n    return np.mean(np.abs(numbers -\
    \ mean))\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n\
    \    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk78dab0v.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpk78dab0v.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 10, in mean_absolute_deviation\n    mean = np.mean(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: 0
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = sum(numbers) / len(numbers)\n    return sum([abs(x - mean)\
    \ for x in numbers]) / len(numbers)\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    return mean_of_numbers([abs(x\
    \ - mean) for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpduhd1jkz.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpduhd1jkz.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    return mean_of_numbers([abs(x\
    \ - mean) for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpduhd1jkz.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpduhd1jkz.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    absolute_deviations = [abs(number\
    \ - mean) for number in numbers]\n    return mean_of_numbers(absolute_deviations)\n\
    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpunjoj8jd.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpunjoj8jd.py\", line 21,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpunjoj8jd.py\"\
    , line 16, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpunjoj8jd.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    numbers = np.array(numbers)\n    return np.mean(np.abs(numbers\
    \ - np.mean(numbers)))\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk5t29xw0.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpk5t29xw0.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpk5t29xw0.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpk5t29xw0.py\"\
    , line 10, in mean_absolute_deviation\n    numbers = np.array(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    # TODO: Implement this function\n    mean = mean_of_numbers(numbers)\n\
    \    absolute_deviation = []\n    for i in numbers:\n        absolute_deviation.append(abs(i\
    \ - mean))\n    return mean_of_numbers(absolute_deviation)\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef\
    \ test_check():\n    check(mean_absolute_deviation)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgwuuumc4.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpgwuuumc4.py\", line 23,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpgwuuumc4.py\"\
    , line 18, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpgwuuumc4.py\"\
    , line 11, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    absolute_deviations = [abs(x\
    \ - mean) for x in numbers]\n    return mean_of_numbers(absolute_deviations)\n\
    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9ubhljd7.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp9ubhljd7.py\", line 21,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp9ubhljd7.py\"\
    , line 16, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp9ubhljd7.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    return mean_of_numbers([abs(x\
    \ - mean) for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpduhd1jkz.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpduhd1jkz.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    absolute_deviations = [abs(x\
    \ - mean) for x in numbers]\n    return mean_of_numbers(absolute_deviations)\n\
    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9ubhljd7.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp9ubhljd7.py\", line 21,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp9ubhljd7.py\"\
    , line 16, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp9ubhljd7.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    absolute_deviations = [abs(x\
    \ - mean) for x in numbers]\n    return mean_of_numbers(absolute_deviations)\n\
    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9ubhljd7.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp9ubhljd7.py\", line 21,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp9ubhljd7.py\"\
    , line 16, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp9ubhljd7.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    numbers = np.array(numbers)\n    return np.mean(np.abs(numbers\
    \ - np.mean(numbers)))\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk5t29xw0.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpk5t29xw0.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpk5t29xw0.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpk5t29xw0.py\"\
    , line 10, in mean_absolute_deviation\n    numbers = np.array(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    absolute_deviations = []\n\
    \    for number in numbers:\n        absolute_deviations.append(abs(number - mean))\n\
    \    return mean_of_numbers(absolute_deviations)\n\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef\
    \ test_check():\n    check(mean_absolute_deviation)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpg70jiuf5.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpg70jiuf5.py\", line 23,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpg70jiuf5.py\"\
    , line 18, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpg70jiuf5.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    return mean_of_numbers([abs(x\
    \ - mean) for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpduhd1jkz.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpduhd1jkz.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: 0
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = sum(numbers) / len(numbers)\n    return sum([abs(x - mean)\
    \ for x in numbers]) / len(numbers)\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_value(numbers)\n    return mean_value([abs(x - mean)\
    \ for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0])\
    \ == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7h7w00zs.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmp7h7w00zs.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp7h7w00zs.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp7h7w00zs.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_value(numbers)\nNameError:\
    \ name 'mean_value' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_value(numbers)\n    return mean_value([abs(x - mean)\
    \ for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0])\
    \ == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7h7w00zs.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmp7h7w00zs.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp7h7w00zs.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp7h7w00zs.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_value(numbers)\nNameError:\
    \ name 'mean_value' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_list(numbers)\n    return mean_of_list([abs(x\
    \ - mean) for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyqpm4t_2.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpyqpm4t_2.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpyqpm4t_2.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpyqpm4t_2.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_list(numbers)\nNameError:\
    \ name 'mean_of_list' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    return np.mean(np.abs(numbers - np.mean(numbers)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef\
    \ test_check():\n    check(mean_absolute_deviation)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpomia8eey.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpomia8eey.py\", line 19,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpomia8eey.py\"\
    , line 14, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpomia8eey.py\"\
    , line 10, in mean_absolute_deviation\n    return np.mean(np.abs(numbers - np.mean(numbers)))\n\
    NameError: name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    return mean_of_numbers([abs(x\
    \ - mean) for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpduhd1jkz.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpduhd1jkz.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    # TODO: Implement this function\n    # Hint: You can use the\
    \ abs() function to get the absolute value of a number\n    # Hint: You can use\
    \ the mean() function to get the mean of a list of numbers\n    return mean([abs(x\
    \ - mean(numbers)) for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb6d0k2nl.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpb6d0k2nl.py\", line 22,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpb6d0k2nl.py\"\
    , line 17, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpb6d0k2nl.py\"\
    , line 13, in mean_absolute_deviation\n    return mean([abs(x - mean(numbers))\
    \ for x in numbers])\nNameError: name 'mean' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: 0
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = sum(numbers) / len(numbers)\n    return sum([abs(x - mean)\
    \ for x in numbers]) / len(numbers)\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = np.mean(numbers)\n    absolute_deviations = [abs(x - mean)\
    \ for x in numbers]\n    return np.mean(absolute_deviations)\n\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef\
    \ test_check():\n    check(mean_absolute_deviation)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5_ow25nr.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp5_ow25nr.py\", line 21,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp5_ow25nr.py\"\
    , line 16, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp5_ow25nr.py\"\
    , line 10, in mean_absolute_deviation\n    mean = np.mean(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    return mean_of_numbers([abs(number\
    \ - mean) for number in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprk4b9i68.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmprk4b9i68.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmprk4b9i68.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmprk4b9i68.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    numbers = np.array(numbers)\n    return np.mean(np.abs(numbers\
    \ - np.mean(numbers)))\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk5t29xw0.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpk5t29xw0.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpk5t29xw0.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpk5t29xw0.py\"\
    , line 10, in mean_absolute_deviation\n    numbers = np.array(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: 0
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = sum(numbers) / len(numbers)\n    return sum([abs(x - mean)\
    \ for x in numbers]) / len(numbers)\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    return np.mean(np.abs(numbers - np.mean(numbers)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef\
    \ test_check():\n    check(mean_absolute_deviation)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpomia8eey.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpomia8eey.py\", line 19,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpomia8eey.py\"\
    , line 14, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpomia8eey.py\"\
    , line 10, in mean_absolute_deviation\n    return np.mean(np.abs(numbers - np.mean(numbers)))\n\
    NameError: name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    return mean_of_numbers([abs(x\
    \ - mean) for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpduhd1jkz.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpduhd1jkz.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: 0
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = sum(numbers) / len(numbers)\n    return sum([abs(x - mean)\
    \ for x in numbers]) / len(numbers)\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270946
- exit_code: 0
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    # Calculate mean of the dataset\n    mean = sum(numbers) / len(numbers)\n\
    \    # Calculate absolute difference between each element and the mean\n    abs_differences\
    \ = [abs(number - mean) for number in numbers]\n    # Calculate the average of\
    \ these absolute differences\n    return sum(abs_differences) / len(abs_differences)\n\
    \ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\
    \ndef test_check():\n    check(mean_absolute_deviation)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = np.mean(numbers)\n    return np.mean(np.abs(numbers -\
    \ mean))\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n\
    \    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk78dab0v.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpk78dab0v.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 10, in mean_absolute_deviation\n    mean = np.mean(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    absolute_deviations = [abs(x\
    \ - mean) for x in numbers]\n    return mean_of_numbers(absolute_deviations)\n\
    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9ubhljd7.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp9ubhljd7.py\", line 21,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp9ubhljd7.py\"\
    , line 16, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp9ubhljd7.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = np.mean(numbers)\n    return np.mean(np.abs(numbers -\
    \ mean))\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n\
    \    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk78dab0v.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpk78dab0v.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpk78dab0v.py\"\
    , line 10, in mean_absolute_deviation\n    mean = np.mean(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = np.mean(numbers)\n    absolute_deviations = [abs(x - mean)\
    \ for x in numbers]\n    return np.mean(absolute_deviations)\n\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef\
    \ test_check():\n    check(mean_absolute_deviation)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5_ow25nr.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp5_ow25nr.py\", line 21,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmp5_ow25nr.py\"\
    , line 16, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmp5_ow25nr.py\"\
    , line 10, in mean_absolute_deviation\n    mean = np.mean(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: 0
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = sum(numbers) / len(numbers)\n    return sum([abs(x - mean)\
    \ for x in numbers]) / len(numbers)\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    return mean_of_numbers([abs(x\
    \ - mean) for x in numbers])\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpduhd1jkz.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpduhd1jkz.py\", line 20,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 15, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpduhd1jkz.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = np.mean(numbers)\n    return np.mean(np.abs(numbers -\
    \ mean))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n \
    \   assert candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpx6zhjpbu.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpx6zhjpbu.py\", line 19,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpx6zhjpbu.py\"\
    , line 14, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpx6zhjpbu.py\"\
    , line 10, in mean_absolute_deviation\n    mean = np.mean(numbers)\nNameError:\
    \ name 'np' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: 0
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    # Calculate mean of dataset\n    mean = sum(numbers) / len(numbers)\n\
    \    # Calculate absolute difference between each element and mean\n    abs_diff\
    \ = [abs(x - mean) for x in numbers]\n    # Calculate mean of absolute differences\n\
    \    return sum(abs_diff) / len(abs_diff)\n\n\ndef check(candidate):\n    assert\
    \ candidate([1.0, 2.0]) == 0.5\n    assert candidate([1.0, 2.0, 3.0, 4.0]) ==\
    \ 1.0\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\ndef test_check():\n\
    \    check(mean_absolute_deviation)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270946
- exit_code: -1
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = mean_of_numbers(numbers)\n    absolute_deviations = [abs(number\
    \ - mean) for number in numbers]\n    return mean_of_numbers(absolute_deviations)\n\
    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n    assert\
    \ candidate([1.0, 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0,\
    \ 4.0, 5.0]) == 1.2\n\ndef test_check():\n    check(mean_absolute_deviation)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpunjoj8jd.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpunjoj8jd.py\", line 21,\
    \ in test_check\n    check(mean_absolute_deviation)\n  File \"/tmp/tmpunjoj8jd.py\"\
    , line 16, in check\n    assert candidate([1.0, 2.0]) == 0.5\n  File \"/tmp/tmpunjoj8jd.py\"\
    , line 10, in mean_absolute_deviation\n    mean = mean_of_numbers(numbers)\nNameError:\
    \ name 'mean_of_numbers' is not defined\n"
  stdout: ''
  timestamp: 1660270946
- exit_code: 0
  program: "def mean_absolute_deviation(numbers):\n    \"\"\" For a given list of\
    \ input numbers, calculate Mean Absolute Deviation\n    around the mean of this\
    \ dataset.\n    Mean Absolute Deviation is the average absolute difference between\
    \ each\n    element and a centerpoint (mean in this case):\n    MAD = average\
    \ | x - x_mean |\n    >>> mean_absolute_deviation([1.0, 2.0, 3.0, 4.0])\n    1.0\n\
    \    \"\"\"\n    mean = sum(numbers) / len(numbers)\n    deviations = [abs(x -\
    \ mean) for x in numbers]\n    return sum(deviations) / len(deviations)\n\n\n\
    def check(candidate):\n    assert candidate([1.0, 2.0]) == 0.5\n    assert candidate([1.0,\
    \ 2.0, 3.0, 4.0]) == 1.0\n    assert candidate([1.0, 2.0, 3.0, 4.0, 5.0]) == 1.2\n\
    \ndef test_check():\n    check(mean_absolute_deviation)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660270946

name: HumanEval_114_minSubArraySum
language: notypes.py
prompt: "def minSubArraySum(nums):\n    \"\"\"\n    Given an array of integers nums,\
  \ find the minimum sum of any non-empty sub-array\n    of nums.\n    Example\n \
  \   >>> minSubArraySum([2, 3, 4, 1, 2, 4])\n    1\n    >>> minSubArraySum([-1, -2,\
  \ -3])\n    -6\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate([2, 3, 4, 1, 2, 4]) == 1\n   \
  \ assert candidate([-1, -2, -3]) == -6\n    assert candidate([-1, -2, -3, 2, -10])\
  \ == -14\n    assert candidate([-9999999999999999]) == -9999999999999999\n    assert\
  \ candidate([0, 10, 20, 1000000]) == 0\n    assert candidate([-1, -2, -3, 10, -5])\
  \ == -6\n    assert candidate([100, -1, -2, -3, 10, -5]) == -6\n    assert candidate([10,\
  \ 11, 13, 8, 3, 4]) == 3\n    assert candidate([100, -33, 32, -1, 0, -2]) == -33\n\
  \    assert candidate([-10]) == -10\n    assert candidate([7]) == 7\n    assert\
  \ candidate([1, -1]) == -1\n\ndef test_check():\n    check(minSubArraySum)\n\ntest_check()\n"
completions: ["    min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n\
    \        curr_sum += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum\
    \ = max(curr_sum, 0)\n    return min_sum\n\n", "    min_sum = nums[0]\n    curr_sum\
    \ = nums[0]\n    for num in nums[1:]:\n        curr_sum = min(curr_sum + num,\
    \ num)\n        min_sum = min(min_sum, curr_sum)\n    return min_sum\n\n", " \
    \   min_sum = nums[0]\n    curr_sum = 0\n    for num in nums:\n        curr_sum\
    \ += num\n        min_sum = min(min_sum, curr_sum)\n        if curr_sum > 0:\n\
    \            curr_sum = 0\n    return min_sum\n\n", "    min_sum = float('inf')\n\
    \    curr_sum = 0\n    for num in nums:\n        curr_sum += num\n        min_sum\
    \ = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n\
    \n", "    # Initialize min_sum and current_sum\n    min_sum = float('inf')\n \
    \   current_sum = 0\n\n    # Iterate through the array\n    for num in nums:\n\
    \        # Add the current number to the current sum\n        current_sum += num\n\
    \n        # If the current sum is less than the min sum, update the min sum\n\
    \        if current_sum < min_sum:\n            min_sum = current_sum\n\n    \
    \    # If the current sum is less than 0, reset the current sum to 0\n       \
    \ if current_sum < 0:\n            current_sum = 0\n\n    return min_sum\n\n",
  "    min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n        curr_sum\
    \ += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum,\
    \ 0)\n    return min_sum\n\n", "    min_sum = float('inf')\n    curr_sum = 0\n\
    \    for num in nums:\n        curr_sum += num\n        min_sum = min(min_sum,\
    \ curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n\n", " \
    \   min_sum = nums[0]\n    current_sum = nums[0]\n    for i in range(1, len(nums)):\n\
    \        current_sum = min(nums[i], current_sum + nums[i])\n        min_sum =\
    \ min(min_sum, current_sum)\n    return min_sum\n\n", "    min_sum = nums[0]\n\
    \    curr_sum = 0\n    for num in nums:\n        curr_sum += num\n        min_sum\
    \ = min(min_sum, curr_sum)\n        if curr_sum > 0:\n            curr_sum = 0\n\
    \    return min_sum\n\n", "    min_sum = float('inf')\n    curr_sum = 0\n    for\
    \ num in nums:\n        curr_sum += num\n        min_sum = min(min_sum, curr_sum)\n\
    \        curr_sum = max(curr_sum, 0)\n    return min_sum\n\n", "    min_sum =\
    \ float('inf')\n    curr_sum = 0\n    for num in nums:\n        curr_sum += num\n\
    \        min_sum = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum, 0)\n\
    \    return min_sum\n\n", "    min_sum = nums[0]\n    curr_sum = 0\n    for num\
    \ in nums:\n        curr_sum += num\n        min_sum = min(min_sum, curr_sum)\n\
    \        if curr_sum > 0:\n            curr_sum = 0\n    return min_sum\n\n",
  "    min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n        curr_sum\
    \ += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum,\
    \ 0)\n    return min_sum\n\n", "    min_sum = float('inf')\n    curr_sum = 0\n\
    \    for num in nums:\n        curr_sum += num\n        min_sum = min(min_sum,\
    \ curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n\n", " \
    \   min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n        curr_sum\
    \ += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum,\
    \ 0)\n    return min_sum\n\n", "    min_sum = float('inf')\n    curr_sum = 0\n\
    \    for num in nums:\n        curr_sum += num\n        min_sum = min(min_sum,\
    \ curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n\n", " \
    \   min_sum = nums[0]\n    curr_sum = nums[0]\n    for i in range(1, len(nums)):\n\
    \        curr_sum = min(nums[i], curr_sum + nums[i])\n        min_sum = min(min_sum,\
    \ curr_sum)\n    return min_sum\n\n", "    min_sum = float('inf')\n    curr_sum\
    \ = 0\n    for num in nums:\n        curr_sum += num\n        min_sum = min(min_sum,\
    \ curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n\n", " \
    \   min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n        curr_sum\
    \ += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum,\
    \ 0)\n    return min_sum\n\n", "    min_sum = float('inf')\n    curr_sum = 0\n\
    \    for num in nums:\n        curr_sum += num\n        min_sum = min(min_sum,\
    \ curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n\n", " \
    \   min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n        curr_sum\
    \ += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum,\
    \ 0)\n    return min_sum\n\n", "    if not nums:\n        return 0\n    min_sum\
    \ = nums[0]\n    curr_sum = nums[0]\n    for i in range(1, len(nums)):\n     \
    \   curr_sum = min(nums[i], curr_sum + nums[i])\n        min_sum = min(min_sum,\
    \ curr_sum)\n    return min_sum\n\n", "    min_sum = float('inf')\n    current_sum\
    \ = 0\n    for num in nums:\n        current_sum += num\n        min_sum = min(min_sum,\
    \ current_sum)\n        current_sum = max(current_sum, 0)\n    return min_sum\n\
    \n", "    min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n   \
    \     curr_sum += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum\
    \ = max(curr_sum, 0)\n    return min_sum\n\n", "    min_sum = nums[0]\n    curr_sum\
    \ = nums[0]\n    for i in range(1, len(nums)):\n        curr_sum = min(nums[i],\
    \ curr_sum + nums[i])\n        min_sum = min(min_sum, curr_sum)\n    return min_sum\n\
    \n", "    min_sum = float('inf')\n    for i in range(len(nums)):\n        for\
    \ j in range(i, len(nums)):\n            min_sum = min(min_sum, sum(nums[i:j +\
    \ 1]))\n    return min_sum\n\n", "    min_sum = nums[0]\n    curr_sum = 0\n  \
    \  for num in nums:\n        curr_sum += num\n        min_sum = min(min_sum, curr_sum)\n\
    \        if curr_sum > 0:\n            curr_sum = 0\n    return min_sum\n\n",
  "    min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n        curr_sum\
    \ += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum,\
    \ 0)\n    return min_sum\n\n", "    # initialize the minimum sum to the first\
    \ element\n    min_sum = nums[0]\n    # initialize the current sum to the first\
    \ element\n    curr_sum = nums[0]\n    # iterate through the array\n    for i\
    \ in range(1, len(nums)):\n        # if the current sum is less than the current\
    \ element\n        if curr_sum < nums[i]:\n            # set the current sum to\
    \ the current element\n            curr_sum = nums[i]\n        # else\n      \
    \  else:\n            # add the current element to the current sum\n         \
    \   curr_sum += nums[i]\n        # if the current sum is less than the minimum\
    \ sum\n        if curr_sum < min_sum:\n            # set the minimum sum to the\
    \ current sum\n            min_sum = curr_sum\n    # return the minimum sum\n\
    \    return min_sum\n\n", "    # Kadane's algorithm\n    # https://en.wikipedia.org/wiki/Maximum_subarray_problem\n\
    \    # https://www.geeksforgeeks.org/largest-sum-contiguous-subarray/\n    # https://www.geeksforgeeks.org/minimum-sum-subarray-size-k/\n\
    \    # https://www.geeksforgeeks.org/minimum-length-subarray-sum-greater-given-value/\n\
    \    # https://www.geeksforgeeks.org/maximum-sum-such-that-no-two-elements-are-adjacent/\n\
    \    # https://www.geeksforgeeks.org/maximum-sum-subarray-removing-one-element/\n\
    \    # https://www.geeksforgeeks.org/maximum-sum-subarray-removing-at-most-one-element/\n\
    \    # https://www.geeksforgeeks.org/maximum-sum-subarray-removing-one-element-allowed/\n\
    \    # https://www.geeksforgeeks.org/maximum-sum-subarray-removing-at-most-k-elements/\n\
    \    # https://www.geeksforgeeks.org/maximum-sum-subarray-removing-at-most-one-element/\n\
    \    # https://www.geeksforgeeks.org/maximum-sum-subarray-removing-at-most-one-element/\n\
    \    # https://www.geeksforgeeks.org/maximum-sum-subarray-removing-at-most-one-element/\n\
    \    # https://www.geeksforgeeks.org/maximum-sum-subarray-removing-at-most-one-element/\n\
    \    # https://www.geeksforgeeks.org/maximum-sum-subarray-removing-at-most-one-element/\n\
    \    # https://www.geeksforgeeks.org/maximum-sum-subarray-removing-at-most-one-element/\n\
    \    # https://www.geeksforgeeks.org/maximum-sum-subarray-removing-at-most-one-element/\n\
    \    # https://www.geeksforgeeks.org/maximum-sum-subarray-removing-at-", "   \
    \ min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n        curr_sum\
    \ += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum,\
    \ 0)\n    return min_sum\n\n", "    min_sum = float('inf')\n    curr_sum = 0\n\
    \    for num in nums:\n        curr_sum += num\n        min_sum = min(min_sum,\
    \ curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n\n", " \
    \   min_sum = nums[0]\n    curr_sum = 0\n    for num in nums:\n        curr_sum\
    \ += num\n        min_sum = min(min_sum, curr_sum)\n        if curr_sum > 0:\n\
    \            curr_sum = 0\n    return min_sum\n\n", "    min_sum = float('inf')\n\
    \    curr_sum = 0\n    for num in nums:\n        curr_sum += num\n        min_sum\
    \ = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n\
    \n", "    min_sum = float('inf')\n    current_sum = 0\n    for num in nums:\n\
    \        current_sum += num\n        min_sum = min(min_sum, current_sum)\n   \
    \     current_sum = max(current_sum, 0)\n    return min_sum\n\n", "    min_sum\
    \ = float('inf')\n    curr_sum = 0\n    for num in nums:\n        curr_sum +=\
    \ num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum,\
    \ 0)\n    return min_sum\n\n", "    min_sum = float('inf')\n    curr_sum = 0\n\
    \    for num in nums:\n        curr_sum += num\n        min_sum = min(min_sum,\
    \ curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n\n", " \
    \   min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n        curr_sum\
    \ += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum,\
    \ 0)\n    return min_sum\n\n", "    min_sum = float('inf')\n    for i in range(len(nums)):\n\
    \        for j in range(i, len(nums)):\n            min_sum = min(min_sum, sum(nums[i:j+1]))\n\
    \    return min_sum\n\n", "    # initialize min_sum to the first element\n   \
    \ min_sum = nums[0]\n    # initialize current_sum to the first element\n    current_sum\
    \ = nums[0]\n    # iterate through the rest of the array\n    for i in range(1,\
    \ len(nums)):\n        # add the current element to the current_sum\n        current_sum\
    \ += nums[i]\n        # if the current_sum is less than the min_sum, update min_sum\n\
    \        if current_sum < min_sum:\n            min_sum = current_sum\n      \
    \  # if the current_sum is less than 0, reset the current_sum to 0\n        if\
    \ current_sum < 0:\n            current_sum = 0\n    return min_sum\n\n", "  \
    \  min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n        curr_sum\
    \ += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum,\
    \ 0)\n    return min_sum\n", "    min_sum = nums[0]\n    current_sum = 0\n   \
    \ for num in nums:\n        current_sum += num\n        min_sum = min(min_sum,\
    \ current_sum)\n        current_sum = max(current_sum, 0)\n    return min_sum\n\
    \n", "    # Initialize minimum sum to be the sum of all elements in the array\n\
    \    min_sum = sum(nums)\n    # Initialize current sum to be 0\n    curr_sum =\
    \ 0\n    # Iterate through the array\n    for num in nums:\n        # Add the\
    \ current number to the current sum\n        curr_sum += num\n        # If the\
    \ current sum is less than the minimum sum, update the minimum sum\n        if\
    \ curr_sum < min_sum:\n            min_sum = curr_sum\n        # If the current\
    \ sum is less than 0, reset the current sum to 0\n        if curr_sum < 0:\n \
    \           curr_sum = 0\n    return min_sum\n\n", "    # Kadane's algorithm\n\
    \    max_so_far = nums[0]\n    max_ending_here = nums[0]\n    for i in range(1,\
    \ len(nums)):\n        max_ending_here = max(nums[i], max_ending_here + nums[i])\n\
    \        max_so_far = max(max_so_far, max_ending_here)\n    return max_so_far\n\
    \n", "    min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n   \
    \     curr_sum += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum\
    \ = max(curr_sum, 0)\n    return min_sum\n\n", "    min_sum = float('inf')\n \
    \   curr_sum = 0\n    for num in nums:\n        curr_sum += num\n        min_sum\
    \ = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n\
    \n", "    min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n   \
    \     curr_sum += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum\
    \ = max(curr_sum, 0)\n    return min_sum\n\n", "    min_sum = float('inf')\n \
    \   curr_sum = 0\n    for num in nums:\n        curr_sum += num\n        min_sum\
    \ = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n\
    \n", "    min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n   \
    \     curr_sum += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum\
    \ = max(curr_sum, 0)\n    return min_sum\n\n", "    min_sum = float('inf')\n \
    \   curr_sum = 0\n    for i in range(len(nums)):\n        curr_sum += nums[i]\n\
    \        min_sum = min(min_sum, curr_sum)\n        if curr_sum > 0:\n        \
    \    curr_sum = 0\n    return min_sum\n\n", "    min_sum = float('inf')\n    curr_sum\
    \ = 0\n    for num in nums:\n        curr_sum += num\n        min_sum = min(min_sum,\
    \ curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n\n", " \
    \   min_sum = float('inf')\n    current_sum = 0\n    for num in nums:\n      \
    \  current_sum += num\n        min_sum = min(min_sum, current_sum)\n        current_sum\
    \ = max(current_sum, 0)\n    return min_sum\n\n", "    min_sum = nums[0]\n   \
    \ curr_sum = nums[0]\n    for i in range(1, len(nums)):\n        curr_sum = min(nums[i],\
    \ curr_sum + nums[i])\n        min_sum = min(min_sum, curr_sum)\n    return min_sum\n\
    \n", "    min_sum = 0\n    curr_sum = 0\n    for num in nums:\n        curr_sum\
    \ += num\n        if curr_sum < min_sum:\n            min_sum = curr_sum\n   \
    \ return min_sum\n\n", "    min_sum = float('inf')\n    curr_sum = 0\n    for\
    \ num in nums:\n        curr_sum += num\n        min_sum = min(min_sum, curr_sum)\n\
    \        curr_sum = max(curr_sum, 0)\n    return min_sum\n\n", "    min_sum =\
    \ float('inf')\n    curr_sum = 0\n    for num in nums:\n        curr_sum += num\n\
    \        min_sum = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum, 0)\n\
    \    return min_sum\n\n", "    # initialize min_sum and current_sum\n    min_sum\
    \ = current_sum = nums[0]\n    # loop through the array\n    for num in nums[1:]:\n\
    \        # update current_sum\n        current_sum = max(current_sum + num, num)\n\
    \        # update min_sum\n        min_sum = min(min_sum, current_sum)\n    return\
    \ min_sum\n", "    # initialize min_sum to the first element\n    min_sum = nums[0]\n\
    \    # initialize current_sum to the first element\n    current_sum = nums[0]\n\
    \    # loop through the rest of the array\n    for i in range(1, len(nums)):\n\
    \        # if the current_sum is greater than 0\n        if current_sum > 0:\n\
    \            # add the current element to the current_sum\n            current_sum\
    \ += nums[i]\n        # else\n        else:\n            # set the current_sum\
    \ to the current element\n            current_sum = nums[i]\n        # if the\
    \ current_sum is less than the min_sum\n        if current_sum < min_sum:\n  \
    \          # set the min_sum to the current_sum\n            min_sum = current_sum\n\
    \    # return the min_sum\n    return min_sum\n\n", "    min_sum = float('inf')\n\
    \    curr_sum = 0\n    for num in nums:\n        curr_sum += num\n        min_sum\
    \ = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n\
    \n", "    min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n   \
    \     curr_sum += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum\
    \ = max(curr_sum, 0)\n    return min_sum\n\n", "    min_sum = float('inf')\n \
    \   curr_sum = 0\n    for num in nums:\n        curr_sum += num\n        min_sum\
    \ = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n\
    \n", "    min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n   \
    \     curr_sum += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum\
    \ = max(curr_sum, 0)\n    return min_sum\n\n", "    min_sum = float('inf')\n \
    \   curr_sum = 0\n    for num in nums:\n        curr_sum += num\n        min_sum\
    \ = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n\
    \n", "    min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n   \
    \     curr_sum += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum\
    \ = max(curr_sum, 0)\n    return min_sum\n\n", "    min_sum = float('inf')\n \
    \   current_sum = 0\n    for num in nums:\n        current_sum += num\n      \
    \  min_sum = min(min_sum, current_sum)\n        current_sum = max(current_sum,\
    \ 0)\n    return min_sum\n\n", "    min_sum = float('inf')\n    curr_sum = 0\n\
    \    for num in nums:\n        curr_sum += num\n        min_sum = min(min_sum,\
    \ curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n\n", " \
    \   min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n        curr_sum\
    \ += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum,\
    \ 0)\n    return min_sum\n\n", "    min_sum = nums[0]\n    curr_sum = 0\n    for\
    \ i in range(len(nums)):\n        curr_sum += nums[i]\n        if curr_sum < min_sum:\n\
    \            min_sum = curr_sum\n        if curr_sum > 0:\n            curr_sum\
    \ = 0\n    return min_sum\n\n", "    min_sum = float('inf')\n    curr_sum = 0\n\
    \    for num in nums:\n        curr_sum += num\n        min_sum = min(min_sum,\
    \ curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n\n", " \
    \   min_sum = float('inf')\n    current_sum = 0\n    for num in nums:\n      \
    \  current_sum += num\n        min_sum = min(min_sum, current_sum)\n        current_sum\
    \ = max(current_sum, 0)\n    return min_sum\n", "    min_sum = float('inf')\n\
    \    current_sum = 0\n    for num in nums:\n        current_sum += num\n     \
    \   min_sum = min(min_sum, current_sum)\n        current_sum = max(current_sum,\
    \ 0)\n    return min_sum\n\n", "    # TODO: Implement me\n    pass\n\n", "   \
    \ min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n        curr_sum\
    \ += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum,\
    \ 0)\n    return min_sum\n\n", "    min_sum = nums[0]\n    curr_sum = nums[0]\n\
    \    for i in range(1, len(nums)):\n        curr_sum = min(nums[i], curr_sum +\
    \ nums[i])\n        min_sum = min(min_sum, curr_sum)\n    return min_sum\n\n",
  "    min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n        curr_sum\
    \ += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum,\
    \ 0)\n    return min_sum\n\n", "    min_sum = nums[0]\n    curr_sum = nums[0]\n\
    \    for i in range(1, len(nums)):\n        curr_sum = min(nums[i], curr_sum +\
    \ nums[i])\n        min_sum = min(min_sum, curr_sum)\n    return min_sum\n\n",
  "    min_sum = float('inf')\n    current_sum = 0\n    for num in nums:\n       \
    \ current_sum += num\n        min_sum = min(min_sum, current_sum)\n        current_sum\
    \ = max(current_sum, 0)\n    return min_sum\n\n", "    min_sum = float('inf')\n\
    \    curr_sum = 0\n    for num in nums:\n        curr_sum += num\n        min_sum\
    \ = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n\
    \n", "    min_sum = nums[0]\n    curr_sum = nums[0]\n    for i in range(1, len(nums)):\n\
    \        curr_sum = min(nums[i], curr_sum + nums[i])\n        min_sum = min(min_sum,\
    \ curr_sum)\n    return min_sum\n\n", "    min_sum = float('inf')\n    curr_sum\
    \ = 0\n    for num in nums:\n        curr_sum += num\n        min_sum = min(min_sum,\
    \ curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n\n", " \
    \   min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n        curr_sum\
    \ += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum,\
    \ 0)\n    return min_sum\n\n", "    min_sum = float('inf')\n    curr_sum = 0\n\
    \    for num in nums:\n        curr_sum += num\n        min_sum = min(min_sum,\
    \ curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n\n", " \
    \   min_sum = nums[0]\n    curr_sum = 0\n    for i in range(len(nums)):\n    \
    \    curr_sum += nums[i]\n        if curr_sum < min_sum:\n            min_sum\
    \ = curr_sum\n        if curr_sum > 0:\n            curr_sum = 0\n    return min_sum\n\
    \n", "    min_sum = nums[0]\n    current_sum = 0\n    for num in nums:\n     \
    \   current_sum += num\n        min_sum = min(min_sum, current_sum)\n        current_sum\
    \ = max(current_sum, 0)\n    return min_sum\n\n", "    min_sum = float('inf')\n\
    \    current_sum = 0\n    for num in nums:\n        current_sum += num\n     \
    \   min_sum = min(min_sum, current_sum)\n        current_sum = max(current_sum,\
    \ 0)\n    return min_sum\n\n", "    min_sum = float('inf')\n    curr_sum = 0\n\
    \    for num in nums:\n        curr_sum += num\n        min_sum = min(min_sum,\
    \ curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n\n", " \
    \   min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n        curr_sum\
    \ += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum,\
    \ 0)\n    return min_sum\n\n", "    min_sum = nums[0]\n    curr_sum = nums[0]\n\
    \    for i in range(1, len(nums)):\n        curr_sum = min(nums[i], curr_sum +\
    \ nums[i])\n        min_sum = min(min_sum, curr_sum)\n    return min_sum\n\n",
  "    min_sum = float('inf')\n    current_sum = 0\n    for num in nums:\n       \
    \ current_sum += num\n        min_sum = min(min_sum, current_sum)\n        current_sum\
    \ = max(current_sum, 0)\n    return min_sum\n\n", "    min_sum = nums[0]\n   \
    \ curr_sum = nums[0]\n    for i in range(1, len(nums)):\n        curr_sum = min(nums[i],\
    \ curr_sum + nums[i])\n        min_sum = min(min_sum, curr_sum)\n    return min_sum\n\
    \n", "    min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n   \
    \     curr_sum += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum\
    \ = max(curr_sum, 0)\n    return min_sum\n\n", "    min_sum = float('inf')\n \
    \   curr_sum = 0\n    for num in nums:\n        curr_sum += num\n        min_sum\
    \ = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n",
  "    min_sum = nums[0]\n    current_sum = 0\n    for num in nums:\n        current_sum\
    \ += num\n        min_sum = min(min_sum, current_sum)\n        current_sum = max(current_sum,\
    \ 0)\n    return min_sum\n\n", "    min_sum = nums[0]\n    current_sum = 0\n \
    \   for num in nums:\n        current_sum += num\n        min_sum = min(min_sum,\
    \ current_sum)\n        current_sum = max(current_sum, 0)\n    return min_sum\n\
    \n", "    min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n   \
    \     curr_sum += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum\
    \ = max(curr_sum, 0)\n    return min_sum\n\n", "    min_sum = nums[0]\n    current_sum\
    \ = 0\n    for num in nums:\n        current_sum += num\n        min_sum = min(min_sum,\
    \ current_sum)\n        current_sum = max(current_sum, 0)\n    return min_sum\n\
    \n", "    min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n   \
    \     curr_sum += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum\
    \ = max(curr_sum, 0)\n    return min_sum\n\n", "    min_sum = float('inf')\n \
    \   curr_sum = 0\n    for num in nums:\n        curr_sum += num\n        min_sum\
    \ = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n\
    \n", "    min_sum = 0\n    for i in range(len(nums)):\n        for j in range(i,\
    \ len(nums)):\n            if sum(nums[i:j+1]) < min_sum:\n                min_sum\
    \ = sum(nums[i:j+1])\n    return min_sum\n\n", "    min_sum = nums[0]\n    curr_sum\
    \ = nums[0]\n    for i in range(1, len(nums)):\n        curr_sum = min(nums[i],\
    \ curr_sum + nums[i])\n        min_sum = min(min_sum, curr_sum)\n    return min_sum\n\
    \n", "    min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n   \
    \     curr_sum += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum\
    \ = max(curr_sum, 0)\n    return min_sum\n\n", "    min_sum = float('inf')\n \
    \   curr_sum = 0\n    for num in nums:\n        curr_sum += num\n        min_sum\
    \ = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n\
    \n", "    min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n   \
    \     curr_sum += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum\
    \ = max(curr_sum, 0)\n    return min_sum\n\n", "    min_sum = nums[0]\n    curr_sum\
    \ = nums[0]\n    for i in range(1, len(nums)):\n        curr_sum = min(nums[i],\
    \ curr_sum + nums[i])\n        min_sum = min(min_sum, curr_sum)\n    return min_sum\n\
    \n", "    min_sum = float('inf')\n    current_sum = 0\n    for num in nums:\n\
    \        current_sum += num\n        min_sum = min(min_sum, current_sum)\n   \
    \     current_sum = max(current_sum, 0)\n    return min_sum\n\n", "    min_sum\
    \ = nums[0]\n    curr_sum = 0\n    for i in range(len(nums)):\n        curr_sum\
    \ += nums[i]\n        if curr_sum < min_sum:\n            min_sum = curr_sum\n\
    \        if curr_sum > 0:\n            curr_sum = 0\n    return min_sum\n\n",
  "    min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n        curr_sum\
    \ += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum,\
    \ 0)\n    return min_sum\n\n", "    min_sum = float('inf')\n    curr_sum = 0\n\
    \    for num in nums:\n        curr_sum += num\n        min_sum = min(min_sum,\
    \ curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n\n", " \
    \   min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n        curr_sum\
    \ += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum,\
    \ 0)\n    return min_sum\n\n", "    min_sum = float('inf')\n    curr_sum = 0\n\
    \    for num in nums:\n        curr_sum += num\n        min_sum = min(min_sum,\
    \ curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n\n", " \
    \   min_sum = float('inf')\n    current_sum = 0\n    for num in nums:\n      \
    \  current_sum += num\n        min_sum = min(min_sum, current_sum)\n        current_sum\
    \ = max(current_sum, 0)\n    return min_sum\n\n", "    min_sum = float('inf')\n\
    \    curr_sum = 0\n    for num in nums:\n        curr_sum += num\n        min_sum\
    \ = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n\
    \n", "    min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n   \
    \     curr_sum += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum\
    \ = max(curr_sum, 0)\n    return min_sum\n\n", "    min_sum = 0\n    for i in\
    \ range(len(nums)):\n        for j in range(i, len(nums)):\n            sum_ =\
    \ sum(nums[i:j+1])\n            if sum_ < min_sum:\n                min_sum =\
    \ sum_\n    return min_sum\n", "    min_sum = float('inf')\n    curr_sum = 0\n\
    \    for num in nums:\n        curr_sum += num\n        min_sum = min(min_sum,\
    \ curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n\n", " \
    \   min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n        curr_sum\
    \ += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum,\
    \ 0)\n    return min_sum\n\n", "    min_sum = float('inf')\n    curr_sum = 0\n\
    \    for num in nums:\n        curr_sum += num\n        min_sum = min(min_sum,\
    \ curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n\n", " \
    \   min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n        curr_sum\
    \ += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum,\
    \ 0)\n    return min_sum\n\n", "    min_sum = float('inf')\n    curr_sum = 0\n\
    \    for num in nums:\n        curr_sum += num\n        min_sum = min(min_sum,\
    \ curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n\n", " \
    \   min_sum = 0\n    curr_sum = 0\n    for num in nums:\n        curr_sum += num\n\
    \        if curr_sum < min_sum:\n            min_sum = curr_sum\n    return min_sum\n\
    \n", "    min_sum = nums[0]\n    curr_sum = nums[0]\n    for i in range(1, len(nums)):\n\
    \        curr_sum = min(nums[i], curr_sum + nums[i])\n        min_sum = min(min_sum,\
    \ curr_sum)\n    return min_sum\n\n", "    min_sum = nums[0]\n    curr_sum = nums[0]\n\
    \    for i in range(1, len(nums)):\n        curr_sum = min(nums[i], curr_sum +\
    \ nums[i])\n        min_sum = min(min_sum, curr_sum)\n    return min_sum\n\n",
  "    min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n        curr_sum\
    \ += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum,\
    \ 0)\n    return min_sum\n\n", "    min_sum = float('inf')\n    curr_sum = 0\n\
    \    for num in nums:\n        curr_sum += num\n        min_sum = min(min_sum,\
    \ curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n\n", " \
    \   min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n        curr_sum\
    \ += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum,\
    \ 0)\n    return min_sum\n\n", "    min_sum = float('inf')\n    curr_sum = 0\n\
    \    for num in nums:\n        curr_sum += num\n        min_sum = min(min_sum,\
    \ curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n\n", " \
    \   min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n        curr_sum\
    \ += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum,\
    \ 0)\n    return min_sum\n\n", "    min_sum = float('inf')\n    curr_sum = 0\n\
    \    for num in nums:\n        curr_sum += num\n        min_sum = min(min_sum,\
    \ curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n\n", " \
    \   min_sum = nums[0]\n    curr_sum = nums[0]\n    for i in range(1, len(nums)):\n\
    \        curr_sum = min(nums[i], curr_sum + nums[i])\n        min_sum = min(min_sum,\
    \ curr_sum)\n    return min_sum\n\n", "    min_sum = nums[0]\n    curr_sum = 0\n\
    \    for num in nums:\n        curr_sum += num\n        min_sum = min(min_sum,\
    \ curr_sum)\n        if curr_sum > 0:\n            curr_sum = 0\n    return min_sum\n\
    \n", "    # Kadane's algorithm\n    # https://www.geeksforgeeks.org/largest-sum-contiguous-subarray/\n\
    \    # https://www.geeksforgeeks.org/maximum-contiguous-circular-sum/\n    # https://www.geeksforgeeks.org/maximum-sum-subarray-removing-one-element/\n\
    \    # https://www.geeksforgeeks.org/maximum-sum-subarray-removing-at-most-one-element/\n\
    \    # https://www.geeksforgeeks.org/maximum-sum-subarray-removing-one-element-allowed/\n\
    \    # https://www.geeksforgeeks.org/maximum-sum-subarray-removing-at-most-k-elements/\n\
    \    # https://www.geeksforgeeks.org/maximum-sum-subarray-removing-at-most-one-element/\n\
    \    # https://www.geeksforgeeks.org/minimum-sum-subarray-removing-one-element/\n\
    \    # https://www.geeksforgeeks.org/minimum-sum-subarray-removing-at-most-one-element/\n\
    \    # https://www.geeksforgeeks.org/minimum-sum-subarray-removing-at-most-k-elements/\n\
    \    # https://www.geeksforgeeks.org/minimum-sum-subarray-removing-one-element-allowed/\n\
    \    # https://www.geeksforgeeks.org/minimum-sum-subarray-removing-at-most-one-element/\n\
    \    # https://www.geeksforgeeks.org/minimum-sum-subarray-removing-at-most-k-elements/\n\
    \    # https://www.geeksforgeeks.org/minimum-sum-subarray-removing-at-most-one-element/\n\
    \    # https://www.geeksforgeeks.org/minimum-sum-subarray-removing-at-most-k-elements/\n\
    \    # https://www.geeksforgeeks.org/minimum-sum-subarray-removing-one-element-allowed/\n\
    \    # https://www.geeksforgeeks.org/minimum-sum-sub", "    min_sum = float('inf')\n\
    \    curr_sum = 0\n    for num in nums:\n        curr_sum += num\n        min_sum\
    \ = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n\
    \n", "    min_sum = nums[0]\n    curr_sum = 0\n    for num in nums:\n        curr_sum\
    \ += num\n        min_sum = min(min_sum, curr_sum)\n        if curr_sum > 0:\n\
    \            curr_sum = 0\n    return min_sum\n\n", "    min_sum = float('inf')\n\
    \    curr_sum = 0\n    for num in nums:\n        curr_sum += num\n        min_sum\
    \ = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n\
    \n", "    # initialize the minimum sum to the first element\n    min_sum = nums[0]\n\
    \    # initialize the current sum to the first element\n    curr_sum = nums[0]\n\
    \    # loop through the rest of the array\n    for i in range(1, len(nums)):\n\
    \        # if the current sum is less than the current element\n        if curr_sum\
    \ < nums[i]:\n            # set the current sum to the current element\n     \
    \       curr_sum = nums[i]\n        # otherwise\n        else:\n            #\
    \ add the current element to the current sum\n            curr_sum += nums[i]\n\
    \        # if the current sum is less than the minimum sum\n        if curr_sum\
    \ < min_sum:\n            # set the minimum sum to the current sum\n         \
    \   min_sum = curr_sum\n    # return the minimum sum\n    return min_sum\n\n",
  "    min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n        curr_sum\
    \ += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum,\
    \ 0)\n    return min_sum\n\n", "    min_sum = 0\n    for i in range(len(nums)):\n\
    \        for j in range(i, len(nums)):\n            if sum(nums[i:j + 1]) < min_sum:\n\
    \                min_sum = sum(nums[i:j + 1])\n    return min_sum\n\n", "    min_sum\
    \ = float('inf')\n    curr_sum = 0\n    for num in nums:\n        curr_sum +=\
    \ num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum,\
    \ 0)\n    return min_sum\n\n", "    min_sum = float('inf')\n    curr_sum = 0\n\
    \    for num in nums:\n        curr_sum += num\n        min_sum = min(min_sum,\
    \ curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n\n", " \
    \   min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n        curr_sum\
    \ += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum,\
    \ 0)\n    return min_sum\n\n", "    min_sum = 0\n    curr_sum = 0\n    for i in\
    \ range(len(nums)):\n        curr_sum += nums[i]\n        if curr_sum < min_sum:\n\
    \            min_sum = curr_sum\n        if curr_sum > 0:\n            curr_sum\
    \ = 0\n    return min_sum\n\n", "    # Kadane's algorithm\n    max_ending_here\
    \ = max_so_far = nums[0]\n    for x in nums[1:]:\n        max_ending_here = max(x,\
    \ max_ending_here + x)\n        max_so_far = max(max_so_far, max_ending_here)\n\
    \    return max_so_far\n\n", "    min_sum = float('inf')\n    curr_sum = 0\n \
    \   for num in nums:\n        curr_sum += num\n        min_sum = min(min_sum,\
    \ curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n\n", " \
    \   # init min_sum to max int\n    min_sum = float('inf')\n    # init curr_sum\
    \ to 0\n    curr_sum = 0\n    # loop through nums\n    for num in nums:\n    \
    \    # add num to curr_sum\n        curr_sum += num\n        # if curr_sum is\
    \ less than min_sum\n        if curr_sum < min_sum:\n            # set min_sum\
    \ to curr_sum\n            min_sum = curr_sum\n        # if curr_sum is less than\
    \ 0\n        if curr_sum < 0:\n            # set curr_sum to 0\n            curr_sum\
    \ = 0\n    # return min_sum\n    return min_sum\n\n", "    min_sum = float('inf')\n\
    \    curr_sum = 0\n    for num in nums:\n        curr_sum += num\n        min_sum\
    \ = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n\
    \n", "    min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n   \
    \     curr_sum += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum\
    \ = max(curr_sum, 0)\n    return min_sum\n\n", "    min_sum = nums[0]\n    curr_sum\
    \ = nums[0]\n    for i in range(1, len(nums)):\n        curr_sum = min(nums[i],\
    \ curr_sum + nums[i])\n        min_sum = min(min_sum, curr_sum)\n    return min_sum\n\
    \n", "    min_sum = float('inf')\n    for i in range(len(nums)):\n        for\
    \ j in range(i, len(nums)):\n            min_sum = min(min_sum, sum(nums[i:j+1]))\n\
    \    return min_sum\n", "    min_sum = float('inf')\n    curr_sum = 0\n    for\
    \ num in nums:\n        curr_sum += num\n        min_sum = min(min_sum, curr_sum)\n\
    \        curr_sum = max(curr_sum, 0)\n    return min_sum\n\n", "    # Kadane's\
    \ Algorithm\n    max_so_far = nums[0]\n    max_ending_here = nums[0]\n    for\
    \ i in range(1, len(nums)):\n        max_ending_here = max(nums[i], max_ending_here\
    \ + nums[i])\n        max_so_far = max(max_so_far, max_ending_here)\n    return\
    \ max_so_far\n\n", "    min_sum = float('inf')\n    curr_sum = 0\n    for num\
    \ in nums:\n        curr_sum += num\n        min_sum = min(min_sum, curr_sum)\n\
    \        curr_sum = max(curr_sum, 0)\n    return min_sum\n\n", "    min_sum =\
    \ float('inf')\n    curr_sum = 0\n    for num in nums:\n        curr_sum += num\n\
    \        min_sum = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum, 0)\n\
    \    return min_sum\n\n", "    min_sum = float('inf')\n    curr_sum = 0\n    for\
    \ num in nums:\n        curr_sum += num\n        min_sum = min(min_sum, curr_sum)\n\
    \        curr_sum = max(curr_sum, 0)\n    return min_sum\n\n", "    min_sum =\
    \ float('inf')\n    curr_sum = 0\n    for num in nums:\n        curr_sum += num\n\
    \        min_sum = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum, 0)\n\
    \    return min_sum\n\n", "    min_sum = 0\n    curr_sum = 0\n    for num in nums:\n\
    \        curr_sum += num\n        if curr_sum < min_sum:\n            min_sum\
    \ = curr_sum\n    return min_sum\n\n", "    min_sum = nums[0]\n    curr_sum =\
    \ 0\n    for i in range(len(nums)):\n        curr_sum += nums[i]\n        if curr_sum\
    \ < min_sum:\n            min_sum = curr_sum\n        if curr_sum > 0:\n     \
    \       curr_sum = 0\n    return min_sum\n\n", "    min_sum = float('inf')\n \
    \   curr_sum = 0\n    for num in nums:\n        curr_sum += num\n        min_sum\
    \ = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n\
    \n", "    min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n   \
    \     curr_sum += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum\
    \ = max(curr_sum, 0)\n    return min_sum\n\n", "    min_sum = nums[0]\n    curr_sum\
    \ = nums[0]\n    for i in range(1, len(nums)):\n        curr_sum = min(nums[i],\
    \ curr_sum + nums[i])\n        min_sum = min(min_sum, curr_sum)\n    return min_sum\n\
    \n", "    min_sum = nums[0]\n    current_sum = nums[0]\n    for i in range(1,\
    \ len(nums)):\n        current_sum = min(nums[i], current_sum + nums[i])\n   \
    \     min_sum = min(min_sum, current_sum)\n    return min_sum\n\n", "    min_sum\
    \ = nums[0]\n    curr_sum = 0\n    for num in nums:\n        curr_sum += num\n\
    \        min_sum = min(min_sum, curr_sum)\n        if curr_sum > 0:\n        \
    \    curr_sum = 0\n    return min_sum\n\n", "    min_sum = float('inf')\n    curr_sum\
    \ = 0\n    for num in nums:\n        curr_sum += num\n        min_sum = min(min_sum,\
    \ curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n\n", " \
    \   min_sum = 0\n    curr_sum = 0\n    for i in range(len(nums)):\n        curr_sum\
    \ += nums[i]\n        if curr_sum < min_sum:\n            min_sum = curr_sum\n\
    \        if curr_sum > 0:\n            curr_sum = 0\n    return min_sum\n\n",
  "    min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n        curr_sum\
    \ += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum,\
    \ 0)\n    return min_sum\n\n", "    min_sum = float('inf')\n    curr_sum = 0\n\
    \    for num in nums:\n        curr_sum += num\n        min_sum = min(min_sum,\
    \ curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n\n", " \
    \   # initialize min_sum to the first element\n    min_sum = nums[0]\n    # initialize\
    \ current_sum to the first element\n    current_sum = nums[0]\n    # iterate through\
    \ the nums list\n    for i in range(1, len(nums)):\n        # add the current\
    \ element to the current_sum\n        current_sum += nums[i]\n        # if the\
    \ current_sum is less than the min_sum, update the min_sum\n        if current_sum\
    \ < min_sum:\n            min_sum = current_sum\n        # if the current_sum\
    \ is less than 0, reset the current_sum to 0\n        if current_sum < 0:\n  \
    \          current_sum = 0\n    return min_sum\n\n", "    min_sum = float('inf')\n\
    \    curr_sum = 0\n    for num in nums:\n        curr_sum += num\n        min_sum\
    \ = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n\
    \n", "    min_sum = nums[0]\n    curr_sum = 0\n    for num in nums:\n        curr_sum\
    \ += num\n        min_sum = min(min_sum, curr_sum)\n        if curr_sum > 0:\n\
    \            curr_sum = 0\n    return min_sum\n", "    min_sum = float('inf')\n\
    \    curr_sum = 0\n    for num in nums:\n        curr_sum += num\n        min_sum\
    \ = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n",
  "    min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n        curr_sum\
    \ += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum,\
    \ 0)\n    return min_sum\n\n", "    # initialize min_sum to the first element\
    \ in the array\n    min_sum = nums[0]\n    # initialize current_sum to the first\
    \ element in the array\n    current_sum = nums[0]\n    # loop through the array\
    \ starting at the second element\n    for i in range(1, len(nums)):\n        #\
    \ add the current element to the current_sum\n        current_sum += nums[i]\n\
    \        # if the current_sum is less than the min_sum, update the min_sum\n \
    \       if current_sum < min_sum:\n            min_sum = current_sum\n       \
    \ # if the current_sum is less than 0, reset the current_sum to 0\n        if\
    \ current_sum < 0:\n            current_sum = 0\n    return min_sum\n\n", "  \
    \  min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n        curr_sum\
    \ += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum,\
    \ 0)\n    return min_sum\n\n", "    min_sum = nums[0]\n    curr_sum = 0\n    for\
    \ num in nums:\n        curr_sum += num\n        min_sum = min(min_sum, curr_sum)\n\
    \        if curr_sum > 0:\n            curr_sum = 0\n    return min_sum\n\n",
  "    # initialize min_sum and current_sum\n    min_sum = current_sum = float('inf')\n\
    \    # loop through the array\n    for num in nums:\n        # add the current\
    \ number to the current sum\n        current_sum += num\n        # if the current\
    \ sum is less than the min sum, update min sum\n        if current_sum < min_sum:\n\
    \            min_sum = current_sum\n        # if the current sum is less than\
    \ 0, reset it to 0\n        if current_sum < 0:\n            current_sum = 0\n\
    \    return min_sum\n\n", "    min_sum = float('inf')\n    curr_sum = 0\n    for\
    \ num in nums:\n        curr_sum += num\n        min_sum = min(min_sum, curr_sum)\n\
    \        curr_sum = max(curr_sum, 0)\n    return min_sum\n\n", "    min_sum =\
    \ nums[0]\n    curr_sum = nums[0]\n    for i in range(1, len(nums)):\n       \
    \ curr_sum = min(nums[i], curr_sum + nums[i])\n        min_sum = min(min_sum,\
    \ curr_sum)\n    return min_sum\n\n", "    min_sum = float('inf')\n    for i in\
    \ range(len(nums)):\n        for j in range(i, len(nums)):\n            min_sum\
    \ = min(min_sum, sum(nums[i:j+1]))\n    return min_sum\n\n", "    min_sum = nums[0]\n\
    \    curr_sum = 0\n    for num in nums:\n        curr_sum += num\n        min_sum\
    \ = min(min_sum, curr_sum)\n        if curr_sum > 0:\n            curr_sum = 0\n\
    \    return min_sum\n\n", "    # initialize min sum to the first element\n   \
    \ min_sum = nums[0]\n    # initialize current sum to the first element\n    curr_sum\
    \ = nums[0]\n    # iterate through the rest of the array\n    for num in nums[1:]:\n\
    \        # if the current sum is greater than 0, add the current number to it\n\
    \        if curr_sum > 0:\n            curr_sum += num\n        # otherwise, set\
    \ the current sum to the current number\n        else:\n            curr_sum =\
    \ num\n        # if the current sum is less than the min sum, set min sum to current\
    \ sum\n        if curr_sum < min_sum:\n            min_sum = curr_sum\n    return\
    \ min_sum\n\n", "    min_sum = nums[0]\n    curr_sum = 0\n    for num in nums:\n\
    \        curr_sum += num\n        min_sum = min(min_sum, curr_sum)\n        if\
    \ curr_sum > 0:\n            curr_sum = 0\n    return min_sum\n\n", "    min_sum\
    \ = float('inf')\n    curr_sum = 0\n    for num in nums:\n        curr_sum +=\
    \ num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum,\
    \ 0)\n    return min_sum\n\n", "    min_sum = nums[0]\n    curr_sum = nums[0]\n\
    \    for i in range(1, len(nums)):\n        curr_sum = min(nums[i], curr_sum +\
    \ nums[i])\n        min_sum = min(min_sum, curr_sum)\n    return min_sum\n\n",
  "    min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n        curr_sum\
    \ += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum,\
    \ 0)\n    return min_sum\n\n", "    min_sum = float('inf')\n    curr_sum = 0\n\
    \    for num in nums:\n        curr_sum += num\n        min_sum = min(min_sum,\
    \ curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n\n", " \
    \   min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n        curr_sum\
    \ += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum,\
    \ 0)\n    return min_sum\n\n", "    min_sum = float('inf')\n    curr_sum = 0\n\
    \    for i in range(len(nums)):\n        curr_sum += nums[i]\n        min_sum\
    \ = min(min_sum, curr_sum)\n        if curr_sum > 0:\n            curr_sum = 0\n\
    \    return min_sum\n\n", "    min_sum = nums[0]\n    curr_sum = 0\n    for num\
    \ in nums:\n        curr_sum += num\n        min_sum = min(min_sum, curr_sum)\n\
    \        if curr_sum > 0:\n            curr_sum = 0\n    return min_sum\n\n",
  "    min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n        curr_sum\
    \ += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum,\
    \ 0)\n    return min_sum\n\n", "    min_sum = nums[0]\n    curr_sum = nums[0]\n\
    \    for i in range(1, len(nums)):\n        curr_sum = min(nums[i], curr_sum +\
    \ nums[i])\n        min_sum = min(min_sum, curr_sum)\n    return min_sum\n\n",
  "    # Kadane's Algorithm\n    # https://www.geeksforgeeks.org/largest-sum-contiguous-subarray/\n\
    \    # https://www.geeksforgeeks.org/maximum-contiguous-circular-sum/\n    # https://www.geeksforgeeks.org/minimum-sum-subarray-size-k/\n\
    \    # https://www.geeksforgeeks.org/maximum-sum-subarray-size-k/\n    # https://www.geeksforgeeks.org/maximum-sum-subarray-removing-one-element/\n\
    \    # https://www.geeksforgeeks.org/maximum-sum-subarray-removing-one-element-set-2/\n\
    \    # https://www.geeksforgeeks.org/maximum-sum-such-that-no-two-elements-are-adjacent/\n\
    \    # https://www.geeksforgeeks.org/maximum-sum-increasing-subsequence-dp-14/\n\
    \    # https://www.geeksforgeeks.org/maximum-sum-increasing-subsequence-circular-array/\n\
    \    # https://www.geeksforgeeks.org/maximum-sum-increasing-subsequence-circular-array-removing-one-element/\n\
    \    # https://www.geeksforgeeks.org/maximum-sum-increasing-subsequence-removing-one-element/\n\
    \    # https://www.geeksforgeeks.org/maximum-sum-increasing-subsequence-removing-one-element-set-2/\n\
    \    # https://www.geeksforgeeks.org/maximum-sum-increasing-subsequence-removing-one-element-set-3/\n\
    \    # https://www.geeksforgeeks.org/maximum-sum-increasing-subsequence-removing-one-element-set-4/\n\
    \    # https://www.geeksforgeeks.org/maximum-sum-increasing-subsequence-removing-one-element-set-5/\n\
    \    # https://www.geeksforgeeks.org/maximum-sum-increasing-subsequence-removing-one-element-set-6/\n\
    \    # https://www.geeksforgeeks.org/maximum-sum-increasing-subsequence", "  \
    \  min_sum = float('inf')\n    current_sum = 0\n    for num in nums:\n       \
    \ current_sum += num\n        min_sum = min(min_sum, current_sum)\n        current_sum\
    \ = max(current_sum, 0)\n    return min_sum\n\n", "    min_sum = float('inf')\n\
    \    curr_sum = 0\n    for num in nums:\n        curr_sum += num\n        min_sum\
    \ = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n\
    \n", "    min_sum = nums[0]\n    current_sum = nums[0]\n    for i in range(1,\
    \ len(nums)):\n        current_sum = min(nums[i], current_sum + nums[i])\n   \
    \     min_sum = min(min_sum, current_sum)\n    return min_sum\n\n", "    min_sum\
    \ = nums[0]\n    curr_sum = 0\n    for num in nums:\n        curr_sum += num\n\
    \        min_sum = min(min_sum, curr_sum)\n        if curr_sum > 0:\n        \
    \    curr_sum = 0\n    return min_sum\n\n", "    min_sum = float('inf')\n    curr_sum\
    \ = 0\n    for num in nums:\n        curr_sum += num\n        min_sum = min(min_sum,\
    \ curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n\n", " \
    \   min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n        curr_sum\
    \ += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum,\
    \ 0)\n    return min_sum\n", "    min_sum = nums[0]\n    for i in range(len(nums)):\n\
    \        for j in range(i, len(nums)):\n            if sum(nums[i:j + 1]) < min_sum:\n\
    \                min_sum = sum(nums[i:j + 1])\n    return min_sum\n\n", "    min_sum\
    \ = 0\n    for i in range(len(nums)):\n        for j in range(i, len(nums)):\n\
    \            min_sum = min(min_sum, sum(nums[i:j]))\n    return min_sum\n\n",
  "    min_sum = float('inf')\n    curr_sum = 0\n    for num in nums:\n        curr_sum\
    \ += num\n        min_sum = min(min_sum, curr_sum)\n        curr_sum = max(curr_sum,\
    \ 0)\n    return min_sum\n\n", "    min_sum = float('inf')\n    curr_sum = 0\n\
    \    for num in nums:\n        curr_sum += num\n        min_sum = min(min_sum,\
    \ curr_sum)\n        curr_sum = max(curr_sum, 0)\n    return min_sum\n\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

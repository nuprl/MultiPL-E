language: notypes.py
name: HumanEval_161_solve
results:
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    # your code here\n    if not s.isalpha():\n        return s[::-1]\n\
    \    else:\n        return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpva64l67i.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpva64l67i.py\", line 32,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpva64l67i.py\", line 25, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n    else:\n   \
    \     return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4341xd_n.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp4341xd_n.py\", line 32,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp4341xd_n.py\", line 25, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n    else:\n   \
    \     return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') ==\
    \ 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') ==\
    \ 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6vu04hq1.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp6vu04hq1.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp6vu04hq1.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1i29hb04.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp1i29hb04.py\", line 32,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp1i29hb04.py\", line 25, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    # your code here\n    if not s.isalpha():\n        return s[::-1]\n\
    \    else:\n        return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpva64l67i.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpva64l67i.py\", line 32,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpva64l67i.py\", line 25, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n    else:\n   \
    \     return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') ==\
    \ 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') ==\
    \ 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6vu04hq1.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp6vu04hq1.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp6vu04hq1.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not any(c.isalpha() for c in s):\n        return s[::-1]\n\
    \    return ''.join(c.upper() if c.islower() else c.lower() for c in s)\n\ndef\
    \ check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    return ''.join(c.lower()\
    \ if c.isupper() else c.upper() for c in s)\n\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqeln7b7z.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpqeln7b7z.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpqeln7b7z.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n    else:\n   \
    \     return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') ==\
    \ 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') ==\
    \ 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6vu04hq1.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp6vu04hq1.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp6vu04hq1.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s:\n        return s\n    if not s.isalpha():\n      \
    \  return s[::-1]\n    return ''.join(c.lower() if c.isupper() else c.upper()\
    \ for c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_ac139eb.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmp_ac139eb.py\", line 33,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp_ac139eb.py\", line 26, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not any(c.isalpha() for c in s):\n        return s[::-1]\n\
    \    else:\n        return ''.join(c.upper() if c.islower() else c.lower() for\
    \ c in s)\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n \
    \   assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n \
    \   assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n\
    \    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n\
    \    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n    else:\n   \
    \     return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') ==\
    \ 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') ==\
    \ 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6vu04hq1.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp6vu04hq1.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp6vu04hq1.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s:\n        return s\n    if not any(c.isalpha() for c\
    \ in s):\n        return s[::-1]\n    return ''.join(c.upper() if c.islower()\
    \ else c.lower() if c.isupper() else c for c in s)\n\ndef check(candidate):\n\
    \    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1i29hb04.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp1i29hb04.py\", line 32,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp1i29hb04.py\", line 25, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n    else:\n   \
    \     return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4341xd_n.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp4341xd_n.py\", line 32,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp4341xd_n.py\", line 25, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n    else:\n   \
    \     return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') ==\
    \ 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') ==\
    \ 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6vu04hq1.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp6vu04hq1.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp6vu04hq1.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not any(c.isalpha() for c in s):\n        return s[::-1]\n\
    \    else:\n        return ''.join(c.upper() if c.islower() else c.lower() for\
    \ c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s:\n        return s\n    if not any(c.isalpha() for c\
    \ in s):\n        return s[::-1]\n    return ''.join(c.upper() if c.islower()\
    \ else c.lower() if c.isupper() else c for c in s)\n\n\ndef check(candidate):\n\
    \    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s:\n        return s\n    if not any(c.isalpha() for c\
    \ in s):\n        return s[::-1]\n    return ''.join(c.upper() if c.islower()\
    \ else c.lower() if c.isupper() else c for c in s)\n\n\ndef check(candidate):\n\
    \    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n    else:\n   \
    \     return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4341xd_n.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp4341xd_n.py\", line 32,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp4341xd_n.py\", line 25, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not any(c.isalpha() for c in s):\n        return s[::-1]\n\
    \    return ''.join(c.upper() if c.islower() else c.lower() if c.isupper() else\
    \ c for c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n    else:\n   \
    \     return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') ==\
    \ 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') ==\
    \ 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6vu04hq1.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp6vu04hq1.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp6vu04hq1.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not any(c.isalpha() for c in s):\n        return s[::-1]\n\
    \    return ''.join(c.upper() if c.islower() else c.lower() if c.isupper() else\
    \ c for c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1i29hb04.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp1i29hb04.py\", line 32,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp1i29hb04.py\", line 25, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n    else:\n   \
    \     return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4341xd_n.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp4341xd_n.py\", line 32,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp4341xd_n.py\", line 25, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s:\n        return s\n    if not s.isalpha():\n      \
    \  return s[::-1]\n    return s.swapcase()\n\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjgvv5kl1.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpjgvv5kl1.py\", line 33,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpjgvv5kl1.py\", line 26, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not any(c.isalpha() for c in s):\n        return s[::-1]\n\
    \    return ''.join(c.upper() if c.islower() else c.lower() if c.isupper() else\
    \ c for c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not any(c.isalpha() for c in s):\n        return s[::-1]\n\
    \    else:\n        return ''.join(c.upper() if c.islower() else c.lower() for\
    \ c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n    else:\n   \
    \     return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') ==\
    \ 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') ==\
    \ 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6vu04hq1.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp6vu04hq1.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp6vu04hq1.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    # your code here\n    if s.isalpha():\n        return s.swapcase()\n\
    \    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1_yo2svi.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp1_yo2svi.py\", line 32,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp1_yo2svi.py\", line 25, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n    else:\n   \
    \     return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4341xd_n.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp4341xd_n.py\", line 32,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp4341xd_n.py\", line 25, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not any(c.isalpha() for c in s):\n        return s[::-1]\n\
    \    else:\n        return ''.join(c.upper() if c.islower() else c.lower() for\
    \ c in s)\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n \
    \   assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n \
    \   assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n\
    \    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n\
    \    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1i29hb04.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp1i29hb04.py\", line 32,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp1i29hb04.py\", line 25, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not any(c.isalpha() for c in s):\n        return s[::-1]\n\
    \    else:\n        return ''.join(c.lower() if c.isupper() else c.upper() for\
    \ c in s)\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n \
    \   assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n \
    \   assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n\
    \    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n\
    \    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return ''.join([i.upper() if i.islower() else i.lower() for i in s])\n\n\
    def check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdszb3u92.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpdszb3u92.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpdszb3u92.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271068
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n    else:\n   \
    \     return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') ==\
    \ 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') ==\
    \ 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6vu04hq1.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp6vu04hq1.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp6vu04hq1.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    return ''.join(c.lower()\
    \ if c.isupper() else c.upper() for c in s)\n\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqeln7b7z.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpqeln7b7z.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpqeln7b7z.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    return ''.join(c.lower()\
    \ if c.isupper() else c.upper() for c in s)\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpt9gbrud0.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpt9gbrud0.py\", line 30,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpt9gbrud0.py\", line 23, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271068
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n    else:\n   \
    \     return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') ==\
    \ 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') ==\
    \ 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6vu04hq1.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp6vu04hq1.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp6vu04hq1.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s:\n        return s\n    if s.isalpha():\n        return\
    \ s.swapcase()\n    else:\n        return s[::-1]\n\n\ndef check(candidate):\n\
    \    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf7blw6y0.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpf7blw6y0.py\", line 34,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpf7blw6y0.py\", line 27, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271068
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n    else:\n   \
    \     return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4341xd_n.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp4341xd_n.py\", line 32,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp4341xd_n.py\", line 25, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n    else:\n   \
    \     return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') ==\
    \ 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') ==\
    \ 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6vu04hq1.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp6vu04hq1.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp6vu04hq1.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1i29hb04.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp1i29hb04.py\", line 32,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp1i29hb04.py\", line 25, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1i29hb04.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp1i29hb04.py\", line 32,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp1i29hb04.py\", line 25, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1i29hb04.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp1i29hb04.py\", line 32,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp1i29hb04.py\", line 25, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s:\n        return s\n    if not s.isalpha():\n      \
    \  return s[::-1]\n    return ''.join(c.upper() if c.islower() else c.lower()\
    \ for c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpt9vrlbov.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpt9vrlbov.py\", line 33,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpt9vrlbov.py\", line 26, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271068
- exit_code: 0
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not any(c.isalpha() for c in s):\n        return s[::-1]\n\
    \    return ''.join(c.lower() if c.isupper() else c.upper() for c in s)\n\ndef\
    \ check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271068
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s:\n        return s\n    if s.isalpha():\n        return\
    \ s.swapcase()\n    return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5rv23atl.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp5rv23atl.py\", line 32,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp5rv23atl.py\", line 25, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271068
- exit_code: 0
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s:\n        return s\n    if not any(c.isalpha() for c\
    \ in s):\n        return s[::-1]\n    return ''.join(c.lower() if c.isupper()\
    \ else c.upper() for c in s)\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271068
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1i29hb04.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp1i29hb04.py\", line 32,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp1i29hb04.py\", line 25, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s:\n        return s\n    if not any(c.isalpha() for c\
    \ in s):\n        return s[::-1]\n    return ''.join(c.lower() if c.isupper()\
    \ else c.upper() for c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271068
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s:\n        return s\n    if not any(c.isalpha() for c\
    \ in s):\n        return s[::-1]\n    return ''.join(c.upper() if c.islower()\
    \ else c.lower() for c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271068
- exit_code: 0
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not any(c.isalpha() for c in s):\n        return s[::-1]\n\
    \    return ''.join(c.upper() if c.islower() else c.lower() for c in s)\n\ndef\
    \ check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    return ''.join(ch.lower()\
    \ if ch.isupper() else ch.upper() for ch in s)\n\n\ndef check(candidate):\n  \
    \  assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpq7x0nm60.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpq7x0nm60.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpq7x0nm60.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271068
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    # your code here\n    if not s:\n        return s\n    if not\
    \ s.isalpha():\n        return s[::-1]\n    return s.swapcase()\n\n\ndef check(candidate):\n\
    \    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvmkbb41e.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpvmkbb41e.py\", line 34,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpvmkbb41e.py\", line 27, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271068
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not any(c.isalpha() for c in s):\n        return s[::-1]\n\
    \    return ''.join(c.lower() if c.isupper() else c.upper() for c in s)\n\n\n\
    def check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271068
- exit_code: 0
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s:\n        return s\n    if not any(c.isalpha() for c\
    \ in s):\n        return s[::-1]\n    return ''.join(c.upper() if c.islower()\
    \ else c.lower() for c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271068
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n    else:\n   \
    \     return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') ==\
    \ 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') ==\
    \ 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6vu04hq1.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp6vu04hq1.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp6vu04hq1.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1i29hb04.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp1i29hb04.py\", line 32,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp1i29hb04.py\", line 25, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n    else:\n   \
    \     return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') ==\
    \ 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') ==\
    \ 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6vu04hq1.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp6vu04hq1.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp6vu04hq1.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s:\n        return s\n    if not any(c.isalpha() for c\
    \ in s):\n        return s[::-1]\n    return ''.join(c.upper() if c.islower()\
    \ else c.lower() for c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271068
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s:\n        return s\n    if not any(c.isalpha() for c\
    \ in s):\n        return s[::-1]\n    return ''.join(c.upper() if c.islower()\
    \ else c.lower() for c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271068
- exit_code: 0
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not any(c.isalpha() for c in s):\n        return s[::-1]\n\
    \    return ''.join(c.upper() if c.islower() else c.lower() for c in s)\n\ndef\
    \ check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n    else:\n   \
    \     return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') ==\
    \ 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') ==\
    \ 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6vu04hq1.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp6vu04hq1.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp6vu04hq1.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n    else:\n   \
    \     return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4341xd_n.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp4341xd_n.py\", line 32,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp4341xd_n.py\", line 25, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n    else:\n   \
    \     return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') ==\
    \ 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') ==\
    \ 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6vu04hq1.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp6vu04hq1.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp6vu04hq1.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1i29hb04.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp1i29hb04.py\", line 32,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp1i29hb04.py\", line 25, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s:\n        return s\n    if not s.isalpha():\n      \
    \  return s[::-1]\n    return ''.join(c.lower() if c.isupper() else c.upper()\
    \ for c in s)\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5qxebdiy.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp5qxebdiy.py\", line 32,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp5qxebdiy.py\", line 25, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271068
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1i29hb04.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp1i29hb04.py\", line 32,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp1i29hb04.py\", line 25, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not any(c.isalpha() for c in s):\n        return s[::-1]\n\
    \    return ''.join(c.upper() if c.islower() else c.lower() for c in s)\n\n\n\
    def check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271068
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n    else:\n   \
    \     return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') ==\
    \ 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') ==\
    \ 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6vu04hq1.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp6vu04hq1.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp6vu04hq1.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return ''.join([i.upper() if i.islower() else i.lower() for i in s])\n\n\
    def check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdszb3u92.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpdszb3u92.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpdszb3u92.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271068
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n    else:\n   \
    \     return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') ==\
    \ 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') ==\
    \ 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6vu04hq1.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp6vu04hq1.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp6vu04hq1.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return ''.join([i.lower() if i.isupper() else i.upper() for i in s])\n\n\
    def check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgg0d5lfk.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpgg0d5lfk.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpgg0d5lfk.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271068
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n    else:\n   \
    \     return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') ==\
    \ 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') ==\
    \ 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6vu04hq1.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp6vu04hq1.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp6vu04hq1.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1i29hb04.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp1i29hb04.py\", line 32,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp1i29hb04.py\", line 25, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    return ''.join(c.upper()\
    \ if c.islower() else c.lower() for c in s)\n\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqkwvlo20.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpqkwvlo20.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpqkwvlo20.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271068
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n    else:\n   \
    \     return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') ==\
    \ 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') ==\
    \ 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6vu04hq1.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp6vu04hq1.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp6vu04hq1.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    return ''.join(c.upper()\
    \ if c.islower() else c.lower() for c in s)\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnwvcsu5q.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpnwvcsu5q.py\", line 30,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpnwvcsu5q.py\", line 23, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271068
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    # your code here\n    return s\n\ndef check(candidate):\n   \
    \ assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpaq17m8mv.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpaq17m8mv.py\", line 29,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpaq17m8mv.py\", line 19, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271068
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not any(c.isalpha() for c in s):\n        return s[::-1]\n\
    \    return ''.join(c.upper() if c.islower() else c.lower() for c in s)\n\n\n\
    def check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271068
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s:\n        return s\n    if not s.isalpha():\n      \
    \  return s[::-1]\n    return ''.join(c.lower() if c.isupper() else c.upper()\
    \ for c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_ac139eb.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmp_ac139eb.py\", line 33,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp_ac139eb.py\", line 26, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s:\n        return s\n    if not any(c.isalpha() for c\
    \ in s):\n        return s[::-1]\n    return ''.join(c.upper() if c.islower()\
    \ else c.lower() for c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271068
- exit_code: 0
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s:\n        return s\n    if not any(c.isalpha() for c\
    \ in s):\n        return s[::-1]\n    return ''.join(c.lower() if c.isupper()\
    \ else c.upper() for c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271068
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    return ''.join(i.upper()\
    \ if i.islower() else i.lower() for i in s)\n\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk6wr8cmc.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpk6wr8cmc.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpk6wr8cmc.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271068
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not any(c.isalpha() for c in s):\n        return s[::-1]\n\
    \    return ''.join(c.upper() if c.islower() else c.lower() for c in s)\n\n\n\
    def check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271068
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1i29hb04.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp1i29hb04.py\", line 32,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp1i29hb04.py\", line 25, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n    else:\n   \
    \     return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') ==\
    \ 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') ==\
    \ 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6vu04hq1.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp6vu04hq1.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp6vu04hq1.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    # your code here\n    if s.isalpha():\n        return s.swapcase()\n\
    \    else:\n        return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1_yo2svi.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp1_yo2svi.py\", line 32,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp1_yo2svi.py\", line 25, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    res = ''\n \
    \   for c in s:\n        if c.isalpha():\n            res += c.swapcase()\n  \
    \      else:\n            res += c\n    return res\n\ndef check(candidate):\n\
    \    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpz8y5mmll.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmpz8y5mmll.py\", line 36,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpz8y5mmll.py\", line 29, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271068
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s:\n        return s\n    if not s.isalpha():\n      \
    \  return s[::-1]\n    return ''.join(c.upper() if c.islower() else c.lower()\
    \ for c in s)\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplkyao3lp.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmplkyao3lp.py\", line 32,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmplkyao3lp.py\", line 25, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271068
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1i29hb04.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp1i29hb04.py\", line 32,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp1i29hb04.py\", line 25, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s:\n        return s\n    if not s.isalpha():\n      \
    \  return s[::-1]\n    return ''.join(c.lower() if c.isupper() else c.upper()\
    \ for c in s)\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5qxebdiy.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp5qxebdiy.py\", line 32,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp5qxebdiy.py\", line 25, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271068
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    # your code here\n    return ''\n\n\ndef check(candidate):\n\
    \    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpit5qfi36.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpit5qfi36.py\", line 30,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpit5qfi36.py\", line 20, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271068
- exit_code: 0
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s:\n        return s\n    if not any(c.isalpha() for c\
    \ in s):\n        return s[::-1]\n    return ''.join(c.upper() if c.islower()\
    \ else c.lower() for c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271068
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    # your code here\n    if not s.isalpha():\n        return s[::-1]\n\
    \    else:\n        return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpva64l67i.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpva64l67i.py\", line 32,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpva64l67i.py\", line 25, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s:\n        return s\n    if not any(c.isalpha() for c\
    \ in s):\n        return s[::-1]\n    return ''.join(c.upper() if c.islower()\
    \ else c.lower() for c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271068
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n    else:\n   \
    \     return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4341xd_n.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp4341xd_n.py\", line 32,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp4341xd_n.py\", line 25, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not any(c.isalpha() for c in s):\n        return s[::-1]\n\
    \    return ''.join(c.upper() if c.islower() else c.lower() for c in s)\n\n\n\
    def check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271068
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s:\n        return s\n    if not s.isalpha():\n      \
    \  return s[::-1]\n    return ''.join(c.upper() if c.islower() else c.lower()\
    \ for c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpt9vrlbov.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpt9vrlbov.py\", line 33,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpt9vrlbov.py\", line 26, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271068
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1i29hb04.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp1i29hb04.py\", line 32,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp1i29hb04.py\", line 25, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n    else:\n   \
    \     return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') ==\
    \ 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') ==\
    \ 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6vu04hq1.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp6vu04hq1.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp6vu04hq1.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not any(c.isalpha() for c in s):\n        return s[::-1]\n\
    \    return ''.join(c.upper() if c.islower() else c.lower() for c in s)\n\n\n\
    def check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271068
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n    else:\n   \
    \     return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') ==\
    \ 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') ==\
    \ 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6vu04hq1.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp6vu04hq1.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp6vu04hq1.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not any(c.isalpha() for c in s):\n        return s[::-1]\n\
    \    return ''.join(c.upper() if c.islower() else c.lower() for c in s)\n\n\n\
    def check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271068
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n    else:\n   \
    \     return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4341xd_n.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp4341xd_n.py\", line 32,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp4341xd_n.py\", line 25, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s:\n        return s\n    if not any(c.isalpha() for c\
    \ in s):\n        return s[::-1]\n    return ''.join(c.lower() if c.isupper()\
    \ else c.upper() for c in s)\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271068
- exit_code: 0
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not any(c.isalpha() for c in s):\n        return s[::-1]\n\
    \    else:\n        return ''.join(c.upper() if c.islower() else c.lower() for\
    \ c in s)\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n \
    \   assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n \
    \   assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n\
    \    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n\
    \    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not any(c.isalpha() for c in s):\n        return s[::-1]\n\
    \    return ''.join(c.upper() if c.islower() else c.lower() for c in s)\n\ndef\
    \ check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n    else:\n   \
    \     return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') ==\
    \ 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') ==\
    \ 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6vu04hq1.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp6vu04hq1.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp6vu04hq1.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s:\n        return s\n    if not any(c.isalpha() for c\
    \ in s):\n        return s[::-1]\n    return ''.join(c.upper() if c.islower()\
    \ else c.lower() for c in s)\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271068
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not any(c.isalpha() for c in s):\n        return s[::-1]\n\
    \    return ''.join(c.upper() if c.islower() else c.lower() for c in s)\n\n\n\
    def check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271068
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n    else:\n   \
    \     return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4341xd_n.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp4341xd_n.py\", line 32,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp4341xd_n.py\", line 25, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    # your code here\n    return s\n\ndef check(candidate):\n   \
    \ assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpaq17m8mv.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpaq17m8mv.py\", line 29,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpaq17m8mv.py\", line 19, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271068
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n    else:\n   \
    \     return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') ==\
    \ 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') ==\
    \ 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6vu04hq1.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp6vu04hq1.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp6vu04hq1.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n    else:\n   \
    \     return s[::-1]\n\ndef check(candidate):\n    assert candidate('AsDf') ==\
    \ 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab') ==\
    \ 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6vu04hq1.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp6vu04hq1.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp6vu04hq1.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not any(c.isalpha() for c in s):\n        return s[::-1]\n\
    \    else:\n        return ''.join(c.lower() if c.isupper() else c.upper() for\
    \ c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n\
    \    assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n\
    \    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') ==\
    \ '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271068
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s:\n        return s\n    if not any(c.isalpha() for c\
    \ in s):\n        return s[::-1]\n    return ''.join(c.upper() if c.islower()\
    \ else c.lower() for c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271068
- exit_code: 0
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s:\n        return s\n    if not any(c.isalpha() for c\
    \ in s):\n        return s[::-1]\n    return ''.join(c.upper() if c.islower()\
    \ else c.lower() for c in s)\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271068
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    return ''.join(c.lower()\
    \ if c.isupper() else c.upper() for c in s)\n\ndef check(candidate):\n    assert\
    \ candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert\
    \ candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert\
    \ candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n\
    \    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\
    \ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpt9gbrud0.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpt9gbrud0.py\", line 30,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpt9gbrud0.py\", line 23, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271068
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    # your code here\n    return s\n\ndef check(candidate):\n   \
    \ assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpaq17m8mv.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpaq17m8mv.py\", line 29,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpaq17m8mv.py\", line 19, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271068
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n    else:\n   \
    \     return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4341xd_n.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp4341xd_n.py\", line 32,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp4341xd_n.py\", line 25, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n    else:\n   \
    \     return s[::-1]\n\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4341xd_n.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp4341xd_n.py\", line 32,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp4341xd_n.py\", line 25, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    # Your code here\n    if not s.isalpha():\n        return s[::-1]\n\
    \    else:\n        return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp232171p6.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp232171p6.py\", line 32,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp232171p6.py\", line 25, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271068
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return ''.join([i.lower() if i.isupper() else i.upper() for i in s])\n\n\n\
    def check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_mbqskbg.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp_mbqskbg.py\", line 32,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmp_mbqskbg.py\", line 25, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271068
- exit_code: 0
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not any(c.isalpha() for c in s):\n        return s[::-1]\n\
    \    return ''.join(c.lower() if c.isupper() else c.upper() for c in s)\n\ndef\
    \ check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234')\
    \ == '4321'\n    assert candidate('ab') == 'AB'\n    assert candidate('#a@C')\
    \ == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271068
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    # your code here\n    if not s:\n        return s\n    if s.isalpha():\n\
    \        return s[::-1].swapcase()\n    else:\n        return s[::-1]\n\ndef check(candidate):\n\
    \    assert candidate('AsDf') == 'aSdF'\n    assert candidate('1234') == '4321'\n\
    \    assert candidate('ab') == 'AB'\n    assert candidate('#a@C') == '#A@c'\n\
    \    assert candidate('#AsdfW^45') == '#aSDFw^45'\n    assert candidate('#6@2')\
    \ == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n    assert candidate('#ccc')\
    \ == '#CCC'\n\ndef test_check():\n    check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpykkz2b47.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpykkz2b47.py\", line 34,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmpykkz2b47.py\", line 24, in\
    \ check\n    assert candidate('AsDf') == 'aSdF'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271068
- exit_code: -1
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n    \
    \    return s.swapcase()\n\ndef check(candidate):\n    assert candidate('AsDf')\
    \ == 'aSdF'\n    assert candidate('1234') == '4321'\n    assert candidate('ab')\
    \ == 'AB'\n    assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45')\
    \ == '#aSDFw^45'\n    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D')\
    \ == '#$A^d'\n    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n  \
    \  check(solve)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6fprwdx.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmph6fprwdx.py\", line 31,\
    \ in test_check\n    check(solve)\n  File \"/tmp/tmph6fprwdx.py\", line 24, in\
    \ check\n    assert candidate('#a@C') == '#A@c'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    otherwise keep it\
    \ as it is.\n    If the string contains no letters, reverse the string.\n    The\
    \ function should return the resulted string.\n    Examples\n    >>> solve('1234')\n\
    \    '4321'\n    >>> solve('ab')\n    'AB'\n    >>> solve('#a@C')\n    '#A@c'\n\
    \    \"\"\"\n    if not any(c.isalpha() for c in s):\n        return s[::-1]\n\
    \    else:\n        return ''.join(c.upper() if c.islower() else c.lower() for\
    \ c in s)\n\ndef check(candidate):\n    assert candidate('AsDf') == 'aSdF'\n \
    \   assert candidate('1234') == '4321'\n    assert candidate('ab') == 'AB'\n \
    \   assert candidate('#a@C') == '#A@c'\n    assert candidate('#AsdfW^45') == '#aSDFw^45'\n\
    \    assert candidate('#6@2') == '2@6#'\n    assert candidate('#$a^D') == '#$A^d'\n\
    \    assert candidate('#ccc') == '#CCC'\n\ndef test_check():\n    check(solve)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067

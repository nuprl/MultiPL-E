language: notypes.py
name: HumanEval_35_max_element
results:
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for i in\
    \ range(1, len(l)):\n        if l[i] > max_elem:\n            max_elem = l[i]\n\
    \    return max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3])\
    \ == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\
    \ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_el = l[0]\n    for el in l:\n\
    \        if el > max_el:\n            max_el = el\n    return max_el\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_el = l[0]\n    for i in l:\n\
    \        if i > max_el:\n            max_el = i\n    return max_el\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 1:\n        return\
    \ l[0]\n    else:\n        return max(l[0], max_element(l[1:]))\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for i in\
    \ range(1, len(l)):\n        if l[i] > max_elem:\n            max_elem = l[i]\n\
    \    return max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3])\
    \ == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\
    \ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return reduce(lambda x, y: x if\
    \ x > y else y, l)\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) ==\
    \ 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\n\
    def test_check():\n    check(max_element)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmz8spkmg.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpmz8spkmg.py\", line 15,\
    \ in test_check\n    check(max_element)\n  File \"/tmp/tmpmz8spkmg.py\", line\
    \ 11, in check\n    assert candidate([1, 2, 3]) == 3\n  File \"/tmp/tmpmz8spkmg.py\"\
    , line 8, in max_element\n    return reduce(lambda x, y: x if x > y else y, l)\n\
    NameError: name 'reduce' is not defined\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for i in\
    \ range(1, len(l)):\n        if l[i] > max_elem:\n            max_elem = l[i]\n\
    \    return max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3])\
    \ == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\
    \ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 1:\n        return\
    \ l[0]\n    else:\n        return max(l[0], max_element(l[1:]))\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_el = l[0]\n    for i in l:\n\
    \        if i > max_el:\n            max_el = i\n    return max_el\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 1:\n        return\
    \ l[0]\n    else:\n        return max(l[0], max_element(l[1:]))\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_el = l[0]\n    for i in l:\n\
    \        if i > max_el:\n            max_el = i\n    return max_el\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for i in\
    \ range(1, len(l)):\n        if l[i] > max_elem:\n            max_elem = l[i]\n\
    \    return max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3])\
    \ == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\
    \ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for i in\
    \ range(1, len(l)):\n        if l[i] > max_elem:\n            max_elem = l[i]\n\
    \    return max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3])\
    \ == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\
    \ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 1:\n        return\
    \ l[0]\n    else:\n        return max(l[0], max_element(l[1:]))\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return reduce(lambda x, y: max(x,\
    \ y), l)\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n  \
    \  assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp84y_yaht.py\", line\
    \ 18, in <module>\n    test_check()\n  File \"/tmp/tmp84y_yaht.py\", line 16,\
    \ in test_check\n    check(max_element)\n  File \"/tmp/tmp84y_yaht.py\", line\
    \ 12, in check\n    assert candidate([1, 2, 3]) == 3\n  File \"/tmp/tmp84y_yaht.py\"\
    , line 8, in max_element\n    return reduce(lambda x, y: max(x, y), l)\nNameError:\
    \ name 'reduce' is not defined\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for i in\
    \ range(1, len(l)):\n        if l[i] > max_elem:\n            max_elem = l[i]\n\
    \    return max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3])\
    \ == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\
    \ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_el = l[0]\n    for el in l:\n\
    \        if el > max_el:\n            max_el = el\n    return max_el\n\n\ndef\
    \ check(candidate):\n    assert candidate([1, 2, 3]) == 3\n    assert candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 1:\n        return\
    \ l[0]\n    else:\n        return max(l[0], max_element(l[1:]))\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for i in\
    \ range(1, len(l)):\n        if l[i] > max_elem:\n            max_elem = l[i]\n\
    \    return max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3])\
    \ == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\
    \ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_el = l[0]\n    for i in l:\n\
    \        if i > max_el:\n            max_el = i\n    return max_el\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_el = l[0]\n    for i in l:\n\
    \        if i > max_el:\n            max_el = i\n    return max_el\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for i in\
    \ range(1, len(l)):\n        if l[i] > max_elem:\n            max_elem = l[i]\n\
    \    return max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3])\
    \ == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\
    \ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_el = l[0]\n    for i in l:\n\
    \        if i > max_el:\n            max_el = i\n    return max_el\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = l[0]\n    for i\
    \ in l:\n        if i > max_element:\n            max_element = i\n    return\
    \ max_element\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max = l[0]\n    for i in l:\n\
    \        if i > max:\n            max = i\n    return max\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_el = l[0]\n    for i in l:\n\
    \        if i > max_el:\n            max_el = i\n    return max_el\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for i in\
    \ range(1, len(l)):\n        if l[i] > max_elem:\n            max_elem = l[i]\n\
    \    return max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3])\
    \ == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\
    \ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for i in\
    \ range(1, len(l)):\n        if l[i] > max_elem:\n            max_elem = l[i]\n\
    \    return max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3])\
    \ == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\
    \ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_el = l[0]\n    for el in l:\n\
    \        if el > max_el:\n            max_el = el\n    return max_el\n\n\ndef\
    \ check(candidate):\n    assert candidate([1, 2, 3]) == 3\n    assert candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for i in\
    \ range(len(l)):\n        if l[i] > max_elem:\n            max_elem = l[i]\n \
    \   return max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3])\
    \ == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\
    \ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for i in\
    \ range(len(l)):\n        if l[i] > max_elem:\n            max_elem = l[i]\n \
    \   return max_elem\n\ndef check(candidate):\n    assert candidate([1, 2, 3])\
    \ == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\
    \ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 1:\n        return\
    \ l[0]\n    else:\n        return max(l[0], max_element(l[1:]))\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 1:\n        return\
    \ l[0]\n    else:\n        return max(l[0], max_element(l[1:]))\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 1:\n        return\
    \ l[0]\n    else:\n        return max(l[0], max_element(l[1:]))\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 1:\n        return\
    \ l[0]\n    else:\n        return max(l[0], max_element(l[1:]))\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for i in\
    \ range(1, len(l)):\n        if l[i] > max_elem:\n            max_elem = l[i]\n\
    \    return max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3])\
    \ == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\
    \ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_el = l[0]\n    for el in l:\n\
    \        if el > max_el:\n            max_el = el\n    return max_el\n\n\ndef\
    \ check(candidate):\n    assert candidate([1, 2, 3]) == 3\n    assert candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_el = l[0]\n    for i in l:\n\
    \        if i > max_el:\n            max_el = i\n    return max_el\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for i in\
    \ range(1, len(l)):\n        if l[i] > max_elem:\n            max_elem = l[i]\n\
    \    return max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3])\
    \ == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\
    \ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for i in\
    \ range(1, len(l)):\n        if l[i] > max_elem:\n            max_elem = l[i]\n\
    \    return max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3])\
    \ == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\
    \ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_el = l[0]\n    for i in l:\n\
    \        if i > max_el:\n            max_el = i\n    return max_el\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 1:\n        return\
    \ l[0]\n    else:\n        return max(l[0], max_element(l[1:]))\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return reduce(lambda x, y: x if\
    \ x > y else y, l)\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) ==\
    \ 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\n\
    def test_check():\n    check(max_element)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmz8spkmg.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpmz8spkmg.py\", line 15,\
    \ in test_check\n    check(max_element)\n  File \"/tmp/tmpmz8spkmg.py\", line\
    \ 11, in check\n    assert candidate([1, 2, 3]) == 3\n  File \"/tmp/tmpmz8spkmg.py\"\
    , line 8, in max_element\n    return reduce(lambda x, y: x if x > y else y, l)\n\
    NameError: name 'reduce' is not defined\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return reduce(lambda x, y: x if\
    \ x > y else y, l)\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) ==\
    \ 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\n\
    def test_check():\n    check(max_element)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmz8spkmg.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpmz8spkmg.py\", line 15,\
    \ in test_check\n    check(max_element)\n  File \"/tmp/tmpmz8spkmg.py\", line\
    \ 11, in check\n    assert candidate([1, 2, 3]) == 3\n  File \"/tmp/tmpmz8spkmg.py\"\
    , line 8, in max_element\n    return reduce(lambda x, y: x if x > y else y, l)\n\
    NameError: name 'reduce' is not defined\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = l[0]\n    for i\
    \ in l:\n        if i > max_element:\n            max_element = i\n    return\
    \ max_element\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 1:\n        return\
    \ l[0]\n    else:\n        return max(l[0], max_element(l[1:]))\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_el = l[0]\n    for i in l:\n\
    \        if i > max_el:\n            max_el = i\n    return max_el\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_el = l[0]\n    for i in l:\n\
    \        if i > max_el:\n            max_el = i\n    return max_el\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_el = l[0]\n    for i in l:\n\
    \        if i > max_el:\n            max_el = i\n    return max_el\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = l[0]\n    for i\
    \ in l:\n        if i > max_element:\n            max_element = i\n    return\
    \ max_element\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 1:\n        return\
    \ l[0]\n    else:\n        return max(l[0], max_element(l[1:]))\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for i in\
    \ range(1, len(l)):\n        if l[i] > max_elem:\n            max_elem = l[i]\n\
    \    return max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3])\
    \ == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\
    \ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_el = l[0]\n    for el in l:\n\
    \        if el > max_el:\n            max_el = el\n    return max_el\n\n\ndef\
    \ check(candidate):\n    assert candidate([1, 2, 3]) == 3\n    assert candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 1:\n        return\
    \ l[0]\n    else:\n        return max(l[0], max_element(l[1:]))\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = l[0]\n    for i\
    \ in l:\n        if i > max_element:\n            max_element = i\n    return\
    \ max_element\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n  \
    \  assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 1:\n        return\
    \ l[0]\n    else:\n        return max(l[0], max_element(l[1:]))\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for i in\
    \ range(1, len(l)):\n        if l[i] > max_elem:\n            max_elem = l[i]\n\
    \    return max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3])\
    \ == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\
    \ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n  \
    \  assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = l[0]\n    for i\
    \ in l:\n        if i > max_element:\n            max_element = i\n    return\
    \ max_element\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n  \
    \  assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for i in\
    \ range(1, len(l)):\n        if l[i] > max_elem:\n            max_elem = l[i]\n\
    \    return max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3])\
    \ == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\
    \ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for i in\
    \ range(1, len(l)):\n        if l[i] > max_elem:\n            max_elem = l[i]\n\
    \    return max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3])\
    \ == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\
    \ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for i in\
    \ range(1, len(l)):\n        if l[i] > max_elem:\n            max_elem = l[i]\n\
    \    return max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3])\
    \ == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\
    \ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for i in\
    \ range(1, len(l)):\n        if l[i] > max_elem:\n            max_elem = l[i]\n\
    \    return max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3])\
    \ == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\
    \ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for i in\
    \ range(1, len(l)):\n        if l[i] > max_elem:\n            max_elem = l[i]\n\
    \    return max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3])\
    \ == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\
    \ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_el = l[0]\n    for i in l:\n\
    \        if i > max_el:\n            max_el = i\n    return max_el\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_el = l[0]\n    for i in l:\n\
    \        if i > max_el:\n            max_el = i\n    return max_el\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_el = l[0]\n    for i in l:\n\
    \        if i > max_el:\n            max_el = i\n    return max_el\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 1:\n        return\
    \ l[0]\n    else:\n        return max(l[0], max_element(l[1:]))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for i in\
    \ range(1, len(l)):\n        if l[i] > max_elem:\n            max_elem = l[i]\n\
    \    return max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3])\
    \ == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\
    \ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n  \
    \  assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for i in\
    \ range(1, len(l)):\n        if l[i] > max_elem:\n            max_elem = l[i]\n\
    \    return max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3])\
    \ == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\
    \ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_el = l[0]\n    for el in l:\n\
    \        if el > max_el:\n            max_el = el\n    return max_el\n\n\ndef\
    \ check(candidate):\n    assert candidate([1, 2, 3]) == 3\n    assert candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for i in\
    \ range(1, len(l)):\n        if l[i] > max_elem:\n            max_elem = l[i]\n\
    \    return max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3])\
    \ == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\
    \ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for i in\
    \ range(1, len(l)):\n        if l[i] > max_elem:\n            max_elem = l[i]\n\
    \    return max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3])\
    \ == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\
    \ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_el = l[0]\n    for i in l:\n\
    \        if i > max_el:\n            max_el = i\n    return max_el\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = l[0]\n    for i\
    \ in l:\n        if i > max_element:\n            max_element = i\n    return\
    \ max_element\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n  \
    \  assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for i in\
    \ range(1, len(l)):\n        if l[i] > max_elem:\n            max_elem = l[i]\n\
    \    return max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3])\
    \ == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\
    \ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for i in\
    \ range(1, len(l)):\n        if l[i] > max_elem:\n            max_elem = l[i]\n\
    \    return max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3])\
    \ == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\
    \ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n  \
    \  assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 1:\n        return\
    \ l[0]\n    else:\n        return max(l[0], max_element(l[1:]))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_el = l[0]\n    for i in l:\n\
    \        if i > max_el:\n            max_el = i\n    return max_el\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 1:\n        return\
    \ l[0]\n    else:\n        return max(l[0], max_element(l[1:]))\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 1:\n        return\
    \ l[0]\n    else:\n        return max(l[0], max_element(l[1:]))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 1:\n        return\
    \ l[0]\n    else:\n        return max(l[0], max_element(l[1:]))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_el = l[0]\n    for i in l:\n\
    \        if i > max_el:\n            max_el = i\n    return max_el\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_el = l[0]\n    for el in l:\n\
    \        if el > max_el:\n            max_el = el\n    return max_el\n\n\ndef\
    \ check(candidate):\n    assert candidate([1, 2, 3]) == 3\n    assert candidate([5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for i in\
    \ range(1, len(l)):\n        if l[i] > max_elem:\n            max_elem = l[i]\n\
    \    return max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3])\
    \ == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\
    \ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_el = l[0]\n    for i in l:\n\
    \        if i > max_el:\n            max_el = i\n    return max_el\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for i in\
    \ range(1, len(l)):\n        if l[i] > max_elem:\n            max_elem = l[i]\n\
    \    return max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3])\
    \ == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\
    \ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for i in\
    \ range(1, len(l)):\n        if l[i] > max_elem:\n            max_elem = l[i]\n\
    \    return max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3])\
    \ == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\
    \ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for i in\
    \ range(1, len(l)):\n        if l[i] > max_elem:\n            max_elem = l[i]\n\
    \    return max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3])\
    \ == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\
    \ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for i in\
    \ range(1, len(l)):\n        if l[i] > max_elem:\n            max_elem = l[i]\n\
    \    return max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3])\
    \ == 3\n    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\
    \ndef test_check():\n    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 1:\n        return\
    \ l[0]\n    else:\n        return max(l[0], max_element(l[1:]))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = l[0]\n    for i\
    \ in l:\n        if i > max_element:\n            max_element = i\n    return\
    \ max_element\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_el = l[0]\n    for i in l:\n\
    \        if i > max_el:\n            max_el = i\n    return max_el\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 1:\n        return\
    \ l[0]\n    else:\n        return max(l[0], max_element(l[1:]))\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_el = l[0]\n    for i in l:\n\
    \        if i > max_el:\n            max_el = i\n    return max_el\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 1:\n        return\
    \ l[0]\n    else:\n        m = max_element(l[1:])\n        return m if m > l[0]\
    \ else l[0]\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n \
    \   assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = l[0]\n    for elem\
    \ in l:\n        if elem > max_elem:\n            max_elem = elem\n    return\
    \ max_elem\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3]) == 3\n\
    \    assert candidate([5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n\
    \    check(max_element)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_el = l[0]\n    for i in l:\n\
    \        if i > max_el:\n            max_el = i\n    return max_el\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_el = l[0]\n    for i in l:\n\
    \        if i > max_el:\n            max_el = i\n    return max_el\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def max_element(l):\n    \"\"\"Return maximum element in the list.\n \
    \   >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3,\
    \ 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3]) == 3\n    assert candidate([5, 3, -5, 2, -3,\
    \ 3, 9, 0, 124, 1, -10]) == 124\n\ndef test_check():\n    check(max_element)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067

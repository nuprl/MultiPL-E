language: notypes.py
name: HumanEval_71_triangle_area
results:
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    pass\n\ndef\
    \ check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvvig_5m8.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpvvig_5m8.py\", line 28,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpvvig_5m8.py\", line\
    \ 17, in check\n    assert candidate(3, 4, 5) == 6.0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        area = (p\
    \ * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    # YOUR CODE\
    \ HERE\n    if a + b > c and a + c > b and b + c > a:\n        p = (a + b + c)\
    \ / 2\n        area = (p * (p - a) * (p - b) * (p - c)) ** 0.5\n        return\
    \ round(area, 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n  \
    \  assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n  \
    \  assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    # YOUR CODE\
    \ HERE\n    if a + b > c and a + c > b and b + c > a:\n        p = (a + b + c)\
    \ / 2\n        area = (p * (p - a) * (p - b) * (p - c)) ** 0.5\n        return\
    \ round(area, 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n  \
    \  assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n  \
    \  assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        area = (p\
    \ * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        return round(0.5 * (a + b + c), 2)\n \
    \   else:\n        return -1\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi370r686.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpi370r686.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpi370r686.py\", line\
    \ 22, in check\n    assert candidate(4, 8, 5) == 8.18\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        area = (p\
    \ * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        return round(math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c)), 2)\n    else:\n        return -1\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5s_qilrf.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp5s_qilrf.py\", line 32,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp5s_qilrf.py\", line\
    \ 21, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmp5s_qilrf.py\"\
    , line 16, in triangle_area\n    return round(math.sqrt(s * (s - a) * (s - b)\
    \ * (s - c)), 2)\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return round(math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplwugw3bj.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmplwugw3bj.py\", line 33,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmplwugw3bj.py\", line\
    \ 22, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmplwugw3bj.py\"\
    , line 16, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        area = (p\
    \ * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return round(math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzxd7zkqw.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpzxd7zkqw.py\", line 32,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpzxd7zkqw.py\", line\
    \ 21, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpzxd7zkqw.py\"\
    , line 16, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    # TODO: Write\
    \ your code here\n    pass\n\ndef check(candidate):\n    assert candidate(3, 4,\
    \ 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8,\
    \ 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2,\
    \ 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6,\
    \ 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2,\
    \ 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpespe8tlq.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpespe8tlq.py\", line 29,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpespe8tlq.py\", line\
    \ 18, in check\n    assert candidate(3, 4, 5) == 6.0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if (a + b >\
    \ c) and (a + c > b) and (b + c > a):\n        s = (a + b + c) / 2\n        area\
    \ = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n\
    \    else:\n        return -1\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return round(math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplwugw3bj.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmplwugw3bj.py\", line 33,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmplwugw3bj.py\", line\
    \ 22, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmplwugw3bj.py\"\
    , line 16, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        area = (p\
    \ * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    # TODO: implement\
    \ this function\n    pass\n\ndef check(candidate):\n    assert candidate(3, 4,\
    \ 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8,\
    \ 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2,\
    \ 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6,\
    \ 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2,\
    \ 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbk_mb_41.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpbk_mb_41.py\", line 29,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpbk_mb_41.py\", line\
    \ 18, in check\n    assert candidate(3, 4, 5) == 6.0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    pass\n\ndef\
    \ check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvvig_5m8.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpvvig_5m8.py\", line 28,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpvvig_5m8.py\", line\
    \ 17, in check\n    assert candidate(3, 4, 5) == 6.0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    pass\n\ndef\
    \ check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvvig_5m8.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpvvig_5m8.py\", line 28,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpvvig_5m8.py\", line\
    \ 17, in check\n    assert candidate(3, 4, 5) == 6.0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        area = (p\
    \ * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return round(math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzxd7zkqw.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpzxd7zkqw.py\", line 32,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpzxd7zkqw.py\", line\
    \ 21, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpzxd7zkqw.py\"\
    , line 16, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        area = (p\
    \ * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return round(math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplwugw3bj.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmplwugw3bj.py\", line 33,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmplwugw3bj.py\", line\
    \ 22, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmplwugw3bj.py\"\
    , line 16, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    pass\n\ndef\
    \ check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvvig_5m8.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpvvig_5m8.py\", line 28,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpvvig_5m8.py\", line\
    \ 17, in check\n    assert candidate(3, 4, 5) == 6.0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return round(math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplwugw3bj.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmplwugw3bj.py\", line 33,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmplwugw3bj.py\", line\
    \ 22, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmplwugw3bj.py\"\
    , line 16, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return round(math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzxd7zkqw.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpzxd7zkqw.py\", line 32,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpzxd7zkqw.py\", line\
    \ 21, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpzxd7zkqw.py\"\
    , line 16, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        area = (p\
    \ * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return round(math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzxd7zkqw.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpzxd7zkqw.py\", line 32,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpzxd7zkqw.py\", line\
    \ 21, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpzxd7zkqw.py\"\
    , line 16, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        area = (p\
    \ * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    # YOUR CODE\
    \ HERE\n    if a + b > c and a + c > b and b + c > a:\n        s = (a + b + c)\
    \ / 2\n        area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n        return\
    \ round(area, 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n  \
    \  assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n  \
    \  assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        area = (p\
    \ * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        area = (p\
    \ * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    pass\n\n\ndef\
    \ check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9x6b4fj7.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp9x6b4fj7.py\", line 29,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp9x6b4fj7.py\", line\
    \ 18, in check\n    assert candidate(3, 4, 5) == 6.0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        area = (p\
    \ * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return round(math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplwugw3bj.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmplwugw3bj.py\", line 33,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmplwugw3bj.py\", line\
    \ 22, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmplwugw3bj.py\"\
    , line 16, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    # YOUR CODE\
    \ HERE\n    if a+b>c and a+c>b and b+c>a:\n        return round(math.sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4,2)\n\
    \    else:\n        return -1\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpze5536nz.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpze5536nz.py\", line 32,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpze5536nz.py\", line\
    \ 21, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpze5536nz.py\"\
    , line 16, in triangle_area\n    return round(math.sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4,2)\n\
    NameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return round(math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplwugw3bj.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmplwugw3bj.py\", line 33,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmplwugw3bj.py\", line\
    \ 22, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmplwugw3bj.py\"\
    , line 16, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return round(sqrt(p\
    \ * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1rg8yrlh.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmp1rg8yrlh.py\", line 33,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp1rg8yrlh.py\", line\
    \ 22, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmp1rg8yrlh.py\"\
    , line 16, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        area = (p\
    \ * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        area = (p\
    \ * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return round(math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzxd7zkqw.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpzxd7zkqw.py\", line 32,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpzxd7zkqw.py\", line\
    \ 21, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpzxd7zkqw.py\"\
    , line 16, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return round(math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzxd7zkqw.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpzxd7zkqw.py\", line 32,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpzxd7zkqw.py\", line\
    \ 21, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpzxd7zkqw.py\"\
    , line 16, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        area = (p\
    \ * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        area = (p\
    \ * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    pass\n\n\ndef\
    \ check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9x6b4fj7.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp9x6b4fj7.py\", line 29,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp9x6b4fj7.py\", line\
    \ 18, in check\n    assert candidate(3, 4, 5) == 6.0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return round(math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzxd7zkqw.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpzxd7zkqw.py\", line 32,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpzxd7zkqw.py\", line\
    \ 21, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpzxd7zkqw.py\"\
    , line 16, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        area = (p\
    \ * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        area = (p\
    \ * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        area = (p\
    \ * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return round(math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzxd7zkqw.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpzxd7zkqw.py\", line 32,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpzxd7zkqw.py\", line\
    \ 21, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpzxd7zkqw.py\"\
    , line 16, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return round(sqrt(p\
    \ * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1rg8yrlh.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmp1rg8yrlh.py\", line 33,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp1rg8yrlh.py\", line\
    \ 22, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmp1rg8yrlh.py\"\
    , line 16, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    pass\n\n\ndef\
    \ check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9x6b4fj7.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp9x6b4fj7.py\", line 29,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp9x6b4fj7.py\", line\
    \ 18, in check\n    assert candidate(3, 4, 5) == 6.0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return round(math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplwugw3bj.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmplwugw3bj.py\", line 33,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmplwugw3bj.py\", line\
    \ 22, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmplwugw3bj.py\"\
    , line 16, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    pass\n\ndef\
    \ check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvvig_5m8.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpvvig_5m8.py\", line 28,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpvvig_5m8.py\", line\
    \ 17, in check\n    assert candidate(3, 4, 5) == 6.0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        return round(0.5 * (a + b + c), 2)\n \
    \   else:\n        return -1\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpufbf_4bi.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpufbf_4bi.py\", line 32,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpufbf_4bi.py\", line\
    \ 23, in check\n    assert candidate(4, 8, 5) == 8.18\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        area = (p\
    \ * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return round(math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzxd7zkqw.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpzxd7zkqw.py\", line 32,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpzxd7zkqw.py\", line\
    \ 21, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpzxd7zkqw.py\"\
    , line 16, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        area = (p\
    \ * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    pass\n\ndef\
    \ check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvvig_5m8.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpvvig_5m8.py\", line 28,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpvvig_5m8.py\", line\
    \ 17, in check\n    assert candidate(3, 4, 5) == 6.0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return (p\
    \ * (p - a) * (p - b) * (p - c)) ** 0.5\n    else:\n        return -1\n\n\ndef\
    \ check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqzi5xm0l.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpqzi5xm0l.py\", line 33,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpqzi5xm0l.py\", line\
    \ 24, in check\n    assert candidate(4, 8, 5) == 8.18\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    # YOUR CODE\
    \ HERE\n    if a + b > c and a + c > b and b + c > a:\n        p = (a + b + c)\
    \ / 2\n        area = (p * (p - a) * (p - b) * (p - c)) ** 0.5\n        return\
    \ round(area, 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n  \
    \  assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n  \
    \  assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        return round(math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c)), 2)\n    else:\n        return -1\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5s_qilrf.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp5s_qilrf.py\", line 32,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp5s_qilrf.py\", line\
    \ 21, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmp5s_qilrf.py\"\
    , line 16, in triangle_area\n    return round(math.sqrt(s * (s - a) * (s - b)\
    \ * (s - c)), 2)\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        area = (p\
    \ * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return round(math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplwugw3bj.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmplwugw3bj.py\", line 33,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmplwugw3bj.py\", line\
    \ 22, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmplwugw3bj.py\"\
    , line 16, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        area = (p\
    \ * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return round(math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplwugw3bj.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmplwugw3bj.py\", line 33,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmplwugw3bj.py\", line\
    \ 22, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmplwugw3bj.py\"\
    , line 16, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        return round(0.5 * (a + b + c), 2)\n \
    \   else:\n        return -1\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi370r686.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpi370r686.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpi370r686.py\", line\
    \ 22, in check\n    assert candidate(4, 8, 5) == 8.18\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        area = (p\
    \ * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return round(math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplwugw3bj.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmplwugw3bj.py\", line 33,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmplwugw3bj.py\", line\
    \ 22, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmplwugw3bj.py\"\
    , line 16, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return round(math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplwugw3bj.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmplwugw3bj.py\", line 33,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmplwugw3bj.py\", line\
    \ 22, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmplwugw3bj.py\"\
    , line 16, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        area = (p\
    \ * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        area = (p\
    \ * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        return round(math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c)), 2)\n    else:\n        return -1\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5s_qilrf.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp5s_qilrf.py\", line 32,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp5s_qilrf.py\", line\
    \ 21, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmp5s_qilrf.py\"\
    , line 16, in triangle_area\n    return round(math.sqrt(s * (s - a) * (s - b)\
    \ * (s - c)), 2)\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        area = (p\
    \ * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    # YOUR CODE\
    \ HERE\n    if a + b > c and a + c > b and b + c > a:\n        s = (a + b + c)\
    \ / 2\n        area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n        return\
    \ round(area, 2)\n    else:\n        return -1\n\ndef check(candidate):\n    assert\
    \ candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert\
    \ candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert\
    \ candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert\
    \ candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert\
    \ candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    # YOUR CODE\
    \ HERE\n    if a + b > c and a + c > b and b + c > a:\n        s = (a + b + c)\
    \ / 2\n        area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n        return\
    \ round(area, 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n  \
    \  assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n  \
    \  assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        return round(math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c)), 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplbsa6gdl.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmplbsa6gdl.py\", line 33,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmplbsa6gdl.py\", line\
    \ 22, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmplbsa6gdl.py\"\
    , line 16, in triangle_area\n    return round(math.sqrt(s * (s - a) * (s - b)\
    \ * (s - c)), 2)\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return round(sqrt(p\
    \ * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1rg8yrlh.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmp1rg8yrlh.py\", line 33,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp1rg8yrlh.py\", line\
    \ 22, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmp1rg8yrlh.py\"\
    , line 16, in triangle_area\n    return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\nNameError: name 'sqrt' is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        area = (p\
    \ * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        area = (p\
    \ * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    pass\n\ndef\
    \ check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvvig_5m8.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpvvig_5m8.py\", line 28,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpvvig_5m8.py\", line\
    \ 17, in check\n    assert candidate(3, 4, 5) == 6.0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return round(math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplwugw3bj.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmplwugw3bj.py\", line 33,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmplwugw3bj.py\", line\
    \ 22, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmplwugw3bj.py\"\
    , line 16, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return round(math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplwugw3bj.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmplwugw3bj.py\", line 33,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmplwugw3bj.py\", line\
    \ 22, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmplwugw3bj.py\"\
    , line 16, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        area = (p\
    \ * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    # YOUR CODE\
    \ HERE\n    if a + b > c and a + c > b and b + c > a:\n        s = (a + b + c)\
    \ / 2\n        area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n        return\
    \ round(area, 2)\n    else:\n        return -1\n\ndef check(candidate):\n    assert\
    \ candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert\
    \ candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert\
    \ candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert\
    \ candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert\
    \ candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        area = (p\
    \ * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    pass\n\n\ndef\
    \ check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9x6b4fj7.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp9x6b4fj7.py\", line 29,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp9x6b4fj7.py\", line\
    \ 18, in check\n    assert candidate(3, 4, 5) == 6.0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    # YOUR CODE\
    \ HERE\n    pass\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcqbbfybx.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpcqbbfybx.py\", line 30,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpcqbbfybx.py\", line\
    \ 19, in check\n    assert candidate(3, 4, 5) == 6.0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    # YOUR CODE\
    \ HERE\n    if a + b > c and a + c > b and b + c > a:\n        p = (a + b + c)\
    \ / 2\n        area = (p * (p - a) * (p - b) * (p - c)) ** 0.5\n        return\
    \ round(area, 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n  \
    \  assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n  \
    \  assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        area = (p\
    \ * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    # YOUR CODE\
    \ HERE\n    if a + b > c and a + c > b and b + c > a:\n        s = (a + b + c)\
    \ / 2\n        area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n        return\
    \ round(area, 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n  \
    \  assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n  \
    \  assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    pass\n\ndef\
    \ check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvvig_5m8.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpvvig_5m8.py\", line 28,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpvvig_5m8.py\", line\
    \ 17, in check\n    assert candidate(3, 4, 5) == 6.0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    pass\n\ndef\
    \ check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvvig_5m8.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpvvig_5m8.py\", line 28,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpvvig_5m8.py\", line\
    \ 17, in check\n    assert candidate(3, 4, 5) == 6.0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        area = (p\
    \ * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return round(math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplwugw3bj.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmplwugw3bj.py\", line 33,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmplwugw3bj.py\", line\
    \ 22, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmplwugw3bj.py\"\
    , line 16, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    pass\n\n\ndef\
    \ check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9x6b4fj7.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp9x6b4fj7.py\", line 29,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp9x6b4fj7.py\", line\
    \ 18, in check\n    assert candidate(3, 4, 5) == 6.0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if (a + b >\
    \ c) and (a + c > b) and (b + c > a):\n        s = (a + b + c) / 2\n        area\
    \ = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n\
    \    else:\n        return -1\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return round(math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplwugw3bj.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmplwugw3bj.py\", line 33,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmplwugw3bj.py\", line\
    \ 22, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmplwugw3bj.py\"\
    , line 16, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if (a + b >\
    \ c) and (a + c > b) and (b + c > a):\n        s = (a + b + c) / 2\n        area\
    \ = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n\
    \    else:\n        return -1\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        return round(math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c)), 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplbsa6gdl.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmplbsa6gdl.py\", line 33,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmplbsa6gdl.py\", line\
    \ 22, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmplbsa6gdl.py\"\
    , line 16, in triangle_area\n    return round(math.sqrt(s * (s - a) * (s - b)\
    \ * (s - c)), 2)\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    # YOUR CODE\
    \ HERE\n    if a + b > c and a + c > b and b + c > a:\n        s = (a + b + c)\
    \ / 2\n        area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n        return\
    \ round(area, 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n  \
    \  assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n  \
    \  assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    # YOUR CODE\
    \ HERE\n    if a + b > c and a + c > b and b + c > a:\n        s = (a + b + c)\
    \ / 2\n        area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n        return\
    \ round(area, 2)\n    else:\n        return -1\n\ndef check(candidate):\n    assert\
    \ candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert\
    \ candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert\
    \ candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert\
    \ candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert\
    \ candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        area = (p\
    \ * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    # YOUR CODE\
    \ HERE\n    if a + b > c and a + c > b and b + c > a:\n        s = (a + b + c)\
    \ / 2\n        area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n        return\
    \ round(area, 2)\n    else:\n        return -1\n\ndef check(candidate):\n    assert\
    \ candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert\
    \ candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert\
    \ candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert\
    \ candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert\
    \ candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    # TODO: Write\
    \ your code here\n    pass\n\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqx6d9njt.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpqx6d9njt.py\", line 30,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpqx6d9njt.py\", line\
    \ 19, in check\n    assert candidate(3, 4, 5) == 6.0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return round(math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzxd7zkqw.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpzxd7zkqw.py\", line 32,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpzxd7zkqw.py\", line\
    \ 21, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpzxd7zkqw.py\"\
    , line 16, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    pass\n\ndef\
    \ check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvvig_5m8.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpvvig_5m8.py\", line 28,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpvvig_5m8.py\", line\
    \ 17, in check\n    assert candidate(3, 4, 5) == 6.0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if (a + b >\
    \ c) and (a + c > b) and (b + c > a):\n        s = (a + b + c) / 2\n        area\
    \ = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n\
    \    else:\n        return -1\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        return round(0.5 * (a + b + c), 2)\n \
    \   else:\n        return -1\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi370r686.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpi370r686.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpi370r686.py\", line\
    \ 22, in check\n    assert candidate(4, 8, 5) == 8.18\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if (a + b >\
    \ c) and (a + c > b) and (b + c > a):\n        s = (a + b + c) / 2\n        area\
    \ = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n\
    \    else:\n        return -1\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        area = (p\
    \ * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    pass\n\n\ndef\
    \ check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9x6b4fj7.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp9x6b4fj7.py\", line 29,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp9x6b4fj7.py\", line\
    \ 18, in check\n    assert candidate(3, 4, 5) == 6.0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    pass\n\ndef\
    \ check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvvig_5m8.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpvvig_5m8.py\", line 28,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpvvig_5m8.py\", line\
    \ 17, in check\n    assert candidate(3, 4, 5) == 6.0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    # YOUR CODE\
    \ HERE\n    pass\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcqbbfybx.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpcqbbfybx.py\", line 30,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpcqbbfybx.py\", line\
    \ 19, in check\n    assert candidate(3, 4, 5) == 6.0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    # YOUR CODE\
    \ HERE\n    if a + b > c and a + c > b and b + c > a:\n        s = (a + b + c)\
    \ / 2\n        area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n        return\
    \ round(area, 2)\n    else:\n        return -1\n\ndef check(candidate):\n    assert\
    \ candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert\
    \ candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert\
    \ candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert\
    \ candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert\
    \ candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        return round(math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c)), 2)\n    else:\n        return -1\n\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplbsa6gdl.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmplbsa6gdl.py\", line 33,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmplbsa6gdl.py\", line\
    \ 22, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmplbsa6gdl.py\"\
    , line 16, in triangle_area\n    return round(math.sqrt(s * (s - a) * (s - b)\
    \ * (s - c)), 2)\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        area = (p\
    \ * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        area = (p\
    \ * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    pass\n\n\ndef\
    \ check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9x6b4fj7.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp9x6b4fj7.py\", line 29,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmp9x6b4fj7.py\", line\
    \ 18, in check\n    assert candidate(3, 4, 5) == 6.0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    # YOUR CODE\
    \ HERE\n    if a + b > c and a + c > b and b + c > a:\n        p = (a + b + c)\
    \ / 2\n        area = (p * (p - a) * (p - b) * (p - c)) ** 0.5\n        return\
    \ round(area, 2)\n    else:\n        return -1\n\ndef check(candidate):\n    assert\
    \ candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert\
    \ candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert\
    \ candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert\
    \ candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert\
    \ candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return round(math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzxd7zkqw.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpzxd7zkqw.py\", line 32,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpzxd7zkqw.py\", line\
    \ 21, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpzxd7zkqw.py\"\
    , line 16, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        return round(0.5 * (a * b * math.sin(math.radians(c))),\
    \ 2)\n    else:\n        return -1\n\ndef check(candidate):\n    assert candidate(3,\
    \ 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4,\
    \ 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1,\
    \ 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2,\
    \ 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2,\
    \ 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfzltyewt.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpfzltyewt.py\", line 31,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpfzltyewt.py\", line\
    \ 20, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpfzltyewt.py\"\
    , line 15, in triangle_area\n    return round(0.5 * (a * b * math.sin(math.radians(c))),\
    \ 2)\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    pass\n\ndef\
    \ check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
    \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2,\
    \ 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10,\
    \ 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1,\
    \ 1, 1) == 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n \
    \   check(triangle_area)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvvig_5m8.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpvvig_5m8.py\", line 28,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpvvig_5m8.py\", line\
    \ 17, in check\n    assert candidate(3, 4, 5) == 6.0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        area = (s\
    \ * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) ==\
    \ 6.0\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) ==\
    \ 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) ==\
    \ -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) ==\
    \ -1\n    assert candidate(1, 1, 1) == 0.43\n    assert candidate(2, 2, 10) ==\
    \ -1\n\ndef test_check():\n    check(triangle_area)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def triangle_area(a, b, c):\n    \"\"\"\n    Given the lengths of the\
    \ three sides of a triangle. Return the area of\n    the triangle rounded to 2\
    \ decimal points if the three sides form a valid triangle. \n    Otherwise return\
    \ -1\n    Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n    than the third side.\n    Example:\n    >>> triangle_area(3, 4, 5)\n \
    \   6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n    if a + b > c\
    \ and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return round(math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\ndef check(candidate):\n\
    \    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1, 2, 10) == -1\n\
    \    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n\
    \    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n\
    \    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) == 0.43\n\
    \    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzxd7zkqw.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpzxd7zkqw.py\", line 32,\
    \ in test_check\n    check(triangle_area)\n  File \"/tmp/tmpzxd7zkqw.py\", line\
    \ 21, in check\n    assert candidate(3, 4, 5) == 6.0\n  File \"/tmp/tmpzxd7zkqw.py\"\
    , line 16, in triangle_area\n    return round(math.sqrt(p * (p - a) * (p - b)\
    \ * (p - c)), 2)\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1660271006

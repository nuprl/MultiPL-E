language: notypes.py
name: HumanEval_151_double_the_difference
results:
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2==1])\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxqajri33.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpxqajri33.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpxqajri33.py\"\
    , line 24, in check\n    assert candidate([-1.0, -2.0, 8.0]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2 != 0 and x > 0 and type(x) == int])\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcg_vhx1d.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpcg_vhx1d.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpcg_vhx1d.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum(x**2 for x in lst if x % 2 == 1 and x > 0 and isinstance(x, int))\n\ndef\
    \ check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdi97yr92.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpdi97yr92.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpdi97yr92.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum(x**2 for x in lst if x%2==1 and x>=0 and isinstance(x, int))\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpil9r6urk.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpil9r6urk.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpil9r6urk.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    pass\n\ndef check(candidate):\n    assert candidate([]) == 0\n\
    \    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3])\
    \ == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqs9aub5c.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpqs9aub5c.py\", line 30,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpqs9aub5c.py\"\
    , line 21, in check\n    assert candidate([]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    #raise NotImplementedError()\n    if len(lst) == 0:\n       \
    \ return 0\n    else:\n        sum = 0\n        for i in lst:\n            if\
    \ i % 2 == 1 and i > 0:\n                sum += i ** 2\n        return sum * 2\n\
    \ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph7kq5n99.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmph7kq5n99.py\", line 38,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmph7kq5n99.py\"\
    , line 30, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2==1])\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxqajri33.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpxqajri33.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpxqajri33.py\"\
    , line 24, in check\n    assert candidate([-1.0, -2.0, 8.0]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2==1 and x>=0 and type(x)==int])\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp73i6igkp.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp73i6igkp.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmp73i6igkp.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    if len(lst) == 0:\n        return 0\n    else:\n        return\
    \ sum([x**2 for x in lst if x%2 != 0])\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe3d_43p6.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpe3d_43p6.py\", line 33,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpe3d_43p6.py\"\
    , line 26, in check\n    assert candidate([0.1, 0.2, 0.3]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2!=0 and x>=0 and isinstance(x,int)])\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpksgwwx3d.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpksgwwx3d.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpksgwwx3d.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    if len(lst) == 0:\n        return 0\n    else:\n        return\
    \ sum([x**2 for x in lst if x % 2 == 1])\n\ndef check(candidate):\n    assert\
    \ candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1,\
    \ 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert\
    \ candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) ==\
    \ 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0,\
    \ 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp11vtduiv.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmp11vtduiv.py\", line 33,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmp11vtduiv.py\"\
    , line 28, in check\n    assert candidate([-1.0, -2.0, 8.0]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    # raise NotImplementedError()\n    if len(lst) == 0:\n      \
    \  return 0\n    else:\n        sum = 0\n        for i in lst:\n            if\
    \ i % 2 == 1 and i > 0:\n                sum += i ** 2\n        return sum * 2\n\
    \n\ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp65stx_fb.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp65stx_fb.py\", line 39,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmp65stx_fb.py\"\
    , line 31, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x % 2 == 1 and x >= 0 and type(x) == int])\n\ndef\
    \ check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnveje593.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpnveje593.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpnveje593.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum(x**2 for x in lst if x%2 == 1 and x > 0 and isinstance(x, int))\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0b77rv6u.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp0b77rv6u.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmp0b77rv6u.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2 != 0 and x > 0 and isinstance(x, int)])\n\ndef\
    \ check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnpu3ihdu.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpnpu3ihdu.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpnpu3ihdu.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    sum = 0\n    for i in lst:\n        if i%2 != 0 and i > 0:\n\
    \            sum += i**2\n    return sum\n    \n\ndef check(candidate):\n    assert\
    \ candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1,\
    \ 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert\
    \ candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) ==\
    \ 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0,\
    \ 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpq22k6h73.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpq22k6h73.py\", line 35,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpq22k6h73.py\"\
    , line 28, in check\n    assert candidate([0.1, 0.2, 0.3]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum(x*x for x in lst if x%2 == 1 and x >= 0 and isinstance(x, int))\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpp5ne1yq0.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpp5ne1yq0.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpp5ne1yq0.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # Write\
    \ your code here\n    return 0\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0pq3ttcj.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmp0pq3ttcj.py\", line 30,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmp0pq3ttcj.py\"\
    , line 22, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    sum = 0\n    for i in lst:\n        if i % 2 == 1:\n        \
    \    sum += i**2\n    return sum\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmmbjv4rp.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpmmbjv4rp.py\", line 34,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpmmbjv4rp.py\"\
    , line 29, in check\n    assert candidate([-1.0, -2.0, 8.0]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum(x**2 for x in lst if x % 2 == 1 and x > 0 and isinstance(x, int))\n\ndef\
    \ check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdi97yr92.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpdi97yr92.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpdi97yr92.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # TODO:\
    \ Fill in the body of this function\n    return 0\n\ndef check(candidate):\n \
    \   assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqey4w1lq.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpqey4w1lq.py\", line 30,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpqey4w1lq.py\"\
    , line 22, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    #raise NotImplementedError()\n    if len(lst) == 0:\n       \
    \ return 0\n    else:\n        return sum([x**2 for x in lst if x%2 != 0 and isinstance(x,\
    \ int)])\n\ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnoo_80vd.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpnoo_80vd.py\", line 34,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpnoo_80vd.py\"\
    , line 26, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum(x**2 for x in lst if x%2==1 and x>=0 and isinstance(x,int))\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpudjkem5y.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpudjkem5y.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpudjkem5y.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x % 2 == 1])\n\ndef check(candidate):\n    assert\
    \ candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1,\
    \ 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert\
    \ candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) ==\
    \ 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0,\
    \ 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsne89c2n.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpsne89c2n.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpsne89c2n.py\"\
    , line 24, in check\n    assert candidate([-1.0, -2.0, 8.0]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum(x**2 for x in lst if x%2 == 1 and x > 0 and isinstance(x, int))\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0b77rv6u.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp0b77rv6u.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmp0b77rv6u.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    #raise NotImplementedError()\n    if len(lst) == 0:\n       \
    \ return 0\n    else:\n        return sum([x**2 for x in lst if x%2 != 0 and x\
    \ > 0 and type(x) == int])\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpekdsen9w.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpekdsen9w.py\", line 34,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpekdsen9w.py\"\
    , line 26, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([(x**2) for x in lst if x % 2 == 1])\n\ndef check(candidate):\n    assert\
    \ candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1,\
    \ 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert\
    \ candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) ==\
    \ 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0,\
    \ 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpn5he747d.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpn5he747d.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpn5he747d.py\"\
    , line 24, in check\n    assert candidate([-1.0, -2.0, 8.0]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum(x**2 for x in lst if x%2==1)\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy89cy4yx.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpy89cy4yx.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpy89cy4yx.py\"\
    , line 24, in check\n    assert candidate([-1.0, -2.0, 8.0]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    #raise NotImplementedError()\n    if lst == []:\n        return\
    \ 0\n    else:\n        return sum([i**2 for i in lst if i%2 != 0 and i > 0])\n\
    \ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpicfz7mpx.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpicfz7mpx.py\", line 34,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpicfz7mpx.py\"\
    , line 27, in check\n    assert candidate([0.1, 0.2, 0.3]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2==1])\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxqajri33.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpxqajri33.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpxqajri33.py\"\
    , line 24, in check\n    assert candidate([-1.0, -2.0, 8.0]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    raise NotImplementedError()\n\n\ndef check(candidate):\n    assert\
    \ candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1,\
    \ 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert\
    \ candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) ==\
    \ 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0,\
    \ 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4x3u2bzf.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp4x3u2bzf.py\", line 31,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmp4x3u2bzf.py\"\
    , line 22, in check\n    assert candidate([]) == 0\n  File \"/tmp/tmp4x3u2bzf.py\"\
    , line 18, in double_the_difference\n    raise NotImplementedError()\nNotImplementedError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum(x**2 for x in lst if x%2 == 1 and x > 0 and isinstance(x, int))\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0b77rv6u.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp0b77rv6u.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmp0b77rv6u.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ 0\n\ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvc0wuo70.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpvc0wuo70.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpvc0wuo70.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    #raise NotImplementedError()\n    sum = 0\n    for i in lst:\n\
    \        if i > 0 and i % 2 != 0:\n            sum += i**2\n    return sum\n\n\
    def check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcj_4vqtz.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpcj_4vqtz.py\", line 35,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpcj_4vqtz.py\"\
    , line 28, in check\n    assert candidate([0.1, 0.2, 0.3]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x % 2 == 1 and x >= 0 and isinstance(x, int)])\n\n\
    def check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9a242w5e.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp9a242w5e.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmp9a242w5e.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    return 0\n\ndef check(candidate):\n    assert candidate([]) ==\
    \ 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3])\
    \ == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpj8ta9rw7.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpj8ta9rw7.py\", line 30,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpj8ta9rw7.py\"\
    , line 22, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ 0\n\ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvc0wuo70.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpvc0wuo70.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpvc0wuo70.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    pass\n\ndef check(candidate):\n    assert candidate([]) == 0\n\
    \    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3])\
    \ == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqs9aub5c.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpqs9aub5c.py\", line 30,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpqs9aub5c.py\"\
    , line 21, in check\n    assert candidate([]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    pass\n\ndef check(candidate):\n    assert candidate([]) == 0\n\
    \    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3])\
    \ == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqs9aub5c.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpqs9aub5c.py\", line 30,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpqs9aub5c.py\"\
    , line 21, in check\n    assert candidate([]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ 0\n\ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvc0wuo70.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpvc0wuo70.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpvc0wuo70.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    sum = 0\n    for num in lst:\n        if num % 2 == 1 and num\
    \ > 0:\n            sum += num ** 2\n    return sum\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    # raise NotImplementedError()\n    if len(lst) == 0:\n      \
    \  return 0\n    else:\n        return sum([x**2 for x in lst if x%2 != 0 and\
    \ type(x) == int])\n\ndef check(candidate):\n    assert candidate([]) == 0\n \
    \   assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3])\
    \ == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxn1o0mkn.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpxn1o0mkn.py\", line 34,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpxn1o0mkn.py\"\
    , line 26, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum(x**2 for x in lst if x%2 == 1 and x >= 0 and isinstance(x, int))\n\ndef\
    \ check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjtvcc3sl.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpjtvcc3sl.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpjtvcc3sl.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    pass\n\ndef check(candidate):\n    assert candidate([]) == 0\n\
    \    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3])\
    \ == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqs9aub5c.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpqs9aub5c.py\", line 30,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpqs9aub5c.py\"\
    , line 21, in check\n    assert candidate([]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x % 2 == 1])\n\ndef check(candidate):\n    assert\
    \ candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1,\
    \ 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert\
    \ candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) ==\
    \ 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0,\
    \ 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsne89c2n.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpsne89c2n.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpsne89c2n.py\"\
    , line 24, in check\n    assert candidate([-1.0, -2.0, 8.0]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    #raise NotImplementedError()\n    if len(lst) == 0:\n       \
    \ return 0\n    else:\n        sum = 0\n        for i in lst:\n            if\
    \ i > 0 and i % 2 == 1:\n                sum += i * i\n        return sum * 2\n\
    \ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuxrrpjmp.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpuxrrpjmp.py\", line 38,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpuxrrpjmp.py\"\
    , line 30, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum(x*x for x in lst if x%2 == 1 and x > 0 and type(x) == int)\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprpht980n.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmprpht980n.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmprpht980n.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2 == 1 and x >= 0 and isinstance(x, int)])\n\n\n\
    def check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzi8_ufz5.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpzi8_ufz5.py\", line 30,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpzi8_ufz5.py\"\
    , line 22, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum(x**2 for x in lst if x%2==1 and x>=0 and isinstance(x,int))\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpudjkem5y.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpudjkem5y.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpudjkem5y.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    if len(lst) == 0:\n        return 0\n    else:\n        return\
    \ sum([x**2 for x in lst if x%2 != 0])\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe3d_43p6.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpe3d_43p6.py\", line 33,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpe3d_43p6.py\"\
    , line 26, in check\n    assert candidate([0.1, 0.2, 0.3]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    #raise NotImplementedError()\n    if len(lst) == 0:\n       \
    \ return 0\n    else:\n        sum = 0\n        for i in lst:\n            if\
    \ i > 0 and i % 2 == 1:\n                sum += i * i\n        return sum * 2\n\
    \ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuxrrpjmp.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpuxrrpjmp.py\", line 38,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpuxrrpjmp.py\"\
    , line 30, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # Write\
    \ your code here\n    # Hint: Use a for loop and an if statement\n    # Hint:\
    \ Use the is_odd function\n    # Hint: Use the square function\n    # Hint: Use\
    \ the sum function\n    pass\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpomatkyhv.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpomatkyhv.py\", line 34,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpomatkyhv.py\"\
    , line 25, in check\n    assert candidate([]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2 == 1 and x >= 0 and type(x) == int])\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3iv1nkj8.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp3iv1nkj8.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmp3iv1nkj8.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    pass\n\ndef check(candidate):\n    assert candidate([]) == 0\n\
    \    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3])\
    \ == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqs9aub5c.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpqs9aub5c.py\", line 30,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpqs9aub5c.py\"\
    , line 21, in check\n    assert candidate([]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    if len(lst) == 0:\n        return 0\n    else:\n        return\
    \ sum([(i ** 2) for i in lst if i % 2 == 1])\n\ndef check(candidate):\n    assert\
    \ candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1,\
    \ 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert\
    \ candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) ==\
    \ 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0,\
    \ 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprez0ihvs.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmprez0ihvs.py\", line 33,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmprez0ihvs.py\"\
    , line 28, in check\n    assert candidate([-1.0, -2.0, 8.0]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum(x**2 for x in lst if x%2==1 and x>=0 and x%1==0)\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum(x**2 for x in lst if x%2==1 and x>=0 and isinstance(x,int))\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpudjkem5y.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpudjkem5y.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpudjkem5y.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2 == 1 and x > 0 and isinstance(x, int)])\n    \n\
    \ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpa66loar5.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpa66loar5.py\", line 30,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpa66loar5.py\"\
    , line 22, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    # raise NotImplementedError()\n    if len(lst) == 0:\n      \
    \  return 0\n    else:\n        sum = 0\n        for i in lst:\n            if\
    \ i % 2 == 1 and i > 0:\n                sum += i ** 2\n        return sum * 2\n\
    \ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpruil3mg8.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpruil3mg8.py\", line 38,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpruil3mg8.py\"\
    , line 30, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2==1])\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxqajri33.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpxqajri33.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpxqajri33.py\"\
    , line 24, in check\n    assert candidate([-1.0, -2.0, 8.0]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum(x**2 for x in lst if x % 2 == 1 and x > 0 and isinstance(x, int))\n\ndef\
    \ check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdi97yr92.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpdi97yr92.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpdi97yr92.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2==1 and x>=0 and type(x)==int])\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp73i6igkp.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp73i6igkp.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmp73i6igkp.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum(x ** 2 for x in lst if x % 2 == 1 and x >= 0 and isinstance(x, int))\n\n\
    def check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuy01ota5.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpuy01ota5.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpuy01ota5.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # TODO:\
    \ Fill in the body of this function\n    return 0\n\ndef check(candidate):\n \
    \   assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqey4w1lq.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpqey4w1lq.py\", line 30,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpqey4w1lq.py\"\
    , line 22, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    sum =\
    \ 0\n    for i in lst:\n        if i % 2 == 1:\n            sum += i**2\n    return\
    \ sum\n\ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpa9be8btd.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpa9be8btd.py\", line 33,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpa9be8btd.py\"\
    , line 28, in check\n    assert candidate([-1.0, -2.0, 8.0]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    if len(lst) == 0:\n        return 0\n    else:\n        return\
    \ sum([x**2 for x in lst if x % 2 == 1])\n\ndef check(candidate):\n    assert\
    \ candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1,\
    \ 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert\
    \ candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) ==\
    \ 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0,\
    \ 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp11vtduiv.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmp11vtduiv.py\", line 33,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmp11vtduiv.py\"\
    , line 28, in check\n    assert candidate([-1.0, -2.0, 8.0]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    #raise NotImplementedError()\n    if len(lst) == 0:\n       \
    \ return 0\n    else:\n        lst = [x for x in lst if x > 0 and x % 2 == 1]\n\
    \        return sum(lst) ** 2\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyb6d7yu0.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpyb6d7yu0.py\", line 35,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpyb6d7yu0.py\"\
    , line 31, in check\n    assert candidate([0.2, 3.0, 5.0]) == 34\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2 == 1])\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplvp699kh.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmplvp699kh.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmplvp699kh.py\"\
    , line 24, in check\n    assert candidate([-1.0, -2.0, 8.0]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ 0\n\ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvc0wuo70.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpvc0wuo70.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpvc0wuo70.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    if len(lst) == 0:\n        return 0\n    else:\n        sum =\
    \ 0\n        for i in lst:\n            if i > 0 and i % 2 == 1:\n           \
    \     sum += i * i\n        return sum\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2==1])\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxqajri33.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpxqajri33.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpxqajri33.py\"\
    , line 24, in check\n    assert candidate([-1.0, -2.0, 8.0]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    pass\n\ndef check(candidate):\n    assert candidate([]) == 0\n\
    \    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3])\
    \ == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqs9aub5c.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpqs9aub5c.py\", line 30,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpqs9aub5c.py\"\
    , line 21, in check\n    assert candidate([]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2==1 and x>=0 and isinstance(x, int)])\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpis_kyx_9.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpis_kyx_9.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpis_kyx_9.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2==1])\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxqajri33.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpxqajri33.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpxqajri33.py\"\
    , line 24, in check\n    assert candidate([-1.0, -2.0, 8.0]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2==1 and x>=0 and type(x)==int])\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp73i6igkp.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp73i6igkp.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmp73i6igkp.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    #raise NotImplementedError()\n    if len(lst) == 0:\n       \
    \ return 0\n    else:\n        lst = [i for i in lst if i > 0 and i % 2 == 1]\n\
    \        return sum(lst) * 2\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpetye8iqu.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpetye8iqu.py\", line 35,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpetye8iqu.py\"\
    , line 27, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    if len(lst) == 0:\n        return 0\n    else:\n        return\
    \ sum([x**2 for x in lst if x%2 != 0])\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe3d_43p6.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpe3d_43p6.py\", line 33,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpe3d_43p6.py\"\
    , line 26, in check\n    assert candidate([0.1, 0.2, 0.3]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    #raise NotImplementedError()\n    sum = 0\n    for i in lst:\n\
    \        if i % 2 == 1 and i > 0:\n            sum += i**2\n    return sum\n\n\
    def check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum(map(lambda x: x**2, filter(lambda x: x%2==1, lst)))\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9gux1f3j.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp9gux1f3j.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmp9gux1f3j.py\"\
    , line 24, in check\n    assert candidate([-1.0, -2.0, 8.0]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2 == 1])\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplvp699kh.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmplvp699kh.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmplvp699kh.py\"\
    , line 24, in check\n    assert candidate([-1.0, -2.0, 8.0]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    #raise NotImplementedError()\n    if len(lst) == 0:\n       \
    \ return 0\n    else:\n        return sum([x**2 for x in lst if x%2 != 0 and x\
    \ > 0 and type(x) == int])\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpekdsen9w.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpekdsen9w.py\", line 34,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpekdsen9w.py\"\
    , line 26, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2==1 and x>=0 and isinstance(x, int)])\n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n\ndef check(candidate):\n    assert candidate([]) ==\
    \ 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3])\
    \ == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqhr4tbz4.py\", line\
    \ 270, in <module>\n    test_check()\n  File \"/tmp/tmpqhr4tbz4.py\", line 268,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpqhr4tbz4.py\"\
    , line 260, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2==1])\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxqajri33.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpxqajri33.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpxqajri33.py\"\
    , line 24, in check\n    assert candidate([-1.0, -2.0, 8.0]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ 0\n\ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvc0wuo70.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpvc0wuo70.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpvc0wuo70.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2 == 1])\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplvp699kh.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmplvp699kh.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmplvp699kh.py\"\
    , line 24, in check\n    assert candidate([-1.0, -2.0, 8.0]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    return 0\n\ndef check(candidate):\n    assert candidate([]) ==\
    \ 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3])\
    \ == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpj8ta9rw7.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpj8ta9rw7.py\", line 30,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpj8ta9rw7.py\"\
    , line 22, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2==1 and x>=0 and type(x)==int])\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp73i6igkp.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp73i6igkp.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmp73i6igkp.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum(x**2 for x in lst if x%2==1 and x>=0 and isinstance(x,int))\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpudjkem5y.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpudjkem5y.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpudjkem5y.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x*x for x in lst if x%2==1])\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpacw7rkvk.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpacw7rkvk.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpacw7rkvk.py\"\
    , line 24, in check\n    assert candidate([-1.0, -2.0, 8.0]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([2*(x**2) for x in lst if x%2==1 and x>=0 and type(x)==int])\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwj5a6yoy.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpwj5a6yoy.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpwj5a6yoy.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    if len(lst) == 0:\n        return 0\n    else:\n        return\
    \ sum(i**2 for i in lst if i%2 == 1)\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpglfr5jgg.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpglfr5jgg.py\", line 33,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpglfr5jgg.py\"\
    , line 28, in check\n    assert candidate([-1.0, -2.0, 8.0]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    # raise NotImplementedError()\n    if len(lst) == 0:\n      \
    \  return 0\n    else:\n        sum = 0\n        for i in lst:\n            if\
    \ i % 2 == 1 and i > 0:\n                sum += i * i\n        return sum * 2\n\
    \ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqv0mv2w_.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpqv0mv2w_.py\", line 38,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpqv0mv2w_.py\"\
    , line 30, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ 0\n\ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvc0wuo70.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpvc0wuo70.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpvc0wuo70.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    #raise NotImplementedError()\n    if len(lst) == 0:\n       \
    \ return 0\n    else:\n        sum = 0\n        for i in lst:\n            if\
    \ i > 0 and i % 2 == 1:\n                sum += i ** 2\n        return sum * 2\n\
    \ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpor0ayjnd.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpor0ayjnd.py\", line 38,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpor0ayjnd.py\"\
    , line 30, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    if lst == []:\n        return 0\n    else:\n        return sum([(i**2)\
    \ for i in lst if i%2 == 1])\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiv8zrv7p.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpiv8zrv7p.py\", line 33,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpiv8zrv7p.py\"\
    , line 28, in check\n    assert candidate([-1.0, -2.0, 8.0]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    pass\n\ndef check(candidate):\n    assert candidate([]) == 0\n\
    \    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3])\
    \ == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqs9aub5c.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpqs9aub5c.py\", line 30,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpqs9aub5c.py\"\
    , line 21, in check\n    assert candidate([]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2==1])\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxqajri33.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpxqajri33.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpxqajri33.py\"\
    , line 24, in check\n    assert candidate([-1.0, -2.0, 8.0]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # Your\
    \ code here\n    sum = 0\n    for i in lst:\n        if i % 2 == 1:\n        \
    \    sum += i**2\n    return sum\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyo_n8o9_.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpyo_n8o9_.py\", line 34,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpyo_n8o9_.py\"\
    , line 29, in check\n    assert candidate([-1.0, -2.0, 8.0]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2==1])\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxqajri33.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpxqajri33.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpxqajri33.py\"\
    , line 24, in check\n    assert candidate([-1.0, -2.0, 8.0]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2==1])\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxqajri33.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpxqajri33.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpxqajri33.py\"\
    , line 24, in check\n    assert candidate([-1.0, -2.0, 8.0]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2==1 and x>=0 and type(x)==int])\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp73i6igkp.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp73i6igkp.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmp73i6igkp.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # Write\
    \ your code here\n    return 0\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0pq3ttcj.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmp0pq3ttcj.py\", line 30,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmp0pq3ttcj.py\"\
    , line 22, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum(x**2 for x in lst if x % 2 == 1 and x > 0 and isinstance(x, int))\n\ndef\
    \ check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdi97yr92.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpdi97yr92.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpdi97yr92.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    #raise NotImplementedError()\n    sum = 0\n    for i in lst:\n\
    \        if i > 0 and i%2 == 1:\n            sum += i**2\n    return sum\n\ndef\
    \ check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    #raise NotImplementedError()\n    if len(lst) == 0:\n       \
    \ return 0\n    else:\n        return sum([x**2 for x in lst if x%2 != 0 and x\
    \ > 0 and type(x) == int])*2\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprzc0mmno.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmprzc0mmno.py\", line 34,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmprzc0mmno.py\"\
    , line 26, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ 0\n\ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvc0wuo70.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpvc0wuo70.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpvc0wuo70.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum(x**2 for x in lst if x % 2 == 1 and x > 0 and isinstance(x, int))\n\ndef\
    \ check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdi97yr92.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpdi97yr92.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpdi97yr92.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    #raise NotImplementedError()\n    if lst == []:\n        return\
    \ 0\n    else:\n        return sum([x**2 for x in lst if x%2 != 0 and x > 0 and\
    \ type(x) == int])\n\ndef check(candidate):\n    assert candidate([]) == 0\n \
    \   assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3])\
    \ == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk9swgqnr.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpk9swgqnr.py\", line 34,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpk9swgqnr.py\"\
    , line 26, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    if len(lst) == 0:\n        return 0\n    else:\n        return\
    \ sum([x**2 for x in lst if x%2 == 1])\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6m14rq0c.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmp6m14rq0c.py\", line 33,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmp6m14rq0c.py\"\
    , line 28, in check\n    assert candidate([-1.0, -2.0, 8.0]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2==1 and x>=0 and type(x)==int])\n    \n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplkmkrzf0.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmplkmkrzf0.py\", line 30,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmplkmkrzf0.py\"\
    , line 22, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum(x**2 for x in lst if x % 2 == 1 and x >= 0 and isinstance(x, int))\n\ndef\
    \ check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp__8c4qsr.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp__8c4qsr.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmp__8c4qsr.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2==1 and x>=0 and type(x)==int])\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp73i6igkp.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp73i6igkp.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmp73i6igkp.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # Hint:\
    \ use the function is_odd\n    # Hint: use the function square\n    # Hint: use\
    \ the function sum\n    # Hint: use the function filter\n    # Hint: use the function\
    \ map\n    # Hint: use the function double\n    return 0\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4n3tn0q0.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmp4n3tn0q0.py\", line 35,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmp4n3tn0q0.py\"\
    , line 27, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    if len(lst) == 0:\n        return 0\n    else:\n        return\
    \ sum([i**2 for i in lst if i%2 != 0])\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2jc3nvx5.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmp2jc3nvx5.py\", line 33,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmp2jc3nvx5.py\"\
    , line 26, in check\n    assert candidate([0.1, 0.2, 0.3]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2 != 0 and x > 0 and type(x) == int])\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcg_vhx1d.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpcg_vhx1d.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpcg_vhx1d.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    #raise NotImplementedError()\n    if len(lst) == 0:\n       \
    \ return 0\n    else:\n        return sum([x**2 for x in lst if x%2 == 1])\n\n\
    def check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpo85szzif.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpo85szzif.py\", line 34,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpo85szzif.py\"\
    , line 29, in check\n    assert candidate([-1.0, -2.0, 8.0]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum(x**2 for x in lst if x%2==1 and x>=0 and isinstance(x,int))\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpudjkem5y.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpudjkem5y.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpudjkem5y.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2 == 1 and x > 0 and isinstance(x, int)])\n\ndef\
    \ check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpu8zwb7kx.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpu8zwb7kx.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpu8zwb7kx.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    #raise NotImplementedError()\n    if len(lst) == 0:\n       \
    \ return 0\n    else:\n        sum = 0\n        for i in lst:\n            if\
    \ i > 0 and i % 2 == 1:\n                sum += i ** 2\n        return sum * 2\n\
    \ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpor0ayjnd.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpor0ayjnd.py\", line 38,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpor0ayjnd.py\"\
    , line 30, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum(x**2 for x in lst if x % 2 == 1 and x >= 0 and isinstance(x, int))\n\ndef\
    \ check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp__8c4qsr.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp__8c4qsr.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmp__8c4qsr.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    return 0\n\ndef check(candidate):\n    assert candidate([]) ==\
    \ 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3])\
    \ == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpj8ta9rw7.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpj8ta9rw7.py\", line 30,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpj8ta9rw7.py\"\
    , line 22, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum(x**2 for x in lst if x%2==1)\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy89cy4yx.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpy89cy4yx.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpy89cy4yx.py\"\
    , line 24, in check\n    assert candidate([-1.0, -2.0, 8.0]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum(x*x for x in lst if x%2==1 and x>=0 and isinstance(x, int))\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzewjub5y.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpzewjub5y.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpzewjub5y.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum(x**2 for x in lst if x%2 == 1 and x >= 0 and isinstance(x, int))\n    \n\
    \    \ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1nbzo7ka.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmp1nbzo7ka.py\", line 30,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmp1nbzo7ka.py\"\
    , line 22, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    #raise NotImplementedError()\n    if len(lst) == 0:\n       \
    \ return 0\n    else:\n        return sum([x**2 for x in lst if x%2 == 1 and x\
    \ >= 0 and type(x) == int])\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpybl6taw3.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpybl6taw3.py\", line 34,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpybl6taw3.py\"\
    , line 26, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    #raise NotImplementedError()\n    if len(lst) == 0:\n       \
    \ return 0\n    else:\n        sum = 0\n        for i in lst:\n            if\
    \ i % 2 == 1 and i > 0:\n                sum += i**2\n        return sum\n\ndef\
    \ check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    #raise NotImplementedError()\n    sum = 0\n    for i in lst:\n\
    \        if i > 0 and i%2 != 0:\n            sum += i**2\n    return sum\n\ndef\
    \ check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpntnpgr7u.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpntnpgr7u.py\", line 35,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpntnpgr7u.py\"\
    , line 28, in check\n    assert candidate([0.1, 0.2, 0.3]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    return 0\n\ndef check(candidate):\n    assert candidate([]) ==\
    \ 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3])\
    \ == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpj8ta9rw7.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpj8ta9rw7.py\", line 30,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpj8ta9rw7.py\"\
    , line 22, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2==1 and x>=0 and isinstance(x, int)])\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpis_kyx_9.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpis_kyx_9.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpis_kyx_9.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2!=0 and x>=0 and isinstance(x, int)])\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbe3qbcc_.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpbe3qbcc_.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpbe3qbcc_.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2==1 and x>=0 and type(x)==int])\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp73i6igkp.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp73i6igkp.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmp73i6igkp.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum(x ** 2 for x in lst if x % 2 == 1 and x > 0)\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # TODO:\
    \ Fill in the body of this function\n    if len(lst) == 0:\n        return 0\n\
    \    else:\n        return sum([x**2 for x in lst if x%2 != 0])\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4ba6usvi.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmp4ba6usvi.py\", line 33,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmp4ba6usvi.py\"\
    , line 26, in check\n    assert candidate([0.1, 0.2, 0.3]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2==1 and x>=0 and x%1==0])\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2 == 1 and x > 0 and type(x) == int])\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpm23sb6_o.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpm23sb6_o.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpm23sb6_o.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum(x**2 for x in lst if x%2==1 and x>=0 and isinstance(x,int))\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpudjkem5y.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpudjkem5y.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpudjkem5y.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    #raise NotImplementedError()\n    if len(lst) == 0:\n       \
    \ return 0\n    else:\n        sum = 0\n        for i in lst:\n            if\
    \ i % 2 == 1 and i > 0:\n                sum += i**2\n        return sum\n\ndef\
    \ check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2!=0 and x>=0 and isinstance(x,int)])\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpksgwwx3d.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpksgwwx3d.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpksgwwx3d.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    if len(lst) == 0:\n        return 0\n    else:\n        return\
    \ sum([i**2 for i in lst if i%2 == 1])\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbk7lfrfr.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpbk7lfrfr.py\", line 33,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpbk7lfrfr.py\"\
    , line 28, in check\n    assert candidate([-1.0, -2.0, 8.0]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x % 2 != 0 and x > 0 and type(x) == int])\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsox1f522.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpsox1f522.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpsox1f522.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2 == 1 and x >= 0 and type(x) == int])\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3iv1nkj8.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp3iv1nkj8.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmp3iv1nkj8.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    if len(lst) == 0:\n        return 0\n    else:\n        return\
    \ sum([x**2 for x in lst if x%2 != 0])\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe3d_43p6.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpe3d_43p6.py\", line 33,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpe3d_43p6.py\"\
    , line 26, in check\n    assert candidate([0.1, 0.2, 0.3]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum(i*i for i in lst if i%2==1)\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpt498_gil.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpt498_gil.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpt498_gil.py\"\
    , line 24, in check\n    assert candidate([-1.0, -2.0, 8.0]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum(x*x for x in lst if x%2==1 and x>=0 and isinstance(x, int))\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzewjub5y.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpzewjub5y.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpzewjub5y.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2==1 and x>=0 and int(x)==x])\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2==1 and x>=0 and type(x)==int])\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp73i6igkp.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp73i6igkp.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmp73i6igkp.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2 == 1 and x >= 0 and isinstance(x, int)])\n\ndef\
    \ check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5_v53k4q.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp5_v53k4q.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmp5_v53k4q.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ 0\n\ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvc0wuo70.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpvc0wuo70.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpvc0wuo70.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    #raise NotImplementedError()\n    if len(lst) == 0:\n       \
    \ return 0\n    else:\n        sum = 0\n        for i in lst:\n            if\
    \ i % 2 == 1 and i > 0:\n                sum += i**2\n        return sum\n\ndef\
    \ check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    pass\n\ndef check(candidate):\n    assert candidate([]) == 0\n\
    \    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3])\
    \ == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqs9aub5c.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpqs9aub5c.py\", line 30,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpqs9aub5c.py\"\
    , line 21, in check\n    assert candidate([]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    pass\n\n\ndef check(candidate):\n    assert candidate([]) ==\
    \ 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3])\
    \ == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgpgucn46.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpgpgucn46.py\", line 31,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpgpgucn46.py\"\
    , line 22, in check\n    assert candidate([]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # TODO:\
    \ Fill in the body of this function\n    return 0\n\ndef check(candidate):\n \
    \   assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqey4w1lq.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpqey4w1lq.py\", line 30,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpqey4w1lq.py\"\
    , line 22, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    #raise NotImplementedError()\n    sum = 0\n    for i in lst:\n\
    \        if i > 0 and i % 2 == 1:\n            sum += i ** 2\n    return sum *\
    \ 2\n\ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpah902pdb.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpah902pdb.py\", line 35,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpah902pdb.py\"\
    , line 27, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if type(x) == int and x > 0 and x % 2 != 0]) * 2\n\n\
    def check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5dlu__53.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp5dlu__53.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmp5dlu__53.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    #raise NotImplementedError()\n    if len(lst) == 0:\n       \
    \ return 0\n    else:\n        return sum([x**2 for x in lst if x%2 != 0 and type(x)\
    \ == int])\n\ndef check(candidate):\n    assert candidate([]) == 0\n    assert\
    \ candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n  \
    \  assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0,\
    \ 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzfpm2sl0.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpzfpm2sl0.py\", line 34,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpzfpm2sl0.py\"\
    , line 26, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum(x**2 for x in lst if x % 2 == 1 and x >= 0 and isinstance(x, int))\n\ndef\
    \ check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp__8c4qsr.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp__8c4qsr.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmp__8c4qsr.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2 == 1 and x >= 0 and type(x) == int])\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3iv1nkj8.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp3iv1nkj8.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmp3iv1nkj8.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    # raise NotImplementedError()\n    sum = 0\n    for i in lst:\n\
    \        if i % 2 == 1:\n            sum += i * i\n    return sum\n\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcojde8ll.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmpcojde8ll.py\", line 36,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpcojde8ll.py\"\
    , line 31, in check\n    assert candidate([-1.0, -2.0, 8.0]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    pass\n\ndef check(candidate):\n    assert candidate([]) == 0\n\
    \    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3])\
    \ == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqs9aub5c.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpqs9aub5c.py\", line 30,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpqs9aub5c.py\"\
    , line 21, in check\n    assert candidate([]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    #raise NotImplementedError()\n    if len(lst) == 0:\n       \
    \ return 0\n    else:\n        return sum([x**2 for x in lst if x%2 != 0 and x\
    \ > 0 and isinstance(x, int)])\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw2vx983y.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpw2vx983y.py\", line 34,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpw2vx983y.py\"\
    , line 26, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    pass\n\ndef check(candidate):\n    assert candidate([]) == 0\n\
    \    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3])\
    \ == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqs9aub5c.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpqs9aub5c.py\", line 30,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpqs9aub5c.py\"\
    , line 21, in check\n    assert candidate([]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    if len(lst) == 0:\n        return 0\n    else:\n        return\
    \ (sum([x**2 for x in lst if x%2 == 1]))*2\n\ndef check(candidate):\n    assert\
    \ candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1,\
    \ 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert\
    \ candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) ==\
    \ 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0,\
    \ 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi55zskzv.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpi55zskzv.py\", line 33,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpi55zskzv.py\"\
    , line 25, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    \"***\
    \ YOUR CODE HERE ***\"\n    if not lst:\n        return 0\n    else:\n       \
    \ return sum([x**2 for x in lst if x%2 != 0])\n\ndef check(candidate):\n    assert\
    \ candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1,\
    \ 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert\
    \ candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) ==\
    \ 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0,\
    \ 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw09hui_g.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpw09hui_g.py\", line 33,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpw09hui_g.py\"\
    , line 26, in check\n    assert candidate([0.1, 0.2, 0.3]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2==1])\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxqajri33.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpxqajri33.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpxqajri33.py\"\
    , line 24, in check\n    assert candidate([-1.0, -2.0, 8.0]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2==1])\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxqajri33.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpxqajri33.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpxqajri33.py\"\
    , line 24, in check\n    assert candidate([-1.0, -2.0, 8.0]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2 == 1 and x > 0 and type(x) == int])\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpm23sb6_o.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpm23sb6_o.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpm23sb6_o.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum(x**2 for x in lst if x%2==1 and x>=0 and isinstance(x,int))\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpudjkem5y.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpudjkem5y.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpudjkem5y.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum(x*x for x in lst if x%2==1 and x>=0 and type(x)==int)\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb1i9yumi.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpb1i9yumi.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpb1i9yumi.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2==1])\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxqajri33.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpxqajri33.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpxqajri33.py\"\
    , line 24, in check\n    assert candidate([-1.0, -2.0, 8.0]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2==1])\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxqajri33.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpxqajri33.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpxqajri33.py\"\
    , line 24, in check\n    assert candidate([-1.0, -2.0, 8.0]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2 == 1 and x >= 0 and isinstance(x, int)])\n\ndef\
    \ check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5_v53k4q.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp5_v53k4q.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmp5_v53k4q.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2 != 0 and x>0 and type(x) == int])\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_woucfyc.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp_woucfyc.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmp_woucfyc.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    pass\n\ndef check(candidate):\n    assert candidate([]) == 0\n\
    \    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3])\
    \ == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqs9aub5c.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpqs9aub5c.py\", line 30,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpqs9aub5c.py\"\
    , line 21, in check\n    assert candidate([]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    pass\n\ndef check(candidate):\n    assert candidate([]) == 0\n\
    \    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3])\
    \ == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqs9aub5c.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpqs9aub5c.py\", line 30,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpqs9aub5c.py\"\
    , line 21, in check\n    assert candidate([]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2 != 0 and x > 0 and isinstance(x, int)])\n\ndef\
    \ check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnpu3ihdu.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpnpu3ihdu.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpnpu3ihdu.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    # raise NotImplementedError()\n    if len(lst) == 0:\n      \
    \  return 0\n    else:\n        return sum(x**2 for x in lst if x % 2 != 0) *\
    \ 2\n\ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpm9xjfufe.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpm9xjfufe.py\", line 34,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpm9xjfufe.py\"\
    , line 26, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2==1 and x>=0 and isinstance(x, int)])\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpis_kyx_9.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpis_kyx_9.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpis_kyx_9.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum(x**2 for x in lst if x % 2 == 1 and x > 0 and isinstance(x, int))\n\ndef\
    \ check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdi97yr92.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpdi97yr92.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpdi97yr92.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    if len(lst) == 0:\n        return 0\n    else:\n        return\
    \ sum([x**2 for x in lst if x%2 == 1])\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6m14rq0c.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmp6m14rq0c.py\", line 33,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmp6m14rq0c.py\"\
    , line 28, in check\n    assert candidate([-1.0, -2.0, 8.0]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum(n**2 for n in lst if n % 2 == 1 and n > 0 and type(n) == int)\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2astruke.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp2astruke.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmp2astruke.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum(x**2 for x in lst if x%2==1)\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy89cy4yx.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpy89cy4yx.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpy89cy4yx.py\"\
    , line 24, in check\n    assert candidate([-1.0, -2.0, 8.0]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2==1])\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxqajri33.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpxqajri33.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpxqajri33.py\"\
    , line 24, in check\n    assert candidate([-1.0, -2.0, 8.0]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2==1 and x>=0 and type(x)==int])\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp73i6igkp.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp73i6igkp.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmp73i6igkp.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum(x*x for x in lst if x%2 == 1 and x >= 0 and type(x) == int)\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpphoq9_7_.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpphoq9_7_.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpphoq9_7_.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2 == 1 and x>=0 and type(x) == int])\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw4_kf2_x.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpw4_kf2_x.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpw4_kf2_x.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x*x for x in lst if x%2 == 1 and x >= 0 and type(x) == int])\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_3ls9k54.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp_3ls9k54.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmp_3ls9k54.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    if len(lst) == 0:\n        return 0\n    else:\n        return\
    \ sum([x**2 for x in lst if x%2 != 0])\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe3d_43p6.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpe3d_43p6.py\", line 33,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpe3d_43p6.py\"\
    , line 26, in check\n    assert candidate([0.1, 0.2, 0.3]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    if len(lst) == 0:\n        return 0\n    else:\n        return\
    \ sum([(x * x) for x in lst if (x % 2 != 0) and (x > 0)])\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7y0_0qsg.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmp7y0_0qsg.py\", line 33,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmp7y0_0qsg.py\"\
    , line 26, in check\n    assert candidate([0.1, 0.2, 0.3]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum(x**2 for x in lst if x%2==1 and x>=0 and isinstance(x, int))\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpil9r6urk.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpil9r6urk.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpil9r6urk.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ 0\n\ndef check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvc0wuo70.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpvc0wuo70.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpvc0wuo70.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([i**2 for i in lst if i%2 == 1])\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb05qgp0z.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpb05qgp0z.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpb05qgp0z.py\"\
    , line 24, in check\n    assert candidate([-1.0, -2.0, 8.0]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2==1 and x>=0 and type(x)==int])\n\ndef check(candidate):\n\
    \    assert candidate([]) == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert\
    \ candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0])\
    \ == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert candidate([0.2,\
    \ 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0, -1.0, 1.0, 3.0,\
    \ 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp73i6igkp.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp73i6igkp.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmp73i6igkp.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2 == 1 and x >= 0 and isinstance(x, int)])\n\ndef\
    \ check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5_v53k4q.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp5_v53k4q.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmp5_v53k4q.py\"\
    , line 21, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2==1])\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxqajri33.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpxqajri33.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpxqajri33.py\"\
    , line 24, in check\n    assert candidate([-1.0, -2.0, 8.0]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    if len(lst) == 0:\n        return 0\n    else:\n        return\
    \ sum([x**2 for x in lst if x%2 != 0])\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe3d_43p6.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpe3d_43p6.py\", line 33,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpe3d_43p6.py\"\
    , line 26, in check\n    assert candidate([0.1, 0.2, 0.3]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    #raise NotImplementedError()\n    if lst == []:\n        return\
    \ 0\n    else:\n        return sum([x**2 for x in lst if x%2 == 1 and x>0 and\
    \ isinstance(x,int)])\n\ndef check(candidate):\n    assert candidate([]) == 0\n\
    \    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3])\
    \ == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppm_vgco7.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmppm_vgco7.py\", line 34,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmppm_vgco7.py\"\
    , line 26, in check\n    assert candidate([5.0, 4.0]) == 25\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: 0
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    #raise NotImplementedError()\n    if len(lst) == 0:\n       \
    \ return 0\n    else:\n        sum = 0\n        for i in lst:\n            if\
    \ i % 2 == 1 and i > 0:\n                sum += i*i\n        return sum\n\ndef\
    \ check(candidate):\n    assert candidate([]) == 0\n    assert candidate([5.0,\
    \ 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3]) == 0\n    assert candidate([-10.0,\
    \ -20.0, -30.0]) == 0\n    assert candidate([-1.0, -2.0, 8.0]) == 0\n    assert\
    \ candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0, -7.0, -5.0, -3.0,\
    \ -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n    check(double_the_difference)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2==1])\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxqajri33.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpxqajri33.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpxqajri33.py\"\
    , line 24, in check\n    assert candidate([-1.0, -2.0, 8.0]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    return\
    \ sum([x**2 for x in lst if x%2==1])\n\ndef check(candidate):\n    assert candidate([])\
    \ == 0\n    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2,\
    \ 0.3]) == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxqajri33.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpxqajri33.py\", line 29,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpxqajri33.py\"\
    , line 24, in check\n    assert candidate([-1.0, -2.0, 8.0]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067
- exit_code: -1
  program: "def double_the_difference(lst):\n    \"\"\"\n    Given a list of numbers,\
    \ return the sum of squares of the numbers\n    in the list that are odd. Ignore\
    \ numbers that are negative or not integers.\n    \n    >>> double_the_difference([1,\
    \ 3, 2, 0])\n    10\n    >>> double_the_difference([-1, -2, 0])\n    0\n    >>>\
    \ double_the_difference([9, -2])\n    81\n    >>> double_the_difference([0])\n\
    \    0\n   \n    If the input list is empty, return 0.\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    pass\n\ndef check(candidate):\n    assert candidate([]) == 0\n\
    \    assert candidate([5.0, 4.0]) == 25\n    assert candidate([0.1, 0.2, 0.3])\
    \ == 0\n    assert candidate([-10.0, -20.0, -30.0]) == 0\n    assert candidate([-1.0,\
    \ -2.0, 8.0]) == 0\n    assert candidate([0.2, 3.0, 5.0]) == 34\n    assert candidate([-9.0,\
    \ -7.0, -5.0, -3.0, -1.0, 1.0, 3.0, 5.0, 7.0, 9.0]) == 165\n\ndef test_check():\n\
    \    check(double_the_difference)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqs9aub5c.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpqs9aub5c.py\", line 30,\
    \ in test_check\n    check(double_the_difference)\n  File \"/tmp/tmpqs9aub5c.py\"\
    , line 21, in check\n    assert candidate([]) == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1660271067

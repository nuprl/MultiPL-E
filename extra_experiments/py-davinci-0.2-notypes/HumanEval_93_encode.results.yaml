language: notypes.py
name: HumanEval_93_encode
results:
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    vowels = 'aeiou'\n\
    \    encoded = ''\n    for char in message:\n        if char.lower() in vowels:\n\
    \            encoded += vowels[(vowels.index(char.lower()) + 2) % 5].upper()\n\
    \        else:\n            encoded += char.swapcase()\n    return encoded\n\n\
    def check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir')\
    \ == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n    assert candidate('This\
    \ is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt\
    \ tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp245lgbe_.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp245lgbe_.py\", line 32,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmp245lgbe_.py\", line 25, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    message = message.swapcase()\n\
    \    vowels = 'aeiou'\n    for i in range(len(message)):\n        if message[i]\
    \ in vowels:\n            message = message[:i] + vowels[(vowels.index(message[i])\
    \ + 2) % 5] + message[i+1:]\n    return message\n\ndef check(candidate):\n   \
    \ assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpflvadwug.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpflvadwug.py\", line 30,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpflvadwug.py\", line 23, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    raise NotImplementedError()\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2c1_4png.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp2c1_4png.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmp2c1_4png.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmp2c1_4png.py\"\
    , line 16, in encode\n    raise NotImplementedError()\nNotImplementedError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join([encode_char(c)\
    \ for c in message])\n\ndef check(candidate):\n    assert candidate('TEST') ==\
    \ 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjqagiriv.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpjqagiriv.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpjqagiriv.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmpjqagiriv.py\"\
    , line 15, in encode\n    return ''.join([encode_char(c) for c in message])\n\
    \  File \"/tmp/tmpjqagiriv.py\", line 15, in <listcomp>\n    return ''.join([encode_char(c)\
    \ for c in message])\nNameError: name 'encode_char' is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    raise NotImplementedError()\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2c1_4png.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp2c1_4png.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmp2c1_4png.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmp2c1_4png.py\"\
    , line 16, in encode\n    raise NotImplementedError()\nNotImplementedError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # your code here\n\
    \    pass\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n \
    \   assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n\
    \    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n    assert\
    \ candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef\
    \ test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpu15q0dqs.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpu15q0dqs.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpu15q0dqs.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # your code here\n\
    \    pass\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n \
    \   assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n\
    \    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n    assert\
    \ candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef\
    \ test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpu15q0dqs.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpu15q0dqs.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpu15q0dqs.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpedj4cznq.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpedj4cznq.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpedj4cznq.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    raise NotImplementedError()\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2c1_4png.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp2c1_4png.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmp2c1_4png.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmp2c1_4png.py\"\
    , line 16, in encode\n    raise NotImplementedError()\nNotImplementedError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpedj4cznq.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpedj4cznq.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpedj4cznq.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    raise NotImplementedError()\n\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphiapxbwf.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmphiapxbwf.py\", line 27,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmphiapxbwf.py\", line 20, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmphiapxbwf.py\"\
    , line 16, in encode\n    raise NotImplementedError()\nNotImplementedError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    vowels = 'aeiou'\n\
    \    encoded = ''\n    for char in message:\n        if char.isalpha():\n    \
    \        if char.isupper():\n                char = char.lower()\n           \
    \ else:\n                char = char.upper()\n            if char in vowels:\n\
    \                char = vowels[(vowels.index(char) + 2) % len(vowels)]\n     \
    \   encoded += char\n    return encoded\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppotbz4af.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmppotbz4af.py\", line 36,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmppotbz4af.py\", line 29, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # your code here\n\
    \    pass\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n \
    \   assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n\
    \    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n    assert\
    \ candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef\
    \ test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpu15q0dqs.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpu15q0dqs.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpu15q0dqs.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    # raise NotImplementedError()\n    message = message.swapcase()\n    vowels\
    \ = ['a', 'e', 'i', 'o', 'u']\n    for i in range(len(message)):\n        if message[i]\
    \ in vowels:\n            message = message[:i] + vowels[(vowels.index(message[i])\
    \ + 2) % 5] + message[i+1:]\n    return message\n\ndef check(candidate):\n   \
    \ assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsbb32n72.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpsbb32n72.py\", line 32,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpsbb32n72.py\", line 25, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    raise NotImplementedError()\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2c1_4png.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp2c1_4png.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmp2c1_4png.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmp2c1_4png.py\"\
    , line 16, in encode\n    raise NotImplementedError()\nNotImplementedError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # Your code here\n\
    \    pass\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n \
    \   assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n\
    \    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n    assert\
    \ candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef\
    \ test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfkgm9ky6.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpfkgm9ky6.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpfkgm9ky6.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    raise NotImplementedError()\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2c1_4png.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp2c1_4png.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmp2c1_4png.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmp2c1_4png.py\"\
    , line 16, in encode\n    raise NotImplementedError()\nNotImplementedError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # Your code here\n\
    \    pass\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n \
    \   assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n\
    \    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n    assert\
    \ candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef\
    \ test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfkgm9ky6.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpfkgm9ky6.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpfkgm9ky6.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    raise NotImplementedError()\n\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphiapxbwf.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmphiapxbwf.py\", line 27,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmphiapxbwf.py\", line 20, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmphiapxbwf.py\"\
    , line 16, in encode\n    raise NotImplementedError()\nNotImplementedError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    raise NotImplementedError()\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2c1_4png.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp2c1_4png.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmp2c1_4png.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmp2c1_4png.py\"\
    , line 16, in encode\n    raise NotImplementedError()\nNotImplementedError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    vowels = 'aeiou'\n\
    \    encoded = ''\n    for char in message:\n        if char.isalpha():\n    \
    \        if char.lower() in vowels:\n                encoded += chr(ord(char)\
    \ + 2)\n            else:\n                encoded += chr(ord(char) ^ 32)\n  \
    \      else:\n            encoded += char\n    return encoded\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkknyuaso.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpkknyuaso.py\", line 35,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpkknyuaso.py\", line 28, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join([encode_char(c)\
    \ for c in message])\n\ndef check(candidate):\n    assert candidate('TEST') ==\
    \ 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjqagiriv.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpjqagiriv.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpjqagiriv.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmpjqagiriv.py\"\
    , line 15, in encode\n    return ''.join([encode_char(c) for c in message])\n\
    \  File \"/tmp/tmpjqagiriv.py\", line 15, in <listcomp>\n    return ''.join([encode_char(c)\
    \ for c in message])\nNameError: name 'encode_char' is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    raise NotImplementedError()\n\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphiapxbwf.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmphiapxbwf.py\", line 27,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmphiapxbwf.py\", line 20, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmphiapxbwf.py\"\
    , line 16, in encode\n    raise NotImplementedError()\nNotImplementedError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    message = message.swapcase()\n\
    \    vowels = ['a', 'e', 'i', 'o', 'u']\n    for i in range(len(message)):\n \
    \       if message[i] in vowels:\n            message = message[:i] + vowels[(vowels.index(message[i])\
    \ + 2) % 5] + message[i+1:]\n    return message\n\ndef check(candidate):\n   \
    \ assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwshlz4ic.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpwshlz4ic.py\", line 30,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpwshlz4ic.py\", line 23, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # your code here\n\
    \    pass\n\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph2abdf0b.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmph2abdf0b.py\", line 27,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmph2abdf0b.py\", line 20, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    vowels = 'aeiou'\n\
    \    encoded = ''\n    for char in message:\n        if char.isalpha():\n    \
    \        if char.isupper():\n                encoded += char.lower()\n       \
    \     else:\n                encoded += char.upper()\n        else:\n        \
    \    encoded += char\n    for vowel in vowels:\n        encoded = encoded.replace(vowel,\
    \ chr(ord(vowel) + 2))\n    return encoded\n\ndef check(candidate):\n    assert\
    \ candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbc_im9qs.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpbc_im9qs.py\", line 37,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpbc_im9qs.py\", line 31, in\
    \ check\n    assert candidate('Mudasir') == 'mWDCSKR'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: 0
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # your code here\n\
    \    vowels = 'aeiou'\n    encoded = ''\n    for char in message:\n        if\
    \ char.isalpha():\n            if char.lower() in vowels:\n                encoded\
    \ += chr(ord(char) + 2)\n            else:\n                encoded += char\n\
    \        else:\n            encoded += char\n    return encoded.swapcase()\n\n\
    def check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir')\
    \ == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n    assert candidate('This\
    \ is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt\
    \ tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    raise NotImplementedError()\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2c1_4png.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp2c1_4png.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmp2c1_4png.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmp2c1_4png.py\"\
    , line 16, in encode\n    raise NotImplementedError()\nNotImplementedError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # Your code here\n\
    \    vowels = ['a', 'e', 'i', 'o', 'u']\n    encoded_message = ''\n    for letter\
    \ in message:\n        if letter.isupper():\n            encoded_message += letter.lower()\n\
    \        elif letter.islower():\n            encoded_message += letter.upper()\n\
    \        else:\n            encoded_message += letter\n    for vowel in vowels:\n\
    \        encoded_message = encoded_message.replace(vowel, chr(ord(vowel) + 2))\n\
    \    return encoded_message\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy2b781ta.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpy2b781ta.py\", line 37,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpy2b781ta.py\", line 31, in\
    \ check\n    assert candidate('Mudasir') == 'mWDCSKR'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    message = message.lower()\n\
    \    vowels = 'aeiou'\n    encoded = ''\n    for char in message:\n        if\
    \ char in vowels:\n            index = vowels.index(char)\n            encoded\
    \ += vowels[(index + 2) % 5]\n        else:\n            encoded += char.upper()\n\
    \    return encoded\n\n\ndef check(candidate):\n    assert candidate('TEST') ==\
    \ 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppxdy4n0o.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmppxdy4n0o.py\", line 35,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmppxdy4n0o.py\", line 28, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # TODO: Write your\
    \ code here\n    pass\n\ndef check(candidate):\n    assert candidate('TEST') ==\
    \ 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9ky3sh5n.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp9ky3sh5n.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmp9ky3sh5n.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpedj4cznq.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpedj4cznq.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpedj4cznq.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    # raise NotImplementedError()\n    result = ''\n    for i in message:\n \
    \       if i.isupper():\n            result += i.lower()\n        elif i.islower():\n\
    \            result += i.upper()\n        else:\n            result += i\n   \
    \ vowels = ['a', 'e', 'i', 'o', 'u']\n    for i in range(len(result)):\n     \
    \   if result[i] in vowels:\n            result = result[:i] + vowels[(vowels.index(result[i])\
    \ + 2) % 5] + result[i+1:]\n    return result\n\n\ndef check(candidate):\n   \
    \ assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2io30pd1.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmp2io30pd1.py\", line 40,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmp2io30pd1.py\", line 33, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join([encode_char(c)\
    \ for c in message])\n\ndef check(candidate):\n    assert candidate('TEST') ==\
    \ 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjqagiriv.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpjqagiriv.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpjqagiriv.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmpjqagiriv.py\"\
    , line 15, in encode\n    return ''.join([encode_char(c) for c in message])\n\
    \  File \"/tmp/tmpjqagiriv.py\", line 15, in <listcomp>\n    return ''.join([encode_char(c)\
    \ for c in message])\nNameError: name 'encode_char' is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    vowels = 'aeiou'\n\
    \    encoded = ''\n    for char in message:\n        if char.isalpha():\n    \
    \        if char.lower() in vowels:\n                encoded += chr(ord(char)\
    \ + 2)\n            else:\n                encoded += chr(ord(char) ^ 32)\n  \
    \      else:\n            encoded += char\n    return encoded\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkknyuaso.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpkknyuaso.py\", line 35,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpkknyuaso.py\", line 28, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpedj4cznq.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpedj4cznq.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpedj4cznq.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    raise NotImplementedError()\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2c1_4png.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp2c1_4png.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmp2c1_4png.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmp2c1_4png.py\"\
    , line 16, in encode\n    raise NotImplementedError()\nNotImplementedError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpedj4cznq.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpedj4cznq.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpedj4cznq.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    raise NotImplementedError()\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2c1_4png.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp2c1_4png.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmp2c1_4png.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmp2c1_4png.py\"\
    , line 16, in encode\n    raise NotImplementedError()\nNotImplementedError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    raise NotImplementedError()\n\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphiapxbwf.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmphiapxbwf.py\", line 27,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmphiapxbwf.py\", line 20, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmphiapxbwf.py\"\
    , line 16, in encode\n    raise NotImplementedError()\nNotImplementedError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    raise NotImplementedError()\n\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphiapxbwf.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmphiapxbwf.py\", line 27,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmphiapxbwf.py\", line 20, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmphiapxbwf.py\"\
    , line 16, in encode\n    raise NotImplementedError()\nNotImplementedError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join([chr(ord(c)\
    \ + 2) if c in 'aeiou' else c.swapcase() for c in message])\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcw_a9jal.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpcw_a9jal.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpcw_a9jal.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # Your code here\n\
    \    pass\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n \
    \   assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n\
    \    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n    assert\
    \ candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef\
    \ test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfkgm9ky6.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpfkgm9ky6.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpfkgm9ky6.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpitojovtt.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpitojovtt.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpitojovtt.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    raise NotImplementedError()\n    \ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpa5yzpbhs.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpa5yzpbhs.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpa5yzpbhs.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmpa5yzpbhs.py\"\
    , line 16, in encode\n    raise NotImplementedError()\nNotImplementedError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    raise NotImplementedError()\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2c1_4png.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp2c1_4png.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmp2c1_4png.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmp2c1_4png.py\"\
    , line 16, in encode\n    raise NotImplementedError()\nNotImplementedError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # Your code here\n\
    \    pass\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n \
    \   assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n\
    \    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n    assert\
    \ candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef\
    \ test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfkgm9ky6.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpfkgm9ky6.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpfkgm9ky6.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    #raise NotImplementedError()\n    vowels = 'aeiou'\n    new_message = ''\n\
    \    for i in message:\n        if i.isupper():\n            new_message += i.lower()\n\
    \        elif i.islower():\n            new_message += i.upper()\n        else:\n\
    \            new_message += i\n    for i in range(len(new_message)):\n       \
    \ if new_message[i] in vowels:\n            if new_message[i] == 'u':\n      \
    \          new_message = new_message[:i] + 'a' + new_message[i+1:]\n         \
    \   else:\n                new_message = new_message[:i] + vowels[vowels.index(new_message[i])+2]\
    \ + new_message[i+1:]\n    return new_message\n\ndef check(candidate):\n    assert\
    \ candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp89bh0gf9.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmp89bh0gf9.py\", line 42,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmp89bh0gf9.py\", line 35, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    raise NotImplementedError()\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2c1_4png.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp2c1_4png.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmp2c1_4png.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmp2c1_4png.py\"\
    , line 16, in encode\n    raise NotImplementedError()\nNotImplementedError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join([encode_letter(letter)\
    \ for letter in message])\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8tsar0w3.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmp8tsar0w3.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmp8tsar0w3.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmp8tsar0w3.py\"\
    , line 15, in encode\n    return ''.join([encode_letter(letter) for letter in\
    \ message])\n  File \"/tmp/tmp8tsar0w3.py\", line 15, in <listcomp>\n    return\
    \ ''.join([encode_letter(letter) for letter in message])\nNameError: name 'encode_letter'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    raise NotImplementedError()\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2c1_4png.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp2c1_4png.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmp2c1_4png.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmp2c1_4png.py\"\
    , line 16, in encode\n    raise NotImplementedError()\nNotImplementedError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # your code here\n\
    \    pass\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n \
    \   assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n\
    \    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n    assert\
    \ candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef\
    \ test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpu15q0dqs.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpu15q0dqs.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpu15q0dqs.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join([encode_letter(letter)\
    \ for letter in message])\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8tsar0w3.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmp8tsar0w3.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmp8tsar0w3.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmp8tsar0w3.py\"\
    , line 15, in encode\n    return ''.join([encode_letter(letter) for letter in\
    \ message])\n  File \"/tmp/tmp8tsar0w3.py\", line 15, in <listcomp>\n    return\
    \ ''.join([encode_letter(letter) for letter in message])\nNameError: name 'encode_letter'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    raise NotImplementedError()\n\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphiapxbwf.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmphiapxbwf.py\", line 27,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmphiapxbwf.py\", line 20, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmphiapxbwf.py\"\
    , line 16, in encode\n    raise NotImplementedError()\nNotImplementedError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join([encode_letter(letter)\
    \ for letter in message])\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8tsar0w3.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmp8tsar0w3.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmp8tsar0w3.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmp8tsar0w3.py\"\
    , line 15, in encode\n    return ''.join([encode_letter(letter) for letter in\
    \ message])\n  File \"/tmp/tmp8tsar0w3.py\", line 15, in <listcomp>\n    return\
    \ ''.join([encode_letter(letter) for letter in message])\nNameError: name 'encode_letter'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    raise NotImplementedError()\n\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphiapxbwf.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmphiapxbwf.py\", line 27,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmphiapxbwf.py\", line 20, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmphiapxbwf.py\"\
    , line 16, in encode\n    raise NotImplementedError()\nNotImplementedError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # your code here\n\
    \    pass\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n \
    \   assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n\
    \    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n    assert\
    \ candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef\
    \ test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpu15q0dqs.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpu15q0dqs.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpu15q0dqs.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    vowels = 'aeiou'\n\
    \    encoded = ''\n    for char in message:\n        if char.isalpha():\n    \
    \        if char.isupper():\n                encoded += char.lower()\n       \
    \     else:\n                encoded += char.upper()\n        else:\n        \
    \    encoded += char\n    for char in encoded:\n        if char in vowels:\n \
    \           if char == 'u':\n                encoded = encoded.replace(char, 'a')\n\
    \            else:\n                encoded = encoded.replace(char, vowels[vowels.index(char)\
    \ + 2])\n    return encoded\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvl3yulh1.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmpvl3yulh1.py\", line 41,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpvl3yulh1.py\", line 34, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    raise NotImplementedError()\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2c1_4png.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp2c1_4png.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmp2c1_4png.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmp2c1_4png.py\"\
    , line 16, in encode\n    raise NotImplementedError()\nNotImplementedError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    vowels = 'aeiou'\n\
    \    encoded = ''\n    for letter in message:\n        if letter.lower() in vowels:\n\
    \            index = vowels.index(letter.lower())\n            encoded += vowels[(index\
    \ + 2) % 5].upper()\n        else:\n            encoded += letter.swapcase()\n\
    \    return encoded\n\ndef check(candidate):\n    assert candidate('TEST') ==\
    \ 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzle527u3.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpzle527u3.py\", line 33,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpzle527u3.py\", line 26, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    vowels = 'aeiou'\n\
    \    encoded = ''\n    for char in message:\n        if char.isalpha():\n    \
    \        if char.isupper():\n                char = char.lower()\n           \
    \ else:\n                char = char.upper()\n            if char in vowels:\n\
    \                char = vowels[(vowels.index(char) + 2) % len(vowels)]\n     \
    \   encoded += char\n    return encoded\n\n\ndef check(candidate):\n    assert\
    \ candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpthzbw27n.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpthzbw27n.py\", line 37,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpthzbw27n.py\", line 30, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join([encode_char(c)\
    \ for c in message])\n\ndef check(candidate):\n    assert candidate('TEST') ==\
    \ 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjqagiriv.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpjqagiriv.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpjqagiriv.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmpjqagiriv.py\"\
    , line 15, in encode\n    return ''.join([encode_char(c) for c in message])\n\
    \  File \"/tmp/tmpjqagiriv.py\", line 15, in <listcomp>\n    return ''.join([encode_char(c)\
    \ for c in message])\nNameError: name 'encode_char' is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    raise NotImplementedError()\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2c1_4png.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp2c1_4png.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmp2c1_4png.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmp2c1_4png.py\"\
    , line 16, in encode\n    raise NotImplementedError()\nNotImplementedError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    raise NotImplementedError()\n\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphiapxbwf.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmphiapxbwf.py\", line 27,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmphiapxbwf.py\", line 20, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmphiapxbwf.py\"\
    , line 16, in encode\n    raise NotImplementedError()\nNotImplementedError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # TODO: write your\
    \ code here\n    pass\n\ndef check(candidate):\n    assert candidate('TEST') ==\
    \ 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1uxujnu9.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp1uxujnu9.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmp1uxujnu9.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join([encode_char(c)\
    \ for c in message])\n\ndef check(candidate):\n    assert candidate('TEST') ==\
    \ 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjqagiriv.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpjqagiriv.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpjqagiriv.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmpjqagiriv.py\"\
    , line 15, in encode\n    return ''.join([encode_char(c) for c in message])\n\
    \  File \"/tmp/tmpjqagiriv.py\", line 15, in <listcomp>\n    return ''.join([encode_char(c)\
    \ for c in message])\nNameError: name 'encode_char' is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    #raise NotImplementedError()\n    vowels = ['a', 'e', 'i', 'o', 'u']\n  \
    \  encoded_message = ''\n    for char in message:\n        if char.isalpha():\n\
    \            if char.isupper():\n                char = char.lower()\n       \
    \     else:\n                char = char.upper()\n            if char in vowels:\n\
    \                char = chr(ord(char) + 2)\n                if char > 'z':\n \
    \                   char = chr(ord(char) - 26)\n            encoded_message +=\
    \ char\n        else:\n            encoded_message += char\n    return encoded_message\n\
    \ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir')\
    \ == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n    assert candidate('This\
    \ is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt\
    \ tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpm2479qhy.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmpm2479qhy.py\", line 42,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpm2479qhy.py\", line 36, in\
    \ check\n    assert candidate('Mudasir') == 'mWDCSKR'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpedj4cznq.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpedj4cznq.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpedj4cznq.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join([encode_char(c)\
    \ for c in message])\n\ndef check(candidate):\n    assert candidate('TEST') ==\
    \ 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjqagiriv.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpjqagiriv.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpjqagiriv.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmpjqagiriv.py\"\
    , line 15, in encode\n    return ''.join([encode_char(c) for c in message])\n\
    \  File \"/tmp/tmpjqagiriv.py\", line 15, in <listcomp>\n    return ''.join([encode_char(c)\
    \ for c in message])\nNameError: name 'encode_char' is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    raise NotImplementedError()\n    \ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpa5yzpbhs.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpa5yzpbhs.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpa5yzpbhs.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmpa5yzpbhs.py\"\
    , line 16, in encode\n    raise NotImplementedError()\nNotImplementedError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    raise NotImplementedError()\n\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphiapxbwf.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmphiapxbwf.py\", line 27,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmphiapxbwf.py\", line 20, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmphiapxbwf.py\"\
    , line 16, in encode\n    raise NotImplementedError()\nNotImplementedError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    raise NotImplementedError()\n\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphiapxbwf.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmphiapxbwf.py\", line 27,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmphiapxbwf.py\", line 20, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmphiapxbwf.py\"\
    , line 16, in encode\n    raise NotImplementedError()\nNotImplementedError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # TODO: Write your\
    \ code here\n    pass\n\ndef check(candidate):\n    assert candidate('TEST') ==\
    \ 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9ky3sh5n.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp9ky3sh5n.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmp9ky3sh5n.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # Your code here\n\
    \    pass\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n \
    \   assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n\
    \    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n    assert\
    \ candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef\
    \ test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfkgm9ky6.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpfkgm9ky6.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpfkgm9ky6.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpedj4cznq.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpedj4cznq.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpedj4cznq.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    pass\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n \
    \   assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n\
    \    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n    assert\
    \ candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef\
    \ test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw7il6gv4.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpw7il6gv4.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpw7il6gv4.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # your code here\n\
    \    pass\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n \
    \   assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n\
    \    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n    assert\
    \ candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef\
    \ test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpu15q0dqs.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpu15q0dqs.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpu15q0dqs.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    raise NotImplementedError()\n\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphiapxbwf.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmphiapxbwf.py\", line 27,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmphiapxbwf.py\", line 20, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmphiapxbwf.py\"\
    , line 16, in encode\n    raise NotImplementedError()\nNotImplementedError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # TODO: Write your\
    \ code here\n    pass\n\ndef check(candidate):\n    assert candidate('TEST') ==\
    \ 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9ky3sh5n.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp9ky3sh5n.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmp9ky3sh5n.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    vowels = 'aeiou'\n\
    \    encoded = ''\n    for letter in message:\n        if letter.lower() in vowels:\n\
    \            encoded += vowels[(vowels.index(letter.lower()) + 2) % 5].upper()\n\
    \        else:\n            encoded += letter.swapcase()\n    return encoded\n\
    \ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir')\
    \ == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n    assert candidate('This\
    \ is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt\
    \ tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr5p84qpr.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpr5p84qpr.py\", line 32,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpr5p84qpr.py\", line 25, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # TODO: Write your\
    \ code here\n    pass\n\ndef check(candidate):\n    assert candidate('TEST') ==\
    \ 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9ky3sh5n.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp9ky3sh5n.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmp9ky3sh5n.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    raise NotImplementedError()\n\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphiapxbwf.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmphiapxbwf.py\", line 27,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmphiapxbwf.py\", line 20, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmphiapxbwf.py\"\
    , line 16, in encode\n    raise NotImplementedError()\nNotImplementedError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # Your code here\n\
    \    return None\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n\
    \    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') ==\
    \ 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n  \
    \  assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppnk6nxv7.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmppnk6nxv7.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmppnk6nxv7.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    raise NotImplementedError()\n\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphiapxbwf.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmphiapxbwf.py\", line 27,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmphiapxbwf.py\", line 20, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmphiapxbwf.py\"\
    , line 16, in encode\n    raise NotImplementedError()\nNotImplementedError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    vowels = 'aeiou'\n\
    \    encoded = ''\n    for letter in message:\n        if letter.isalpha():\n\
    \            if letter.lower() in vowels:\n                encoded += chr(ord(letter)\
    \ + 2)\n            else:\n                encoded += letter.swapcase()\n    \
    \    else:\n            encoded += letter\n    return encoded\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptw_6ht02.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmptw_6ht02.py\", line 35,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmptw_6ht02.py\", line 28, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    raise NotImplementedError()\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2c1_4png.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp2c1_4png.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmp2c1_4png.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmp2c1_4png.py\"\
    , line 16, in encode\n    raise NotImplementedError()\nNotImplementedError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    raise NotImplementedError()\n\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphiapxbwf.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmphiapxbwf.py\", line 27,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmphiapxbwf.py\", line 20, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmphiapxbwf.py\"\
    , line 16, in encode\n    raise NotImplementedError()\nNotImplementedError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # Your code here\n\
    \    pass\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n \
    \   assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n\
    \    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n    assert\
    \ candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef\
    \ test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfkgm9ky6.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpfkgm9ky6.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpfkgm9ky6.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    raise NotImplementedError()\n\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphiapxbwf.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmphiapxbwf.py\", line 27,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmphiapxbwf.py\", line 20, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmphiapxbwf.py\"\
    , line 16, in encode\n    raise NotImplementedError()\nNotImplementedError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    raise NotImplementedError()\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2c1_4png.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp2c1_4png.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmp2c1_4png.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmp2c1_4png.py\"\
    , line 16, in encode\n    raise NotImplementedError()\nNotImplementedError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    encoded = ''\n    for\
    \ char in message:\n        if char.isalpha():\n            if char.isupper():\n\
    \                encoded += char.lower()\n            else:\n                encoded\
    \ += char.upper()\n        else:\n            encoded += char\n    return encoded\n\
    \ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir')\
    \ == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n    assert candidate('This\
    \ is a message') == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt\
    \ tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphp6scf0g.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmphp6scf0g.py\", line 34,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmphp6scf0g.py\", line 27, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    raise NotImplementedError()\n\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphiapxbwf.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmphiapxbwf.py\", line 27,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmphiapxbwf.py\", line 20, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmphiapxbwf.py\"\
    , line 16, in encode\n    raise NotImplementedError()\nNotImplementedError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    vowels = 'aeiou'\n\
    \    new_message = ''\n    for letter in message:\n        if letter.lower() in\
    \ vowels:\n            index = vowels.index(letter.lower())\n            new_message\
    \ += vowels[(index + 2) % 5].upper()\n        else:\n            new_message +=\
    \ letter.swapcase()\n    return new_message\n\n\ndef check(candidate):\n    assert\
    \ candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxuf4rrb5.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpxuf4rrb5.py\", line 34,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpxuf4rrb5.py\", line 27, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    raise NotImplementedError()\n\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphiapxbwf.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmphiapxbwf.py\", line 27,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmphiapxbwf.py\", line 20, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmphiapxbwf.py\"\
    , line 16, in encode\n    raise NotImplementedError()\nNotImplementedError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    raise NotImplementedError()\n\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphiapxbwf.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmphiapxbwf.py\", line 27,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmphiapxbwf.py\", line 20, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmphiapxbwf.py\"\
    , line 16, in encode\n    raise NotImplementedError()\nNotImplementedError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    raise NotImplementedError()\n\ndef check(candidate):\n    assert candidate('TEST')\
    \ == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2c1_4png.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp2c1_4png.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmp2c1_4png.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmp2c1_4png.py\"\
    , line 16, in encode\n    raise NotImplementedError()\nNotImplementedError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    # YOUR CODE HERE\n\
    \    pass\n\ndef check(candidate):\n    assert candidate('TEST') == 'tgst'\n \
    \   assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES') == 'ygs'\n\
    \    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n    assert\
    \ candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef\
    \ test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw7il6gv4.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpw7il6gv4.py\", line 26,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpw7il6gv4.py\", line 19, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    return ''.join([encode_char(c)\
    \ for c in message])\n\ndef check(candidate):\n    assert candidate('TEST') ==\
    \ 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n    assert candidate('YES')\
    \ == 'ygs'\n    assert candidate('This is a message') == 'tHKS KS C MGSSCGG'\n\
    \    assert candidate('I DoNt KnOw WhAt tO WrItE') == 'k dQnT kNqW wHcT Tq wRkTg'\n\
    \ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjqagiriv.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpjqagiriv.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpjqagiriv.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\n  File \"/tmp/tmpjqagiriv.py\"\
    , line 15, in encode\n    return ''.join([encode_char(c) for c in message])\n\
    \  File \"/tmp/tmpjqagiriv.py\", line 15, in <listcomp>\n    return ''.join([encode_char(c)\
    \ for c in message])\nNameError: name 'encode_char' is not defined\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def encode(message):\n    \"\"\"\n    Write a function that takes a message,\
    \ and encodes in such a \n    way that it swaps case of all letters, replaces\
    \ all vowels in \n    the message with the letter that appears 2 places ahead\
    \ of that \n    vowel in the english alphabet. \n    Assume only letters. \n \
    \   \n    Examples:\n    >>> encode('test')\n    'TGST'\n    >>> encode('This\
    \ is a message')\n    'tHKS KS C MGSSCGG'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('TEST') == 'tgst'\n    assert candidate('Mudasir') == 'mWDCSKR'\n\
    \    assert candidate('YES') == 'ygs'\n    assert candidate('This is a message')\
    \ == 'tHKS KS C MGSSCGG'\n    assert candidate('I DoNt KnOw WhAt tO WrItE') ==\
    \ 'k dQnT kNqW wHcT Tq wRkTg'\n\ndef test_check():\n    check(encode)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmlkvzv0q.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpmlkvzv0q.py\", line 25,\
    \ in test_check\n    check(encode)\n  File \"/tmp/tmpmlkvzv0q.py\", line 18, in\
    \ check\n    assert candidate('TEST') == 'tgst'\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006

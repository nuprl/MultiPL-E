language: notypes.py
name: HumanEval_145_order_by_points
results:
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(int(i) for i in str(abs(x))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmph2s7cvic.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    # TODO: implement this function\n\
    \    pass\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11, -12])\
    \ == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert\
    \ candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0,\
    \ 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjb3cvsy8.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpjb3cvsy8.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmpjb3cvsy8.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(int(i) for i in str(abs(x))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmph2s7cvic.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(int(d) for d in str(abs(x))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe9isdeql.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpe9isdeql.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmpe9isdeql.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(int(i) for i in str(abs(x))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmph2s7cvic.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(int(i) for i in str(abs(x))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmph2s7cvic.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    if not nums:\n        return\
    \ []\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\
    \n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2, 423, 423, 53,\
    \ 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37,\
    \ 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert\
    \ candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0,\
    \ 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2hsml254.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp2hsml254.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp2hsml254.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(int(i) for i in str(abs(x))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmph2s7cvic.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(int(i) for i in str(abs(x))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmph2s7cvic.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(int(d) for d in str(abs(x))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe9isdeql.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpe9isdeql.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmpe9isdeql.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), x))\n\n\ndef check(candidate):\n    assert candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n\
    \    assert candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11,\
    \ 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) ==\
    \ [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21,\
    \ 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzzpuqzca.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpzzpuqzca.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmpzzpuqzca.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: sum(int(i) for i in str(abs(x))))\n\n\ndef check(candidate):\n    assert\
    \ candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([])\
    \ == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32,\
    \ -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6,\
    \ -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8gxv2z9i.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp8gxv2z9i.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp8gxv2z9i.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(int(i) for i in str(abs(x))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmph2s7cvic.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(int(i) for i in str(abs(x))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmph2s7cvic.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(int(i) for i in str(abs(x))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmph2s7cvic.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), x))\n\n\ndef check(candidate):\n    assert candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n\
    \    assert candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11,\
    \ 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) ==\
    \ [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21,\
    \ 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzzpuqzca.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpzzpuqzca.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmpzzpuqzca.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    # TODO: implement the function\n\
    \    pass\n\n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11, -12])\
    \ == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert\
    \ candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0,\
    \ 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_ifgoj93.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp_ifgoj93.py\", line 27,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp_ifgoj93.py\", line\
    \ 19, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    if not nums:\n        return\
    \ []\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\
    \n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2, 423, 423, 53,\
    \ 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37,\
    \ 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert\
    \ candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0,\
    \ 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2hsml254.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp2hsml254.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp2hsml254.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(int(d) for d in str(abs(x))), x))\n\n\ndef check(candidate):\n    assert\
    \ candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([])\
    \ == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32,\
    \ -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6,\
    \ -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnxajnoco.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpnxajnoco.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmpnxajnoco.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(int(i) for i in str(abs(x))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmph2s7cvic.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(int(i) for i in str(abs(x))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmph2s7cvic.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(int(i) for i in str(abs(x))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmph2s7cvic.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(int(i) for i in str(abs(x))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmph2s7cvic.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(int(i) for i in str(abs(x))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmph2s7cvic.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(int(i) for i in str(abs(x))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmph2s7cvic.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(int(i) for i in str(abs(x))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmph2s7cvic.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    if not nums:\n        return\
    \ []\n    return sorted(nums, key=lambda x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\
    \n\ndef check(candidate):\n    assert candidate([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11]\n    assert candidate([1234, 423, 463, 145, 2, 423, 423, 53,\
    \ 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37,\
    \ 46, 56, 463, 3457]\n    assert candidate([]) == []\n    assert candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert\
    \ candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6,\
    \ 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0,\
    \ 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2hsml254.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp2hsml254.py\", line 28,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp2hsml254.py\", line\
    \ 20, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(int(i) for i in str(abs(x))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmph2s7cvic.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(int(i) for i in str(abs(x))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmph2s7cvic.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(int(d) for d in str(abs(x))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe9isdeql.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpe9isdeql.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmpe9isdeql.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(int(i) for i in str(abs(x))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmph2s7cvic.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), x))\n\n\ndef check(candidate):\n    assert candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n\
    \    assert candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11,\
    \ 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) ==\
    \ [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21,\
    \ 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzzpuqzca.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpzzpuqzca.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmpzzpuqzca.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(int(i) for i in str(abs(x))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmph2s7cvic.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(int(i) for i in str(abs(x))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmph2s7cvic.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(int(i) for i in str(abs(x))), x))\n\n\ndef check(candidate):\n    assert\
    \ candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([])\
    \ == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32,\
    \ -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6,\
    \ -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpipy7v5kj.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpipy7v5kj.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmpipy7v5kj.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: sum(int(digit) for digit in str(x)))\n\n\ndef check(candidate):\n    assert\
    \ candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([])\
    \ == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32,\
    \ -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6,\
    \ -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuqjn5rg.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmptuqjn5rg.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmptuqjn5rg.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\n  File \"/tmp/tmptuqjn5rg.py\", line 14, in order_by_points\n    return\
    \ sorted(nums, key=lambda x: sum(int(digit) for digit in str(x)))\n  File \"/tmp/tmptuqjn5rg.py\"\
    , line 14, in <lambda>\n    return sorted(nums, key=lambda x: sum(int(digit) for\
    \ digit in str(x)))\n  File \"/tmp/tmptuqjn5rg.py\", line 14, in <genexpr>\n \
    \   return sorted(nums, key=lambda x: sum(int(digit) for digit in str(x)))\nValueError:\
    \ invalid literal for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    if not nums:\n        return\
    \ []\n    nums_dict = {}\n    for i, num in enumerate(nums):\n        nums_dict[i]\
    \ = sum(int(digit) for digit in str(abs(num)))\n    return [nums[i] for i in sorted(nums_dict,\
    \ key=nums_dict.get)]\n\n\ndef check(candidate):\n    assert candidate([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n   \
    \ assert candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1,\
    \ 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21, 23,\
    \ 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp30lj1frz.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp30lj1frz.py\", line 31,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp30lj1frz.py\", line\
    \ 23, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: sum(map(int, str(x))))\n\n\ndef check(candidate):\n    assert candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n\
    \    assert candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11,\
    \ 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) ==\
    \ [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21,\
    \ 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp51fz8r23.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp51fz8r23.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmp51fz8r23.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\n  File \"/tmp/tmp51fz8r23.py\", line 14, in order_by_points\n    return\
    \ sorted(nums, key=lambda x: sum(map(int, str(x))))\n  File \"/tmp/tmp51fz8r23.py\"\
    , line 14, in <lambda>\n    return sorted(nums, key=lambda x: sum(map(int, str(x))))\n\
    ValueError: invalid literal for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(int(i) for i in str(abs(x))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmph2s7cvic.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(int(digit) for digit in str(abs(x))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptmqedlxe.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmptmqedlxe.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmptmqedlxe.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(int(i) for i in str(abs(x))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmph2s7cvic.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), x))\n\n\ndef check(candidate):\n    assert candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n\
    \    assert candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11,\
    \ 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) ==\
    \ [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21,\
    \ 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzzpuqzca.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpzzpuqzca.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmpzzpuqzca.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(int(i) for i in str(abs(x))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmph2s7cvic.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmph2s7cvic.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), x))\n\n\ndef check(candidate):\n    assert candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert candidate([]) == []\n\
    \    assert candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11,\
    \ 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) ==\
    \ [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0, 6, 6, -76, -21,\
    \ 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n    check(order_by_points)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzzpuqzca.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpzzpuqzca.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmpzzpuqzca.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006
- exit_code: -1
  program: "def order_by_points(nums):\n    \"\"\"\n    Write a function which sorts\
    \ the given list of integers\n    in ascending order according to the sum of their\
    \ digits.\n    Note: if there are several items with similar sum of their digits,\n\
    \    order them based on their index in original list.\n\n    For example:\n \
    \   >>> order_by_points([1, 11, -1, -11, -12])\n    [-1, -11, 1, -12, 11]\n  \
    \  >>> order_by_points([])\n    []\n    \"\"\"\n    return sorted(nums, key=lambda\
    \ x: (sum(map(int, str(abs(x)))), nums.index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    assert\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n    assert\
    \ candidate([]) == []\n    assert candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54]\n    assert candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n    assert candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6]\n\ndef test_check():\n\
    \    check(order_by_points)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmplp_docfv.py\", line 26,\
    \ in test_check\n    check(order_by_points)\n  File \"/tmp/tmplp_docfv.py\", line\
    \ 18, in check\n    assert candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11]\nAssertionError\n"
  stdout: ''
  timestamp: 1660271006

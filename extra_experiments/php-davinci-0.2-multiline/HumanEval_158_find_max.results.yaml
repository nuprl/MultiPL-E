language: php
name: HumanEval_158_find_max
results:
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = '';\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpu01dx9xz.php:16\nStack trace:\n#0 /tmp/tmpu01dx9xz.php(26): find_max(Array)\n\
    #1 /tmp/tmpu01dx9xz.php(30): candidate(Array)\n#2 /tmp/tmpu01dx9xz.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpu01dx9xz.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n\t$max = 0;\n\t$max_word = \"\";\n\tforeach ($words\
    \ as $word) {\n\t\t$unique_chars = array_unique(str_split($word));\n\t\tif (count($unique_chars)\
    \ > $max) {\n\t\t\t$max = count($unique_chars);\n\t\t\t$max_word = $word;\n\t\t\
    }\n\t}\n\treturn $max_word;\n}\n\n$words = array(\"name\", \"of\", \"string\"\
    );\necho find_max($words);\necho \"\\n\";\n$words = array(\"name\", \"enam\",\
    \ \"game\");\necho find_max($words);\necho \"\\n\";\n$words = array(\"aaaaaaa\"\
    , \"bb\", \"cc\");\necho find_max($words);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpuio1tfg8.php:40\nStack trace:\n#0 /tmp/tmpuio1tfg8.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmpuio1tfg8.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp_6a137zv.php:16\nStack trace:\n#0 /tmp/tmp_6a137zv.php(26): find_max(Array)\n\
    #1 /tmp/tmp_6a137zv.php(30): candidate(Array)\n#2 /tmp/tmp_6a137zv.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_6a137zv.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n  $max_word = $words[0];\n  $max_count = count_unique_chars($words[0]);\n\
    \  for ($i = 1; $i < count($words); $i++) {\n    $count = count_unique_chars($words[$i]);\n\
    \    if ($count > $max_count) {\n      $max_word = $words[$i];\n      $max_count\
    \ = $count;\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpwiavwf6u.php:14\nStack trace:\n#0 /tmp/tmpwiavwf6u.php(26): find_max(Array)\n\
    #1 /tmp/tmpwiavwf6u.php(30): candidate(Array)\n#2 /tmp/tmpwiavwf6u.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpwiavwf6u.php on line 14\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    /* Write a function that accepts an array of integers.\nReturn the number of integers\
    \ in the array that are greater than the\naverage of all integers in the array.\n\
    >>> count_greater_than_average(array(1, 2, 3, 4, 5))\n3\n>>> count_greater_than_average(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10))\n5\n>>> count_greater_than_average(array(1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20))\n10*/\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4ixhrny9.php:40\n\
    Stack trace:\n#0 /tmp/tmp4ixhrny9.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp4ixhrny9.php\
    \ on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = '';\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpu01dx9xz.php:16\nStack trace:\n#0 /tmp/tmpu01dx9xz.php(26): find_max(Array)\n\
    #1 /tmp/tmpu01dx9xz.php(30): candidate(Array)\n#2 /tmp/tmpu01dx9xz.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpu01dx9xz.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n\t$max = 0;\n\t$max_word = \"\";\n\tforeach ($words\
    \ as $word) {\n\t\t$word_length = strlen($word);\n\t\t$unique_chars = array();\n\
    \t\tfor ($i = 0; $i < $word_length; $i++) {\n\t\t\tif (!in_array($word[$i], $unique_chars))\
    \ {\n\t\t\t\t$unique_chars[] = $word[$i];\n\t\t\t}\n\t\t}\n\t\t$unique_chars_count\
    \ = count($unique_chars);\n\t\tif ($unique_chars_count > $max) {\n\t\t\t$max =\
    \ $unique_chars_count;\n\t\t\t$max_word = $word;\n\t\t}\n\t}\n\treturn $max_word;\n\
    }\n$words = array(\"name\", \"of\", \"string\");\necho find_max($words);\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo88joyv8.php:39\n\
    Stack trace:\n#0 /tmp/tmpo88joyv8.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpo88joyv8.php\
    \ on line 39\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = $words[0];\n    $max_count = count(array_unique(str_split($max_word)));\n\
    \    foreach ($words as $word) {\n        $count = count(array_unique(str_split($word)));\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n$words\
    \ = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"<br>\"\
    ;\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\necho\
    \ \"<br>\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string<br>name<br>aaaaaaa\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpgz34zqto.php:39\nStack trace:\n#0 /tmp/tmpgz34zqto.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmpgz34zqto.php on line 39\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = $words[0];\n    $max_count = count(array_unique(str_split($max_word)));\n\
    \    foreach ($words as $word) {\n        $count = count(array_unique(str_split($word)));\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n$words\
    \ = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\\n\"\
    ;\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\necho\
    \ \"\\n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp7_7i_zfh.php:40\nStack trace:\n#0 /tmp/tmp7_7i_zfh.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmp7_7i_zfh.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp_6a137zv.php:16\nStack trace:\n#0 /tmp/tmp_6a137zv.php(26): find_max(Array)\n\
    #1 /tmp/tmp_6a137zv.php(30): candidate(Array)\n#2 /tmp/tmp_6a137zv.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_6a137zv.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = $words[0];\n    $max_count = count(array_unique(str_split($max_word)));\n\
    \    foreach ($words as $word) {\n        $count = count(array_unique(str_split($word)));\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n$words\
    \ = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"<br>\"\
    ;\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\necho\
    \ \"<br>\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"<br>\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string<br>name<br>aaaaaaa<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp98rmdfl6.php:40\nStack trace:\n#0 /tmp/tmp98rmdfl6.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmp98rmdfl6.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\
    \\n\";\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\n\
    echo \"\\n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp9dodw6ej.php:40\nStack trace:\n#0 /tmp/tmp9dodw6ej.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmp9dodw6ej.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    /* Write a function that accepts an array of strings.\nThe array contains different\
    \ words. Return the word with maximum number\nof unique characters. If multiple\
    \ strings have maximum number of unique\ncharacters, return the one which comes\
    \ first in lexicographical order.\n>>> find_max(array(\"name\", \"of\", \"string\"\
    ))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"))\n\"enam\"\n\
    >>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpengi125_.php:41\n\
    Stack trace:\n#0 /tmp/tmpengi125_.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpengi125_.php\
    \ on line 41\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words) . PHP_EOL;\n\
    $words = array(\"name\", \"enam\", \"game\");\necho find_max($words) . PHP_EOL;\n\
    $words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words) . PHP_EOL;\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp965qozuk.php:37\nStack trace:\n#0 /tmp/tmp965qozuk.php(48): test()\n\
    #1 {main}\n  thrown in /tmp/tmp965qozuk.php on line 37\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = $words[0];\n    $max_count = count(array_unique(str_split($max_word)));\n\
    \    foreach ($words as $word) {\n        $count = count(array_unique(str_split($word)));\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n$words\
    \ = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\\n\"\
    ;\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\necho\
    \ \"\\n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp7_7i_zfh.php:40\nStack trace:\n#0 /tmp/tmp7_7i_zfh.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmp7_7i_zfh.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    /* Write a function that accepts an array of strings.\nThe array contains different\
    \ words. Return the word with maximum number\nof unique characters. If multiple\
    \ strings have maximum number of unique\ncharacters, return the one which comes\
    \ first in lexicographical order.\n>>> find_max(array(\"name\", \"of\", \"string\"\
    ))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"))\n\"enam\"\n\
    >>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpengi125_.php:41\n\
    Stack trace:\n#0 /tmp/tmpengi125_.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpengi125_.php\
    \ on line 41\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = $words[0];\n    $max_count = count(array_unique(str_split($max_word)));\n\
    \    foreach ($words as $word) {\n        $count = count(array_unique(str_split($word)));\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n$words\
    \ = array(\"name\", \"of\", \"string\");\necho find_max($words);\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5htxfagn.php:32\n\
    Stack trace:\n#0 /tmp/tmp5htxfagn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5htxfagn.php\
    \ on line 32\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        $count = count($unique_chars);\n        if ($count > $max_count) {\n\
    \            $max_count = $count;\n            $max_word = $word;\n        }\n\
    \    }\n    return $max_word;\n}\n\n$words = array(\"name\", \"of\", \"string\"\
    );\necho find_max($words);\necho \"\\n\";\n$words = array(\"name\", \"enam\",\
    \ \"game\");\necho find_max($words);\necho \"\\n\";\n$words = array(\"aaaaaaa\"\
    , \"bb\", \"cc\");\necho find_max($words);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpl62yeu6l.php:41\nStack trace:\n#0 /tmp/tmpl62yeu6l.php(52): test()\n\
    #1 {main}\n  thrown in /tmp/tmpl62yeu6l.php on line 41\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = '';\n    foreach ($words\
    \ as $word) {\n        $unique_chars = array_unique(str_split($word));\n     \
    \   if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\
    \\n\";\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\n\
    echo \"\\n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpaej3tuwc.php:40\nStack trace:\n#0 /tmp/tmpaej3tuwc.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmpaej3tuwc.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = $words[0];\n    $max_count = count(array_unique(str_split($max_word)));\n\
    \    foreach ($words as $word) {\n        $count = count(array_unique(str_split($word)));\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n$words\
    \ = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"<br>\"\
    ;\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\necho\
    \ \"<br>\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"<br>\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string<br>name<br>aaaaaaa<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp98rmdfl6.php:40\nStack trace:\n#0 /tmp/tmp98rmdfl6.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmp98rmdfl6.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp_6a137zv.php:16\nStack trace:\n#0 /tmp/tmp_6a137zv.php(26): find_max(Array)\n\
    #1 /tmp/tmp_6a137zv.php(30): candidate(Array)\n#2 /tmp/tmp_6a137zv.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_6a137zv.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\
    \\n\";\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\n\
    echo \"\\n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp9dodw6ej.php:40\nStack trace:\n#0 /tmp/tmp9dodw6ej.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmp9dodw6ej.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = '';\n    foreach ($words\
    \ as $word) {\n        $unique_chars = count_chars($word, 1);\n        if (count($unique_chars)\
    \ > $max) {\n            $max = count($unique_chars);\n            $max_word =\
    \ $word;\n        }\n    }\n    return $max_word;\n}\n\n$words = array(\"name\"\
    , \"of\", \"string\");\necho find_max($words);\necho '<br>';\n$words = array(\"\
    name\", \"enam\", \"game\");\necho find_max($words);\necho '<br>';\n$words = array(\"\
    aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\necho '<br>';\n\n/* Write\
    \ a function that accepts an array of strings.\nThe array contains different words.\
    \ Return the word with maximum number\nof unique characters. If multiple strings\
    \ have maximum number of unique\ncharacters, return the one which comes first\
    \ in lexicographical order.\n>>> find_max(array(\"name\", \"of\", \"string\"))\n\
    \"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"))\n\"enam\"\n>>> find_max(array(\"\
    aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\nfunction candidate(...$args) {\n \
    \   return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string<br>name<br>aaaaaaa<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp20gh57rz.php:51\nStack trace:\n#0 /tmp/tmp20gh57rz.php(62): test()\n\
    #1 {main}\n  thrown in /tmp/tmp20gh57rz.php on line 51\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = $words[0];\n    $max_count = count(array_unique(str_split($max_word)));\n\
    \    foreach ($words as $word) {\n        $count = count(array_unique(str_split($word)));\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n$words\
    \ = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\\n\"\
    ;\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\necho\
    \ \"\\n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp7_7i_zfh.php:40\nStack trace:\n#0 /tmp/tmp7_7i_zfh.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmp7_7i_zfh.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp_6a137zv.php:16\nStack trace:\n#0 /tmp/tmp_6a137zv.php(26): find_max(Array)\n\
    #1 /tmp/tmp_6a137zv.php(30): candidate(Array)\n#2 /tmp/tmp_6a137zv.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_6a137zv.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp_6a137zv.php:16\nStack trace:\n#0 /tmp/tmp_6a137zv.php(26): find_max(Array)\n\
    #1 /tmp/tmp_6a137zv.php(30): candidate(Array)\n#2 /tmp/tmp_6a137zv.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_6a137zv.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n\t$max = 0;\n\t$max_word = \"\";\n\tforeach ($words\
    \ as $word) {\n\t\t$unique_chars = array_unique(str_split($word));\n\t\tif (count($unique_chars)\
    \ > $max) {\n\t\t\t$max = count($unique_chars);\n\t\t\t$max_word = $word;\n\t\t\
    }\n\t}\n\treturn $max_word;\n}\n\n$words = array(\"name\", \"of\", \"string\"\
    );\necho find_max($words);\necho \"\\n\";\n$words = array(\"name\", \"enam\",\
    \ \"game\");\necho find_max($words);\necho \"\\n\";\n$words = array(\"aaaaaaa\"\
    , \"bb\", \"cc\");\necho find_max($words);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpuio1tfg8.php:40\nStack trace:\n#0 /tmp/tmpuio1tfg8.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmpuio1tfg8.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_count = 0;\n    $max_word = '';\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpb2_uc1zq.php:16\nStack trace:\n#0 /tmp/tmpb2_uc1zq.php(26): find_max(Array)\n\
    #1 /tmp/tmpb2_uc1zq.php(30): candidate(Array)\n#2 /tmp/tmpb2_uc1zq.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpb2_uc1zq.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = '';\n    foreach ($words\
    \ as $word) {\n        $unique_chars = array_unique(str_split($word));\n     \
    \   if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\
    \\n\";\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\n\
    echo \"\\n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpaej3tuwc.php:40\nStack trace:\n#0 /tmp/tmpaej3tuwc.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmpaej3tuwc.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words) . \"\\n\"\
    ;\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words) . \"\\\
    n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words) . \"\
    \\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpcg13onpa.php:37\nStack trace:\n#0 /tmp/tmpcg13onpa.php(48): test()\n\
    #1 {main}\n  thrown in /tmp/tmpcg13onpa.php on line 37\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\
    \\n\";\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\n\
    echo \"\\n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp9dodw6ej.php:40\nStack trace:\n#0 /tmp/tmp9dodw6ej.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmp9dodw6ej.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = '';\n    foreach ($words\
    \ as $word) {\n        $unique_chars = array_unique(str_split($word));\n     \
    \   if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\
    <br>\";\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\n\
    echo \"<br>\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"<br>\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string<br>name<br>aaaaaaa<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpoxnypcnv.php:40\nStack trace:\n#0 /tmp/tmpoxnypcnv.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmpoxnypcnv.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = '';\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpu01dx9xz.php:16\nStack trace:\n#0 /tmp/tmpu01dx9xz.php(26): find_max(Array)\n\
    #1 /tmp/tmpu01dx9xz.php(30): candidate(Array)\n#2 /tmp/tmpu01dx9xz.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpu01dx9xz.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    /* Write a function that accepts a string. The string contains different\nwords\
    \ separated by spaces. Return the string with the words reversed.\n>>> reverse_words(\"\
    this is a string\")\n\"siht si a gnirts\"\n>>> reverse_words(\"hello world\")\n\
    \"olleh dlrow\"*/\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdmg66cyr.php:37\n\
    Stack trace:\n#0 /tmp/tmpdmg66cyr.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpdmg66cyr.php\
    \ on line 37\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = count_unique_chars($word);\n  \
    \      if ($unique_chars > $max) {\n            $max = $unique_chars;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpmklaudrm.php:16\nStack trace:\n#0 /tmp/tmpmklaudrm.php(26): find_max(Array)\n\
    #1 /tmp/tmpmklaudrm.php(30): candidate(Array)\n#2 /tmp/tmpmklaudrm.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpmklaudrm.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = '';\n    foreach ($words\
    \ as $word) {\n        $unique_chars = array_unique(str_split($word));\n     \
    \   if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\n$words2 = array(\"name\", \"enam\"\
    , \"game\");\n$words3 = array(\"aaaaaaa\", \"bb\", \"cc\");\n\necho find_max($words)\
    \ . \"\\n\";\necho find_max($words2) . \"\\n\";\necho find_max($words3) . \"\\\
    n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpt81m_bp4.php:38\nStack trace:\n#0 /tmp/tmpt81m_bp4.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpt81m_bp4.php on line 38\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = '';\n    foreach ($words\
    \ as $word) {\n        $unique_chars = array_unique(str_split($word));\n     \
    \   if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\
    \\n\";\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\n\
    echo \"\\n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpaej3tuwc.php:40\nStack trace:\n#0 /tmp/tmpaej3tuwc.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmpaej3tuwc.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp_6a137zv.php:16\nStack trace:\n#0 /tmp/tmp_6a137zv.php(26): find_max(Array)\n\
    #1 /tmp/tmp_6a137zv.php(30): candidate(Array)\n#2 /tmp/tmp_6a137zv.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_6a137zv.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = '';\n    foreach ($words\
    \ as $word) {\n        $unique_chars = array_unique(str_split($word));\n     \
    \   if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words) . \"\\n\"\
    ;\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words) . \"\\\
    n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words) . \"\
    \\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpf3jv89q2.php:37\nStack trace:\n#0 /tmp/tmpf3jv89q2.php(48): test()\n\
    #1 {main}\n  thrown in /tmp/tmpf3jv89q2.php on line 37\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp_6a137zv.php:16\nStack trace:\n#0 /tmp/tmp_6a137zv.php(26): find_max(Array)\n\
    #1 /tmp/tmp_6a137zv.php(30): candidate(Array)\n#2 /tmp/tmp_6a137zv.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_6a137zv.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = $words[0];\n    $max_unique_chars\
    \ = count_unique_chars($words[0]);\n    for ($i = 1; $i < count($words); $i++)\
    \ {\n        $unique_chars = count_unique_chars($words[$i]);\n        if ($unique_chars\
    \ > $max_unique_chars) {\n            $max_unique_chars = $unique_chars;\n   \
    \         $max_word = $words[$i];\n        }\n    }\n    return $max_word;\n}\n\
    \nfunction candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpzii6v09z.php:14\nStack trace:\n#0 /tmp/tmpzii6v09z.php(26): find_max(Array)\n\
    #1 /tmp/tmpzii6v09z.php(30): candidate(Array)\n#2 /tmp/tmpzii6v09z.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpzii6v09z.php on line 14\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = $words[0];\n    $max_count = count(array_unique(str_split($max_word)));\n\
    \    foreach ($words as $word) {\n        $count = count(array_unique(str_split($word)));\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n$words\
    \ = array(\"name\", \"of\", \"string\");\necho find_max($words) . \"\\n\";\n$words\
    \ = array(\"name\", \"enam\", \"game\");\necho find_max($words) . \"\\n\";\n$words\
    \ = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp_x297p31.php:37\nStack trace:\n#0 /tmp/tmp_x297p31.php(48): test()\n\
    #1 {main}\n  thrown in /tmp/tmp_x297p31.php on line 37\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = '';\n    foreach ($words\
    \ as $word) {\n        $unique_chars = array_unique(str_split($word));\n     \
    \   if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $array = array(\"name\", \"of\", \"string\");\necho find_max($array);\necho \"\
    <br>\";\n$array = array(\"name\", \"enam\", \"game\");\necho find_max($array);\n\
    echo \"<br>\";\n$array = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($array);\n\
    echo \"<br>\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string<br>name<br>aaaaaaa<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpdklz09oh.php:40\nStack trace:\n#0 /tmp/tmpdklz09oh.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmpdklz09oh.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = $words[0];\n    $max_count = count(array_unique(str_split($max_word)));\n\
    \    foreach ($words as $word) {\n        $count = count(array_unique(str_split($word)));\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n$words\
    \ = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\\n\"\
    ;\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\necho\
    \ \"\\n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp7_7i_zfh.php:40\nStack trace:\n#0 /tmp/tmp7_7i_zfh.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmp7_7i_zfh.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\
    \\n\";\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\n\
    echo \"\\n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp9dodw6ej.php:40\nStack trace:\n#0 /tmp/tmp9dodw6ej.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmp9dodw6ej.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n\t$max = 0;\n\t$max_word = \"\";\n\tforeach ($words\
    \ as $word) {\n\t\t$unique_chars = array_unique(str_split($word));\n\t\tif (count($unique_chars)\
    \ > $max) {\n\t\t\t$max = count($unique_chars);\n\t\t\t$max_word = $word;\n\t\t\
    }\n\t}\n\treturn $max_word;\n}\n\n$words = array(\"name\", \"of\", \"string\"\
    );\necho find_max($words);\necho \"\\n\";\n$words = array(\"name\", \"enam\",\
    \ \"game\");\necho find_max($words);\necho \"\\n\";\n$words = array(\"aaaaaaa\"\
    , \"bb\", \"cc\");\necho find_max($words);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpuio1tfg8.php:40\nStack trace:\n#0 /tmp/tmpuio1tfg8.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmpuio1tfg8.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_count = 0;\n    $max_word = '';\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpb2_uc1zq.php:16\nStack trace:\n#0 /tmp/tmpb2_uc1zq.php(26): find_max(Array)\n\
    #1 /tmp/tmpb2_uc1zq.php(30): candidate(Array)\n#2 /tmp/tmpb2_uc1zq.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpb2_uc1zq.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = $words[0];\n    $max_count = count(array_unique(str_split($max_word)));\n\
    \    foreach ($words as $word) {\n        $count = count(array_unique(str_split($word)));\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n$words\
    \ = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"<br>\"\
    ;\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\necho\
    \ \"<br>\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"<br>\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string<br>name<br>aaaaaaa<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp98rmdfl6.php:40\nStack trace:\n#0 /tmp/tmp98rmdfl6.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmp98rmdfl6.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = '';\n    foreach ($words\
    \ as $word) {\n        $unique_chars = array_unique(str_split($word));\n     \
    \   if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\
    \\n\";\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\n\
    echo \"\\n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpaej3tuwc.php:40\nStack trace:\n#0 /tmp/tmpaej3tuwc.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmpaej3tuwc.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = '';\n    foreach ($words\
    \ as $word) {\n        $unique_chars = array_unique(str_split($word));\n     \
    \   if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\
    \\n\";\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\n\
    echo \"\\n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpaej3tuwc.php:40\nStack trace:\n#0 /tmp/tmpaej3tuwc.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmpaej3tuwc.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfbrah_ye.php:33\n\
    Stack trace:\n#0 /tmp/tmpfbrah_ye.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpfbrah_ye.php\
    \ on line 33\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp_6a137zv.php:16\nStack trace:\n#0 /tmp/tmp_6a137zv.php(26): find_max(Array)\n\
    #1 /tmp/tmp_6a137zv.php(30): candidate(Array)\n#2 /tmp/tmp_6a137zv.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_6a137zv.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n\t$max = 0;\n\t$max_word = '';\n\tforeach ($words\
    \ as $word) {\n\t\t$unique_chars = array_unique(str_split($word));\n\t\tif (count($unique_chars)\
    \ > $max) {\n\t\t\t$max = count($unique_chars);\n\t\t\t$max_word = $word;\n\t\t\
    }\n\t}\n\treturn $max_word;\n}\n\necho find_max(array(\"name\", \"of\", \"string\"\
    ));\necho \"\\n\";\necho find_max(array(\"name\", \"enam\", \"game\"));\necho\
    \ \"\\n\";\necho find_max(array(\"aaaaaaa\", \"bb\", \"cc\"));\necho \"\\n\";\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpkrxftsmc.php:37\nStack trace:\n#0 /tmp/tmpkrxftsmc.php(48): test()\n\
    #1 {main}\n  thrown in /tmp/tmpkrxftsmc.php on line 37\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_unique_chars = 0;\n\
    \    foreach ($words as $word) {\n        $unique_chars = 0;\n        $chars =\
    \ str_split($word);\n        foreach ($chars as $char) {\n            if (strpos($word,\
    \ $char) === strrpos($word, $char)) {\n                $unique_chars++;\n    \
    \        }\n        }\n        if ($unique_chars > $max_unique_chars) {\n    \
    \        $max_unique_chars = $unique_chars;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}\n\n$words = array(\"name\", \"of\"\
    , \"string\");\necho find_max($words);\necho \"\\n\";\n\n$words = array(\"name\"\
    , \"enam\", \"game\");\necho find_max($words);\necho \"\\n\";\n\n$words = array(\"\
    aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9c72qlr2.php:48\n\
    Stack trace:\n#0 /tmp/tmp9c72qlr2.php(59): test()\n#1 {main}\n  thrown in /tmp/tmp9c72qlr2.php\
    \ on line 48\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = '';\n    foreach ($words\
    \ as $word) {\n        $unique_chars = array_unique(str_split($word));\n     \
    \   if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpad3w6td7.php:34\n\
    Stack trace:\n#0 /tmp/tmpad3w6td7.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpad3w6td7.php\
    \ on line 34\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n\t$max = 0;\n\t$max_word = \"\";\n\tforeach ($words\
    \ as $word) {\n\t\t$unique_chars = array_unique(str_split($word));\n\t\tif (count($unique_chars)\
    \ > $max) {\n\t\t\t$max = count($unique_chars);\n\t\t\t$max_word = $word;\n\t\t\
    }\n\t}\n\treturn $max_word;\n}\n\n$words = array(\"name\", \"of\", \"string\"\
    );\necho find_max($words) . \"\\n\";\n$words = array(\"name\", \"enam\", \"game\"\
    );\necho find_max($words) . \"\\n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\"\
    );\necho find_max($words) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpqhqua0yn.php:37\nStack trace:\n#0 /tmp/tmpqhqua0yn.php(48): test()\n\
    #1 {main}\n  thrown in /tmp/tmpqhqua0yn.php on line 37\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_unique_chars = 0;\n\
    \    foreach ($words as $word) {\n        $unique_chars = 0;\n        $chars =\
    \ str_split($word);\n        foreach ($chars as $char) {\n            if (strpos($word,\
    \ $char) === strrpos($word, $char)) {\n                $unique_chars++;\n    \
    \        }\n        }\n        if ($unique_chars > $max_unique_chars) {\n    \
    \        $max_unique_chars = $unique_chars;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}\n\necho find_max(array(\"name\", \"\
    of\", \"string\")) . \"\\n\";\necho find_max(array(\"name\", \"enam\", \"game\"\
    )) . \"\\n\";\necho find_max(array(\"aaaaaaa\", \"bb\", \"cc\")) . \"\\n\";\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfszusyek.php:40\n\
    Stack trace:\n#0 /tmp/tmpfszusyek.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpfszusyek.php\
    \ on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = '';\n    foreach ($words\
    \ as $word) {\n        $unique_chars = array_unique(str_split($word));\n     \
    \   if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\
    \\n\";\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\n\
    echo \"\\n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpaej3tuwc.php:40\nStack trace:\n#0 /tmp/tmpaej3tuwc.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmpaej3tuwc.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_unique_chars = 0;\n\
    \    foreach ($words as $word) {\n        $unique_chars = 0;\n        $chars =\
    \ str_split($word);\n        foreach ($chars as $char) {\n            if (strpos($word,\
    \ $char) === strrpos($word, $char)) {\n                $unique_chars++;\n    \
    \        }\n        }\n        if ($unique_chars > $max_unique_chars) {\n    \
    \        $max_unique_chars = $unique_chars;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}\n\n$words = array(\"name\", \"of\"\
    , \"string\");\necho find_max($words);\necho \"\\n\";\n$words = array(\"name\"\
    , \"enam\", \"game\");\necho find_max($words);\necho \"\\n\";\n$words = array(\"\
    aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpda37wmy1.php:46\n\
    Stack trace:\n#0 /tmp/tmpda37wmy1.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpda37wmy1.php\
    \ on line 46\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp_6a137zv.php:16\nStack trace:\n#0 /tmp/tmp_6a137zv.php(26): find_max(Array)\n\
    #1 /tmp/tmp_6a137zv.php(30): candidate(Array)\n#2 /tmp/tmp_6a137zv.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_6a137zv.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\
    echo find_max(array(\"name\", \"of\", \"string\"));\necho find_max(array(\"name\"\
    , \"enam\", \"game\"));\necho find_max(array(\"aaaaaaa\", \"bb\", \"cc\"));\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "stringnameaaaaaaa\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa_g1e_rp.php:33\n\
    Stack trace:\n#0 /tmp/tmpa_g1e_rp.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpa_g1e_rp.php\
    \ on line 33\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = '';\n    foreach ($words\
    \ as $word) {\n        $unique_chars = array_unique(str_split($word));\n     \
    \   if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\
    \\n\";\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\n\
    echo \"\\n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpaej3tuwc.php:40\nStack trace:\n#0 /tmp/tmpaej3tuwc.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmpaej3tuwc.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp_6a137zv.php:16\nStack trace:\n#0 /tmp/tmp_6a137zv.php(26): find_max(Array)\n\
    #1 /tmp/tmp_6a137zv.php(30): candidate(Array)\n#2 /tmp/tmp_6a137zv.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_6a137zv.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    /* Write a function that accepts an array of strings.\nThe array contains different\
    \ words. Return the word with maximum number\nof unique characters. If multiple\
    \ strings have maximum number of unique\ncharacters, return the one which comes\
    \ first in lexicographical order.\n>>> find_max(array(\"name\", \"of\", \"string\"\
    ))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"))\n\"enam\"\n\
    >>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpengi125_.php:41\n\
    Stack trace:\n#0 /tmp/tmpengi125_.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpengi125_.php\
    \ on line 41\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = '';\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpu01dx9xz.php:16\nStack trace:\n#0 /tmp/tmpu01dx9xz.php(26): find_max(Array)\n\
    #1 /tmp/tmpu01dx9xz.php(30): candidate(Array)\n#2 /tmp/tmpu01dx9xz.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpu01dx9xz.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = $words[0];\n    $max_count = count(array_unique(str_split($max_word)));\n\
    \    foreach ($words as $word) {\n        $count = count(array_unique(str_split($word)));\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n$words\
    \ = array(\"name\", \"of\", \"string\");\necho find_max($words);\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5htxfagn.php:32\n\
    Stack trace:\n#0 /tmp/tmp5htxfagn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5htxfagn.php\
    \ on line 32\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp_6a137zv.php:16\nStack trace:\n#0 /tmp/tmp_6a137zv.php(26): find_max(Array)\n\
    #1 /tmp/tmp_6a137zv.php(30): candidate(Array)\n#2 /tmp/tmp_6a137zv.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_6a137zv.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n  $max_word = $words[0];\n  $max_count = count_unique_chars($words[0]);\n\
    \  for ($i = 1; $i < count($words); $i++) {\n    $count = count_unique_chars($words[$i]);\n\
    \    if ($count > $max_count) {\n      $max_word = $words[$i];\n      $max_count\
    \ = $count;\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpwiavwf6u.php:14\nStack trace:\n#0 /tmp/tmpwiavwf6u.php(26): find_max(Array)\n\
    #1 /tmp/tmpwiavwf6u.php(30): candidate(Array)\n#2 /tmp/tmpwiavwf6u.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpwiavwf6u.php on line 14\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $word = \"\";\n    foreach ($words\
    \ as $w) {\n        $unique = array_unique(str_split($w));\n        if (count($unique)\
    \ > $max) {\n            $max = count($unique);\n            $word = $w;\n   \
    \     }\n    }\n    return $word;\n}\n$words = array(\"name\", \"of\", \"string\"\
    );\necho find_max($words);\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphzx2hrz6.php:32\n\
    Stack trace:\n#0 /tmp/tmphzx2hrz6.php(43): test()\n#1 {main}\n  thrown in /tmp/tmphzx2hrz6.php\
    \ on line 32\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n\t$max = 0;\n\t$max_word = '';\n\tforeach ($words\
    \ as $word) {\n\t\t$unique_chars = array_unique(str_split($word));\n\t\tif (count($unique_chars)\
    \ > $max) {\n\t\t\t$max = count($unique_chars);\n\t\t\t$max_word = $word;\n\t\t\
    }\n\t}\n\treturn $max_word;\n}\n\necho find_max(array(\"name\", \"of\", \"string\"\
    ));\necho find_max(array(\"name\", \"enam\", \"game\"));\necho find_max(array(\"\
    aaaaaaa\", \"bb\", \"cc\"));\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "stringnameaaaaaaa\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp20jisfkj.php:34\n\
    Stack trace:\n#0 /tmp/tmp20jisfkj.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp20jisfkj.php\
    \ on line 34\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_unique_chars = 0;\n\
    \    foreach ($words as $word) {\n        $unique_chars = 0;\n        $chars =\
    \ str_split($word);\n        foreach ($chars as $char) {\n            if (!strstr($max_word,\
    \ $char)) {\n                $unique_chars++;\n            }\n        }\n    \
    \    if ($unique_chars > $max_unique_chars) {\n            $max_unique_chars =\
    \ $unique_chars;\n            $max_word = $word;\n        }\n    }\n    return\
    \ $max_word;\n}\n\n/* Write a function that accepts a string as an argument.\n\
    The function should return the string with all the vowels removed.\n>>> remove_vowels(\"\
    name\")\n\"nm\"\n>>> remove_vowels(\"enam\")\n\"nm\"\n>>> remove_vowels(\"game\"\
    )\n\"gm\"*/\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5y8mhj5d.php:45\n\
    Stack trace:\n#0 /tmp/tmp5y8mhj5d.php(56): test()\n#1 {main}\n  thrown in /tmp/tmp5y8mhj5d.php\
    \ on line 45\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words) . \"\\n\"\
    ;\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words) . \"\\\
    n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words) . \"\
    \\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpcg13onpa.php:37\nStack trace:\n#0 /tmp/tmpcg13onpa.php(48): test()\n\
    #1 {main}\n  thrown in /tmp/tmpcg13onpa.php on line 37\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_unique_characters = 0;\n    $max_unique_word\
    \ = '';\n    foreach ($words as $word) {\n        $unique_characters = count_unique_characters($word);\n\
    \        if ($unique_characters > $max_unique_characters) {\n            $max_unique_characters\
    \ = $unique_characters;\n            $max_unique_word = $word;\n        }\n  \
    \  }\n    return $max_unique_word;\n}\n\nfunction candidate(...$args) {\n    return\
    \ find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_characters()\
    \ in /tmp/tmp7p4wd7kk.php:16\nStack trace:\n#0 /tmp/tmp7p4wd7kk.php(26): find_max(Array)\n\
    #1 /tmp/tmp7p4wd7kk.php(30): candidate(Array)\n#2 /tmp/tmp7p4wd7kk.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp7p4wd7kk.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp_6a137zv.php:16\nStack trace:\n#0 /tmp/tmp_6a137zv.php(26): find_max(Array)\n\
    #1 /tmp/tmp_6a137zv.php(30): candidate(Array)\n#2 /tmp/tmp_6a137zv.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_6a137zv.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\
    <br>\";\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\n\
    echo \"<br>\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"<br>\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string<br>name<br>aaaaaaa<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp7aavns_r.php:40\nStack trace:\n#0 /tmp/tmp7aavns_r.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmp7aavns_r.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = \"\";\n    foreach ($words as $word) {\n\
    \        if (strlen($word) > strlen($max)) {\n            $max = $word;\n    \
    \    }\n    }\n    return $max;\n}\n\n/* Write a function that accepts an array\
    \ of strings.\nThe array contains different words. Return the word with maximum\
    \ number\nof unique characters. If multiple strings have maximum number of unique\n\
    characters, return the one which comes first in lexicographical order.\n>>> find_max(array(\"\
    name\", \"of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\"\
    , \"game\"))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"\
    */\nfunction candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf72wc3hm.php:38\n\
    Stack trace:\n#0 /tmp/tmpf72wc3hm.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpf72wc3hm.php\
    \ on line 38\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp_6a137zv.php:16\nStack trace:\n#0 /tmp/tmp_6a137zv.php(26): find_max(Array)\n\
    #1 /tmp/tmp_6a137zv.php(30): candidate(Array)\n#2 /tmp/tmp_6a137zv.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_6a137zv.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp_6a137zv.php:16\nStack trace:\n#0 /tmp/tmp_6a137zv.php(26): find_max(Array)\n\
    #1 /tmp/tmp_6a137zv.php(30): candidate(Array)\n#2 /tmp/tmp_6a137zv.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_6a137zv.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\
    <br>\";\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\n\
    echo \"<br>\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"<br>\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string<br>name<br>aaaaaaa<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp7aavns_r.php:40\nStack trace:\n#0 /tmp/tmp7aavns_r.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmp7aavns_r.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpuw1w_bi5.php:16\nStack trace:\n#0 /tmp/tmpuw1w_bi5.php(25): find_max(Array)\n\
    #1 /tmp/tmpuw1w_bi5.php(29): candidate(Array)\n#2 /tmp/tmpuw1w_bi5.php(41): test()\n\
    #3 {main}\n  thrown in /tmp/tmpuw1w_bi5.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = $words[0];\n    $max_count = count(count_chars($max_word,\
    \ 1));\n    foreach ($words as $word) {\n        $count = count(count_chars($word,\
    \ 1));\n        if ($count > $max_count) {\n            $max_count = $count;\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\
    \\n\";\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\n\
    echo \"\\n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp8hndgict.php:40\nStack trace:\n#0 /tmp/tmp8hndgict.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmp8hndgict.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp_6a137zv.php:16\nStack trace:\n#0 /tmp/tmp_6a137zv.php(26): find_max(Array)\n\
    #1 /tmp/tmp_6a137zv.php(30): candidate(Array)\n#2 /tmp/tmp_6a137zv.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_6a137zv.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    /* Write a function that accepts an array of strings.\nThe array contains different\
    \ words. Return the word with maximum number\nof unique characters. If multiple\
    \ strings have maximum number of unique\ncharacters, return the one which comes\
    \ first in lexicographical order.\n>>> find_max(array(\"name\", \"of\", \"string\"\
    ))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"))\n\"enam\"\n\
    >>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpengi125_.php:41\n\
    Stack trace:\n#0 /tmp/tmpengi125_.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpengi125_.php\
    \ on line 41\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_unique_chars = 0;\n\
    \    foreach ($words as $word) {\n        $unique_chars = 0;\n        $chars =\
    \ str_split($word);\n        foreach ($chars as $char) {\n            if (strpos($word,\
    \ $char) === strrpos($word, $char)) {\n                $unique_chars++;\n    \
    \        }\n        }\n        if ($unique_chars > $max_unique_chars) {\n    \
    \        $max_unique_chars = $unique_chars;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}\n\n$words = array(\"name\", \"of\"\
    , \"string\");\necho find_max($words) . \"\\n\";\n$words = array(\"name\", \"\
    enam\", \"game\");\necho find_max($words) . \"\\n\";\n$words = array(\"aaaaaaa\"\
    , \"bb\", \"cc\");\necho find_max($words) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe1nflqyz.php:43\n\
    Stack trace:\n#0 /tmp/tmpe1nflqyz.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpe1nflqyz.php\
    \ on line 43\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = $words[0];\n    $max_count = count(array_unique(str_split($max_word)));\n\
    \    foreach ($words as $word) {\n        $count = count(array_unique(str_split($word)));\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n$words\
    \ = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"<br>\"\
    ;\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\necho\
    \ \"<br>\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"<br>\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string<br>name<br>aaaaaaa<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp98rmdfl6.php:40\nStack trace:\n#0 /tmp/tmp98rmdfl6.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmp98rmdfl6.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = '';\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpu01dx9xz.php:16\nStack trace:\n#0 /tmp/tmpu01dx9xz.php(26): find_max(Array)\n\
    #1 /tmp/tmpu01dx9xz.php(30): candidate(Array)\n#2 /tmp/tmpu01dx9xz.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpu01dx9xz.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        $unique_count = count($unique_chars);\n        if ($unique_count > $max_count)\
    \ {\n            $max_count = $unique_count;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}\n\n$words = array(\"name\", \"of\"\
    , \"string\");\necho find_max($words);\necho \"<br>\";\n$words = array(\"name\"\
    , \"enam\", \"game\");\necho find_max($words);\necho \"<br>\";\n$words = array(\"\
    aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\necho \"<br>\";\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string<br>name<br>aaaaaaa<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpuz231zpx.php:41\nStack trace:\n#0 /tmp/tmpuz231zpx.php(52): test()\n\
    #1 {main}\n  thrown in /tmp/tmpuz231zpx.php on line 41\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\
    <br>\";\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\n\
    echo \"<br>\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"<br>\";\n\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string<br>name<br>aaaaaaa<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpsg5r8e5v.php:51\nStack trace:\n#0 /tmp/tmpsg5r8e5v.php(62): test()\n\
    #1 {main}\n  thrown in /tmp/tmpsg5r8e5v.php on line 51\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = $words[0];\n    $max_count = count(array_unique(str_split($max_word)));\n\
    \    foreach ($words as $word) {\n        $count = count(array_unique(str_split($word)));\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n$words\
    \ = array(\"name\", \"of\", \"string\");\necho find_max($words);\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5htxfagn.php:32\n\
    Stack trace:\n#0 /tmp/tmp5htxfagn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5htxfagn.php\
    \ on line 32\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    /* Write a function that accepts an array of strings.\nThe array contains different\
    \ words. Return the word with maximum number\nof unique characters. If multiple\
    \ strings have maximum number of unique\ncharacters, return the one which comes\
    \ first in lexicographical order.\n>>> find_max(array(\"name\", \"of\", \"string\"\
    ))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"))\n\"enam\"\n\
    >>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpengi125_.php:41\n\
    Stack trace:\n#0 /tmp/tmpengi125_.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpengi125_.php\
    \ on line 41\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words) . \"\\n\"\
    ;\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words) . \"\\\
    n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words) . \"\
    \\n\";\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmptm883u2d.php:38\nStack trace:\n#0 /tmp/tmptm883u2d.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmptm883u2d.php on line 38\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n\t$max_word = '';\n\t$max_count = 0;\n\tforeach ($words\
    \ as $word) {\n\t\t$count = count_unique_chars($word);\n\t\tif ($count > $max_count)\
    \ {\n\t\t\t$max_count = $count;\n\t\t\t$max_word = $word;\n\t\t}\n\t}\n\treturn\
    \ $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp1sqcsr4s.php:16\nStack trace:\n#0 /tmp/tmp1sqcsr4s.php(26): find_max(Array)\n\
    #1 /tmp/tmp1sqcsr4s.php(30): candidate(Array)\n#2 /tmp/tmp1sqcsr4s.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp1sqcsr4s.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = $words[0];\n    $max_unique_chars\
    \ = count_unique_chars($words[0]);\n    foreach ($words as $word) {\n        $unique_chars\
    \ = count_unique_chars($word);\n        if ($unique_chars > $max_unique_chars)\
    \ {\n            $max_unique_chars = $unique_chars;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpv78gy17l.php:14\nStack trace:\n#0 /tmp/tmpv78gy17l.php(26): find_max(Array)\n\
    #1 /tmp/tmpv78gy17l.php(30): candidate(Array)\n#2 /tmp/tmpv78gy17l.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpv78gy17l.php on line 14\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = '';\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpu01dx9xz.php:16\nStack trace:\n#0 /tmp/tmpu01dx9xz.php(26): find_max(Array)\n\
    #1 /tmp/tmpu01dx9xz.php(30): candidate(Array)\n#2 /tmp/tmpu01dx9xz.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpu01dx9xz.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = $words[0];\n    $max_count = count(array_unique(str_split($max_word)));\n\
    \    foreach ($words as $word) {\n        $count = count(array_unique(str_split($word)));\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n$words\
    \ = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\\n\"\
    ;\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\necho\
    \ \"\\n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp7_7i_zfh.php:40\nStack trace:\n#0 /tmp/tmp7_7i_zfh.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmp7_7i_zfh.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_unique_chars = 0;\n\
    \    foreach ($words as $word) {\n        $unique_chars = 0;\n        $chars =\
    \ str_split($word);\n        foreach ($chars as $char) {\n            if (strpos($word,\
    \ $char) === strrpos($word, $char)) {\n                $unique_chars++;\n    \
    \        }\n        }\n        if ($unique_chars > $max_unique_chars) {\n    \
    \        $max_unique_chars = $unique_chars;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}\n\n$words = array(\"name\", \"of\"\
    , \"string\");\necho find_max($words);\necho \"\\n\";\n$words = array(\"name\"\
    , \"enam\", \"game\");\necho find_max($words);\necho \"\\n\";\n$words = array(\"\
    aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpda37wmy1.php:46\n\
    Stack trace:\n#0 /tmp/tmpda37wmy1.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpda37wmy1.php\
    \ on line 46\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n\t$max = 0;\n\t$max_word = '';\n\tforeach ($words\
    \ as $word) {\n\t\t$unique_chars = array_unique(str_split($word));\n\t\tif (count($unique_chars)\
    \ > $max) {\n\t\t\t$max = count($unique_chars);\n\t\t\t$max_word = $word;\n\t\t\
    }\n\t}\n\treturn $max_word;\n}\n\n/* Write a function that accepts an array of\
    \ strings.\nThe array contains different words. Return the word with maximum number\n\
    of unique characters. If multiple strings have maximum number of unique\ncharacters,\
    \ return the one which comes first in lexicographical order.\n>>> find_max(array(\"\
    name\", \"of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\"\
    , \"game\"))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"\
    */\nfunction candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp96t9e2xq.php:41\n\
    Stack trace:\n#0 /tmp/tmp96t9e2xq.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp96t9e2xq.php\
    \ on line 41\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\
    <br>\";\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\n\
    echo \"<br>\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string<br>name<br>aaaaaaa\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpe6ug3xe6.php:38\nStack trace:\n#0 /tmp/tmpe6ug3xe6.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpe6ug3xe6.php on line 38\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\
    \\n\";\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\n\
    echo \"\\n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp9dodw6ej.php:40\nStack trace:\n#0 /tmp/tmp9dodw6ej.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmp9dodw6ej.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n  $max_word = \"\";\n  $max_count = 0;\n  foreach\
    \ ($words as $word) {\n    $count = count_unique_chars($word);\n    if ($count\
    \ > $max_count) {\n      $max_count = $count;\n      $max_word = $word;\n    }\n\
    \  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmplsz2t46j.php:16\nStack trace:\n#0 /tmp/tmplsz2t46j.php(26): find_max(Array)\n\
    #1 /tmp/tmplsz2t46j.php(30): candidate(Array)\n#2 /tmp/tmplsz2t46j.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmplsz2t46j.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = $words[0];\n    $max_count = count(count_chars($max_word,\
    \ 1));\n    foreach ($words as $word) {\n        $count = count(count_chars($word,\
    \ 1));\n        if ($count > $max_count) {\n            $max_count = $count;\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\
    <br>\";\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\n\
    echo \"<br>\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string<br>name<br>aaaaaaa\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpzttrngd3.php:39\nStack trace:\n#0 /tmp/tmpzttrngd3.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmpzttrngd3.php on line 39\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\
    \\n\";\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\n\
    echo \"\\n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp9dodw6ej.php:40\nStack trace:\n#0 /tmp/tmp9dodw6ej.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmp9dodw6ej.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_characters($word);\n    \
    \    if ($count > $max_count) {\n            $max_count = $count;\n          \
    \  $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_characters()\
    \ in /tmp/tmpjki942i1.php:16\nStack trace:\n#0 /tmp/tmpjki942i1.php(26): find_max(Array)\n\
    #1 /tmp/tmpjki942i1.php(30): candidate(Array)\n#2 /tmp/tmpjki942i1.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpjki942i1.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp_6a137zv.php:16\nStack trace:\n#0 /tmp/tmp_6a137zv.php(26): find_max(Array)\n\
    #1 /tmp/tmp_6a137zv.php(30): candidate(Array)\n#2 /tmp/tmp_6a137zv.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_6a137zv.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\
    \\n\";\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\n\
    echo \"\\n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp9dodw6ej.php:40\nStack trace:\n#0 /tmp/tmp9dodw6ej.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmp9dodw6ej.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = '';\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        $unique_count = count($unique_chars);\n        if ($unique_count > $max_count)\
    \ {\n            $max_count = $unique_count;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}\n\n$words = array(\"name\", \"of\"\
    , \"string\");\necho find_max($words);\necho \"<br>\";\n$words = array(\"name\"\
    , \"enam\", \"game\");\necho find_max($words);\necho \"<br>\";\n$words = array(\"\
    aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\necho \"<br>\";\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string<br>name<br>aaaaaaa<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmprh5ajpem.php:41\nStack trace:\n#0 /tmp/tmprh5ajpem.php(52): test()\n\
    #1 {main}\n  thrown in /tmp/tmprh5ajpem.php on line 41\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = $words[0];\n    $max_count = count(array_unique(str_split($max_word)));\n\
    \    foreach ($words as $word) {\n        $count = count(array_unique(str_split($word)));\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\necho\
    \ find_max(array(\"name\", \"of\", \"string\"));\necho find_max(array(\"name\"\
    , \"enam\", \"game\"));\necho find_max(array(\"aaaaaaa\", \"bb\", \"cc\"));\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "stringnameaaaaaaa\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjbosi5yx.php:34\n\
    Stack trace:\n#0 /tmp/tmpjbosi5yx.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpjbosi5yx.php\
    \ on line 34\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\
    <br>\";\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\n\
    echo \"<br>\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"<br>\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string<br>name<br>aaaaaaa<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp7aavns_r.php:40\nStack trace:\n#0 /tmp/tmp7aavns_r.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmp7aavns_r.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        $unique_count = count($unique_chars);\n        if ($unique_count > $max_count)\
    \ {\n            $max_count = $unique_count;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}\n\n$words = array(\"name\", \"of\"\
    , \"string\");\necho find_max($words);\necho \"\\n\";\n$words = array(\"name\"\
    , \"enam\", \"game\");\necho find_max($words);\necho \"\\n\";\n$words = array(\"\
    aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpugmlh5xb.php:41\nStack trace:\n#0 /tmp/tmpugmlh5xb.php(52): test()\n\
    #1 {main}\n  thrown in /tmp/tmpugmlh5xb.php on line 41\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $chars = array();\n        $count = 0;\n      \
    \  for ($i = 0; $i < strlen($word); $i++) {\n            if (!in_array($word[$i],\
    \ $chars)) {\n                $chars[] = $word[$i];\n                $count++;\n\
    \            }\n        }\n        if ($count > $max) {\n            $max = $count;\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words) . \"\\n\"\
    ;\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words) . \"\\\
    n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words) . \"\
    \\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = $words[0];\n    $max_count = count(array_unique(str_split($max_word)));\n\
    \    foreach ($words as $word) {\n        $count = count(array_unique(str_split($word)));\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n$words\
    \ = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"<br>\"\
    ;\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\necho\
    \ \"<br>\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string<br>name<br>aaaaaaa\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpgz34zqto.php:39\nStack trace:\n#0 /tmp/tmpgz34zqto.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmpgz34zqto.php on line 39\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = $words[0];\n    $max_unique_characters\
    \ = count_unique_characters($words[0]);\n    for ($i = 1; $i < count($words);\
    \ $i++) {\n        $unique_characters = count_unique_characters($words[$i]);\n\
    \        if ($unique_characters > $max_unique_characters) {\n            $max_unique_characters\
    \ = $unique_characters;\n            $max_word = $words[$i];\n        }\n    }\n\
    \    return $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_characters()\
    \ in /tmp/tmp46xco413.php:14\nStack trace:\n#0 /tmp/tmp46xco413.php(26): find_max(Array)\n\
    #1 /tmp/tmp46xco413.php(30): candidate(Array)\n#2 /tmp/tmp46xco413.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp46xco413.php on line 14\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp_6a137zv.php:16\nStack trace:\n#0 /tmp/tmp_6a137zv.php(26): find_max(Array)\n\
    #1 /tmp/tmp_6a137zv.php(30): candidate(Array)\n#2 /tmp/tmp_6a137zv.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_6a137zv.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\
    \\n\";\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\n\
    echo \"\\n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp9dodw6ej.php:40\nStack trace:\n#0 /tmp/tmp9dodw6ej.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmp9dodw6ej.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = '';\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpu01dx9xz.php:16\nStack trace:\n#0 /tmp/tmpu01dx9xz.php(26): find_max(Array)\n\
    #1 /tmp/tmpu01dx9xz.php(30): candidate(Array)\n#2 /tmp/tmpu01dx9xz.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpu01dx9xz.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = '';\n    foreach ($words\
    \ as $word) {\n        $unique_chars = array_unique(str_split($word));\n     \
    \   if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\
    <br>\";\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\n\
    echo \"<br>\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"<br>\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string<br>name<br>aaaaaaa<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpoxnypcnv.php:40\nStack trace:\n#0 /tmp/tmpoxnypcnv.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmpoxnypcnv.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = $words[0];\n    $max_unique_chars\
    \ = count_unique_chars($words[0]);\n    foreach ($words as $word) {\n        $unique_chars\
    \ = count_unique_chars($word);\n        if ($unique_chars > $max_unique_chars)\
    \ {\n            $max_unique_chars = $unique_chars;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpv78gy17l.php:14\nStack trace:\n#0 /tmp/tmpv78gy17l.php(26): find_max(Array)\n\
    #1 /tmp/tmpv78gy17l.php(30): candidate(Array)\n#2 /tmp/tmpv78gy17l.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpv78gy17l.php on line 14\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = $words[0];\n    $max_unique_chars\
    \ = count_unique_chars($words[0]);\n    foreach ($words as $word) {\n        $unique_chars\
    \ = count_unique_chars($word);\n        if ($unique_chars > $max_unique_chars)\
    \ {\n            $max_unique_chars = $unique_chars;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpv78gy17l.php:14\nStack trace:\n#0 /tmp/tmpv78gy17l.php(26): find_max(Array)\n\
    #1 /tmp/tmpv78gy17l.php(30): candidate(Array)\n#2 /tmp/tmpv78gy17l.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpv78gy17l.php on line 14\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp_6a137zv.php:16\nStack trace:\n#0 /tmp/tmp_6a137zv.php(26): find_max(Array)\n\
    #1 /tmp/tmp_6a137zv.php(30): candidate(Array)\n#2 /tmp/tmp_6a137zv.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_6a137zv.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = '';\n    foreach ($words\
    \ as $word) {\n        $unique_chars = array_unique(str_split($word));\n     \
    \   if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaiolhhk7.php:33\n\
    Stack trace:\n#0 /tmp/tmpaiolhhk7.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpaiolhhk7.php\
    \ on line 33\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\
    \\n\";\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\n\
    echo \"\\n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp9dodw6ej.php:40\nStack trace:\n#0 /tmp/tmp9dodw6ej.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmp9dodw6ej.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n  $max_word = \"\";\n  $max_count = 0;\n  foreach\
    \ ($words as $word) {\n    $count = count_unique_chars($word);\n    if ($count\
    \ > $max_count) {\n      $max_count = $count;\n      $max_word = $word;\n    }\n\
    \  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmplsz2t46j.php:16\nStack trace:\n#0 /tmp/tmplsz2t46j.php(26): find_max(Array)\n\
    #1 /tmp/tmplsz2t46j.php(30): candidate(Array)\n#2 /tmp/tmplsz2t46j.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmplsz2t46j.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = '';\n    foreach ($words\
    \ as $word) {\n        $unique_chars = array_unique(str_split($word));\n     \
    \   if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\
    <br>\";\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\n\
    echo \"<br>\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"<br>\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string<br>name<br>aaaaaaa<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpoxnypcnv.php:40\nStack trace:\n#0 /tmp/tmpoxnypcnv.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmpoxnypcnv.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\
    \\n\";\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\n\
    echo \"\\n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp9dodw6ej.php:40\nStack trace:\n#0 /tmp/tmp9dodw6ej.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmp9dodw6ej.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp_6a137zv.php:16\nStack trace:\n#0 /tmp/tmp_6a137zv.php(26): find_max(Array)\n\
    #1 /tmp/tmp_6a137zv.php(30): candidate(Array)\n#2 /tmp/tmp_6a137zv.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_6a137zv.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpuw1w_bi5.php:16\nStack trace:\n#0 /tmp/tmpuw1w_bi5.php(25): find_max(Array)\n\
    #1 /tmp/tmpuw1w_bi5.php(29): candidate(Array)\n#2 /tmp/tmpuw1w_bi5.php(41): test()\n\
    #3 {main}\n  thrown in /tmp/tmpuw1w_bi5.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_count = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = '';\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        $unique_count = count($unique_chars);\n        if ($unique_count > $max_count)\
    \ {\n            $max_count = $unique_count;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}\n\n$words = array(\"name\", \"of\"\
    , \"string\");\necho find_max($words);\necho \"<br>\";\n$words = array(\"name\"\
    , \"enam\", \"game\");\necho find_max($words);\necho \"<br>\";\n$words = array(\"\
    aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\necho \"<br>\";\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string<br>name<br>aaaaaaa<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmprh5ajpem.php:41\nStack trace:\n#0 /tmp/tmprh5ajpem.php(52): test()\n\
    #1 {main}\n  thrown in /tmp/tmprh5ajpem.php on line 41\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = '';\n    foreach ($words\
    \ as $word) {\n        $unique_chars = array_unique(str_split($word));\n     \
    \   if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    /* Write a function that accepts an array of strings.\nThe array contains different\
    \ words. Return the word with maximum number\nof unique characters. If multiple\
    \ strings have maximum number of unique\ncharacters, return the one which comes\
    \ first in lexicographical order.\n>>> find_max(array(\"name\", \"of\", \"string\"\
    ))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"))\n\"enam\"\n\
    >>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0yidm1xb.php:41\n\
    Stack trace:\n#0 /tmp/tmp0yidm1xb.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp0yidm1xb.php\
    \ on line 41\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\
    \\n\";\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\n\
    echo \"\\n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp9dodw6ej.php:40\nStack trace:\n#0 /tmp/tmp9dodw6ej.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmp9dodw6ej.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp_6a137zv.php:16\nStack trace:\n#0 /tmp/tmp_6a137zv.php(26): find_max(Array)\n\
    #1 /tmp/tmp_6a137zv.php(30): candidate(Array)\n#2 /tmp/tmp_6a137zv.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_6a137zv.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\
    \\n\";\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\n\
    echo \"\\n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp9dodw6ej.php:40\nStack trace:\n#0 /tmp/tmp9dodw6ej.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmp9dodw6ej.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $unique_chars = [];\n        for ($i = 0; $i <\
    \ strlen($word); $i++) {\n            if (!in_array($word[$i], $unique_chars))\
    \ {\n                $unique_chars[] = $word[$i];\n            }\n        }\n\
    \        if (count($unique_chars) > $max_count) {\n            $max_count = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = [\"name\", \"of\", \"string\"];\necho find_max($words);\necho \"<br>\"\
    ;\n$words = [\"name\", \"enam\", \"game\"];\necho find_max($words);\necho \"<br>\"\
    ;\n$words = [\"aaaaaaa\", \"bb\", \"cc\"];\necho find_max($words);\necho \"<br>\"\
    ;\nfunction candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string<br>name<br>aaaaaaa<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpwohxi5fn.php:45\nStack trace:\n#0 /tmp/tmpwohxi5fn.php(56): test()\n\
    #1 {main}\n  thrown in /tmp/tmpwohxi5fn.php on line 45\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\
    \\n\";\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\n\
    echo \"\\n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp9dodw6ej.php:40\nStack trace:\n#0 /tmp/tmp9dodw6ej.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmp9dodw6ej.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_count = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\
    <br>\";\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\n\
    echo \"<br>\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"<br>\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string<br>name<br>aaaaaaa<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp7aavns_r.php:40\nStack trace:\n#0 /tmp/tmp7aavns_r.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmp7aavns_r.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = '';\n    foreach ($words\
    \ as $word) {\n        $unique_chars = array_unique(str_split($word));\n     \
    \   if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\
    \\n\";\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\n\
    echo \"\\n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpaej3tuwc.php:40\nStack trace:\n#0 /tmp/tmpaej3tuwc.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmpaej3tuwc.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = '';\n    $max_unique_chars = 0;\n\
    \    foreach ($words as $word) {\n        $unique_chars = count_unique_chars($word);\n\
    \        if ($unique_chars > $max_unique_chars) {\n            $max_unique_chars\
    \ = $unique_chars;\n            $max_word = $word;\n        }\n    }\n    return\
    \ $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpak5au9ng.php:16\nStack trace:\n#0 /tmp/tmpak5au9ng.php(26): find_max(Array)\n\
    #1 /tmp/tmpak5au9ng.php(30): candidate(Array)\n#2 /tmp/tmpak5au9ng.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpak5au9ng.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\
    \\n\";\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\n\
    echo \"\\n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp9dodw6ej.php:40\nStack trace:\n#0 /tmp/tmp9dodw6ej.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmp9dodw6ej.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\
    <br>\";\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\n\
    echo \"<br>\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"<br>\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string<br>name<br>aaaaaaa<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp7aavns_r.php:40\nStack trace:\n#0 /tmp/tmp7aavns_r.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmp7aavns_r.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp_6a137zv.php:16\nStack trace:\n#0 /tmp/tmp_6a137zv.php(26): find_max(Array)\n\
    #1 /tmp/tmp_6a137zv.php(30): candidate(Array)\n#2 /tmp/tmp_6a137zv.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_6a137zv.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_count = 0;\n    $max_word = '';\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp2xdbj0by.php:16\nStack trace:\n#0 /tmp/tmp2xdbj0by.php(25): find_max(Array)\n\
    #1 /tmp/tmp2xdbj0by.php(29): candidate(Array)\n#2 /tmp/tmp2xdbj0by.php(41): test()\n\
    #3 {main}\n  thrown in /tmp/tmp2xdbj0by.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words) . \"\\n\"\
    ;\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words) . \"\\\
    n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words) . \"\
    \\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpcg13onpa.php:37\nStack trace:\n#0 /tmp/tmpcg13onpa.php(48): test()\n\
    #1 {main}\n  thrown in /tmp/tmpcg13onpa.php on line 37\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = '';\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpu01dx9xz.php:16\nStack trace:\n#0 /tmp/tmpu01dx9xz.php(26): find_max(Array)\n\
    #1 /tmp/tmpu01dx9xz.php(30): candidate(Array)\n#2 /tmp/tmpu01dx9xz.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpu01dx9xz.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n\t$max_word = $words[0];\n\t$max_count = count_unique_chars($words[0]);\n\
    \tfor ($i = 1; $i < count($words); $i++) {\n\t\t$count = count_unique_chars($words[$i]);\n\
    \t\tif ($count > $max_count) {\n\t\t\t$max_count = $count;\n\t\t\t$max_word =\
    \ $words[$i];\n\t\t}\n\t}\n\treturn $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpho9btfd0.php:14\nStack trace:\n#0 /tmp/tmpho9btfd0.php(26): find_max(Array)\n\
    #1 /tmp/tmpho9btfd0.php(30): candidate(Array)\n#2 /tmp/tmpho9btfd0.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpho9btfd0.php on line 14\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\
    <br>\";\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\n\
    echo \"<br>\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string<br>name<br>aaaaaaa\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpbywlia84.php:39\nStack trace:\n#0 /tmp/tmpbywlia84.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmpbywlia84.php on line 39\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\
    \\n\";\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\n\
    echo \"\\n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp9dodw6ej.php:40\nStack trace:\n#0 /tmp/tmp9dodw6ej.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmp9dodw6ej.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_unique_chars = 0;\n\
    \    foreach ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max_unique_chars) {\n            $max_unique_chars\
    \ = count($unique_chars);\n            $max_word = $word;\n        }\n    }\n\
    \    return $max_word;\n}\n\n$words = array(\"name\", \"of\", \"string\");\necho\
    \ find_max($words);\necho \"\\n\";\n$words = array(\"name\", \"enam\", \"game\"\
    );\necho find_max($words);\necho \"\\n\";\n$words = array(\"aaaaaaa\", \"bb\"\
    , \"cc\");\necho find_max($words);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpvlwjbv14.php:40\nStack trace:\n#0 /tmp/tmpvlwjbv14.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmpvlwjbv14.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = $words[0];\n    $max_unique_chars\
    \ = count_unique_chars($words[0]);\n    foreach ($words as $word) {\n        $unique_chars\
    \ = count_unique_chars($word);\n        if ($unique_chars > $max_unique_chars)\
    \ {\n            $max_unique_chars = $unique_chars;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpdy43qok1.php:14\nStack trace:\n#0 /tmp/tmpdy43qok1.php(25): find_max(Array)\n\
    #1 /tmp/tmpdy43qok1.php(29): candidate(Array)\n#2 /tmp/tmpdy43qok1.php(41): test()\n\
    #3 {main}\n  thrown in /tmp/tmpdy43qok1.php on line 14\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = $words[0];\n    $max_count = count(array_unique(str_split($max_word)));\n\
    \    foreach ($words as $word) {\n        $count = count(array_unique(str_split($word)));\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n$words\
    \ = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\\n\"\
    ;\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\necho\
    \ \"\\n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp7_7i_zfh.php:40\nStack trace:\n#0 /tmp/tmp7_7i_zfh.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmp7_7i_zfh.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpuw1w_bi5.php:16\nStack trace:\n#0 /tmp/tmpuw1w_bi5.php(25): find_max(Array)\n\
    #1 /tmp/tmpuw1w_bi5.php(29): candidate(Array)\n#2 /tmp/tmpuw1w_bi5.php(41): test()\n\
    #3 {main}\n  thrown in /tmp/tmpuw1w_bi5.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp_6a137zv.php:16\nStack trace:\n#0 /tmp/tmp_6a137zv.php(26): find_max(Array)\n\
    #1 /tmp/tmp_6a137zv.php(30): candidate(Array)\n#2 /tmp/tmp_6a137zv.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_6a137zv.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = '';\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpu01dx9xz.php:16\nStack trace:\n#0 /tmp/tmpu01dx9xz.php(26): find_max(Array)\n\
    #1 /tmp/tmpu01dx9xz.php(30): candidate(Array)\n#2 /tmp/tmpu01dx9xz.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpu01dx9xz.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n\t$max_count = 0;\n\t$max_word = \"\";\n\tforeach\
    \ ($words as $word) {\n\t\t$count = count_unique_chars($word);\n\t\tif ($count\
    \ > $max_count) {\n\t\t\t$max_count = $count;\n\t\t\t$max_word = $word;\n\t\t\
    }\n\t}\n\treturn $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmptqzelqbt.php:16\nStack trace:\n#0 /tmp/tmptqzelqbt.php(26): find_max(Array)\n\
    #1 /tmp/tmptqzelqbt.php(30): candidate(Array)\n#2 /tmp/tmptqzelqbt.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmptqzelqbt.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = '';\n    foreach ($words\
    \ as $word) {\n        $unique_chars = array_unique(str_split($word));\n     \
    \   if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words) . PHP_EOL;\n\
    $words = array(\"name\", \"enam\", \"game\");\necho find_max($words) . PHP_EOL;\n\
    $words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words) . PHP_EOL;\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp8aj14_sb.php:37\nStack trace:\n#0 /tmp/tmp8aj14_sb.php(48): test()\n\
    #1 {main}\n  thrown in /tmp/tmp8aj14_sb.php on line 37\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        $count = count($unique_chars);\n        if ($count > $max_count) {\n\
    \            $max_count = $count;\n            $max_word = $word;\n        }\n\
    \    }\n    return $max_word;\n}\n\n$words = array(\"name\", \"of\", \"string\"\
    );\necho find_max($words);\necho \"\\n\";\n\n$words = array(\"name\", \"enam\"\
    , \"game\");\necho find_max($words);\necho \"\\n\";\n\n$words = array(\"aaaaaaa\"\
    , \"bb\", \"cc\");\necho find_max($words);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpoza0l58o.php:43\nStack trace:\n#0 /tmp/tmpoza0l58o.php(54): test()\n\
    #1 {main}\n  thrown in /tmp/tmpoza0l58o.php on line 43\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\
    \\n\";\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\n\
    echo \"\\n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp9dodw6ej.php:40\nStack trace:\n#0 /tmp/tmp9dodw6ej.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmp9dodw6ej.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = $words[0];\n    $max_count = count(array_unique(str_split($max_word)));\n\
    \    foreach ($words as $word) {\n        $count = count(array_unique(str_split($word)));\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n$words\
    \ = array(\"name\", \"of\", \"string\");\necho find_max($words);\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4btht089.php:34\n\
    Stack trace:\n#0 /tmp/tmp4btht089.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp4btht089.php\
    \ on line 34\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp_6a137zv.php:16\nStack trace:\n#0 /tmp/tmp_6a137zv.php(26): find_max(Array)\n\
    #1 /tmp/tmp_6a137zv.php(30): candidate(Array)\n#2 /tmp/tmp_6a137zv.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_6a137zv.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp_6a137zv.php:16\nStack trace:\n#0 /tmp/tmp_6a137zv.php(26): find_max(Array)\n\
    #1 /tmp/tmp_6a137zv.php(30): candidate(Array)\n#2 /tmp/tmp_6a137zv.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_6a137zv.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\
    \\n\";\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\n\
    echo \"\\n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp9dodw6ej.php:40\nStack trace:\n#0 /tmp/tmp9dodw6ej.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmp9dodw6ej.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = $words[0];\n    $max_unique_chars\
    \ = count_unique_chars($words[0]);\n    for ($i = 1; $i < count($words); $i++)\
    \ {\n        $unique_chars = count_unique_chars($words[$i]);\n        if ($unique_chars\
    \ > $max_unique_chars) {\n            $max_unique_chars = $unique_chars;\n   \
    \         $max_word = $words[$i];\n        }\n    }\n    return $max_word;\n}\n\
    \nfunction candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpzii6v09z.php:14\nStack trace:\n#0 /tmp/tmpzii6v09z.php(26): find_max(Array)\n\
    #1 /tmp/tmpzii6v09z.php(30): candidate(Array)\n#2 /tmp/tmpzii6v09z.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpzii6v09z.php on line 14\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_len = 0;\n    foreach\
    \ ($words as $word) {\n        $chars = array();\n        for ($i = 0; $i < strlen($word);\
    \ $i++) {\n            $chars[$word[$i]] = true;\n        }\n        $len = count($chars);\n\
    \        if ($len > $max_len) {\n            $max_len = $len;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\n$words = array(\"name\"\
    , \"of\", \"string\");\necho find_max($words);\necho \"\\n\";\n$words = array(\"\
    name\", \"enam\", \"game\");\necho find_max($words);\necho \"\\n\";\n$words =\
    \ array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\necho \"\\n\";\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpyw_266vh.php:44\nStack trace:\n#0 /tmp/tmpyw_266vh.php(55): test()\n\
    #1 {main}\n  thrown in /tmp/tmpyw_266vh.php on line 44\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp_6a137zv.php:16\nStack trace:\n#0 /tmp/tmp_6a137zv.php(26): find_max(Array)\n\
    #1 /tmp/tmp_6a137zv.php(30): candidate(Array)\n#2 /tmp/tmp_6a137zv.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_6a137zv.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = $words[0];\n    $max_unique_chars\
    \ = count_unique_chars($words[0]);\n    for ($i = 1; $i < count($words); $i++)\
    \ {\n        $unique_chars = count_unique_chars($words[$i]);\n        if ($unique_chars\
    \ > $max_unique_chars) {\n            $max_unique_chars = $unique_chars;\n   \
    \         $max_word = $words[$i];\n        }\n    }\n    return $max_word;\n}\n\
    \nfunction candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpzii6v09z.php:14\nStack trace:\n#0 /tmp/tmpzii6v09z.php(26): find_max(Array)\n\
    #1 /tmp/tmpzii6v09z.php(30): candidate(Array)\n#2 /tmp/tmpzii6v09z.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpzii6v09z.php on line 14\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n  $max_word = $words[0];\n  $max_count = count_unique_chars($words[0]);\n\
    \  for ($i = 1; $i < count($words); $i++) {\n    $count = count_unique_chars($words[$i]);\n\
    \    if ($count > $max_count) {\n      $max_word = $words[$i];\n      $max_count\
    \ = $count;\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpwiavwf6u.php:14\nStack trace:\n#0 /tmp/tmpwiavwf6u.php(26): find_max(Array)\n\
    #1 /tmp/tmpwiavwf6u.php(30): candidate(Array)\n#2 /tmp/tmpwiavwf6u.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpwiavwf6u.php on line 14\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_count = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = $words[0];\n    $max_count = count(array_unique(str_split($max_word)));\n\
    \    foreach ($words as $word) {\n        $count = count(array_unique(str_split($word)));\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n$words\
    \ = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"<br>\"\
    ;\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\necho\
    \ \"<br>\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string<br>name<br>aaaaaaa\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpgz34zqto.php:39\nStack trace:\n#0 /tmp/tmpgz34zqto.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmpgz34zqto.php on line 39\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = '';\n    foreach ($words\
    \ as $word) {\n        $unique_chars = array_unique(str_split($word));\n     \
    \   if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\
    <br>\";\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\n\
    echo \"<br>\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"<br>\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string<br>name<br>aaaaaaa<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpoxnypcnv.php:40\nStack trace:\n#0 /tmp/tmpoxnypcnv.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmpoxnypcnv.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = $words[0];\n    $max_unique_chars\
    \ = count_unique_chars($words[0]);\n    for ($i = 1; $i < count($words); $i++)\
    \ {\n        $unique_chars = count_unique_chars($words[$i]);\n        if ($unique_chars\
    \ > $max_unique_chars) {\n            $max_unique_chars = $unique_chars;\n   \
    \         $max_word = $words[$i];\n        }\n    }\n    return $max_word;\n}\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmprpw5m560.php:14\nStack trace:\n#0 /tmp/tmprpw5m560.php(25): find_max(Array)\n\
    #1 /tmp/tmprpw5m560.php(29): candidate(Array)\n#2 /tmp/tmprpw5m560.php(41): test()\n\
    #3 {main}\n  thrown in /tmp/tmprpw5m560.php on line 14\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $chars = str_split($word);\n        $unique_chars\
    \ = array_unique($chars);\n        $count = count($unique_chars);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\n$words = array(\"name\"\
    , \"of\", \"string\");\necho find_max($words);\necho \"\\n\";\n$words = array(\"\
    name\", \"enam\", \"game\");\necho find_max($words);\necho \"\\n\";\n$words =\
    \ array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\necho \"\\n\";\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpg9j8oy8f.php:42\nStack trace:\n#0 /tmp/tmpg9j8oy8f.php(53): test()\n\
    #1 {main}\n  thrown in /tmp/tmpg9j8oy8f.php on line 42\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\
    <br>\";\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\n\
    echo \"<br>\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"<br>\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string<br>name<br>aaaaaaa<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp7aavns_r.php:40\nStack trace:\n#0 /tmp/tmp7aavns_r.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmp7aavns_r.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = '';\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpu01dx9xz.php:16\nStack trace:\n#0 /tmp/tmpu01dx9xz.php(26): find_max(Array)\n\
    #1 /tmp/tmpu01dx9xz.php(30): candidate(Array)\n#2 /tmp/tmpu01dx9xz.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpu01dx9xz.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp_6a137zv.php:16\nStack trace:\n#0 /tmp/tmp_6a137zv.php(26): find_max(Array)\n\
    #1 /tmp/tmp_6a137zv.php(30): candidate(Array)\n#2 /tmp/tmp_6a137zv.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_6a137zv.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = '';\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpu01dx9xz.php:16\nStack trace:\n#0 /tmp/tmpu01dx9xz.php(26): find_max(Array)\n\
    #1 /tmp/tmpu01dx9xz.php(30): candidate(Array)\n#2 /tmp/tmpu01dx9xz.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpu01dx9xz.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\
    <br>\";\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\n\
    echo \"<br>\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"<br>\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string<br>name<br>aaaaaaa<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp7aavns_r.php:40\nStack trace:\n#0 /tmp/tmp7aavns_r.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmp7aavns_r.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp_6a137zv.php:16\nStack trace:\n#0 /tmp/tmp_6a137zv.php(26): find_max(Array)\n\
    #1 /tmp/tmp_6a137zv.php(30): candidate(Array)\n#2 /tmp/tmp_6a137zv.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_6a137zv.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n  $max_word = \"\";\n  $max_count = 0;\n  foreach\
    \ ($words as $word) {\n    $count = count_unique_characters($word);\n    if ($count\
    \ > $max_count) {\n      $max_count = $count;\n      $max_word = $word;\n    }\n\
    \  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_characters()\
    \ in /tmp/tmp8oex9kkv.php:16\nStack trace:\n#0 /tmp/tmp8oex9kkv.php(26): find_max(Array)\n\
    #1 /tmp/tmp8oex9kkv.php(30): candidate(Array)\n#2 /tmp/tmp8oex9kkv.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp8oex9kkv.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words) . \"\\n\"\
    ;\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words) . \"\\\
    n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words) . \"\
    \\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpcg13onpa.php:37\nStack trace:\n#0 /tmp/tmpcg13onpa.php(48): test()\n\
    #1 {main}\n  thrown in /tmp/tmpcg13onpa.php on line 37\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = '';\n    foreach ($words\
    \ as $word) {\n        $unique_chars = array_unique(str_split($word));\n     \
    \   if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    /* Write a function that accepts an array of integers.\nThe array contains different\
    \ numbers. Return the number which occurs\nodd number of times. If multiple numbers\
    \ occur odd number of times,\nreturn the one which comes first in lexicographical\
    \ order.\n>>> find_odd(array(1, 2, 1, 2, 3))\n3\n>>> find_odd(array(1, 2, 1, 2,\
    \ 3, 3))\n1\n>>> find_odd(array(1, 2, 1, 2, 3, 3, 1))\n1*/\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1sse121x.php:41\n\
    Stack trace:\n#0 /tmp/tmp1sse121x.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp1sse121x.php\
    \ on line 41\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp_6a137zv.php:16\nStack trace:\n#0 /tmp/tmp_6a137zv.php(26): find_max(Array)\n\
    #1 /tmp/tmp_6a137zv.php(30): candidate(Array)\n#2 /tmp/tmp_6a137zv.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_6a137zv.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = $words[0];\n    $max_count = count(array_unique(str_split($max_word)));\n\
    \    foreach ($words as $word) {\n        $count = count(array_unique(str_split($word)));\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n/* Write\
    \ a function that accepts an array of strings.\nThe array contains different words.\
    \ Return the word with maximum number\nof unique characters. If multiple strings\
    \ have maximum number of unique\ncharacters, return the one which comes first\
    \ in lexicographical order.\n>>> find_max(array(\"name\", \"of\", \"string\"))\n\
    \"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"))\n\"enam\"\n>>> find_max(array(\"\
    aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\nfunction candidate(...$args) {\n \
    \   return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvyo3r1vs.php:41\n\
    Stack trace:\n#0 /tmp/tmpvyo3r1vs.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpvyo3r1vs.php\
    \ on line 41\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = '';\n    $max_unique_chars = 0;\n\
    \    foreach ($words as $word) {\n        $unique_chars = count_unique_chars($word);\n\
    \        if ($unique_chars > $max_unique_chars) {\n            $max_unique_chars\
    \ = $unique_chars;\n            $max_word = $word;\n        }\n    }\n    return\
    \ $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpak5au9ng.php:16\nStack trace:\n#0 /tmp/tmpak5au9ng.php(26): find_max(Array)\n\
    #1 /tmp/tmpak5au9ng.php(30): candidate(Array)\n#2 /tmp/tmpak5au9ng.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpak5au9ng.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = '';\n    foreach ($words\
    \ as $word) {\n        $unique_chars = array_unique(str_split($word));\n     \
    \   if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\
    \\n\";\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\n\
    echo \"\\n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpaej3tuwc.php:40\nStack trace:\n#0 /tmp/tmpaej3tuwc.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmpaej3tuwc.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = $words[0];\n    $max_count = count(array_unique(str_split($max_word)));\n\
    \    foreach ($words as $word) {\n        $count = count(array_unique(str_split($word)));\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n$words\
    \ = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"<br>\"\
    ;\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\necho\
    \ \"<br>\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"<br>\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string<br>name<br>aaaaaaa<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp98rmdfl6.php:40\nStack trace:\n#0 /tmp/tmp98rmdfl6.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmp98rmdfl6.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words) . \"\\n\"\
    ;\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words) . \"\\\
    n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words) . \"\
    \\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpcg13onpa.php:37\nStack trace:\n#0 /tmp/tmpcg13onpa.php(48): test()\n\
    #1 {main}\n  thrown in /tmp/tmpcg13onpa.php on line 37\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = '';\n    foreach ($words\
    \ as $word) {\n        $unique_chars = array_unique(str_split($word));\n     \
    \   if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    /* Write a function that accepts an array of strings.\nThe array contains different\
    \ words. Return the word with maximum number\nof unique characters. If multiple\
    \ strings have maximum number of unique\ncharacters, return the one which comes\
    \ first in lexicographical order.\n>>> find_max(array(\"name\", \"of\", \"string\"\
    ))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"))\n\"enam\"\n\
    >>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0yidm1xb.php:41\n\
    Stack trace:\n#0 /tmp/tmp0yidm1xb.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp0yidm1xb.php\
    \ on line 41\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\
    \\n\";\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\n\
    echo \"\\n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp9dodw6ej.php:40\nStack trace:\n#0 /tmp/tmp9dodw6ej.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmp9dodw6ej.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = '';\n    foreach ($words\
    \ as $word) {\n        $unique_chars = array_unique(str_split($word));\n     \
    \   if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\
    \\n\";\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\n\
    echo \"\\n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpaej3tuwc.php:40\nStack trace:\n#0 /tmp/tmpaej3tuwc.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmpaej3tuwc.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = $words[0];\n    $max_unique_chars\
    \ = count_unique_chars($words[0]);\n    foreach ($words as $word) {\n        $unique_chars\
    \ = count_unique_chars($word);\n        if ($unique_chars > $max_unique_chars)\
    \ {\n            $max_unique_chars = $unique_chars;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpv78gy17l.php:14\nStack trace:\n#0 /tmp/tmpv78gy17l.php(26): find_max(Array)\n\
    #1 /tmp/tmpv78gy17l.php(30): candidate(Array)\n#2 /tmp/tmpv78gy17l.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpv78gy17l.php on line 14\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n\t$max_word = $words[0];\n\t$max_count = count_unique_chars($words[0]);\n\
    \tfor ($i = 1; $i < count($words); $i++) {\n\t\t$count = count_unique_chars($words[$i]);\n\
    \t\tif ($count > $max_count) {\n\t\t\t$max_count = $count;\n\t\t\t$max_word =\
    \ $words[$i];\n\t\t}\n\t}\n\treturn $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpho9btfd0.php:14\nStack trace:\n#0 /tmp/tmpho9btfd0.php(26): find_max(Array)\n\
    #1 /tmp/tmpho9btfd0.php(30): candidate(Array)\n#2 /tmp/tmpho9btfd0.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpho9btfd0.php on line 14\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = $words[0];\n    $max_count = count(array_unique(str_split($max_word)));\n\
    \    foreach ($words as $word) {\n        $count = count(array_unique(str_split($word)));\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n$words\
    \ = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\\n\"\
    ;\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\necho\
    \ \"\\n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp7_7i_zfh.php:40\nStack trace:\n#0 /tmp/tmp7_7i_zfh.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmp7_7i_zfh.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = '';\n    foreach ($words\
    \ as $word) {\n        $unique_chars = array_unique(str_split($word));\n     \
    \   if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\
    \\n\";\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\n\
    echo \"\\n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpaej3tuwc.php:40\nStack trace:\n#0 /tmp/tmpaej3tuwc.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmpaej3tuwc.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = $words[0];\n    $max_count = count(array_unique(str_split($max_word)));\n\
    \    foreach ($words as $word) {\n        $count = count(array_unique(str_split($word)));\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n$words\
    \ = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"<br>\"\
    ;\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\necho\
    \ \"<br>\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string<br>name<br>aaaaaaa\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpgz34zqto.php:39\nStack trace:\n#0 /tmp/tmpgz34zqto.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmpgz34zqto.php on line 39\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max = 0;\n    $max_word = '';\n    foreach ($words\
    \ as $word) {\n        $unique_chars = array_unique(str_split($word));\n     \
    \   if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"\
    \\n\";\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\n\
    echo \"\\n\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpaej3tuwc.php:40\nStack trace:\n#0 /tmp/tmpaej3tuwc.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmpaej3tuwc.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpuw1w_bi5.php:16\nStack trace:\n#0 /tmp/tmpuw1w_bi5.php(25): find_max(Array)\n\
    #1 /tmp/tmpuw1w_bi5.php(29): candidate(Array)\n#2 /tmp/tmpuw1w_bi5.php(41): test()\n\
    #3 {main}\n  thrown in /tmp/tmpuw1w_bi5.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n\t$max_word = \"\";\n\t$max_count = 0;\n\tforeach\
    \ ($words as $word) {\n\t\t$count = count_unique_chars($word);\n\t\tif ($count\
    \ > $max_count) {\n\t\t\t$max_count = $count;\n\t\t\t$max_word = $word;\n\t\t\
    }\n\t}\n\treturn $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmphefs8nxp.php:16\nStack trace:\n#0 /tmp/tmphefs8nxp.php(26): find_max(Array)\n\
    #1 /tmp/tmphefs8nxp.php(30): candidate(Array)\n#2 /tmp/tmphefs8nxp.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmphefs8nxp.php on line 16\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        $count = count($unique_chars);\n        if ($count > $max_count) {\n\
    \            $max_count = $count;\n            $max_word = $word;\n        }\n\
    \    }\n    return $max_word;\n}\n\n$words = array(\"name\", \"of\", \"string\"\
    );\necho find_max($words);\necho \"\\n\";\n$words = array(\"name\", \"enam\",\
    \ \"game\");\necho find_max($words);\necho \"\\n\";\n$words = array(\"aaaaaaa\"\
    , \"bb\", \"cc\");\necho find_max($words);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpl62yeu6l.php:41\nStack trace:\n#0 /tmp/tmpl62yeu6l.php(52): test()\n\
    #1 {main}\n  thrown in /tmp/tmpl62yeu6l.php on line 41\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n\t$max = 0;\n\t$max_word = '';\n\tforeach ($words\
    \ as $word) {\n\t\t$unique_chars = array_unique(str_split($word));\n\t\tif (count($unique_chars)\
    \ > $max) {\n\t\t\t$max = count($unique_chars);\n\t\t\t$max_word = $word;\n\t\t\
    }\n\t}\n\treturn $max_word;\n}\n\n$words = array(\"name\", \"of\", \"string\"\
    );\necho find_max($words);\necho \"\\n\";\n$words = array(\"name\", \"enam\",\
    \ \"game\");\necho find_max($words);\necho \"\\n\";\n$words = array(\"aaaaaaa\"\
    , \"bb\", \"cc\");\necho find_max($words);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string\nname\naaaaaaa\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpeoe8dgvg.php:40\nStack trace:\n#0 /tmp/tmpeoe8dgvg.php(51): test()\n\
    #1 {main}\n  thrown in /tmp/tmpeoe8dgvg.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* Write a function that accepts an array of strings.\nThe array\
    \ contains different words. Return the word with maximum number\nof unique characters.\
    \ If multiple strings have maximum number of unique\ncharacters, return the one\
    \ which comes first in lexicographical order.\n>>> find_max(array(\"name\", \"\
    of\", \"string\"))\n\"string\"\n>>> find_max(array(\"name\", \"enam\", \"game\"\
    ))\n\"enam\"\n>>> find_max(array(\"aaaaaaa\", \"bb\", \"cc\"))\n\"aaaaaaa\"*/\n\
    function find_max($words) {\n    $max_word = $words[0];\n    $max_count = count(array_unique(str_split($max_word)));\n\
    \    foreach ($words as $word) {\n        $count = count(array_unique(str_split($word)));\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n$words\
    \ = array(\"name\", \"of\", \"string\");\necho find_max($words);\necho \"<br>\"\
    ;\n$words = array(\"name\", \"enam\", \"game\");\necho find_max($words);\necho\
    \ \"<br>\";\n$words = array(\"aaaaaaa\", \"bb\", \"cc\");\necho find_max($words);\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "string<br>name<br>aaaaaaa\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp85q2bejv.php:38\nStack trace:\n#0 /tmp/tmp85q2bejv.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp85q2bejv.php on line 38\n"
  timestamp: 1660220716

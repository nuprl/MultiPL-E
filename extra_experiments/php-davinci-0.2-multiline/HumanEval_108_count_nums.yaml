name: HumanEval_108_count_nums
language: php
prompt: "<?php\n/* Write a function count_nums which takes an array of integers and\
  \ returns\nthe number of elements which has a sum of digits > 0.\nIf a number is\
  \ negative, then its first signed digit will be negative:\ne.g. -123 has signed\
  \ digits -1, 2, and 3.\n>>> count_nums(array())\n0\n>>> count_nums(array(-1, 11,\
  \ -11))\n1\n>>> count_nums(array(1, 1, 2))\n3*/\nfunction count_nums($arr) {\n"
tests: "function candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0, 1,\
  \ 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
  \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["\t$count = 0;\n\tforeach ($arr as $value) {\n\t\t$sum = 0;\n\t\tif\
    \ ($value < 0) {\n\t\t\t$value = -$value;\n\t\t\t$sum += $value % 10;\n\t\t\t\
    $value = (int)($value / 10);\n\t\t}\n\t\twhile ($value > 0) {\n\t\t\t$sum += $value\
    \ % 10;\n\t\t\t$value = (int)($value / 10);\n\t\t}\n\t\tif ($sum > 0) {\n\t\t\t\
    $count++;\n\t\t}\n\t}\n\treturn $count;\n}", "    $count = 0;\n    foreach ($arr\
    \ as $num) {\n        $sum = 0;\n        if ($num < 0) {\n            $num = -$num;\n\
    \            $sum += -1;\n        }\n        while ($num > 0) {\n            $sum\
    \ += $num % 10;\n            $num = (int)($num / 10);\n        }\n        if ($sum\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}", " \
    \   $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n        if ($num\
    \ < 0) {\n            $num = -$num;\n            $sum += -1;\n        }\n    \
    \    while ($num > 0) {\n            $sum += $num % 10;\n            $num = (int)($num\
    \ / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}\n\n/* Write a function count_nums_2 which takes\
    \ an array of integers and returns\nthe number of elements which has a sum of\
    \ digits > 0.\nIf a number is negative, then its first signed digit will be negative:\n\
    e.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums_2(array())\n0\n>>> count_nums_2(array(-1,\
    \ 11, -11))\n1\n>>> count_nums_2(array(1, 1, 2))\n3*/", "    $count = 0;\n   \
    \ foreach ($arr as $num) {\n        $sum = 0;\n        if ($num < 0) {\n     \
    \       $num = -$num;\n            $sum += -1;\n        }\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = (int)($num / 10);\n\
    \        }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\n\n/* Write a function count_nums_2 which takes an array\
    \ of integers and returns\nthe number of elements which has a sum of digits >\
    \ 0.\nIf a number is negative, then its first signed digit will be negative:\n\
    e.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums_2(array())\n0\n>>> count_nums_2(array(-1,\
    \ 11, -11))\n1\n>>> count_nums_2(array(1, 1, 2))\n3*/", "    $count = 0;\n   \
    \ foreach ($arr as $value) {\n        $sum = 0;\n        $value = abs($value);\n\
    \        while ($value > 0) {\n            $sum += $value % 10;\n            $value\
    \ = floor($value / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}", "    $count = 0;\n    foreach ($arr\
    \ as $value) {\n        $sum = 0;\n        $value = abs($value);\n        while\
    \ ($value > 0) {\n            $sum += $value % 10;\n            $value = (int)($value\
    \ / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}", "  $count = 0;\n  foreach ($arr as $num) {\n \
    \   $sum = 0;\n    if ($num < 0) {\n      $num = -$num;\n      $sum += -1;\n \
    \   }\n    while ($num > 0) {\n      $sum += $num % 10;\n      $num = (int)($num\
    \ / 10);\n    }\n    if ($sum > 0) {\n      $count++;\n    }\n  }\n  return $count;\n\
    }", "    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}", "    $count = 0;\n    foreach ($arr\
    \ as $value) {\n        $sum = 0;\n        if ($value < 0) {\n            $value\
    \ = -$value;\n            $sum += $value % 10;\n            $value = (int)($value\
    \ / 10);\n        }\n        while ($value > 0) {\n            $sum += $value\
    \ % 10;\n            $value = (int)($value / 10);\n        }\n        if ($sum\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n/*\
    \ Write a function count_nums_2 which takes an array of integers and returns\n\
    the number of elements which has a sum of digits > 0.\nIf a number is negative,\
    \ then its first signed digit will be negative:\ne.g. -123 has signed digits -1,\
    \ 2, and 3.\n>>> count_nums_2(array())\n0\n>>> count_nums_2(array(-1, 11, -11))\n\
    1\n>>> count_nums_2(array(1, 1, 2))\n3*/", "    $count = 0;\n    foreach ($arr\
    \ as $num) {\n        $sum = 0;\n        if ($num < 0) {\n            $num = -$num;\n\
    \            $sum += -1;\n        }\n        while ($num > 0) {\n            $sum\
    \ += $num % 10;\n            $num = (int)($num / 10);\n        }\n        if ($sum\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n/*\
    \ Write a function count_nums_2 which takes an array of integers and returns\n\
    the number of elements which has a sum of digits > 0.\nIf a number is negative,\
    \ then its first signed digit will be negative:\ne.g. -123 has signed digits -1,\
    \ 2, and 3.\n>>> count_nums_2(array())\n0\n>>> count_nums_2(array(-1, 11, -11))\n\
    1\n>>> count_nums_2(array(1, 1, 2))\n3*/", "    $count = 0;\n    foreach ($arr\
    \ as $value) {\n        $sum = 0;\n        if ($value < 0) {\n            $value\
    \ = -$value;\n            $sum += $value % 10;\n            $value = (int)($value\
    \ / 10);\n        }\n        while ($value > 0) {\n            $sum += $value\
    \ % 10;\n            $value = (int)($value / 10);\n        }\n        if ($sum\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}", " \
    \   $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n        if ($num\
    \ < 0) {\n            $num = -$num;\n            $sum += -1;\n        }\n    \
    \    while ($num > 0) {\n            $sum += $num % 10;\n            $num = floor($num\
    \ / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}", "    $count = 0;\n    foreach ($arr as $num) {\n\
    \        $sum = 0;\n        if ($num < 0) {\n            $num = -$num;\n     \
    \       $sum = -1;\n        }\n        while ($num > 0) {\n            $sum +=\
    \ $num % 10;\n            $num = (int)($num / 10);\n        }\n        if ($sum\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}", " \
    \   $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n        $num\
    \ = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n \
    \           $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n   \
    \         $count++;\n        }\n    }\n    return $count;\n}", "    $count = 0;\n\
    \    foreach ($arr as $value) {\n        $sum = 0;\n        if ($value < 0) {\n\
    \            $value = -$value;\n            $sum += $value % 10;\n           \
    \ $value = (int)($value / 10);\n        }\n        while ($value > 0) {\n    \
    \        $sum += $value % 10;\n            $value = (int)($value / 10);\n    \
    \    }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n   \
    \ return $count;\n}", "    $count = 0;\n    foreach ($arr as $num) {\n       \
    \ $sum = 0;\n        if ($num < 0) {\n            $num = -$num;\n            $sum\
    \ = -1;\n        }\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}", "    $count =\
    \ 0;\n    foreach ($arr as $value) {\n        $sum = 0;\n        if ($value <\
    \ 0) {\n            $value = $value * -1;\n            $sum = $sum + $value %\
    \ 10;\n            $value = $value / 10;\n        }\n        while ($value > 0)\
    \ {\n            $sum = $sum + $value % 10;\n            $value = $value / 10;\n\
    \        }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}", "    $count = 0;\n    foreach ($arr as $value) {\n  \
    \      $sum = 0;\n        $value = abs($value);\n        while ($value > 0) {\n\
    \            $sum += $value % 10;\n            $value = (int)($value / 10);\n\
    \        }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}", "    $count = 0;\n    foreach ($arr as $value) {\n  \
    \      $sum = 0;\n        if ($value < 0) {\n            $value = -$value;\n \
    \           $sum += $value % 10;\n            $value = (int)($value / 10);\n \
    \       }\n        while ($value > 0) {\n            $sum += $value % 10;\n  \
    \          $value = (int)($value / 10);\n        }\n        if ($sum > 0) {\n\
    \            $count++;\n        }\n    }\n    return $count;\n}", "    $count\
    \ = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n        if ($num < 0)\
    \ {\n            $num = -$num;\n            $sum += -1;\n        }\n        while\
    \ ($num > 0) {\n            $sum += $num % 10;\n            $num = (int)($num\
    \ / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}", "    $count = 0;\n    foreach ($arr as $num) {\n\
    \        $sum = 0;\n        if ($num < 0) {\n            $num = -$num;\n     \
    \       $sum += -1;\n        }\n        while ($num > 0) {\n            $sum +=\
    \ $num % 10;\n            $num = floor($num / 10);\n        }\n        if ($sum\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n/*\
    \ Write a function count_nums_2 which takes an array of integers and returns\n\
    the number of elements which has a sum of digits > 0.\nIf a number is negative,\
    \ then its first signed digit will be negative:\ne.g. -123 has signed digits -1,\
    \ 2, and 3.\n>>> count_nums_2(array())\n0\n>>> count_nums_2(array(-1, 11, -11))\n\
    1\n>>> count_nums_2(array(1, 1, 2))\n3*/", "    $count = 0;\n    foreach ($arr\
    \ as $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = (int)($num / 10);\n\
    \        }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}", "    $count = 0;\n    foreach ($arr as $num) {\n    \
    \    $sum = 0;\n        if ($num < 0) {\n            $num = -$num;\n         \
    \   $sum += -1;\n        }\n        while ($num > 0) {\n            $sum += $num\
    \ % 10;\n            $num = (int)($num / 10);\n        }\n        if ($sum > 0)\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}", "    $count\
    \ = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n        if ($num < 0)\
    \ {\n            $num = -$num;\n            $sum += -1;\n        }\n        while\
    \ ($num > 0) {\n            $sum += $num % 10;\n            $num = floor($num\
    \ / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}\n\n/* Write a function find_max which takes an array\
    \ of integers and returns\nthe index of the first element with the maximum value.\n\
    If there are several such elements, return the index of the first one.\n>>> find_max(array(1,\
    \ 2, 3))\n2\n>>> find_max(array(1, 3, 2))\n1\n>>> find_max(array(3, 2, 1))\n0*/",
  "    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n        if ($num\
    \ < 0) {\n            $num = -$num;\n            $sum += -1;\n        }\n    \
    \    while ($num > 0) {\n            $sum += $num % 10;\n            $num = (int)($num\
    \ / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}", "    $count = 0;\n    foreach ($arr as $num) {\n\
    \        $sum = 0;\n        if ($num < 0) {\n            $num = -$num;\n     \
    \       $sum += $num % 10;\n            $num = (int)($num / 10);\n        }\n\
    \        while ($num > 0) {\n            $sum += $num % 10;\n            $num\
    \ = (int)($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\n/* Write a function count_nums_2 which\
    \ takes an array of integers and returns\nthe number of elements which has a sum\
    \ of digits > 0.\nIf a number is negative, then its first signed digit will be\
    \ negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums_2(array())\n\
    0\n>>> count_nums_2(array(-1, 11, -11))\n1\n>>> count_nums_2(array(1, 1, 2))\n\
    3*/", "    $count = 0;\n    foreach ($arr as $number) {\n        $sum = 0;\n \
    \       if ($number < 0) {\n            $number = abs($number);\n            $sum\
    \ += $number % 10;\n            $number = floor($number / 10);\n        }\n  \
    \      while ($number > 0) {\n            $sum += $number % 10;\n            $number\
    \ = floor($number / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}", "\t$count = 0;\n\tforeach ($arr as\
    \ $num) {\n\t\t$sum = 0;\n\t\tif ($num < 0) {\n\t\t\t$num = -$num;\n\t\t\t$sum\
    \ += -1;\n\t\t}\n\t\twhile ($num > 0) {\n\t\t\t$sum += $num % 10;\n\t\t\t$num\
    \ = (int)($num / 10);\n\t\t}\n\t\tif ($sum > 0) {\n\t\t\t$count++;\n\t\t}\n\t\
    }\n\treturn $count;\n}", "\t$count = 0;\n\tforeach ($arr as $num) {\n\t\tif ($num\
    \ < 0) {\n\t\t\t$num = -$num;\n\t\t}\n\t\t$sum = 0;\n\t\twhile ($num > 0) {\n\t\
    \t\t$sum += $num % 10;\n\t\t\t$num = (int)($num / 10);\n\t\t}\n\t\tif ($sum >\
    \ 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}", "    $count = 0;\n\
    \    foreach ($arr as $number) {\n        $sum = 0;\n        if ($number < 0)\
    \ {\n            $number = $number * -1;\n            $sum = $sum + $number %\
    \ 10;\n            $number = $number / 10;\n        }\n        while ($number\
    \ > 0) {\n            $sum = $sum + $number % 10;\n            $number = $number\
    \ / 10;\n        }\n        if ($sum > 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}", "    $count = 0;\n    foreach ($arr as $num) {\n\
    \        $sum = 0;\n        if ($num < 0) {\n            $num = -$num;\n     \
    \       $sum += -1;\n        }\n        while ($num > 0) {\n            $sum +=\
    \ $num % 10;\n            $num = (int)($num / 10);\n        }\n        if ($sum\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}", " \
    \   $count = 0;\n    foreach ($arr as $value) {\n        $sum = 0;\n        if\
    \ ($value < 0) {\n            $value = -$value;\n            $sum += -1;\n   \
    \     }\n        while ($value > 0) {\n            $sum += $value % 10;\n    \
    \        $value = (int)($value / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\n/* Write a function\
    \ count_nums_2 which takes an array of integers and returns\nthe number of elements\
    \ which has a sum of digits > 0.\nIf a number is negative, then its first signed\
    \ digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums_2(array())\n\
    0\n>>> count_nums_2(array(-1, 11, -11))\n1\n>>> count_nums_2(array(1, 1, 2))\n\
    3*/", "    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n    \
    \    if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n   \
    \     }\n        while ($num > 0) {\n            $sum += $num % 10;\n        \
    \    $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n          \
    \  $count++;\n        }\n    }\n    return $count;\n}", "    $count = 0;\n   \
    \ foreach ($arr as $num) {\n        $sum = 0;\n        $num = abs($num);\n   \
    \     while ($num > 0) {\n            $sum += $num % 10;\n            $num = intval($num\
    \ / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}\n\n/* Write a function count_nums_2 which takes\
    \ an array of integers and returns\nthe number of elements which has a sum of\
    \ digits > 0.\nIf a number is negative, then its first signed digit will be negative:\n\
    e.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums_2(array())\n0\n>>> count_nums_2(array(-1,\
    \ 11, -11))\n1\n>>> count_nums_2(array(1, 1, 2))\n3*/", "    $count = 0;\n   \
    \ foreach ($arr as $num) {\n        $sum = 0;\n        if ($num < 0) {\n     \
    \       $num = -$num;\n            $sum += -1;\n        }\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = (int)($num / 10);\n\
    \        }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}", "    $count = 0;\n    foreach ($arr as $num) {\n    \
    \    $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n      \
    \      $sum += $num % 10;\n            $num = (int)($num / 10);\n        }\n \
    \       if ($sum > 0) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }", "    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}", "    $count = 0;\n    foreach ($arr\
    \ as $num) {\n        $sum = 0;\n        if ($num < 0) {\n            $num = -$num;\n\
    \            $sum += -1;\n        }\n        while ($num > 0) {\n            $sum\
    \ += $num % 10;\n            $num = (int)($num / 10);\n        }\n        if ($sum\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}", " \
    \   $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n        if ($num\
    \ < 0) {\n            $num = -$num;\n            $sum += -1;\n        }\n    \
    \    while ($num > 0) {\n            $sum += $num % 10;\n            $num = (int)($num\
    \ / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}", "    $count = 0;\n    foreach ($arr as $value)\
    \ {\n        $sum = 0;\n        if ($value < 0) {\n            $value = -$value;\n\
    \            $sum += $value % 10;\n            $value = (int)($value / 10);\n\
    \        }\n        while ($value > 0) {\n            $sum += $value % 10;\n \
    \           $value = (int)($value / 10);\n        }\n        if ($sum > 0) {\n\
    \            $count++;\n        }\n    }\n    return $count;\n}\n\n/* Write a\
    \ function count_nums2 which takes an array of integers and returns\nthe number\
    \ of elements which has a sum of digits > 0.\nIf a number is negative, then its\
    \ first signed digit will be negative:\ne.g. -123 has signed digits -1, 2, and\
    \ 3.\n>>> count_nums2(array())\n0\n>>> count_nums2(array(-1, 11, -11))\n1\n>>>\
    \ count_nums2(array(1, 1, 2))\n3*/", "    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = (int)($num / 10);\n      \
    \  }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Write a function count_nums_2 which takes an array of integers\
    \ and returns\nthe number of elements which has a sum of digits > 0.\nIf a number\
    \ is negative, then its first signed digit will be negative:\ne.g. -123 has signed\
    \ digits -1, 2, and 3.\n>>> count_nums_2(array())\n0\n>>> count_nums_2(array(-1,\
    \ 11, -11))\n1\n>>> count_nums_2(array(1, 1, 2))\n3*/", "    $count = 0;\n   \
    \ foreach ($arr as $num) {\n        $sum = 0;\n        if ($num < 0) {\n     \
    \       $num = -$num;\n            $sum += -1;\n        }\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = (int)($num / 10);\n\
    \        }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}", "    $count = 0;\n    foreach ($arr as $num) {\n    \
    \    $sum = 0;\n        if ($num < 0) {\n            $num = -$num;\n         \
    \   $sum = -1;\n        }\n        while ($num > 0) {\n            $sum += $num\
    \ % 10;\n            $num = (int)($num / 10);\n        }\n        if ($sum > 0)\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n/* Write\
    \ a function find_max_sum which takes an array of integers and returns\nthe maximum\
    \ sum of elements which has a sum of digits > 0.\nIf a number is negative, then\
    \ its first signed digit will be negative:\ne.g. -123 has signed digits -1, 2,\
    \ and 3.\n>>> find_max_sum(array())\n0\n>>> find_max_sum(array(-1, 11, -11))\n\
    11\n>>> find_max_sum(array(1, 1, 2))\n4*/", "    $count = 0;\n    foreach ($arr\
    \ as $num) {\n        $sum = 0;\n        if ($num < 0) {\n            $num = $num\
    \ * -1;\n            $sum = $sum + ($num % 10);\n            $num = $num / 10;\n\
    \        }\n        while ($num > 0) {\n            $sum = $sum + ($num % 10);\n\
    \            $num = $num / 10;\n        }\n        if ($sum > 0) {\n         \
    \   $count++;\n        }\n    }\n    return $count;\n}", "\t$count = 0;\n\tforeach\
    \ ($arr as $num) {\n\t\t$sum = 0;\n\t\tif ($num < 0) {\n\t\t\t$num = -$num;\n\t\
    \t\t$sum += -1;\n\t\t}\n\t\twhile ($num > 0) {\n\t\t\t$sum += $num % 10;\n\t\t\
    \t$num = (int)($num / 10);\n\t\t}\n\t\tif ($sum > 0) {\n\t\t\t$count++;\n\t\t\
    }\n\t}\n\treturn $count;\n}", "    $count = 0;\n    foreach ($arr as $num) {\n\
    \        $sum = 0;\n        if ($num < 0) {\n            $num = -$num;\n     \
    \       $sum = -1;\n        }\n        while ($num > 0) {\n            $sum +=\
    \ $num % 10;\n            $num = (int)($num / 10);\n        }\n        if ($sum\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n/*\
    \ Write a function count_nums_2 which takes an array of integers and returns\n\
    the number of elements which has a sum of digits > 0.\nIf a number is negative,\
    \ then its first signed digit will be negative:\ne.g. -123 has signed digits -1,\
    \ 2, and 3.\n>>> count_nums_2(array())\n0\n>>> count_nums_2(array(-1, 11, -11))\n\
    1\n>>> count_nums_2(array(1, 1, 2))\n3*/", "\t$count = 0;\n\tforeach ($arr as\
    \ $num) {\n\t\t$sum = 0;\n\t\tif ($num < 0) {\n\t\t\t$num = $num * -1;\n\t\t}\n\
    \t\twhile ($num > 0) {\n\t\t\t$sum += $num % 10;\n\t\t\t$num = floor($num / 10);\n\
    \t\t}\n\t\tif ($sum > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\
    \n/* Write a function find_max_sum which takes an array of integers and returns\n\
    the maximum sum of a subarray.\n>>> find_max_sum(array())\n0\n>>> find_max_sum(array(1,\
    \ 2, 3))\n6\n>>> find_max_sum(array(-1, -2, -3))\n-1\n>>> find_max_sum(array(1,\
    \ -2, 3))\n3\n>>> find_max_sum(array(1, -2, 3, -4))\n3\n>>> find_max_sum(array(1,\
    \ -2, 3, -4, 5))\n5\n>>> find_max_sum(array(1, -2, 3, -4, 5, -6))\n5\n>>> find_max_sum(array(1,\
    \ -2, 3, -4, 5, -6, 7))\n7\n>>> find_max_sum(array(1, -2, 3, -4, 5, -6, 7, -8))\n\
    7\n>>> find_max_sum(array(1, -2, 3, -4, 5, -6, 7, -8, 9))\n9\n>>> find_max_sum(array(1,\
    \ -2, 3, -4, 5, -6, 7, -8, 9, -10))\n9\n>>> find_max_sum(array(1, -2, 3, -4, 5,\
    \ -6, 7, -8, 9, -10, 11))\n11\n>>> find_max_sum(array(1, -2, 3, -4, 5, -6, 7,\
    \ -8, 9, -10, 11, -12))\n11\n>>> find_", "\t$count = 0;\n\tforeach ($arr as $value)\
    \ {\n\t\t$sum = 0;\n\t\t$value = abs($value);\n\t\twhile ($value > 0) {\n\t\t\t\
    $sum += $value % 10;\n\t\t\t$value = floor($value / 10);\n\t\t}\n\t\tif ($sum\
    \ > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}", "    $count = 0;\n\
    \    foreach ($arr as $num) {\n        $sum = 0;\n        if ($num < 0) {\n  \
    \          $num = -$num;\n            $sum += -1;\n        }\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = (int)($num / 10);\n\
    \        }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}", "    $count = 0;\n    foreach ($arr as $num) {\n    \
    \    $sum = 0;\n        if ($num < 0) {\n            $num = -$num;\n         \
    \   $sum += -1;\n        }\n        while ($num > 0) {\n            $sum += $num\
    \ % 10;\n            $num = (int)($num / 10);\n        }\n        if ($sum > 0)\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}", "    $count\
    \ = 0;\n    foreach ($arr as $value) {\n        $sum = 0;\n        $value = abs($value);\n\
    \        while ($value > 0) {\n            $sum += $value % 10;\n            $value\
    \ = (int)($value / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}", "\t$count = 0;\n\tforeach ($arr as\
    \ $num) {\n\t\t$sum = 0;\n\t\tif ($num < 0) {\n\t\t\t$num = -$num;\n\t\t\t$sum\
    \ += -1;\n\t\t}\n\t\twhile ($num > 0) {\n\t\t\t$sum += $num % 10;\n\t\t\t$num\
    \ = floor($num / 10);\n\t\t}\n\t\tif ($sum > 0) {\n\t\t\t$count++;\n\t\t}\n\t\
    }\n\treturn $count;\n}\n\n/* Write a function count_nums_2 which takes an array\
    \ of integers and returns\nthe number of elements which has a sum of digits >\
    \ 0.\nIf a number is negative, then its first signed digit will be negative:\n\
    e.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums_2(array())\n0\n>>> count_nums_2(array(-1,\
    \ 11, -11))\n1\n>>> count_nums_2(array(1, 1, 2))\n3*/", "    $count = 0;\n   \
    \ foreach ($arr as $value) {\n        $sum = 0;\n        if ($value < 0) {\n \
    \           $value = -$value;\n            $sum += $value % 10;\n            $value\
    \ = (int)($value / 10);\n        }\n        while ($value > 0) {\n           \
    \ $sum += $value % 10;\n            $value = (int)($value / 10);\n        }\n\
    \        if ($sum > 0) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}", "    $count = 0;\n    foreach ($arr as $num) {\n        $sum =\
    \ 0;\n        if ($num < 0) {\n            $num = -$num;\n            $sum +=\
    \ -1;\n        }\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}", "    $count =\
    \ 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n        if ($num < 0) {\n\
    \            $num = -$num;\n            $sum += -1;\n        }\n        while\
    \ ($num > 0) {\n            $sum += $num % 10;\n            $num = (int)($num\
    \ / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}", "    $count = 0;\n    foreach ($arr as $value)\
    \ {\n        $sum = 0;\n        if ($value < 0) {\n            $value = -$value;\n\
    \            $sum += $value % 10;\n            $value = (int)($value / 10);\n\
    \        }\n        while ($value > 0) {\n            $sum += $value % 10;\n \
    \           $value = (int)($value / 10);\n        }\n        if ($sum > 0) {\n\
    \            $count++;\n        }\n    }\n    return $count;\n}", "    $count\
    \ = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n        $num = abs($num);\n\
    \        while ($num > 0) {\n            $sum += $num % 10;\n            $num\
    \ = floor($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\n/* Write a function is_palindrome\
    \ which takes a string and returns true if\nthe string is a palindrome, and false\
    \ otherwise.\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"a\")\ntrue\n\
    >>> is_palindrome(\"aa\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"\
    abba\")\ntrue\n>>> is_palindrome(\"ab\")\nfalse\n>>> is_palindrome(\"abc\")\n\
    false\n>>> is_palindrome(\"abca\")\nfalse\n>>> is_palindrome(\"abcd\")\nfalse*/",
  "    $count = 0;\n    foreach ($arr as $value) {\n        $sum = 0;\n        if\
    \ ($value < 0) {\n            $value = -$value;\n            $sum += -1;\n   \
    \     }\n        while ($value > 0) {\n            $sum += $value % 10;\n    \
    \        $value = floor($value / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}", "    $count =\
    \ 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n        if ($num < 0) {\n\
    \            $num = -$num;\n            $sum += -1;\n        }\n        while\
    \ ($num > 0) {\n            $sum += $num % 10;\n            $num = floor($num\
    \ / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}", "\t$count = 0;\n\tforeach ($arr as $num) {\n\t\
    \t$sum = 0;\n\t\tif ($num < 0) {\n\t\t\t$num = -$num;\n\t\t\t$sum -= $num % 10;\n\
    \t\t\t$num = (int)($num / 10);\n\t\t}\n\t\twhile ($num > 0) {\n\t\t\t$sum += $num\
    \ % 10;\n\t\t\t$num = (int)($num / 10);\n\t\t}\n\t\tif ($sum > 0) {\n\t\t\t$count++;\n\
    \t\t}\n\t}\n\treturn $count;\n}\n\n/* Write a function count_nums_2 which takes\
    \ an array of integers and returns\nthe number of elements which has a sum of\
    \ digits > 0.\nIf a number is negative, then its first signed digit will be negative:\n\
    e.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums_2(array())\n0\n>>> count_nums_2(array(-1,\
    \ 11, -11))\n1\n>>> count_nums_2(array(1, 1, 2))\n3*/", "    $count = 0;\n   \
    \ foreach ($arr as $num) {\n        $sum = 0;\n        if ($num < 0) {\n     \
    \       $num = $num * -1;\n            $sum = $sum + $num % 10;\n            $num\
    \ = $num / 10;\n        }\n        while ($num > 0) {\n            $sum = $sum\
    \ + $num % 10;\n            $num = $num / 10;\n        }\n        if ($sum > 0)\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}", "    $count\
    \ = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n        if ($num < 0)\
    \ {\n            $num = -$num;\n            $sum += -1;\n        }\n        while\
    \ ($num > 0) {\n            $sum += $num % 10;\n            $num = (int)($num\
    \ / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}\n\n/* Write a function count_nums_2 which takes\
    \ an array of integers and returns\nthe number of elements which has a sum of\
    \ digits > 0.\nIf a number is negative, then its first signed digit will be negative:\n\
    e.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums_2(array())\n0\n>>> count_nums_2(array(-1,\
    \ 11, -11))\n1\n>>> count_nums_2(array(1, 1, 2))\n3*/", "    $count = 0;\n   \
    \ foreach ($arr as $num) {\n        $sum = 0;\n        if ($num < 0) {\n     \
    \       $num = $num * -1;\n            $sum += $num % 10;\n            $num =\
    \ $num / 10;\n            $sum += $num % 10;\n            $num = $num / 10;\n\
    \            $sum += $num % 10;\n        } else {\n            $sum += $num %\
    \ 10;\n            $num = $num / 10;\n            $sum += $num % 10;\n       \
    \     $num = $num / 10;\n            $sum += $num % 10;\n        }\n        if\
    \ ($sum > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}",
  "    $count = 0;\n    foreach ($arr as $value) {\n        $sum = 0;\n        if\
    \ ($value < 0) {\n            $value = -$value;\n            $sum += $value %\
    \ 10;\n            $value = (int)($value / 10);\n        }\n        while ($value\
    \ > 0) {\n            $sum += $value % 10;\n            $value = (int)($value\
    \ / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}", "    $count = 0;\n    foreach ($arr as $num) {\n\
    \        $sum = 0;\n        if ($num < 0) {\n            $num = -$num;\n     \
    \       $sum += -1;\n        }\n        while ($num > 0) {\n            $sum +=\
    \ $num % 10;\n            $num = floor($num / 10);\n        }\n        if ($sum\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}", "\t\
    $count = 0;\n\tforeach ($arr as $item) {\n\t\t$sum = 0;\n\t\t$item = abs($item);\n\
    \t\twhile ($item > 0) {\n\t\t\t$sum += $item % 10;\n\t\t\t$item = floor($item\
    \ / 10);\n\t\t}\n\t\tif ($sum > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n\
    }", "\t$count = 0;\n\tforeach ($arr as $value) {\n\t\t$sum = 0;\n\t\tif ($value\
    \ < 0) {\n\t\t\t$value = -$value;\n\t\t\t$sum += -1;\n\t\t}\n\t\twhile ($value\
    \ > 0) {\n\t\t\t$sum += $value % 10;\n\t\t\t$value = (int)($value / 10);\n\t\t\
    }\n\t\tif ($sum > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}", " \
    \   $count = 0;\n    foreach ($arr as $value) {\n        $sum = 0;\n        if\
    \ ($value < 0) {\n            $value = -$value;\n            $sum += $value %\
    \ 10;\n            $value = (int)($value / 10);\n        }\n        while ($value\
    \ > 0) {\n            $sum += $value % 10;\n            $value = (int)($value\
    \ / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}", "    $count = 0;\n    foreach ($arr as $num) {\n\
    \        $sum = 0;\n        if ($num < 0) {\n            $num = -$num;\n     \
    \       $sum += -1;\n        }\n        while ($num > 0) {\n            $sum +=\
    \ $num % 10;\n            $num = (int)($num / 10);\n        }\n        if ($sum\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}", " \
    \   $count = 0;\n    foreach ($arr as $value) {\n        $sum = 0;\n        if\
    \ ($value < 0) {\n            $value = -$value;\n            $sum += $value %\
    \ 10;\n            $value = (int)($value / 10);\n        }\n        while ($value\
    \ > 0) {\n            $sum += $value % 10;\n            $value = (int)($value\
    \ / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}", "    $count = 0;\n    foreach ($arr as $num) {\n\
    \        $sum = 0;\n        if ($num < 0) {\n            $num = -$num;\n     \
    \       $sum += -1;\n        }\n        while ($num > 0) {\n            $sum +=\
    \ $num % 10;\n            $num = floor($num / 10);\n        }\n        if ($sum\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n/*\
    \ Write a function count_nums_2 which takes an array of integers and returns\n\
    the number of elements which has a sum of digits > 0.\nIf a number is negative,\
    \ then its first signed digit will be negative:\ne.g. -123 has signed digits -1,\
    \ 2, and 3.\n>>> count_nums_2(array())\n0\n>>> count_nums_2(array(-1, 11, -11))\n\
    1\n>>> count_nums_2(array(1, 1, 2))\n3*/", "    $count = 0;\n    foreach ($arr\
    \ as $value) {\n        $sum = 0;\n        if ($value < 0) {\n            $value\
    \ = $value * -1;\n            $sum += $value % 10;\n            $value = $value\
    \ / 10;\n        }\n        while ($value > 0) {\n            $sum += $value %\
    \ 10;\n            $value = $value / 10;\n        }\n        if ($sum > 0) {\n\
    \            $count++;\n        }\n    }\n    return $count;\n}", "\t$count =\
    \ 0;\n\tforeach ($arr as $value) {\n\t\t$sum = 0;\n\t\tif ($value < 0) {\n\t\t\
    \t$value = -$value;\n\t\t\t$sum -= $value % 10;\n\t\t\t$value = (int)($value /\
    \ 10);\n\t\t}\n\t\twhile ($value > 0) {\n\t\t\t$sum += $value % 10;\n\t\t\t$value\
    \ = (int)($value / 10);\n\t\t}\n\t\tif ($sum > 0) {\n\t\t\t$count++;\n\t\t}\n\t\
    }\n\treturn $count;\n}\n\n/* Write a function count_nums_2 which takes an array\
    \ of integers and returns\nthe number of elements which has a sum of digits >\
    \ 0.\nIf a number is negative, then its first signed digit will be negative:\n\
    e.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums_2(array())\n0\n>>> count_nums_2(array(-1,\
    \ 11, -11))\n1\n>>> count_nums_2(array(1, 1, 2))\n3*/", "    $count = 0;\n   \
    \ foreach ($arr as $num) {\n        $sum = 0;\n        if ($num < 0) {\n     \
    \       $num = -$num;\n            $sum += -1;\n        }\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = (int)($num / 10);\n\
    \        }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\n\n/* Write a function find_max which takes an array of\
    \ integers and returns\nthe maximum element.\n>>> find_max(array())\nnull\n>>>\
    \ find_max(array(1, 2, 3))\n3\n>>> find_max(array(1, 3, 2))\n3\n>>> find_max(array(3,\
    \ 2, 1))\n3*/", "    $count = 0;\n    foreach ($arr as $num) {\n        $sum =\
    \ 0;\n        $num = abs($num);\n        while ($num > 0) {\n            $sum\
    \ += $num % 10;\n            $num = floor($num / 10);\n        }\n        if ($sum\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}", " \
    \   $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n        if ($num\
    \ < 0) {\n            $num = $num * -1;\n            $sum = $sum + $num % 10;\n\
    \            $num = $num / 10;\n        }\n        while ($num > 0) {\n      \
    \      $sum = $sum + $num % 10;\n            $num = $num / 10;\n        }\n  \
    \      if ($sum > 0) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\n/* Write a function count_nums which takes an array of integers and returns\n\
    the number of elements which has a sum of digits > 0.\nIf a number is negative,\
    \ then its first signed digit will be negative:\ne.g. -123 has signed digits -1,\
    \ 2, and 3.\n>>> count_nums(array())\n0\n>>> count_nums(array(-1, 11, -11))\n\
    1\n>>> count_nums(array(1, 1, 2))\n3*/", "    $count = 0;\n    foreach ($arr as\
    \ $num) {\n        $sum = 0;\n        if ($num < 0) {\n            $num = -$num;\n\
    \            $sum += -1;\n        }\n        while ($num > 0) {\n            $sum\
    \ += $num % 10;\n            $num = floor($num / 10);\n        }\n        if ($sum\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}", " \
    \   $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n        if ($num\
    \ < 0) {\n            $num = -$num;\n            $sum = -1;\n        }\n     \
    \   while ($num > 0) {\n            $sum += $num % 10;\n            $num = (int)($num\
    \ / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}\n\n/* Write a function count_nums2 which takes an\
    \ array of integers and returns\nthe number of elements which has a sum of digits\
    \ > 0.\nIf a number is negative, then its first signed digit will be negative:\n\
    e.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums2(array())\n0\n>>> count_nums2(array(-1,\
    \ 11, -11))\n1\n>>> count_nums2(array(1, 1, 2))\n3*/", "    $count = 0;\n    foreach\
    \ ($arr as $num) {\n        $sum = 0;\n        if ($num < 0) {\n            $num\
    \ = -$num;\n            $sum += -1;\n        }\n        while ($num > 0) {\n \
    \           $sum += $num % 10;\n            $num = floor($num / 10);\n       \
    \ }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Write a function count_nums_2 which takes an array of integers\
    \ and returns\nthe number of elements which has a sum of digits > 0.\nIf a number\
    \ is negative, then its first signed digit will be negative:\ne.g. -123 has signed\
    \ digits -1, 2, and 3.\n>>> count_nums_2(array())\n0\n>>> count_nums_2(array(-1,\
    \ 11, -11))\n1\n>>> count_nums_2(array(1, 1, 2))\n3*/", "    $count = 0;\n   \
    \ foreach ($arr as $num) {\n        $sum = 0;\n        if ($num < 0) {\n     \
    \       $num = -$num;\n            $sum += -1;\n        }\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = (int)($num / 10);\n\
    \        }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}", "  $count = 0;\n  foreach ($arr as $num) {\n    $sum\
    \ = 0;\n    if ($num < 0) {\n      $num = -$num;\n      $sum += -1;\n    }\n \
    \   while ($num > 0) {\n      $sum += $num % 10;\n      $num = (int)($num / 10);\n\
    \    }\n    if ($sum > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\
    \n/* Write a function count_nums_2 which takes an array of integers and returns\n\
    the number of elements which has a sum of digits > 0.\nIf a number is negative,\
    \ then its first signed digit will be negative:\ne.g. -123 has signed digits -1,\
    \ 2, and 3.\n>>> count_nums_2(array())\n0\n>>> count_nums_2(array(-1, 11, -11))\n\
    1\n>>> count_nums_2(array(1, 1, 2))\n3*/", "\t$count = 0;\n\tforeach ($arr as\
    \ $num) {\n\t\t$sum = 0;\n\t\tif ($num < 0) {\n\t\t\t$num = -$num;\n\t\t\t$sum\
    \ += -1;\n\t\t}\n\t\twhile ($num > 0) {\n\t\t\t$sum += $num % 10;\n\t\t\t$num\
    \ = (int)($num / 10);\n\t\t}\n\t\tif ($sum > 0) {\n\t\t\t$count++;\n\t\t}\n\t\
    }\n\treturn $count;\n}\n\n/* Write a function count_nums_2 which takes an array\
    \ of integers and returns\nthe number of elements which has a sum of digits >\
    \ 0.\nIf a number is negative, then its first signed digit will be negative:\n\
    e.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums_2(array())\n0\n>>> count_nums_2(array(-1,\
    \ 11, -11))\n1\n>>> count_nums_2(array(1, 1, 2))\n3*/", "    $count = 0;\n   \
    \ foreach ($arr as $num) {\n        $sum = 0;\n        if ($num < 0) {\n     \
    \       $num = -$num;\n            $sum += -1;\n        }\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\n\n/* Write a function count_nums_2 which takes an array\
    \ of integers and returns\nthe number of elements which has a sum of digits >\
    \ 0.\nIf a number is negative, then its first signed digit will be negative:\n\
    e.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums_2(array())\n0\n>>> count_nums_2(array(-1,\
    \ 11, -11))\n1\n>>> count_nums_2(array(1, 1, 2))\n3*/", "    $count = 0;\n   \
    \ foreach ($arr as $value) {\n        $sum = 0;\n        if ($value < 0) {\n \
    \           $value = abs($value);\n            $sum += $value % 10;\n        \
    \    $value = (int)($value / 10);\n        }\n        while ($value > 0) {\n \
    \           $sum += $value % 10;\n            $value = (int)($value / 10);\n \
    \       }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\n\n/* Write a function count_nums_2 which takes an array\
    \ of integers and returns\nthe number of elements which has a sum of digits >\
    \ 0.\nIf a number is negative, then its first signed digit will be negative:\n\
    e.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums_2(array())\n0\n>>> count_nums_2(array(-1,\
    \ 11, -11))\n1\n>>> count_nums_2(array(1, 1, 2))\n3*/", "    $count = 0;\n   \
    \ foreach ($arr as $num) {\n        $sum = 0;\n        if ($num < 0) {\n     \
    \       $num = -$num;\n            $sum += -1;\n        }\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}", "    $count = 0;\n    foreach ($arr as $num) {\n    \
    \    $sum = 0;\n        if ($num < 0) {\n            $num = -$num;\n         \
    \   $sum += -1;\n        }\n        while ($num > 0) {\n            $sum += $num\
    \ % 10;\n            $num = (int)($num / 10);\n        }\n        if ($sum > 0)\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}", "    $count\
    \ = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n        $num = abs($num);\n\
    \        while ($num > 0) {\n            $sum += $num % 10;\n            $num\
    \ = floor($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}", "    $count = 0;\n    foreach ($arr\
    \ as $value) {\n        $sum = 0;\n        if ($value < 0) {\n            $value\
    \ = -$value;\n            $sum += $value % 10;\n            $value = (int)($value\
    \ / 10);\n        }\n        while ($value > 0) {\n            $sum += $value\
    \ % 10;\n            $value = (int)($value / 10);\n        }\n        if ($sum\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}", " \
    \   $count = 0;\n    foreach ($arr as $value) {\n        $sum = 0;\n        if\
    \ ($value < 0) {\n            $value = -$value;\n            $sum += $value %\
    \ 10;\n            $value = (int)($value / 10);\n        }\n        while ($value\
    \ > 0) {\n            $sum += $value % 10;\n            $value = (int)($value\
    \ / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}", "\t$count = 0;\n\tforeach ($arr as $num) {\n\t\
    \t$sum = 0;\n\t\t$num = abs($num);\n\t\twhile ($num > 0) {\n\t\t\t$sum += $num\
    \ % 10;\n\t\t\t$num = floor($num / 10);\n\t\t}\n\t\tif ($sum > 0) {\n\t\t\t$count++;\n\
    \t\t}\n\t}\n\treturn $count;\n}\n\n/* Write a function count_nums which takes\
    \ an array of integers and returns\nthe number of elements which has a sum of\
    \ digits > 0.\nIf a number is negative, then its first signed digit will be negative:\n\
    e.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums(array())\n0\n>>> count_nums(array(-1,\
    \ 11, -11))\n1\n>>> count_nums(array(1, 1, 2))\n3*/", "    $count = 0;\n    foreach\
    \ ($arr as $value) {\n        $sum = 0;\n        if ($value < 0) {\n         \
    \   $value = -$value;\n            $sum += $value % 10;\n            $value =\
    \ (int)($value / 10);\n        }\n        while ($value > 0) {\n            $sum\
    \ += $value % 10;\n            $value = (int)($value / 10);\n        }\n     \
    \   if ($sum > 0) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }", "    $count = 0;\n    foreach ($arr as $value) {\n        $sum = 0;\n    \
    \    if ($value < 0) {\n            $value = -$value;\n            $sum += -1;\n\
    \        }\n        while ($value > 0) {\n            $sum += $value % 10;\n \
    \           $value = (int)($value / 10);\n        }\n        if ($sum > 0) {\n\
    \            $count++;\n        }\n    }\n    return $count;\n}\n\n/* Write a\
    \ function count_nums_2 which takes an array of integers and returns\nthe number\
    \ of elements which has a sum of digits > 0.\nIf a number is negative, then its\
    \ first signed digit will be negative:\ne.g. -123 has signed digits -1, 2, and\
    \ 3.\n>>> count_nums_2(array())\n0\n>>> count_nums_2(array(-1, 11, -11))\n1\n\
    >>> count_nums_2(array(1, 1, 2))\n3*/", "    $count = 0;\n    foreach ($arr as\
    \ $num) {\n        $sum = 0;\n        if ($num < 0) {\n            $num = -$num;\n\
    \            $sum += $num % 10;\n            $num = (int)($num / 10);\n      \
    \  }\n        while ($num > 0) {\n            $sum += $num % 10;\n           \
    \ $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}", "    $count = 0;\n    foreach ($arr\
    \ as $num) {\n        $sum = 0;\n        if ($num < 0) {\n            $num = -$num;\n\
    \            $sum = -1;\n        }\n        while ($num > 0) {\n            $sum\
    \ += $num % 10;\n            $num = (int)($num / 10);\n        }\n        if ($sum\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}", " \
    \   $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n        if ($num\
    \ < 0) {\n            $num = -$num;\n            $sum += -1;\n        }\n    \
    \    while ($num > 0) {\n            $sum += $num % 10;\n            $num = (int)($num\
    \ / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}", "    $count = 0;\n    foreach ($arr as $num) {\n\
    \        $sum = 0;\n        if ($num < 0) {\n            $num = -$num;\n     \
    \       $sum += -1;\n        }\n        while ($num > 0) {\n            $sum +=\
    \ $num % 10;\n            $num = (int)($num / 10);\n        }\n        if ($sum\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}", " \
    \   $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n        $num\
    \ = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n \
    \           $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n   \
    \         $count++;\n        }\n    }\n    return $count;\n}", "    $count = 0;\n\
    \    foreach ($arr as $num) {\n        $sum = 0;\n        if ($num < 0) {\n  \
    \          $num = -$num;\n            $sum = -1;\n        }\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = (int)($num / 10);\n\
    \        }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\n\n/* Write a function count_nums which takes an array\
    \ of integers and returns\nthe number of elements which has a sum of digits >\
    \ 0.\nIf a number is negative, then its first signed digit will be negative:\n\
    e.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums(array())\n0\n>>> count_nums(array(-1,\
    \ 11, -11))\n1\n>>> count_nums(array(1, 1, 2))\n3*/", "\t$count = 0;\n\tforeach\
    \ ($arr as $key => $value) {\n\t\t$sum = 0;\n\t\tif ($value < 0) {\n\t\t\t$value\
    \ = $value * -1;\n\t\t}\n\t\twhile ($value > 0) {\n\t\t\t$sum += $value % 10;\n\
    \t\t\t$value = (int)($value / 10);\n\t\t}\n\t\tif ($sum > 0) {\n\t\t\t$count++;\n\
    \t\t}\n\t}\n\treturn $count;\n}", "    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = floor($num / 10);\n      \
    \  }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}", "    $count = 0;\n    foreach ($arr as $value) {\n        $sum\
    \ = 0;\n        if ($value < 0) {\n            $value = abs($value);\n       \
    \     $sum += $value % 10;\n            $value = floor($value / 10);\n       \
    \ }\n        while ($value > 0) {\n            $sum += $value % 10;\n        \
    \    $value = floor($value / 10);\n        }\n        if ($sum > 0) {\n      \
    \      $count++;\n        }\n    }\n    return $count;\n}\n\n/* Write a function\
    \ count_nums_2 which takes an array of integers and returns\nthe number of elements\
    \ which has a sum of digits > 0.\nIf a number is negative, then its first signed\
    \ digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums_2(array())\n\
    0\n>>> count_nums_2(array(-1, 11, -11))\n1\n>>> count_nums_2(array(1, 1, 2))\n\
    3*/", "    $count = 0;\n    foreach ($arr as $item) {\n        $sum = 0;\n   \
    \     if ($item < 0) {\n            $item = -$item;\n            $sum += -1;\n\
    \        }\n        while ($item > 0) {\n            $sum += $item % 10;\n   \
    \         $item = (int)($item / 10);\n        }\n        if ($sum > 0) {\n   \
    \         $count++;\n        }\n    }\n    return $count;\n}\n\n/* Write a function\
    \ count_nums_2 which takes an array of integers and returns\nthe number of elements\
    \ which has a sum of digits > 0.\nIf a number is negative, then its first signed\
    \ digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums_2(array())\n\
    0\n>>> count_nums_2(array(-1, 11, -11))\n1\n>>> count_nums_2(array(1, 1, 2))\n\
    3*/", "    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n    \
    \    if ($num < 0) {\n            $num = $num * -1;\n            $sum = $sum +\
    \ ($num % 10);\n            $num = $num / 10;\n        }\n        while ($num\
    \ > 0) {\n            $sum = $sum + ($num % 10);\n            $num = $num / 10;\n\
    \        }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}", "    $count = 0;\n    foreach ($arr as $num) {\n    \
    \    $sum = 0;\n        if ($num < 0) {\n            $num = -$num;\n         \
    \   $sum += -1;\n        }\n        while ($num > 0) {\n            $sum += $num\
    \ % 10;\n            $num = (int)($num / 10);\n        }\n        if ($sum > 0)\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n/* Write\
    \ a function count_nums_2 which takes an array of integers and returns\nthe number\
    \ of elements which has a sum of digits > 0.\nIf a number is negative, then its\
    \ first signed digit will be negative:\ne.g. -123 has signed digits -1, 2, and\
    \ 3.\n>>> count_nums_2(array())\n0\n>>> count_nums_2(array(-1, 11, -11))\n1\n\
    >>> count_nums_2(array(1, 1, 2))\n3*/", "    $count = 0;\n    foreach ($arr as\
    \ $value) {\n        $sum = 0;\n        if ($value < 0) {\n            $value\
    \ = -$value;\n            $sum += $value % 10;\n            $value = (int)($value\
    \ / 10);\n        }\n        while ($value > 0) {\n            $sum += $value\
    \ % 10;\n            $value = (int)($value / 10);\n        }\n        if ($sum\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}", "\t\
    $count = 0;\n\tforeach ($arr as $value) {\n\t\t$sum = 0;\n\t\tif ($value < 0)\
    \ {\n\t\t\t$value = -$value;\n\t\t\t$sum += $value % 10;\n\t\t\t$value = (int)($value\
    \ / 10);\n\t\t}\n\t\twhile ($value > 0) {\n\t\t\t$sum += $value % 10;\n\t\t\t\
    $value = (int)($value / 10);\n\t\t}\n\t\tif ($sum > 0) {\n\t\t\t$count++;\n\t\t\
    }\n\t}\n\treturn $count;\n}", "    $count = 0;\n    foreach ($arr as $num) {\n\
    \        $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n  \
    \          $sum += $num % 10;\n            $num = floor($num / 10);\n        }\n\
    \        if ($sum > 0) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}", "    $count = 0;\n    foreach ($arr as $value) {\n        $sum\
    \ = 0;\n        $value = abs($value);\n        while ($value > 0) {\n        \
    \    $sum += $value % 10;\n            $value = floor($value / 10);\n        }\n\
    \        if ($sum > 0) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}", "    $count = 0;\n    foreach ($arr as $num) {\n        $sum =\
    \ 0;\n        $num = abs($num);\n        while ($num > 0) {\n            $sum\
    \ += $num % 10;\n            $num = (int)($num / 10);\n        }\n        if ($sum\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n/*\
    \ Write a function count_nums_2 which takes an array of integers and returns\n\
    the number of elements which has a sum of digits > 0.\nIf a number is negative,\
    \ then its first signed digit will be negative:\ne.g. -123 has signed digits -1,\
    \ 2, and 3.\n>>> count_nums_2(array())\n0\n>>> count_nums_2(array(-1, 11, -11))\n\
    1\n>>> count_nums_2(array(1, 1, 2))\n3*/", "\t$count = 0;\n\tforeach ($arr as\
    \ $value) {\n\t\t$sum = 0;\n\t\t$value = abs($value);\n\t\twhile ($value > 0)\
    \ {\n\t\t\t$sum += $value % 10;\n\t\t\t$value = (int)($value / 10);\n\t\t}\n\t\
    \tif ($sum > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}", "\t$count\
    \ = 0;\n\tforeach ($arr as $num) {\n\t\t$sum = 0;\n\t\t$num = abs($num);\n\t\t\
    while ($num != 0) {\n\t\t\t$sum += $num % 10;\n\t\t\t$num = floor($num / 10);\n\
    \t\t}\n\t\tif ($sum > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\
    \n/* Write a function find_max_min which takes an array of integers and returns\n\
    the maximum and minimum elements in the array.\n>>> find_max_min(array())\narray(0,\
    \ 0)\n>>> find_max_min(array(1, 2, 3))\narray(3, 1)\n>>> find_max_min(array(3,\
    \ 2, 1))\narray(3, 1)\n>>> find_max_min(array(1, 1, 1))\narray(1, 1)*/", "   \
    \ $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n        $num =\
    \ abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n   \
    \         $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n     \
    \       $count++;\n        }\n    }\n    return $count;\n}\n\n/* Write a function\
    \ count_nums_2 which takes an array of integers and returns\nthe number of elements\
    \ which has a sum of digits > 0.\nIf a number is negative, then its first signed\
    \ digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums_2(array())\n\
    0\n>>> count_nums_2(array(-1, 11, -11))\n1\n>>> count_nums_2(array(1, 1, 2))\n\
    3*/", "\t$count = 0;\n\tforeach ($arr as $value) {\n\t\t$sum = 0;\n\t\tif ($value\
    \ < 0) {\n\t\t\t$value = -$value;\n\t\t\t$sum += -1;\n\t\t}\n\t\twhile ($value\
    \ > 0) {\n\t\t\t$sum += $value % 10;\n\t\t\t$value = (int)($value / 10);\n\t\t\
    }\n\t\tif ($sum > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}", " \
    \   $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n        if ($num\
    \ < 0) {\n            $num = $num * -1;\n            $sum = $sum + ($num % 10);\n\
    \            $num = $num / 10;\n        }\n        while ($num > 0) {\n      \
    \      $sum = $sum + ($num % 10);\n            $num = $num / 10;\n        }\n\
    \        if ($sum > 0) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}", "    $count = 0;\n    foreach ($arr as $num) {\n        $sum =\
    \ 0;\n        if ($num < 0) {\n            $num = $num * -1;\n            $sum\
    \ = $sum + ($num % 10);\n            $num = $num / 10;\n        }\n        while\
    \ ($num > 0) {\n            $sum = $sum + ($num % 10);\n            $num = $num\
    \ / 10;\n        }\n        if ($sum > 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}", "    $count = 0;\n    foreach ($arr as $value)\
    \ {\n        $sum = 0;\n        $value = abs($value);\n        while ($value >\
    \ 0) {\n            $sum += $value % 10;\n            $value = floor($value /\
    \ 10);\n        }\n        if ($sum > 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}", "    $count = 0;\n    foreach ($arr as $num) {\n\
    \        $sum = 0;\n        if ($num < 0) {\n            $num = -$num;\n     \
    \       $sum -= $num % 10;\n            $num = (int)($num / 10);\n        }\n\
    \        while ($num > 0) {\n            $sum += $num % 10;\n            $num\
    \ = (int)($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}", "    $count = 0;\n    foreach ($arr\
    \ as $num) {\n        $sum = 0;\n        if ($num < 0) {\n            $num = -$num;\n\
    \            $sum += $num % 10;\n            $num = (int)($num / 10);\n      \
    \  }\n        while ($num > 0) {\n            $sum += $num % 10;\n           \
    \ $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}", "    $count = 0;\n    foreach ($arr\
    \ as $value) {\n        $sum = 0;\n        if ($value < 0) {\n            $value\
    \ = -$value;\n            $sum += $value % 10;\n            $value = (int)($value\
    \ / 10);\n        }\n        while ($value > 0) {\n            $sum += $value\
    \ % 10;\n            $value = (int)($value / 10);\n        }\n        if ($sum\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}", " \
    \   $count = 0;\n    foreach ($arr as $value) {\n        $sum = 0;\n        if\
    \ ($value < 0) {\n            $value = -$value;\n            $sum += -1;\n   \
    \     }\n        while ($value > 0) {\n            $sum += $value % 10;\n    \
    \        $value = (int)($value / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\n/* Write a function\
    \ count_nums_2 which takes an array of integers and returns\nthe number of elements\
    \ which has a sum of digits > 0.\nIf a number is negative, then its first signed\
    \ digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums_2(array())\n\
    0\n>>> count_nums_2(array(-1, 11, -11))\n1\n>>> count_nums_2(array(1, 1, 2))\n\
    3*/", "    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n    \
    \    if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n   \
    \     }\n        while ($num > 0) {\n            $sum += $num % 10;\n        \
    \    $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n          \
    \  $count++;\n        }\n    }\n    return $count;\n}", "    $count = 0;\n   \
    \ foreach ($arr as $value) {\n        $sum = 0;\n        if ($value < 0) {\n \
    \           $value = -$value;\n            $sum += $value % 10;\n            $value\
    \ = (int)($value / 10);\n        }\n        while ($value > 0) {\n           \
    \ $sum += $value % 10;\n            $value = (int)($value / 10);\n        }\n\
    \        if ($sum > 0) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}", "    $count = 0;\n    foreach ($arr as $num) {\n        $sum =\
    \ 0;\n        $num = abs($num);\n        while ($num > 0) {\n            $sum\
    \ += $num % 10;\n            $num = floor($num / 10);\n        }\n        if ($sum\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}", " \
    \   $count = 0;\n    foreach ($arr as $value) {\n        $sum = 0;\n        if\
    \ ($value < 0) {\n            $value = -$value;\n            $sum += -1;\n   \
    \     }\n        while ($value > 0) {\n            $sum += $value % 10;\n    \
    \        $value = floor($value / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}", "    $count =\
    \ 0;\n    foreach ($arr as $value) {\n        $sum = 0;\n        $value = abs($value);\n\
    \        while ($value > 0) {\n            $sum += $value % 10;\n            $value\
    \ = intval($value / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\n/* Write a function count_nums_2 which\
    \ takes an array of integers and returns\nthe number of elements which has a sum\
    \ of digits > 0.\nIf a number is negative, then its first signed digit will be\
    \ negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums_2(array())\n\
    0\n>>> count_nums_2(array(-1, 11, -11))\n1\n>>> count_nums_2(array(1, 1, 2))\n\
    3*/", "\t$count = 0;\n\tforeach ($arr as $value) {\n\t\t$sum = 0;\n\t\t$value\
    \ = abs($value);\n\t\twhile ($value > 0) {\n\t\t\t$sum += $value % 10;\n\t\t\t\
    $value = floor($value / 10);\n\t\t}\n\t\tif ($sum > 0) {\n\t\t\t$count++;\n\t\t\
    }\n\t}\n\treturn $count;\n}\n\n/* Write a function count_nums which takes an array\
    \ of integers and returns\nthe number of elements which has a sum of digits >\
    \ 0.\nIf a number is negative, then its first signed digit will be negative:\n\
    e.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums(array())\n0\n>>> count_nums(array(-1,\
    \ 11, -11))\n1\n>>> count_nums(array(1, 1, 2))\n3*/", "    $count = 0;\n    foreach\
    \ ($arr as $value) {\n        $sum = 0;\n        if ($value < 0) {\n         \
    \   $value = -$value;\n            $sum = -1;\n        }\n        while ($value\
    \ > 0) {\n            $sum += $value % 10;\n            $value = (int)($value\
    \ / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}", "    $count = 0;\n    foreach ($arr as $num) {\n\
    \        $sum = 0;\n        if ($num < 0) {\n            $num = $num * -1;\n \
    \           $sum += $num % 10;\n            $num = $num / 10;\n            $sum\
    \ += $num % 10;\n            $num = $num / 10;\n            $sum += $num % 10;\n\
    \        } else {\n            $sum += $num % 10;\n            $num = $num / 10;\n\
    \            $sum += $num % 10;\n            $num = $num / 10;\n            $sum\
    \ += $num % 10;\n        }\n        if ($sum > 0) {\n            $count++;\n \
    \       }\n    }\n    return $count;\n}", "    $count = 0;\n    foreach ($arr\
    \ as $num) {\n        $sum = 0;\n        if ($num < 0) {\n            $num = -$num;\n\
    \            $sum += -1;\n        }\n        while ($num > 0) {\n            $sum\
    \ += $num % 10;\n            $num = (int)($num / 10);\n        }\n        if ($sum\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}", " \
    \   $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n        if ($num\
    \ < 0) {\n            $num = -$num;\n            $sum += $num % 10;\n        \
    \    $num = (int)($num / 10);\n        }\n        while ($num > 0) {\n       \
    \     $sum += $num % 10;\n            $num = (int)($num / 10);\n        }\n  \
    \      if ($sum > 0) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }", "    $count = 0;\n    foreach ($arr as $value) {\n        $sum = 0;\n    \
    \    if ($value < 0) {\n            $value = abs($value);\n            $sum +=\
    \ $value % 10;\n            $value = (int)($value / 10);\n        }\n        while\
    \ ($value > 0) {\n            $sum += $value % 10;\n            $value = (int)($value\
    \ / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}", "    $count = 0;\n    foreach ($arr as $num) {\n\
    \        $sum = 0;\n        if ($num < 0) {\n            $num = -$num;\n     \
    \       $sum += -1;\n        }\n        while ($num > 0) {\n            $sum +=\
    \ $num % 10;\n            $num = (int)($num / 10);\n        }\n        if ($sum\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}", " \
    \   $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n        if ($num\
    \ < 0) {\n            $num = -$num;\n            $sum += -1;\n        }\n    \
    \    while ($num > 0) {\n            $sum += $num % 10;\n            $num = (int)($num\
    \ / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}", "    $count = 0;\n    foreach ($arr as $num) {\n\
    \        $sum = 0;\n        if ($num < 0) {\n            $num = -$num;\n     \
    \       $sum += -1;\n        }\n        while ($num > 0) {\n            $sum +=\
    \ $num % 10;\n            $num = floor($num / 10);\n        }\n        if ($sum\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}", " \
    \   $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n        if ($num\
    \ < 0) {\n            $num = -$num;\n            $sum += -1;\n        }\n    \
    \    while ($num > 0) {\n            $sum += $num % 10;\n            $num = (int)($num\
    \ / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}", "    $count = 0;\n    foreach ($arr as $num) {\n\
    \        $sum = 0;\n        if ($num < 0) {\n            $num = -$num;\n     \
    \       $sum += -1;\n        }\n        while ($num > 0) {\n            $sum +=\
    \ $num % 10;\n            $num = floor($num / 10);\n        }\n        if ($sum\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}", " \
    \   $count = 0;\n    foreach ($arr as $value) {\n        $sum = 0;\n        if\
    \ ($value < 0) {\n            $value = -$value;\n            $sum += $value %\
    \ 10;\n            $value = (int)($value / 10);\n        }\n        while ($value\
    \ > 0) {\n            $sum += $value % 10;\n            $value = (int)($value\
    \ / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}\n\n/* Write a function count_nums_2 which takes\
    \ an array of integers and returns\nthe number of elements which has a sum of\
    \ digits > 0.\nIf a number is negative, then its first signed digit will be negative:\n\
    e.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums_2(array())\n0\n>>> count_nums_2(array(-1,\
    \ 11, -11))\n1\n>>> count_nums_2(array(1, 1, 2))\n3*/", "    $count = 0;\n   \
    \ foreach ($arr as $value) {\n        $sum = 0;\n        if ($value < 0) {\n \
    \           $value = -$value;\n            $sum += $value % 10;\n            $value\
    \ = (int)($value / 10);\n        }\n        while ($value > 0) {\n           \
    \ $sum += $value % 10;\n            $value = (int)($value / 10);\n        }\n\
    \        if ($sum > 0) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}", "    $count = 0;\n    foreach ($arr as $item) {\n        $sum =\
    \ 0;\n        if ($item < 0) {\n            $item = -$item;\n            $sum\
    \ += $item % 10;\n            $item = (int)($item / 10);\n        }\n        while\
    \ ($item > 0) {\n            $sum += $item % 10;\n            $item = (int)($item\
    \ / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}", "    $count = 0;\n    foreach ($arr as $num) {\n\
    \        $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n  \
    \          $sum += $num % 10;\n            $num = floor($num / 10);\n        }\n\
    \        if ($sum > 0) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}", "    $count = 0;\n    foreach ($arr as $value) {\n        $sum\
    \ = 0;\n        if ($value < 0) {\n            $value = -$value;\n           \
    \ $sum = -1;\n        }\n        while ($value > 0) {\n            $sum += $value\
    \ % 10;\n            $value = (int)($value / 10);\n        }\n        if ($sum\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}", " \
    \   $count = 0;\n    foreach ($arr as $value) {\n        $sum = 0;\n        if\
    \ ($value < 0) {\n            $value = abs($value);\n            $sum += $value\
    \ % 10;\n            $value = floor($value / 10);\n        }\n        while ($value\
    \ > 0) {\n            $sum += $value % 10;\n            $value = floor($value\
    \ / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}", "    $count = 0;\n    foreach ($arr as $num) {\n\
    \        $sum = 0;\n        if ($num < 0) {\n            $num = -$num;\n     \
    \       $sum += -1;\n        }\n        while ($num > 0) {\n            $sum +=\
    \ $num % 10;\n            $num = (int)($num / 10);\n        }\n        if ($sum\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n/*\
    \ Write a function count_nums_2 which takes an array of integers and returns\n\
    the number of elements which has a sum of digits > 0.\nIf a number is negative,\
    \ then its first signed digit will be negative:\ne.g. -123 has signed digits -1,\
    \ 2, and 3.\n>>> count_nums_2(array())\n0\n>>> count_nums_2(array(-1, 11, -11))\n\
    1\n>>> count_nums_2(array(1, 1, 2))\n3*/", "    $count = 0;\n    foreach ($arr\
    \ as $num) {\n        $sum = 0;\n        if ($num < 0) {\n            $sum +=\
    \ $num % 10;\n            $num = -$num;\n        }\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = (int)($num / 10);\n      \
    \  }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}", "\t$count = 0;\n\tforeach ($arr as $value) {\n\t\t$sum = 0;\n\t\
    \t$value = abs($value);\n\t\twhile ($value > 0) {\n\t\t\t$sum += $value % 10;\n\
    \t\t\t$value = floor($value / 10);\n\t\t}\n\t\tif ($sum > 0) {\n\t\t\t$count++;\n\
    \t\t}\n\t}\n\treturn $count;\n}\n\n/* Write a function count_nums_2 which takes\
    \ an array of integers and returns\nthe number of elements which has a sum of\
    \ digits > 0.\nIf a number is negative, then its first signed digit will be negative:\n\
    e.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums_2(array())\n0\n>>> count_nums_2(array(-1,\
    \ 11, -11))\n1\n>>> count_nums_2(array(1, 1, 2))\n3*/", "    $count = 0;\n   \
    \ foreach ($arr as $num) {\n        $sum = 0;\n        if ($num < 0) {\n     \
    \       $num = -$num;\n            $sum -= $num % 10;\n            $num = (int)($num\
    \ / 10);\n        }\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}", "\t$count = 0;\n\
    \tforeach ($arr as $num) {\n\t\t$sum = 0;\n\t\tif ($num < 0) {\n\t\t\t$num = -$num;\n\
    \t\t\t$sum += -1;\n\t\t}\n\t\twhile ($num > 0) {\n\t\t\t$sum += $num % 10;\n\t\
    \t\t$num = (int)($num / 10);\n\t\t}\n\t\tif ($sum > 0) {\n\t\t\t$count++;\n\t\t\
    }\n\t}\n\treturn $count;\n}", "    $count = 0;\n    foreach ($arr as $num) {\n\
    \        $sum = 0;\n        if ($num < 0) {\n            $num = -$num;\n     \
    \       $sum += -1;\n        }\n        while ($num > 0) {\n            $sum +=\
    \ $num % 10;\n            $num = (int)($num / 10);\n        }\n        if ($sum\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n/*\
    \ Write a function is_palindrome which takes a string and returns true if\nthe\
    \ string is a palindrome, and false otherwise.\n>>> is_palindrome(\"\")\ntrue\n\
    >>> is_palindrome(\"a\")\ntrue\n>>> is_palindrome(\"ab\")\nfalse\n>>> is_palindrome(\"\
    aba\")\ntrue\n>>> is_palindrome(\"abba\")\ntrue\n>>> is_palindrome(\"abcba\")\n\
    true\n>>> is_palindrome(\"abccba\")\ntrue\n>>> is_palindrome(\"abcde\")\nfalse\n\
    >>> is_palindrome(\"abcdedcba\")\ntrue*/", "\t$count = 0;\n\tforeach ($arr as\
    \ $num) {\n\t\t$sum = 0;\n\t\tif ($num < 0) {\n\t\t\t$num = -$num;\n\t\t\t$sum\
    \ += -1;\n\t\t}\n\t\twhile ($num > 0) {\n\t\t\t$sum += $num % 10;\n\t\t\t$num\
    \ = (int)($num / 10);\n\t\t}\n\t\tif ($sum > 0) {\n\t\t\t$count++;\n\t\t}\n\t\
    }\n\treturn $count;\n}\n\n/* Write a function count_nums_2 which takes an array\
    \ of integers and returns\nthe number of elements which has a sum of digits >\
    \ 0.\nIf a number is negative, then its first signed digit will be negative:\n\
    e.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums_2(array())\n0\n>>> count_nums_2(array(-1,\
    \ 11, -11))\n1\n>>> count_nums_2(array(1, 1, 2))\n3*/", "    $count = 0;\n   \
    \ foreach ($arr as $num) {\n        $sum = 0;\n        if ($num < 0) {\n     \
    \       $num = -$num;\n            $sum += -1;\n        }\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = (int)($num / 10);\n\
    \        }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}", "\t$count = 0;\n\tforeach ($arr as $num) {\n\t\t$sum\
    \ = 0;\n\t\tif ($num < 0) {\n\t\t\t$num = $num * -1;\n\t\t}\n\t\twhile ($num >\
    \ 0) {\n\t\t\t$sum += $num % 10;\n\t\t\t$num = floor($num / 10);\n\t\t}\n\t\t\
    if ($sum > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}", "    $count\
    \ = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n        if ($num < 0)\
    \ {\n            $num = -$num;\n            $sum += -1;\n        }\n        while\
    \ ($num > 0) {\n            $sum += $num % 10;\n            $num = (int)($num\
    \ / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}\n\n/* Write a function count_nums_2 which takes\
    \ an array of integers and returns\nthe number of elements which has a sum of\
    \ digits > 0.\nIf a number is negative, then its first signed digit will be negative:\n\
    e.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums_2(array())\n0\n>>> count_nums_2(array(-1,\
    \ 11, -11))\n1\n>>> count_nums_2(array(1, 1, 2))\n3*/", "    $count = 0;\n   \
    \ foreach ($arr as $value) {\n        $sum = 0;\n        if ($value < 0) {\n \
    \           $value = $value * -1;\n            $sum = $sum + $value % 10;\n  \
    \          $value = $value / 10;\n        }\n        while ($value > 0) {\n  \
    \          $sum = $sum + $value % 10;\n            $value = $value / 10;\n   \
    \     }\n        if ($sum > 0) {\n            $count = $count + 1;\n        }\n\
    \    }\n    return $count;\n}", "    $count = 0;\n    foreach ($arr as $value)\
    \ {\n        $sum = 0;\n        if ($value < 0) {\n            $value = -$value;\n\
    \            $sum += -1;\n        }\n        while ($value > 0) {\n          \
    \  $sum += $value % 10;\n            $value = (int)($value / 10);\n        }\n\
    \        if ($sum > 0) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}", "\t$count = 0;\n\tforeach ($arr as $num) {\n\t\t$sum = 0;\n\t\t\
    $num = abs($num);\n\t\twhile ($num > 0) {\n\t\t\t$sum += $num % 10;\n\t\t\t$num\
    \ = (int)($num / 10);\n\t\t}\n\t\tif ($sum > 0) {\n\t\t\t$count++;\n\t\t}\n\t\
    }\n\treturn $count;\n}", "\t$count = 0;\n\tforeach ($arr as $value) {\n\t\t$sum\
    \ = 0;\n\t\tif ($value < 0) {\n\t\t\t$value = -$value;\n\t\t\t$sum += -1;\n\t\t\
    }\n\t\twhile ($value > 0) {\n\t\t\t$sum += $value % 10;\n\t\t\t$value = (int)($value\
    \ / 10);\n\t\t}\n\t\tif ($sum > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n\
    }\n\n/* Write a function count_nums_2 which takes an array of integers and returns\n\
    the number of elements which has a sum of digits > 0.\nIf a number is negative,\
    \ then its first signed digit will be negative:\ne.g. -123 has signed digits -1,\
    \ 2, and 3.\n>>> count_nums_2(array())\n0\n>>> count_nums_2(array(-1, 11, -11))\n\
    1\n>>> count_nums_2(array(1, 1, 2))\n3*/", "    $count = 0;\n    foreach ($arr\
    \ as $num) {\n        $sum = 0;\n        if ($num < 0) {\n            $num = -$num;\n\
    \            $sum += -1;\n        }\n        while ($num > 0) {\n            $sum\
    \ += $num % 10;\n            $num = floor($num / 10);\n        }\n        if ($sum\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}", " \
    \   $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n        if ($num\
    \ < 0) {\n            $num = -$num;\n            $sum += $num % 10;\n        \
    \    $num = (int)($num / 10);\n        }\n        while ($num > 0) {\n       \
    \     $sum += $num % 10;\n            $num = (int)($num / 10);\n        }\n  \
    \      if ($sum > 0) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }", "  $count = 0;\n  foreach ($arr as $num) {\n    $sum = 0;\n    if ($num <\
    \ 0) {\n      $num = $num * -1;\n      $sum += $num % 10;\n      $num = $num /\
    \ 10;\n      $sum += $num % 10;\n      $num = $num / 10;\n      $sum += $num %\
    \ 10;\n      $num = $num / 10;\n      $sum += $num % 10;\n      $num = $num /\
    \ 10;\n      $sum += $num % 10;\n      $num = $num / 10;\n      $sum += $num %\
    \ 10;\n      $num = $num / 10;\n      $sum += $num % 10;\n      $num = $num /\
    \ 10;\n      $sum += $num % 10;\n      $num = $num / 10;\n      $sum += $num %\
    \ 10;\n      $num = $num / 10;\n      $sum += $num % 10;\n      $num = $num /\
    \ 10;\n      $sum += $num % 10;\n      $num = $num / 10;\n      $sum += $num %\
    \ 10;\n      $num = $num / 10;\n      $sum += $num % 10;\n      $num = $num /\
    \ 10;\n      $sum += $num % 10;\n      $num = $num / 10;\n      $sum += $num %\
    \ 10;\n      $num = $num / 10;\n      $sum += $num % 10;\n      $num = $num /\
    \ 10;\n      $sum += $num % 10;\n      $num = $num / 10;\n      $sum += $num %\
    \ 10;\n      $num = $num / 10;\n      $sum += $num % 10;\n      $num = $num /\
    \ 10;\n      $sum += $num % 10;\n      $num = $num / 10;\n      $sum += $num %\
    \ 10;\n      $num = $num / 10;\n      $sum += $num % 10;\n      $num = $num /\
    \ 10;\n      $sum += $num % 10;\n      $num = $num / 10;\n      $sum += $num",
  "\t$count = 0;\n\tforeach ($arr as $value) {\n\t\t$sum = 0;\n\t\t$value = abs($value);\n\
    \t\twhile ($value > 0) {\n\t\t\t$sum += $value % 10;\n\t\t\t$value = (int)($value\
    \ / 10);\n\t\t}\n\t\tif ($sum > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n\
    }", "    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = abs($num);\n            $sum += $num %\
    \ 10;\n            $num = floor($num / 10);\n        }\n        while ($num >\
    \ 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}", "    $count = 0;\n    foreach ($arr as $value) {\n  \
    \      $sum = 0;\n        $value = abs($value);\n        while ($value != 0) {\n\
    \            $sum += $value % 10;\n            $value = floor($value / 10);\n\
    \        }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\n\n/* Write a function find_max_sum which takes an array\
    \ of integers and returns\nthe maximum sum of any contiguous subarray of the array.\n\
    >>> find_max_sum(array(34, -50, 42, 14, -5, 86))\n137\n>>> find_max_sum(array(-5,\
    \ -1, -8, -9))\n0\n*/", "    $count = 0;\n    foreach ($arr as $num) {\n     \
    \   $sum = 0;\n        if ($num < 0) {\n            $num = -$num;\n          \
    \  $sum += -1;\n        }\n        while ($num > 0) {\n            $sum += $num\
    \ % 10;\n            $num = (int)($num / 10);\n        }\n        if ($sum > 0)\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n/* Write\
    \ a function count_nums2 which takes an array of integers and returns\nthe number\
    \ of elements which has a sum of digits > 0.\nIf a number is negative, then its\
    \ first signed digit will be negative:\ne.g. -123 has signed digits -1, 2, and\
    \ 3.\n>>> count_nums2(array())\n0\n>>> count_nums2(array(-1, 11, -11))\n1\n>>>\
    \ count_nums2(array(1, 1, 2))\n3*/", "    $count = 0;\n    foreach ($arr as $num)\
    \ {\n        $sum = 0;\n        if ($num < 0) {\n            $num = -$num;\n \
    \           $sum += -1;\n        }\n        while ($num > 0) {\n            $sum\
    \ += $num % 10;\n            $num = (int)($num / 10);\n        }\n        if ($sum\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\n/*\
    \ Write a function count_nums_2 which takes an array of integers and returns\n\
    the number of elements which has a sum of digits > 0.\nIf a number is negative,\
    \ then its first signed digit will be negative:\ne.g. -123 has signed digits -1,\
    \ 2, and 3.\n>>> count_nums_2(array())\n0\n>>> count_nums_2(array(-1, 11, -11))\n\
    1\n>>> count_nums_2(array(1, 1, 2))\n3*/", "    $count = 0;\n    foreach ($arr\
    \ as $value) {\n        $sum = 0;\n        if ($value < 0) {\n            $value\
    \ = -$value;\n            $sum += -1;\n        }\n        while ($value > 0) {\n\
    \            $sum += $value % 10;\n            $value = (int)($value / 10);\n\
    \        }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\n\n/* Write a function count_nums2 which takes an array\
    \ of integers and returns\nthe number of elements which has a sum of digits >\
    \ 0.\nIf a number is negative, then its first signed digit will be negative:\n\
    e.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums2(array())\n0\n>>> count_nums2(array(-1,\
    \ 11, -11))\n1\n>>> count_nums2(array(1, 1, 2))\n3*/", "    $count = 0;\n    foreach\
    \ ($arr as $value) {\n        $sum = 0;\n        if ($value < 0) {\n         \
    \   $value = -$value;\n            $sum += $value % 10;\n            $value =\
    \ (int)($value / 10);\n        }\n        while ($value > 0) {\n            $sum\
    \ += $value % 10;\n            $value = (int)($value / 10);\n        }\n     \
    \   if ($sum > 0) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\n/* Write a function find_max_sum which takes an array of integers and returns\n\
    the maximum sum of elements which has a sum of digits > 0.\nIf a number is negative,\
    \ then its first signed digit will be negative:\ne.g. -123 has signed digits -1,\
    \ 2, and 3.\n>>> find_max_sum(array())\n0\n>>> find_max_sum(array(-1, 11, -11))\n\
    11\n>>> find_max_sum(array(1, 1, 2))\n4*/", "\t$count = 0;\n\tforeach ($arr as\
    \ $value) {\n\t\t$sum = 0;\n\t\tif ($value < 0) {\n\t\t\t$value = -$value;\n\t\
    \t\t$sum = -1;\n\t\t}\n\t\twhile ($value > 0) {\n\t\t\t$sum += $value % 10;\n\t\
    \t\t$value = (int)($value / 10);\n\t\t}\n\t\tif ($sum > 0) {\n\t\t\t$count++;\n\
    \t\t}\n\t}\n\treturn $count;\n}\n\n/* Write a function count_nums_2 which takes\
    \ an array of integers and returns\nthe number of elements which has a sum of\
    \ digits > 0.\nIf a number is negative, then its first signed digit will be negative:\n\
    e.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums_2(array())\n0\n>>> count_nums_2(array(-1,\
    \ 11, -11))\n1\n>>> count_nums_2(array(1, 1, 2))\n3*/", "    $count = 0;\n   \
    \ foreach ($arr as $num) {\n        $sum = 0;\n        $num = abs($num);\n   \
    \     while ($num > 0) {\n            $sum += $num % 10;\n            $num = (int)($num\
    \ / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}\n\n/* Write a function count_nums_2 which takes\
    \ an array of integers and returns\nthe number of elements which has a sum of\
    \ digits > 0.\nIf a number is negative, then its first signed digit will be negative:\n\
    e.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums_2(array())\n0\n>>> count_nums_2(array(-1,\
    \ 11, -11))\n1\n>>> count_nums_2(array(1, 1, 2))\n3*/", "    $count = 0;\n   \
    \ foreach ($arr as $num) {\n        $sum = 0;\n        if ($num < 0) {\n     \
    \       $num = -$num;\n            $sum += -1;\n        }\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}", "    $count = 0;\n    foreach ($arr as $item) {\n   \
    \     $sum = 0;\n        if ($item < 0) {\n            $item = -$item;\n     \
    \       $sum += $item % 10;\n            $item = (int)($item / 10);\n        }\n\
    \        while ($item > 0) {\n            $sum += $item % 10;\n            $item\
    \ = (int)($item / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\n/* Write a function count_nums_2 which\
    \ takes an array of integers and returns\nthe number of elements which has a sum\
    \ of digits > 0.\nIf a number is negative, then its first signed digit will be\
    \ negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums_2(array())\n\
    0\n>>> count_nums_2(array(-1, 11, -11))\n1\n>>> count_nums_2(array(1, 1, 2))\n\
    3*/", "    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n    \
    \    if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n   \
    \     }\n        while ($num > 0) {\n            $sum += $num % 10;\n        \
    \    $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n          \
    \  $count++;\n        }\n    }\n    return $count;\n}", "    $count = 0;\n   \
    \ foreach ($arr as $value) {\n        $sum = 0;\n        if ($value < 0) {\n \
    \           $value = -$value;\n            $sum += $value % 10;\n            $value\
    \ = (int)($value / 10);\n        }\n        while ($value > 0) {\n           \
    \ $sum += $value % 10;\n            $value = (int)($value / 10);\n        }\n\
    \        if ($sum > 0) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Write a function count_nums_2 which takes an array of integers\
    \ and returns\nthe number of elements which has a sum of digits > 0.\nIf a number\
    \ is negative, then its first signed digit will be negative:\ne.g. -123 has signed\
    \ digits -1, 2, and 3.\n>>> count_nums_2(array())\n0\n>>> count_nums_2(array(-1,\
    \ 11, -11))\n1\n>>> count_nums_2(array(1, 1, 2))\n3*/", "\t$count = 0;\n\tforeach\
    \ ($arr as $value) {\n\t\t$sum = 0;\n\t\tif ($value < 0) {\n\t\t\t$value = $value\
    \ * -1;\n\t\t}\n\t\twhile ($value > 0) {\n\t\t\t$sum += $value % 10;\n\t\t\t$value\
    \ = (int)($value / 10);\n\t\t}\n\t\tif ($sum > 0) {\n\t\t\t$count++;\n\t\t}\n\t\
    }\n\treturn $count;\n}\n\n/* Write a function count_nums_2 which takes an array\
    \ of integers and returns\nthe number of elements which has a sum of digits >\
    \ 0.\nIf a number is negative, then its first signed digit will be negative:\n\
    e.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums_2(array())\n0\n>>> count_nums_2(array(-1,\
    \ 11, -11))\n1\n>>> count_nums_2(array(1, 1, 2))\n3*/", "    $count = 0;\n   \
    \ foreach ($arr as $num) {\n        $sum = 0;\n        if ($num < 0) {\n     \
    \       $num = $num * -1;\n            $sum = $sum + $num % 10;\n            $num\
    \ = $num / 10;\n        }\n        while ($num > 0) {\n            $sum = $sum\
    \ + $num % 10;\n            $num = $num / 10;\n        }\n        if ($sum > 0)\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}", "\t$count\
    \ = 0;\n\tforeach ($arr as $value) {\n\t\t$sum = 0;\n\t\tif ($value < 0) {\n\t\
    \t\t$value = -$value;\n\t\t\t$sum += $value % 10;\n\t\t\t$value = (int)($value\
    \ / 10);\n\t\t}\n\t\twhile ($value > 0) {\n\t\t\t$sum += $value % 10;\n\t\t\t\
    $value = (int)($value / 10);\n\t\t}\n\t\tif ($sum > 0) {\n\t\t\t$count++;\n\t\t\
    }\n\t}\n\treturn $count;\n}", "    $count = 0;\n    foreach ($arr as $num) {\n\
    \        $sum = 0;\n        if ($num < 0) {\n            $num = -$num;\n     \
    \       $sum += -1;\n        }\n        while ($num > 0) {\n            $sum +=\
    \ $num % 10;\n            $num = (int)($num / 10);\n        }\n        if ($sum\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}", " \
    \   $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n        if ($num\
    \ < 0) {\n            $num = -$num;\n            $sum += -1;\n        }\n    \
    \    while ($num > 0) {\n            $sum += $num % 10;\n            $num = (int)($num\
    \ / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}\n\n/* Write a function count_nums_2 which takes\
    \ an array of integers and returns\nthe number of elements which has a sum of\
    \ digits > 0.\nIf a number is negative, then its first signed digit will be negative:\n\
    e.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums_2(array())\n0\n>>> count_nums_2(array(-1,\
    \ 11, -11))\n1\n>>> count_nums_2(array(1, 1, 2))\n3*/", "    $count = 0;\n   \
    \ foreach ($arr as $num) {\n        $sum = 0;\n        if ($num < 0) {\n     \
    \       $num = -$num;\n            $sum -= $num % 10;\n            $num = (int)($num\
    \ / 10);\n        }\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}", "    $count =\
    \ 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n        if ($num < 0) {\n\
    \            $num = -$num;\n            $sum += -1;\n        }\n        while\
    \ ($num > 0) {\n            $sum += $num % 10;\n            $num = (int)($num\
    \ / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}", "\t$count = 0;\n\tforeach ($arr as $num) {\n\t\
    \tif ($num < 0) {\n\t\t\t$num = -$num;\n\t\t}\n\t\t$sum = 0;\n\t\twhile ($num\
    \ > 0) {\n\t\t\t$sum += $num % 10;\n\t\t\t$num = (int)($num / 10);\n\t\t}\n\t\t\
    if ($sum > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\n/* Write\
    \ a function count_nums_fast which takes an array of integers and returns\nthe\
    \ number of elements which has a sum of digits > 0.\nIf a number is negative,\
    \ then its first signed digit will be negative:\ne.g. -123 has signed digits -1,\
    \ 2, and 3.\n>>> count_nums_fast(array())\n0\n>>> count_nums_fast(array(-1, 11,\
    \ -11))\n1\n>>> count_nums_fast(array(1, 1, 2))\n3*/", "    $count = 0;\n    foreach\
    \ ($arr as $value) {\n        $sum = 0;\n        if ($value < 0) {\n         \
    \   $value = -$value;\n            $sum = -1;\n        }\n        while ($value\
    \ > 0) {\n            $sum += $value % 10;\n            $value = floor($value\
    \ / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}", "    $count = 0;\n    foreach ($arr as $item)\
    \ {\n        $sum = 0;\n        if ($item < 0) {\n            $item = -$item;\n\
    \            $sum += $item % 10;\n            $item = (int)($item / 10);\n   \
    \     }\n        while ($item > 0) {\n            $sum += $item % 10;\n      \
    \      $item = (int)($item / 10);\n        }\n        if ($sum > 0) {\n      \
    \      $count++;\n        }\n    }\n    return $count;\n}\n\n/* Write a function\
    \ count_nums_2 which takes an array of integers and returns\nthe number of elements\
    \ which has a sum of digits > 0.\nIf a number is negative, then its first signed\
    \ digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums_2(array())\n\
    0\n>>> count_nums_2(array(-1, 11, -11))\n1\n>>> count_nums_2(array(1, 1, 2))\n\
    3*/", "    $count = 0;\n    foreach ($arr as $value) {\n        $sum = 0;\n  \
    \      if ($value < 0) {\n            $value = abs($value);\n            $sum\
    \ += $value % 10;\n            $value = (int)($value / 10);\n        }\n     \
    \   while ($value > 0) {\n            $sum += $value % 10;\n            $value\
    \ = (int)($value / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\n/* Write a function count_nums_2 which\
    \ takes an array of integers and returns\nthe number of elements which has a sum\
    \ of digits > 0.\nIf a number is negative, then its first signed digit will be\
    \ negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums_2(array())\n\
    0\n>>> count_nums_2(array(-1, 11, -11))\n1\n>>> count_nums_2(array(1, 1, 2))\n\
    3*/", "\t$count = 0;\n\tforeach ($arr as $num) {\n\t\t$sum = 0;\n\t\t$num = abs($num);\n\
    \t\twhile ($num > 0) {\n\t\t\t$sum += $num % 10;\n\t\t\t$num = floor($num / 10);\n\
    \t\t}\n\t\tif ($sum > 0) {\n\t\t\t$count++;\n\t\t}\n\t}\n\treturn $count;\n}\n\
    \n/* Write a function count_nums2 which takes an array of integers and returns\n\
    the number of elements which has a sum of digits > 0.\nIf a number is negative,\
    \ then its first signed digit will be negative:\ne.g. -123 has signed digits -1,\
    \ 2, and 3.\n>>> count_nums2(array())\n0\n>>> count_nums2(array(-1, 11, -11))\n\
    1\n>>> count_nums2(array(1, 1, 2))\n3*/", "    $count = 0;\n    foreach ($arr\
    \ as $num) {\n        $sum = 0;\n        if ($num < 0) {\n            $num = -$num;\n\
    \            $sum += -1;\n        }\n        while ($num > 0) {\n            $sum\
    \ += $num % 10;\n            $num = (int)($num / 10);\n        }\n        if ($sum\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}", " \
    \   $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n        if ($num\
    \ < 0) {\n            $num = -$num;\n            $sum += -1;\n        }\n    \
    \    while ($num > 0) {\n            $sum += $num % 10;\n            $num = (int)($num\
    \ / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}", "    $count = 0;\n    foreach ($arr as $num) {\n\
    \        $sum = 0;\n        if ($num < 0) {\n            $num = -$num;\n     \
    \       $sum += -1;\n        }\n        while ($num > 0) {\n            $sum +=\
    \ $num % 10;\n            $num = (int)($num / 10);\n        }\n        if ($sum\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}", " \
    \   $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n        if ($num\
    \ < 0) {\n            $num = -$num;\n            $sum += -1;\n        }\n    \
    \    while ($num > 0) {\n            $sum += $num % 10;\n            $num = (int)($num\
    \ / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}\n\n/* Write a function count_nums_fast which takes\
    \ an array of integers and returns\nthe number of elements which has a sum of\
    \ digits > 0.\nIf a number is negative, then its first signed digit will be negative:\n\
    e.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums_fast(array())\n0\n>>>\
    \ count_nums_fast(array(-1, 11, -11))\n1\n>>> count_nums_fast(array(1, 1, 2))\n\
    3*/", "    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n    \
    \    if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n   \
    \     }\n        while ($num > 0) {\n            $sum += $num % 10;\n        \
    \    $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n          \
    \  $count++;\n        }\n    }\n    return $count;\n}", "    $count = 0;\n   \
    \ foreach ($arr as $num) {\n        $sum = 0;\n        if ($num < 0) {\n     \
    \       $num = -$num;\n            $sum -= $num % 10;\n            $num = (int)($num\
    \ / 10);\n        }\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\n/* Write a function\
    \ count_nums_2 which takes an array of integers and returns\nthe number of elements\
    \ which has a sum of digits > 0.\nIf a number is negative, then its first signed\
    \ digit will be negative:\ne.g. -123 has signed digits -1, 2, and 3.\n>>> count_nums_2(array())\n\
    0\n>>> count_nums_2(array(-1, 11, -11))\n1\n>>> count_nums_2(array(1, 1, 2))\n\
    3*/", "    $count = 0;\n    foreach ($arr as $value) {\n        $sum = 0;\n  \
    \      if ($value < 0) {\n            $value = -$value;\n            $sum += $value\
    \ % 10;\n            $value = (int)($value / 10);\n        }\n        while ($value\
    \ > 0) {\n            $sum += $value % 10;\n            $value = (int)($value\
    \ / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}", "    $count = 0;\n    foreach ($arr as $num) {\n\
    \        $sum = 0;\n        if ($num < 0) {\n            $num = -$num;\n     \
    \       $sum -= $num % 10;\n            $num = (int)($num / 10);\n        }\n\
    \        while ($num > 0) {\n            $sum += $num % 10;\n            $num\
    \ = (int)($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}", "    $count = 0;\n    foreach ($arr\
    \ as $num) {\n        $sum = 0;\n        if ($num < 0) {\n            $num = -$num;\n\
    \            $sum += -1;\n        }\n        while ($num > 0) {\n            $sum\
    \ += $num % 10;\n            $num = (int)($num / 10);\n        }\n        if ($sum\
    \ > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}", " \
    \   $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n        if ($num\
    \ < 0) {\n            $num = -$num;\n            $sum += -1;\n        }\n    \
    \    while ($num > 0) {\n            $sum += $num % 10;\n            $num = (int)($num\
    \ / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}", "    $count = 0;\n    foreach ($arr as $num) {\n\
    \        $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n  \
    \          $sum += $num % 10;\n            $num = (int)($num / 10);\n        }\n\
    \        if ($sum > 0) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}", "    $count = 0;\n    foreach ($arr as $num) {\n        $sum =\
    \ 0;\n        if ($num < 0) {\n            $num = -$num;\n            $sum +=\
    \ $num % 10;\n            $num = floor($num / 10);\n        }\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}", "    $count = 0;\n    foreach ($arr as $value) {\n  \
    \      $sum = 0;\n        if ($value < 0) {\n            $value = $value * -1;\n\
    \            $sum = $sum + $value % 10;\n            $value = $value / 10;\n \
    \       }\n        while ($value > 0) {\n            $sum = $sum + $value % 10;\n\
    \            $value = $value / 10;\n        }\n        if ($sum > 0) {\n     \
    \       $count++;\n        }\n    }\n    return $count;\n}", "    $count = 0;\n\
    \    foreach ($arr as $number) {\n        $sum = 0;\n        $number = abs($number);\n\
    \        while ($number > 0) {\n            $sum += $number % 10;\n          \
    \  $number = (int)($number / 10);\n        }\n        if ($sum > 0) {\n      \
    \      $count++;\n        }\n    }\n    return $count;\n}", "    $count = 0;\n\
    \    foreach ($arr as $value) {\n        $sum = 0;\n        if ($value < 0) {\n\
    \            $value = -$value;\n            $sum += $value % 10;\n           \
    \ $value = (int)($value / 10);\n        }\n        while ($value > 0) {\n    \
    \        $sum += $value % 10;\n            $value = (int)($value / 10);\n    \
    \    }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n   \
    \ return $count;\n}\n\n/* Write a function count_nums2 which takes an array of\
    \ integers and returns\nthe number of elements which has a sum of digits > 0.\n\
    If a number is negative, then its first signed digit will be negative:\ne.g. -123\
    \ has signed digits -1, 2, and 3.\n>>> count_nums2(array())\n0\n>>> count_nums2(array(-1,\
    \ 11, -11))\n1\n>>> count_nums2(array(1, 1, 2))\n3*/", "    $count = 0;\n    foreach\
    \ ($arr as $num) {\n        $sum = 0;\n        if ($num < 0) {\n            $num\
    \ = -$num;\n            $sum = -1;\n        }\n        while ($num > 0) {\n  \
    \          $sum += $num % 10;\n            $num = (int)($num / 10);\n        }\n\
    \        if ($sum > 0) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Write a function count_nums_2 which takes an array of integers\
    \ and returns\nthe number of elements which has a sum of digits > 0.\nIf a number\
    \ is negative, then its first signed digit will be negative:\ne.g. -123 has signed\
    \ digits -1, 2, and 3.\n>>> count_nums_2(array())\n0\n>>> count_nums_2(array(-1,\
    \ 11, -11))\n1\n>>> count_nums_2(array(1, 1, 2))\n3*/"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

name: HumanEval_95_check_dict_case
language: php
prompt: "<?php\n/* Given an array, return true if all keys are strings in lower \n\
  case or all keys are strings in upper case, else return false.\nThe function should\
  \ return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
  a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\" =>\
  \ \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
  a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
  Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
  STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
  \ {\n"
tests: "function candidate(...$args) {\n    return check_dict_case(...$args);\n}\n\
  \nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\", \"b\"\
  \ => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
  p\" => \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
  , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
  36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !== true)\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"fruit\"\
  \ => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"Test\
  \ failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["\t$lower = array_keys($dict);\n\t$upper = array_keys($dict);\n\tforeach\
    \ ($lower as $key => $value) {\n\t\t$lower[$key] = strtolower($value);\n\t}\n\t\
    foreach ($upper as $key => $value) {\n\t\t$upper[$key] = strtoupper($value);\n\
    \t}\n\tif ($lower == array_keys($dict) || $upper == array_keys($dict)) {\n\t\t\
    return true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/* Given an array of integers,\
    \ return the sum of all the integers that have an even index, multiplied by the\
    \ integer at the last index. If the array is empty, return 0.\nExamples:\n>>>\
    \ sum_even_indexed_multiplied_by_last([1, 2, 3, 4, 5])\n40\n>>> sum_even_indexed_multiplied_by_last([1,\
    \ 2, 3, 4, 5, 6])\n48\n>>> sum_even_indexed_multiplied_by_last([])\n0\n>>> sum_even_indexed_multiplied_by_last([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10])\n180*/", "    $lower = true;\n    $upper = true;\n\
    \    foreach ($dict as $key => $value) {\n        if (is_string($key)) {\n   \
    \         if (ctype_lower($key)) {\n                $upper = false;\n        \
    \    } else {\n                $lower = false;\n            }\n        } else\
    \ {\n            return false;\n        }\n    }\n    return $lower || $upper;\n\
    }\n\n/* Given an array, return true if all keys are strings in lower \ncase or\
    \ all keys are strings in upper case, else return false.\nThe function should\
    \ return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\tif (empty($dict)) {\n\t\
    \treturn false;\n\t}\n\t$lower_case = true;\n\t$upper_case = true;\n\tforeach\
    \ ($dict as $key => $value) {\n\t\tif (!ctype_lower($key)) {\n\t\t\t$lower_case\
    \ = false;\n\t\t}\n\t\tif (!ctype_upper($key)) {\n\t\t\t$upper_case = false;\n\
    \t\t}\n\t}\n\treturn $lower_case || $upper_case;\n}\n\n/* Given an array of integers,\
    \ return true if the array contains \nat least one number that is a multiple of\
    \ 3 or 5, else return false.\nExamples:\n>>> check_multiple_of_3_or_5(array(3,\
    \ 5, 8, 9, 12))\ntrue\n>>> check_multiple_of_3_or_5(array(3, 5, 8, 9, 13))\nfalse\n\
    >>> check_multiple_of_3_or_5(array(3, 5, 8, 9, 12, 15))\ntrue\n>>> check_multiple_of_3_or_5(array(3,\
    \ 5, 8, 9, 12, 16))\nfalse\n>>> check_multiple_of_3_or_5(array(3, 5, 8, 9, 12,\
    \ 15, 18))\ntrue\n>>> check_multiple_of_3_or_5(array(3, 5, 8, 9, 12, 15, 19))\n\
    false*/", "\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$lower_keys = array_map('strtolower', $keys);\n\t$upper_keys = array_map('strtoupper',\
    \ $keys);\n\tif ($keys == $lower_keys || $keys == $upper_keys) {\n\t\treturn true;\n\
    \t}\n\treturn false;\n}\n", "\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t\
    $keys = array_keys($dict);\n\t$lower = array_map('strtolower', $keys);\n\t$upper\
    \ = array_map('strtoupper', $keys);\n\tif ($keys == $lower || $keys == $upper)\
    \ {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/* Given an array, return true\
    \ if the array contains a string in lower case, \nelse return false. The function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_lower_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_lower_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_lower_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_lower_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_lower_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\nfalse*/", "\tif (empty($dict)) {\n\t\
    \treturn false;\n\t}\n\t$lower = array_keys($dict);\n\t$upper = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $lower);\n\t$upper = array_map('strtoupper',\
    \ $upper);\n\tif ($lower == array_keys($dict) || $upper == array_keys($dict))\
    \ {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n$dict = array(\"a\" => \"apple\"\
    , \"b\" => \"banana\");\necho check_dict_case($dict);\necho \"\\n\";\n$dict =\
    \ array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\");\necho check_dict_case($dict);\n\
    echo \"\\n\";\n$dict = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"\
    apple\");\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"Name\"\
    \ => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\");\necho check_dict_case($dict);\n\
    echo \"\\n\";\n$dict = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\necho\
    \ check_dict_case($dict);\necho \"\\n\";\n$dict = array();\necho check_dict_case($dict);\n\
    echo \"\\n\";", "\t$lower = array_change_key_case($dict, CASE_LOWER);\n\t$upper\
    \ = array_change_key_case($dict, CASE_UPPER);\n\tif ($lower == $dict || $upper\
    \ == $dict) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/* Given an array,\
    \ return true if all values are strings, else return false.\nThe function should\
    \ return false is the given array is empty.\nExamples:\n>>> check_dict_string(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_string(array(\"\
    a\" => \"apple\", \"b\" => \"banana\", \"c\" => 8))\nfalse\n>>> check_dict_string(array(\"\
    a\" => \"apple\", \"b\" => \"banana\", \"c\" => \"8\"))\ntrue\n>>> check_dict_string(array(\"\
    a\" => \"apple\", \"b\" => \"banana\", \"c\" => \"8\", \"d\" => 8))\nfalse\n>>>\
    \ check_dict_string(array(\"a\" => \"apple\", \"b\" => \"banana\", \"c\" => \"\
    8\", \"d\" => \"8\"))\ntrue\n>>> check_dict_string(array(\"a\" => \"apple\", \"\
    b\" => \"banana\", \"c\" => \"8\", \"d\" => \"8\", \"e\" => 8))\nfalse\n>>> check_dict_string(array(\"\
    a\" => \"apple\", \"b\" => \"banana\", \"c\" => \"8\", \"d\" => \"8\", \"e\" =>\
    \ \"8\"))\ntrue\n>>> check_dict_string(array(\"a\" => \"apple\", \"b\" => \"banana\"\
    , \"c\" => \"8\", \"d\" => \"8\", \"e\" => \"8\", \"f\" => 8))\nfalse\n>>> check_dict_string(array(\"\
    a\" => \"apple\", \"b\" => \"banana\", \"c\" => \"8\", \"d\" => \"8\", \"e\" =>\
    \ \"8\", \"f\" => \"8\"))\ntrue\n>>> check_dict_string(array(\"a\" => \"apple\"\
    , \"b\" => \"banana\", \"c\" => \"8\", \"d\" =>", "\tif (empty($dict)) {\n\t\t\
    return false;\n\t}\n\t$keys = array_keys($dict);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\t$lower = array_map('strtolower', $keys);\n\tif ($keys == $upper ||\
    \ $keys == $lower) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/* Given an\
    \ array, return true if all keys are strings in lower \ncase or all keys are strings\
    \ in upper case, else return false.\nThe function should return false is the given\
    \ array is empty.\nExamples:\n>>> check_dict_case(array(\"a\" => \"apple\", \"\
    b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\" => \"apple\", \"A\"\
    \ => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\t$lower = true;\n\t$upper\
    \ = true;\n\tforeach ($dict as $key => $value) {\n\t\tif (ctype_lower($key)) {\n\
    \t\t\t$upper = false;\n\t\t} else {\n\t\t\t$lower = false;\n\t\t}\n\t}\n\tif ($lower\
    \ || $upper) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/*\
    \ Given an array of integers, return true if the array contains \na 5 immediately\
    \ followed by a 7.\nExamples:\n>>> check_5_7(array(1, 2, 3, 4, 5, 6, 7))\nfalse\n\
    >>> check_5_7(array(1, 2, 3, 4, 5, 7))\ntrue\n>>> check_5_7(array(5, 7, 1, 2,\
    \ 3, 4))\ntrue\n>>> check_5_7(array(5, 7, 1, 2, 3, 4, 5, 7))\ntrue\n>>> check_5_7(array(5,\
    \ 7, 1, 2, 3, 4, 5, 7, 5, 7))\ntrue\n>>> check_5_7(array(5, 7, 1, 2, 3, 4, 5,\
    \ 7, 5, 7, 5, 7))\ntrue\n>>> check_5_7(array(5, 7, 1, 2, 3, 4, 5, 7, 5, 7, 5,\
    \ 7, 5, 7))\ntrue\n>>> check_5_7(array(5, 7, 1, 2, 3, 4, 5, 7, 5, 7, 5, 7, 5,\
    \ 7, 5, 7))\ntrue\n>>> check_5_7(array(5, 7, 1, 2, 3, 4, 5, 7, 5, 7, 5, 7, 5,\
    \ 7, 5, 7, 5, 7))\ntrue\n>>> check_5_7(array(5, 7, 1, 2, 3, 4, 5, 7, 5, 7, 5,\
    \ 7, 5, 7, 5, 7, 5, 7, 5, 7))\ntrue\n>>> check_5_7(array(5, 7, 1, 2, 3, 4, 5,\
    \ 7,", "\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$lower = true;\n\t$upper\
    \ = true;\n\tforeach ($dict as $key => $value) {\n\t\tif (!ctype_lower($key))\
    \ {\n\t\t\t$lower = false;\n\t\t}\n\t\tif (!ctype_upper($key)) {\n\t\t\t$upper\
    \ = false;\n\t\t}\n\t}\n\tif ($lower || $upper) {\n\t\treturn true;\n\t}\n\treturn\
    \ false;\n}\n\n/* Given an array of integers, return true if the array contains\
    \ \na 3 next to a 3 somewhere.\nExamples:\n>>> has_33(array(1, 3, 3))\ntrue\n\
    >>> has_33(array(1, 3, 1, 3))\nfalse\n>>> has_33(array(3, 1, 3))\nfalse\n>>> has_33(array(3,\
    \ 3, 1, 3))\ntrue\n>>> has_33(array(3, 1, 3, 3))\ntrue\n>>> has_33(array(1, 3,\
    \ 1, 3, 3, 1, 3))\ntrue\n>>> has_33(array(1, 3, 1, 3, 1, 3))\nfalse\n>>> has_33(array(1,\
    \ 3, 3, 1, 3))\ntrue\n>>> has_33(array(1, 3, 1, 3, 1, 3, 3, 3, 3))\ntrue\n>>>\
    \ has_33(array(1, 3, 3, 1, 3, 1, 3))\ntrue\n>>> has_33(array(1, 3, 1, 3, 1, 3,\
    \ 1, 3))\nfalse\n>>> has_33(array(3, 3))\ntrue\n>>> has_33(array(3, 1, 3))\nfalse\n\
    >>> has_33(array(3))\nfalse\n>>> has_33(array(1))\nfalse\n>>> has_33(array())\n\
    false*/", "\t$keys = array_keys($dict);\n\t$lower = array_map('strtolower', $keys);\n\
    \t$upper = array_map('strtoupper', $keys);\n\tif ($keys == $lower || $keys ==\
    \ $upper) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\")) . PHP_EOL;\necho check_dict_case(array(\"\
    a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\")) . PHP_EOL;\necho\
    \ check_dict_case(array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"\
    )) . PHP_EOL;\necho check_dict_case(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) . PHP_EOL;\necho check_dict_case(array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\")) . PHP_EOL;", "\t$keys = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\tif ($keys == $lower || $keys == $upper) {\n\t\treturn true;\n\t}\
    \ else {\n\t\treturn false;\n\t}\n}\n\n/* Given an array, return true if all keys\
    \ are strings in lower \ncase or all keys are strings in upper case, else return\
    \ false.\nThe function should return false is the given array is empty.\nExamples:\n\
    >>> check_dict_case(array(\"a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>>\
    \ check_dict_case(array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"\
    ))\nfalse\n>>> check_dict_case(array(\"a\" => \"apple\", 8 => \"banana\", \"a\"\
    \ => \"apple\"))\nfalse\n>>> check_dict_case(array(\"Name\" => \"John\", \"Age\"\
    \ => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\tif (empty($dict)) {\n\t\treturn\
    \ false;\n\t}\n\t$lower = [];\n\t$upper = [];\n\tforeach ($dict as $key => $value)\
    \ {\n\t\tif (ctype_lower($key)) {\n\t\t\t$lower[] = $key;\n\t\t} else {\n\t\t\t\
    $upper[] = $key;\n\t\t}\n\t}\n\tif (count($lower) == count($dict) || count($upper)\
    \ == count($dict)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\
    \n$dict = array(\"a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict);\n\
    echo \"\\n\";\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\");\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict);\n\
    echo \"\\n\";\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\"\
    \ => \"Houston\");\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict);\necho\
    \ \"\\n\";", "\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\tif ($keys == $lower || $keys == $upper) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n\n/* Given an array, return true if all keys are strings in\
    \ lower \ncase or all keys are strings in upper case, else return false.\nThe\
    \ function should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\t$lower = true;\n\t$upper\
    \ = true;\n\tforeach ($dict as $key => $value) {\n\t\tif (strtolower($key) !=\
    \ $key) {\n\t\t\t$lower = false;\n\t\t}\n\t\tif (strtoupper($key) != $key) {\n\
    \t\t\t$upper = false;\n\t\t}\n\t}\n\treturn $lower || $upper;\n}\n\n/* Given an\
    \ array of integers, return true if the array contains \na number that is a multiple\
    \ of 7.\nExamples:\n>>> check_seven(array(1, 2, 3, 4, 5, 6, 7))\ntrue\n>>> check_seven(array(1,\
    \ 2, 3, 4, 5, 6, 8))\nfalse\n>>> check_seven(array(1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10))\ntrue\n>>> check_seven(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\
    \ 14, 15, 16, 17, 18, 19, 20))\ntrue\n>>> check_seven(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21))\nfalse*/", "\t$keys =\
    \ array_keys($dict);\n\t$first_key = $keys[0];\n\t$first_key_case = ctype_upper($first_key)\
    \ ? 'upper' : 'lower';\n\tforeach ($keys as $key) {\n\t\t$key_case = ctype_upper($key)\
    \ ? 'upper' : 'lower';\n\t\tif ($key_case != $first_key_case) {\n\t\t\treturn\
    \ false;\n\t\t}\n\t}\n\treturn true;\n}\n\n/* Given an array, return true if all\
    \ keys are strings in lower \ncase or all keys are strings in upper case, else\
    \ return false.\nThe function should return false is the given array is empty.\n\
    Examples:\n>>> check_dict_case(array(\"a\" => \"apple\", \"b\" => \"banana\"))\n\
    true\n>>> check_dict_case(array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\"\
    \ => \"banana\"))\nfalse\n>>> check_dict_case(array(\"a\" => \"apple\", 8 => \"\
    banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"Name\" => \"\
    John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\tif(empty($dict)) {\n\t\t\
    return false;\n\t}\n\t$keys = array_keys($dict);\n\t$first_key = $keys[0];\n\t\
    $is_lower = ctype_lower($first_key);\n\t$is_upper = ctype_upper($first_key);\n\
    \tforeach($keys as $key) {\n\t\tif($is_lower && !ctype_lower($key)) {\n\t\t\t\
    return false;\n\t\t}\n\t\tif($is_upper && !ctype_upper($key)) {\n\t\t\treturn\
    \ false;\n\t\t}\n\t}\n\treturn true;\n}\n\n/* Given an array of integers, return\
    \ the sum of all the integers that have an even index, \nmultiplied by the last\
    \ odd integer in the array. If the array is empty, return 0.\nExamples:\n>>> sum_even_indexed_odd_last(array(1,\
    \ 2, 3, 4, 5))\n30\n>>> sum_even_indexed_odd_last(array(1, 2, 3, 4, 5, 6))\n48\n\
    >>> sum_even_indexed_odd_last(array(1, 2, 3, 4, 5, 6, 7))\n56\n>>> sum_even_indexed_odd_last(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8))\n64\n>>> sum_even_indexed_odd_last(array(1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9))\n90\n>>> sum_even_indexed_odd_last(array(1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10))\n110\n>>> sum_even_indexed_odd_last(array(1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11))\n132\n>>> sum_even_indexed_odd_last(array(1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11, 12))\n156\n>>> sum_even_indexed_odd_last(array(1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13))", "\t$lower = true;\n\t$upper = true;\n\tforeach ($dict\
    \ as $key => $value) {\n\t\tif (ctype_lower($key)) {\n\t\t\t$upper = false;\n\t\
    \t} else {\n\t\t\t$lower = false;\n\t\t}\n\t}\n\treturn $lower || $upper;\n}\n\
    \n$dict = array(\"a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" =>\
    \ \"apple\", 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\"\
    \ => \"Houston\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict) . \"\\n\";",
  "\t$lower = true;\n\t$upper = true;\n\tforeach ($dict as $key => $value) {\n\t\t\
    if (strtolower($key) != $key) {\n\t\t\t$lower = false;\n\t\t}\n\t\tif (strtoupper($key)\
    \ != $key) {\n\t\t\t$upper = false;\n\t\t}\n\t}\n\treturn $lower || $upper;\n\
    }\n\n/* Given an array, return true if all keys are strings in lower \ncase or\
    \ all keys are strings in upper case, else return false.\nThe function should\
    \ return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\t$lower = array_change_key_case($dict,\
    \ CASE_LOWER);\n\t$upper = array_change_key_case($dict, CASE_UPPER);\n\tif ($lower\
    \ == $dict) {\n\t\treturn true;\n\t} elseif ($upper == $dict) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\n\n/* Given an array of integers, return\
    \ the sum of all the integers \nthat have an even index, multiplied by the integer\
    \ at the last index.\nIf the array is empty, you should return 0.\nExamples:\n\
    >>> sum_even_indexed_multiplied_by_last([1, 2, 3, 4, 5])\n30\n>>> sum_even_indexed_multiplied_by_last([1,\
    \ 2, 3, 4, 5, 6])\n48\n>>> sum_even_indexed_multiplied_by_last([])\n0*/", "\t\
    $keys = array_keys($dict);\n\t$upper = array_map('strtoupper', $keys);\n\t$lower\
    \ = array_map('strtolower', $keys);\n\tif ($keys == $upper || $keys == $lower)\
    \ {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/* Given an array, return true\
    \ if all keys are strings in lower \ncase or all keys are strings in upper case,\
    \ else return false.\nThe function should return false is the given array is empty.\n\
    Examples:\n>>> check_dict_case(array(\"a\" => \"apple\", \"b\" => \"banana\"))\n\
    true\n>>> check_dict_case(array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\"\
    \ => \"banana\"))\nfalse\n>>> check_dict_case(array(\"a\" => \"apple\", 8 => \"\
    banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"Name\" => \"\
    John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\t$lower = true;\n\t$upper\
    \ = true;\n\tforeach ($dict as $key => $value) {\n\t\tif (!ctype_lower($key))\
    \ {\n\t\t\t$lower = false;\n\t\t}\n\t\tif (!ctype_upper($key)) {\n\t\t\t$upper\
    \ = false;\n\t\t}\n\t}\n\treturn $lower || $upper;\n}\n\n$dict = array(\"a\" =>\
    \ \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict) . \"\\n\";\n$dict\
    \ = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\");\necho\
    \ check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" => \"apple\", 8 => \"\
    banana\", \"a\" => \"apple\");\necho check_dict_case($dict) . \"\\n\";\n$dict\
    \ = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\");\n\
    echo check_dict_case($dict) . \"\\n\";\n$dict = array(\"STATE\" => \"NC\", \"\
    ZIP\" => \"12345\");\necho check_dict_case($dict) . \"\\n\";", "\t$keys = array_keys($dict);\n\
    \t$upper = array_map('strtoupper', $keys);\n\t$lower = array_map('strtolower',\
    \ $keys);\n\tif ($keys == $upper || $keys == $lower) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n\n$dict = array(\"a\" => \"apple\", \"b\" => \"banana\");\n\
    echo check_dict_case($dict) . PHP_EOL;\n$dict = array(\"a\" => \"apple\", \"A\"\
    \ => \"banana\", \"B\" => \"banana\");\necho check_dict_case($dict) . PHP_EOL;\n\
    $dict = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\");\necho\
    \ check_dict_case($dict) . PHP_EOL;\n$dict = array(\"Name\" => \"John\", \"Age\"\
    \ => \"36\", \"City\" => \"Houston\");\necho check_dict_case($dict) . PHP_EOL;\n\
    $dict = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict)\
    \ . PHP_EOL;", "\tif(empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\tif($keys == $lower || $keys == $upper) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n\n$dict = array(\"a\" => \"apple\", \"b\" => \"banana\");\n\
    $dict1 = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\");\n\
    $dict2 = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\");\n$dict3\
    \ = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\");\n\
    $dict4 = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\n$dict5 = array();\n\
    \necho check_dict_case($dict) . \"\\n\";\necho check_dict_case($dict1) . \"\\\
    n\";\necho check_dict_case($dict2) . \"\\n\";\necho check_dict_case($dict3) .\
    \ \"\\n\";\necho check_dict_case($dict4) . \"\\n\";\necho check_dict_case($dict5)\
    \ . \"\\n\";", "\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$upper = array_keys($dict);\n\
    \t$lower = array_keys($dict);\n\t$upper = array_map('strtoupper', $upper);\n\t\
    $lower = array_map('strtolower', $lower);\n\tif ($upper == array_keys($dict) ||\
    \ $lower == array_keys($dict)) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n\
    $dict = array(\"a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict)\
    \ . PHP_EOL;\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\");\necho check_dict_case($dict) . PHP_EOL;\n$dict = array(\"a\" =>\
    \ \"apple\", 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict)\
    \ . PHP_EOL;\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\"\
    \ => \"Houston\");\necho check_dict_case($dict) . PHP_EOL;\n$dict = array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict) . PHP_EOL;",
  "\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\t\
    $lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper', $keys);\n\
    \tif ($keys == $lower || $keys == $upper) {\n\t\treturn true;\n\t}\n\treturn false;\n\
    }\n\n/* Given an array of integers, return true if the array contains \na number\
    \ that is a multiple of 7, else return false.\nExamples:\n>>> check_seven(array(1,\
    \ 2, 3, 4, 5, 6, 7))\ntrue\n>>> check_seven(array(1, 2, 3, 4, 5, 6, 8))\nfalse\n\
    >>> check_seven(array(1, 2, 3, 4, 5, 6, 0))\ntrue\n>>> check_seven(array(1, 2,\
    \ 3, 4, 5, 6, -7))\ntrue\n>>> check_seven(array(1, 2, 3, 4, 5, 6, -8))\nfalse\n\
    >>> check_seven(array(1, 2, 3, 4, 5, 6, -1))\nfalse\n>>> check_seven(array(1,\
    \ 2, 3, 4, 5, 6, -14))\ntrue\n>>> check_seven(array(1, 2, 3, 4, 5, 6, -21))\n\
    false\n>>> check_seven(array(1, 2, 3, 4, 5, 6, -28))\ntrue\n>>> check_seven(array(1,\
    \ 2, 3, 4, 5, 6, -35))\nfalse\n>>> check_seven(array(1, 2, 3, 4, 5, 6, -42))\n\
    true\n>>> check_seven(array(1, 2, 3, 4, 5, 6, -49))\nfalse\n>>> check_seven(array(1,\
    \ 2, 3, 4, 5, 6, -56))\ntrue\n>>> check_seven(array(1, 2, 3, 4, 5, 6, -63))\n\
    false\n>>> check_seven(array(1, 2, 3, 4, 5, 6, -70))\ntrue\n>>> check_seven(array(1,\
    \ 2,", "    if (empty($dict)) {\n        return false;\n    }\n    $lower = true;\n\
    \    $upper = true;\n    foreach ($dict as $key => $value) {\n        if (ctype_lower($key))\
    \ {\n            $upper = false;\n        } else {\n            $lower = false;\n\
    \        }\n    }\n    return $lower || $upper;\n}\n\n/* Given an array, return\
    \ true if all keys are strings in lower \ncase or all keys are strings in upper\
    \ case, else return false.\nThe function should return false is the given array\
    \ is empty.\nExamples:\n>>> check_dict_case(array(\"a\" => \"apple\", \"b\" =>\
    \ \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\" => \"apple\", \"A\" => \"\
    banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"a\" => \"\
    apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\t$lower = true;\n\t$upper\
    \ = true;\n\tforeach ($dict as $key => $value) {\n\t\tif (ctype_lower($key)) {\n\
    \t\t\t$upper = false;\n\t\t} else {\n\t\t\t$lower = false;\n\t\t}\n\t}\n\treturn\
    \ ($lower || $upper);\n}\n\n$dict = array(\"a\" => \"apple\", \"b\" => \"banana\"\
    );\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" => \"apple\",\
    \ \"A\" => \"banana\", \"B\" => \"banana\");\necho check_dict_case($dict) . \"\
    \\n\";\n$dict = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"\
    );\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\");\necho check_dict_case($dict) .\
    \ \"\\n\";\n$dict = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict)\
    \ . \"\\n\";", "\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$lower = array_keys($dict);\n\
    \t$upper = array_map('strtoupper', $lower);\n\tif ($lower == $upper) {\n\t\treturn\
    \ true;\n\t}\n\t$upper = array_map('strtolower', $lower);\n\tif ($lower == $upper)\
    \ {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n$dict = array(\"a\" => \"apple\"\
    , \"b\" => \"banana\");\necho check_dict_case($dict);\necho \"\\n\";\n$dict =\
    \ array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\");\necho check_dict_case($dict);\n\
    echo \"\\n\";\n$dict = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"\
    apple\");\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"Name\"\
    \ => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\");\necho check_dict_case($dict);\n\
    echo \"\\n\";\n$dict = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\necho\
    \ check_dict_case($dict);\necho \"\\n\";", "\t$upper = true;\n\t$lower = true;\n\
    \tforeach ($dict as $key => $value) {\n\t\tif (strtoupper($key) != $key) {\n\t\
    \t\t$upper = false;\n\t\t}\n\t\tif (strtolower($key) != $key) {\n\t\t\t$lower\
    \ = false;\n\t\t}\n\t}\n\treturn ($upper || $lower);\n}\n\n/* Given an array,\
    \ return true if all keys are strings in lower \ncase or all keys are strings\
    \ in upper case, else return false.\nThe function should return false is the given\
    \ array is empty.\nExamples:\n>>> check_dict_case(array(\"a\" => \"apple\", \"\
    b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\" => \"apple\", \"A\"\
    \ => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\t$keys = array_keys($dict);\n\
    \t$first_key = $keys[0];\n\t$first_key_case = ctype_upper($first_key) ? \"upper\"\
    \ : \"lower\";\n\tforeach ($keys as $key) {\n\t\tif ($first_key_case == \"upper\"\
    ) {\n\t\t\tif (!ctype_upper($key)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else\
    \ {\n\t\t\tif (!ctype_lower($key)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\
    }\n\treturn true;\n}\n", "\tif(empty($dict)) {\n\t\treturn false;\n\t}\n\t$lower\
    \ = array_keys($dict);\n\t$upper = array_keys($dict);\n\t$lower = array_map('strtolower',\
    \ $lower);\n\t$upper = array_map('strtoupper', $upper);\n\tif($lower == array_keys($dict)\
    \ || $upper == array_keys($dict)) {\n\t\treturn true;\n\t}\n\treturn false;\n\
    }\n\n/* Given an array of strings, return the number of strings that \nstart with\
    \ the letter \u2018a\u2019 (either upper or lower case).\nExamples:\n>>> count_a(array(\"\
    apple\", \"banana\", \"orange\"))\n1\n>>> count_a(array(\"Apple\", \"Banana\"\
    , \"Orange\"))\n1\n>>> count_a(array(\"Apple\", \"Banana\", \"Orange\", \"Apricot\"\
    ))\n2\n>>> count_a(array(\"Apple\", \"Banana\", \"Orange\", \"Apricot\", \"Avocado\"\
    ))\n3\n>>> count_a(array(\"Apple\", \"Banana\", \"Orange\", \"Apricot\", \"Avocado\"\
    , \"aardvark\"))\n4*/", "\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys\
    \ = array_keys($dict);\n\t$lower = array_map('strtolower', $keys);\n\t$upper =\
    \ array_map('strtoupper', $keys);\n\tif ($keys == $lower || $keys == $upper) {\n\
    \t\treturn true;\n\t}\n\treturn false;\n}\n\n/* Given an array, return true if\
    \ all keys are strings in lower \ncase or all keys are strings in upper case,\
    \ else return false.\nThe function should return false is the given array is empty.\n\
    Examples:\n>>> check_dict_case(array(\"a\" => \"apple\", \"b\" => \"banana\"))\n\
    true\n>>> check_dict_case(array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\"\
    \ => \"banana\"))\nfalse\n>>> check_dict_case(array(\"a\" => \"apple\", 8 => \"\
    banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"Name\" => \"\
    John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "    if (empty($dict)) {\n\
    \        return false;\n    }\n    $keys = array_keys($dict);\n    $lower = true;\n\
    \    $upper = true;\n    foreach ($keys as $key) {\n        if (!ctype_lower($key))\
    \ {\n            $lower = false;\n        }\n        if (!ctype_upper($key)) {\n\
    \            $upper = false;\n        }\n    }\n    return $lower || $upper;\n\
    }\n\n$dict = array(\"a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" =>\
    \ \"apple\", 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\"\
    \ => \"Houston\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict) . \"\\n\";\n\
    $dict = array();\necho check_dict_case($dict) . \"\\n\";", "\tif(empty($dict))\
    \ {\n\t\treturn false;\n\t}\n\t$lower = array_keys($dict);\n\t$upper = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $lower);\n\t$upper = array_map('strtoupper',\
    \ $upper);\n\tif($lower == array_keys($dict) || $upper == array_keys($dict)) {\n\
    \t\treturn true;\n\t}\n\treturn false;\n}\necho check_dict_case(array(\"a\" =>\
    \ \"apple\", \"b\" => \"banana\")) . \"\\n\";\necho check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\")) . \"\\n\";\necho check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\")) . \"\\n\";\necho check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\")) . \"\\n\";\n\
    echo check_dict_case(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) . \"\\\
    n\";", "\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$first_key = $keys[0];\n\t$first_key_case = strtoupper($first_key) == $first_key\
    \ ? 'upper' : 'lower';\n\tforeach ($keys as $key) {\n\t\t$key_case = strtoupper($key)\
    \ == $key ? 'upper' : 'lower';\n\t\tif ($key_case != $first_key_case) {\n\t\t\t\
    return false;\n\t\t}\n\t}\n\treturn true;\n}\n\n$dict = array(\"a\" => \"apple\"\
    , \"b\" => \"banana\");\nvar_dump(check_dict_case($dict));\n$dict = array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\");\nvar_dump(check_dict_case($dict));\n\
    $dict = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\");\nvar_dump(check_dict_case($dict));\n\
    $dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"\
    );\nvar_dump(check_dict_case($dict));\n$dict = array(\"STATE\" => \"NC\", \"ZIP\"\
    \ => \"12345\");\nvar_dump(check_dict_case($dict));\n$dict = array();\nvar_dump(check_dict_case($dict));",
  "\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\t\
    $lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper', $keys);\n\
    \tif ($keys == $lower || $keys == $upper) {\n\t\treturn true;\n\t}\n\treturn false;\n\
    }\n\n/* Given an array, return true if the array is sorted in ascending order,\
    \ else return false.\nThe function should return false is the given array is empty.\n\
    Examples:\n>>> check_sorted(array(1, 2, 3, 4, 5))\ntrue\n>>> check_sorted(array(1,\
    \ 2, 3, 4, 5, 6))\ntrue\n>>> check_sorted(array(1, 2, 3, 4, 5, 6, 7))\ntrue\n\
    >>> check_sorted(array(1, 2, 3, 4, 5, 6, 7, 8))\ntrue\n>>> check_sorted(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9))\ntrue\n>>> check_sorted(array(1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10))\ntrue\n>>> check_sorted(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))\n\
    true\n>>> check_sorted(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))\ntrue\n>>>\
    \ check_sorted(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))\ntrue\n>>> check_sorted(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))\ntrue\n>>> check_sorted(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))\ntrue\n>>> check_sorted(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15", "\t$lower = array_map('strtolower',\
    \ array_keys($dict));\n\t$upper = array_map('strtoupper', array_keys($dict));\n\
    \tif ($lower == array_keys($dict) || $upper == array_keys($dict)) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/* Given an array, return true\
    \ if all keys are strings in lower \ncase or all keys are strings in upper case,\
    \ else return false.\nThe function should return false is the given array is empty.\n\
    Examples:\n>>> check_dict_case(array(\"a\" => \"apple\", \"b\" => \"banana\"))\n\
    true\n>>> check_dict_case(array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\"\
    \ => \"banana\"))\nfalse\n>>> check_dict_case(array(\"a\" => \"apple\", 8 => \"\
    banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"Name\" => \"\
    John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\t$lower = array_keys($dict);\n\
    \t$upper = array_keys($dict);\n\tforeach ($lower as $key => $value) {\n\t\t$lower[$key]\
    \ = strtolower($value);\n\t}\n\tforeach ($upper as $key => $value) {\n\t\t$upper[$key]\
    \ = strtoupper($value);\n\t}\n\tif ($lower == array_keys($dict) || $upper == array_keys($dict))\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/* Given an array\
    \ of strings, return a new array containing the first N strings. \nIf N is greater\
    \ than or equal to the length of the array, then return the original array.\n\
    Examples:\n>>> first_n(array(\"a\", \"b\", \"c\", \"d\"), 2)\narray(\"a\", \"\
    b\")\n>>> first_n(array(\"a\", \"b\", \"c\", \"d\"), 4)\narray(\"a\", \"b\", \"\
    c\", \"d\")\n>>> first_n(array(\"a\", \"b\", \"c\", \"d\"), 5)\narray(\"a\", \"\
    b\", \"c\", \"d\")\n>>> first_n(array(\"a\", \"b\", \"c\", \"d\"), 0)\narray()*/",
  "\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$lower = array_change_key_case($dict,\
    \ CASE_LOWER);\n\t$upper = array_change_key_case($dict, CASE_UPPER);\n\tif ($lower\
    \ == $dict || $upper == $dict) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n\
    /* Given an array, return true if all keys are strings in lower \ncase or all\
    \ keys are strings in upper case, else return false.\nThe function should return\
    \ false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\tif (empty($dict)) {\n\t\
    \treturn false;\n\t}\n\t$keys = array_keys($dict);\n\t$lower = array_map('strtolower',\
    \ $keys);\n\t$upper = array_map('strtoupper', $keys);\n\tif ($keys == $lower ||\
    \ $keys == $upper) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/* Given an\
    \ array of integers, return the sum of all the integers that have an even index,\
    \ \nmultiplied by the last odd integer in the array. If the array is empty, return\
    \ 0.\nExamples:\n>>> sum_even_indexed_odd_last(array(1, 2, 3, 4, 5))\n30\n>>>\
    \ sum_even_indexed_odd_last(array(1, 2, 3, 4, 5, 6))\n48\n>>> sum_even_indexed_odd_last(array(1,\
    \ 2, 3, 4, 5, 6, 7))\n56\n>>> sum_even_indexed_odd_last(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8))\n64\n>>> sum_even_indexed_odd_last(array(1, 2, 3, 4, 5, 6, 7, 8, 9))\n\
    90\n>>> sum_even_indexed_odd_last(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))\n110\n\
    >>> sum_even_indexed_odd_last(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))\n132\n\
    >>> sum_even_indexed_odd_last(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))\n\
    156\n>>> sum_even_indexed_odd_last(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13))\n182\n>>> sum_even_indexed_odd_last(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14))\n210\n>>> sum_even_indexed_odd", "\tif(empty($dict)) {\n\t\t\
    return false;\n\t}\n\t$keys = array_keys($dict);\n\t$lower = array_map('strtolower',\
    \ $keys);\n\t$upper = array_map('strtoupper', $keys);\n\tif($keys == $lower ||\
    \ $keys == $upper) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/* Given an\
    \ array of integers, return the sum of all integers that have an even index.\n\
    Examples:\n>>> sum_even_indexed(array(1, 2, 3, 4, 5, 6))\n12\n>>> sum_even_indexed(array(1,\
    \ 3, 5))\n0\n>>> sum_even_indexed(array(0, 2, 4, 6))\n12\n>>> sum_even_indexed(array(1,\
    \ 2, 1, 0, 1, 2, 1, 0, 1, 2))\n6\n>>> sum_even_indexed(array(1, 2, 1, 0, 1, 2,\
    \ 1, 0, 1, 2, 1))\n7\n>>> sum_even_indexed(array(10, -10, 10, -10, 10))\n30*/",
  "\t$lower = true;\n\t$upper = true;\n\tforeach ($dict as $key => $value) {\n\t\t\
    if (ctype_lower($key)) {\n\t\t\t$upper = false;\n\t\t} else {\n\t\t\t$lower =\
    \ false;\n\t\t}\n\t}\n\treturn $lower || $upper;\n}\n\n/* Given an array, return\
    \ true if the array contains a dictionary \nwith all keys in lower case or all\
    \ keys in upper case, else return false.\nThe function should return false is\
    \ the given array is empty.\nExamples:\n>>> check_dict_case_in_array(array(array(\"\
    a\" => \"apple\", \"b\" => \"banana\")))\ntrue\n>>> check_dict_case_in_array(array(array(\"\
    a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\")))\nfalse\n>>> check_dict_case_in_array(array(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\")))\nfalse\n>>> check_dict_case_in_array(array(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\")))\nfalse\n>>>\
    \ check_dict_case_in_array(array(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\"\
    )))\ntrue\n>>> check_dict_case_in_array(array(array(\"a\" => \"apple\", \"b\"\
    \ => \"banana\"), array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")))\ntrue\n>>>\
    \ check_dict_case_in_array(array(array(\"a\" => \"apple\", \"b\" => \"banana\"\
    ), array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\"), array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")))\nfalse*/", "\tif (empty($dict))\
    \ {\n\t\treturn false;\n\t}\n\t$lower = array_change_key_case($dict, CASE_LOWER);\n\
    \t$upper = array_change_key_case($dict, CASE_UPPER);\n\tif ($lower == $dict ||\
    \ $upper == $dict) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n$dict = array(\"\
    a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict) . \"\\n\"\
    ;\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"\
    );\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" => \"apple\",\
    \ 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict) . \"\\n\"\
    ;\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"\
    );\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"STATE\" => \"NC\"\
    , \"ZIP\" => \"12345\");\necho check_dict_case($dict) . \"\\n\";", "\tif(empty($dict))\
    \ {\n\t\treturn false;\n\t}\n\t$lower = true;\n\t$upper = true;\n\tforeach($dict\
    \ as $key => $value) {\n\t\tif(!ctype_lower($key)) {\n\t\t\t$lower = false;\n\t\
    \t}\n\t\tif(!ctype_upper($key)) {\n\t\t\t$upper = false;\n\t\t}\n\t}\n\tif($lower\
    \ || $upper) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/* Given an array,\
    \ return true if all keys are strings in lower \ncase or all keys are strings\
    \ in upper case, else return false.\nThe function should return false is the given\
    \ array is empty.\nExamples:\n>>> check_dict_case(array(\"a\" => \"apple\", \"\
    b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\" => \"apple\", \"A\"\
    \ => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\t$lower = true;\n\t$upper\
    \ = true;\n\tforeach ($dict as $key => $value) {\n\t\tif (ctype_lower($key)) {\n\
    \t\t\t$upper = false;\n\t\t} else {\n\t\t\t$lower = false;\n\t\t}\n\t}\n\treturn\
    \ $lower || $upper;\n}\n\n/* Given an array, return true if all keys are strings\
    \ in lower \ncase or all keys are strings in upper case, else return false.\n\
    The function should return false is the given array is empty.\nExamples:\n>>>\
    \ check_dict_case(array(\"a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\tif (empty($dict)) {\n\t\
    \treturn false;\n\t}\n\t$keys = array_keys($dict);\n\t$is_lower = ctype_lower($keys[0]);\n\
    \t$is_upper = ctype_upper($keys[0]);\n\tforeach ($keys as $key) {\n\t\tif ($is_lower\
    \ && !ctype_lower($key)) {\n\t\t\treturn false;\n\t\t}\n\t\tif ($is_upper && !ctype_upper($key))\
    \ {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n/* Given a string,\
    \ return the number of words in the string.\nExamples:\n>>> count_words(\"I am\
    \ a boy\")\n4\n>>> count_words(\"I am a boy.\")\n4\n>>> count_words(\"I am a boy.\
    \ I am a student.\")\n7\n>>> count_words(\"I am a boy. I am a student. I am a\
    \ teacher.\")\n9\n>>> count_words(\"I am a boy. I am a student. I am a teacher.\
    \ I am a programmer.\")\n11*/", "    if (empty($dict)) {\n        return false;\n\
    \    }\n    $keys = array_keys($dict);\n    $first_key = $keys[0];\n    if (ctype_lower($first_key))\
    \ {\n        foreach ($keys as $key) {\n            if (!ctype_lower($key)) {\n\
    \                return false;\n            }\n        }\n    } elseif (ctype_upper($first_key))\
    \ {\n        foreach ($keys as $key) {\n            if (!ctype_upper($key)) {\n\
    \                return false;\n            }\n        }\n    } else {\n     \
    \   return false;\n    }\n    return true;\n}\n\n$dict = array(\"a\" => \"apple\"\
    , \"b\" => \"banana\");\n$dict2 = array(\"a\" => \"apple\", \"A\" => \"banana\"\
    , \"B\" => \"banana\");\n$dict3 = array(\"a\" => \"apple\", 8 => \"banana\", \"\
    a\" => \"apple\");\n$dict4 = array(\"Name\" => \"John\", \"Age\" => \"36\", \"\
    City\" => \"Houston\");\n$dict5 = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\"\
    );\n$dict6 = array();\n\necho check_dict_case($dict) . PHP_EOL;\necho check_dict_case($dict2)\
    \ . PHP_EOL;\necho check_dict_case($dict3) . PHP_EOL;\necho check_dict_case($dict4)\
    \ . PHP_EOL;\necho check_dict_case($dict5) . PHP_EOL;\necho check_dict_case($dict6)\
    \ . PHP_EOL;", "\t$keys = array_keys($dict);\n\t$lower = true;\n\t$upper = true;\n\
    \tforeach ($keys as $key) {\n\t\tif (strtolower($key) != $key) {\n\t\t\t$lower\
    \ = false;\n\t\t}\n\t\tif (strtoupper($key) != $key) {\n\t\t\t$upper = false;\n\
    \t\t}\n\t}\n\treturn $lower || $upper;\n}\n\n/* Given an array, return true if\
    \ all keys are strings in lower \ncase or all keys are strings in upper case,\
    \ else return false.\nThe function should return false is the given array is empty.\n\
    Examples:\n>>> check_dict_case(array(\"a\" => \"apple\", \"b\" => \"banana\"))\n\
    true\n>>> check_dict_case(array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\"\
    \ => \"banana\"))\nfalse\n>>> check_dict_case(array(\"a\" => \"apple\", 8 => \"\
    banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"Name\" => \"\
    John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "    $lower = true;\n    $upper\
    \ = true;\n    foreach ($dict as $key => $value) {\n        if (strtolower($key)\
    \ != $key) {\n            $lower = false;\n        }\n        if (strtoupper($key)\
    \ != $key) {\n            $upper = false;\n        }\n    }\n    return $lower\
    \ || $upper;\n}\n\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\t$keys = array_keys($dict);\n\
    \t$upper = array_map('strtoupper', $keys);\n\t$lower = array_map('strtolower',\
    \ $keys);\n\tif ($keys == $upper || $keys == $lower) {\n\t\treturn true;\n\t}\
    \ else {\n\t\treturn false;\n\t}\n}\n\n/* Given an array of integers, return the\
    \ sum of the integers.\nExamples:\n>>> sum_array(array(1, 2, 3))\n6\n>>> sum_array(array(1,\
    \ 2, 3, 4, 5))\n15\n>>> sum_array(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))\n55\n\
    >>> sum_array(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,\
    \ 18, 19, 20))\n210*/", "\tif (count($dict) == 0) {\n\t\treturn false;\n\t}\n\t\
    $keys = array_keys($dict);\n\t$first_key = $keys[0];\n\t$is_lower = ctype_lower($first_key);\n\
    \tforeach ($keys as $key) {\n\t\tif ($is_lower != ctype_lower($key)) {\n\t\t\t\
    return false;\n\t\t}\n\t}\n\treturn true;\n}\n\n$dict = array(\"a\" => \"apple\"\
    , \"b\" => \"banana\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"\
    a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"\
    );\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\");\necho check_dict_case($dict) .\
    \ \"\\n\";\n$dict = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array();\necho check_dict_case($dict) . \"\\n\";", "\tif\
    \ (empty($dict)) {\n\t\treturn false;\n\t}\n\t$lower = array_map('strtolower',\
    \ array_keys($dict));\n\t$upper = array_map('strtoupper', array_keys($dict));\n\
    \tif ($lower == array_keys($dict) || $upper == array_keys($dict)) {\n\t\treturn\
    \ true;\n\t}\n\treturn false;\n}\n\n$dict = array(\"a\" => \"apple\", \"b\" =>\
    \ \"banana\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" =>\
    \ \"apple\", \"A\" => \"banana\", \"B\" => \"banana\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"\
    );\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\");\necho check_dict_case($dict) .\
    \ \"\\n\";\n$dict = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict)\
    \ . \"\\n\";", "\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$first_key = $keys[0];\n\t$first_key_type = gettype($first_key);\n\tif ($first_key_type\
    \ != \"string\") {\n\t\treturn false;\n\t}\n\t$first_key_case = strtoupper($first_key)\
    \ == $first_key ? \"upper\" : \"lower\";\n\tforeach ($keys as $key) {\n\t\tif\
    \ (gettype($key) != $first_key_type) {\n\t\t\treturn false;\n\t\t}\n\t\t$key_case\
    \ = strtoupper($key) == $key ? \"upper\" : \"lower\";\n\t\tif ($key_case != $first_key_case)\
    \ {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n$dict = array(\"a\"\
    \ => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict) . \"\\n\";\n\
    $dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\");\n\
    echo check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" => \"apple\", 8 =>\
    \ \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict) . \"\\n\";\n$dict\
    \ = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\");\n\
    echo check_dict_case($dict) . \"\\n\";\n$dict = array(\"STATE\" => \"NC\", \"\
    ZIP\" => \"12345\");\necho check_dict_case($dict) . \"\\n\";", "\t$lower = true;\n\
    \t$upper = true;\n\tforeach ($dict as $key => $value) {\n\t\tif (ctype_lower($key))\
    \ {\n\t\t\t$upper = false;\n\t\t} else {\n\t\t\t$lower = false;\n\t\t}\n\t}\n\t\
    return $lower || $upper;\n}\n\n/* Given an array, return true if all keys are\
    \ strings in lower \ncase or all keys are strings in upper case, else return false.\n\
    The function should return false is the given array is empty.\nExamples:\n>>>\
    \ check_dict_case(array(\"a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\tif (empty($dict)) {\n\t\
    \treturn false;\n\t}\n\t$keys = array_keys($dict);\n\t$lower = array_map('strtolower',\
    \ $keys);\n\t$upper = array_map('strtoupper', $keys);\n\tif ($keys == $lower ||\
    \ $keys == $upper) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n$dict = array(\"\
    a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict);\necho \"\
    \\n\";\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"\
    );\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"a\" => \"apple\"\
    , 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict);\necho \"\
    \\n\";\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\");\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict);\necho \"\\n\"\
    ;", "\t$keys = array_keys($dict);\n\t$lower = array_map('strtolower', $keys);\n\
    \t$upper = array_map('strtoupper', $keys);\n\tif ($keys == $lower || $keys ==\
    \ $upper) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/* Given\
    \ an array, return true if all keys are strings in lower \ncase or all keys are\
    \ strings in upper case, else return false.\nThe function should return false\
    \ is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"a\" =>\
    \ \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\" => \"\
    apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\tif (empty($dict)) {\n\t\
    \treturn false;\n\t}\n\t$keys = array_keys($dict);\n\t$first_key = $keys[0];\n\
    \t$is_lower = ctype_lower($first_key);\n\t$is_upper = ctype_upper($first_key);\n\
    \tforeach ($keys as $key) {\n\t\tif ($is_lower && !ctype_lower($key)) {\n\t\t\t\
    return false;\n\t\t}\n\t\tif ($is_upper && !ctype_upper($key)) {\n\t\t\treturn\
    \ false;\n\t\t}\n\t}\n\treturn true;\n}\n\n$dict = array(\"a\" => \"apple\", \"\
    b\" => \"banana\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"\
    a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"\
    );\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\");\necho check_dict_case($dict) .\
    \ \"\\n\";\n$dict = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array();\necho check_dict_case($dict) . \"\\n\";", "\tif\
    \ (empty($dict)) {\n\t\treturn false;\n\t}\n\t$lower = true;\n\t$upper = true;\n\
    \tforeach ($dict as $key => $value) {\n\t\tif (ctype_lower($key)) {\n\t\t\t$upper\
    \ = false;\n\t\t} else {\n\t\t\t$lower = false;\n\t\t}\n\t}\n\treturn $lower ||\
    \ $upper;\n}\n\n/*Given an array of integers, return the sum of all the integers\
    \ that have an even index, multiplied by their index.\nIf the array is empty,\
    \ you should return 0.\nExamples:\n>>> sum_even_indexed(array(1, 2, 3, 4, 5, 6))\n\
    12\n>>> sum_even_indexed(array(1, 3, 5))\n0\n>>> sum_even_indexed(array(0, 0,\
    \ 0, 0, 0))\n0\n>>> sum_even_indexed(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))\n90*/",
  "\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\t\
    $first_key = $keys[0];\n\t$is_lower = ctype_lower($first_key);\n\t$is_upper =\
    \ ctype_upper($first_key);\n\tforeach ($keys as $key) {\n\t\tif ($is_lower &&\
    \ !ctype_lower($key)) {\n\t\t\treturn false;\n\t\t}\n\t\tif ($is_upper && !ctype_upper($key))\
    \ {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n$dict = array(\"a\"\
    \ => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict) . PHP_EOL;\n\
    $dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\");\n\
    echo check_dict_case($dict) . PHP_EOL;\n$dict = array(\"a\" => \"apple\", 8 =>\
    \ \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict) . PHP_EOL;\n$dict\
    \ = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\");\n\
    echo check_dict_case($dict) . PHP_EOL;\n$dict = array(\"STATE\" => \"NC\", \"\
    ZIP\" => \"12345\");\necho check_dict_case($dict) . PHP_EOL;\n$dict = array();\n\
    echo check_dict_case($dict) . PHP_EOL;", "\tif (empty($dict)) {\n\t\treturn false;\n\
    \t}\n\t$lower = array_change_key_case($dict, CASE_LOWER);\n\t$upper = array_change_key_case($dict,\
    \ CASE_UPPER);\n\treturn ($dict == $lower || $dict == $upper);\n}\n\n/* Given\
    \ an array, return true if all keys are strings in lower \ncase or all keys are\
    \ strings in upper case, else return false.\nThe function should return false\
    \ is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"a\" =>\
    \ \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\" => \"\
    apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\tif (empty($dict)) {\n\t\
    \treturn false;\n\t}\n\t$lower = array_change_key_case($dict, CASE_LOWER);\n\t\
    $upper = array_change_key_case($dict, CASE_UPPER);\n\tif ($lower == $dict || $upper\
    \ == $dict) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\necho check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\")) . \"\\n\";\necho check_dict_case(array(\"\
    a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\")) . \"\\n\";\necho\
    \ check_dict_case(array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"\
    )) . \"\\n\";\necho check_dict_case(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) . \"\\n\";\necho check_dict_case(array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\")) . \"\\n\";", "\t$lower = true;\n\t$upper =\
    \ true;\n\tforeach ($dict as $key => $value) {\n\t\tif (!ctype_lower($key)) {\n\
    \t\t\t$lower = false;\n\t\t}\n\t\tif (!ctype_upper($key)) {\n\t\t\t$upper = false;\n\
    \t\t}\n\t}\n\tif ($lower || $upper) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\n\n/* Given an array of strings, return a new array containing\
    \ the \nfirst N strings. N will be passed as a parameter.\nExamples:\n>>> first_n(array(\"\
    a\", \"b\", \"c\", \"d\", \"e\"), 3)\narray(\"a\", \"b\", \"c\")\n>>> first_n(array(\"\
    a\", \"b\", \"c\", \"d\", \"e\"), 2)\narray(\"a\", \"b\")\n>>> first_n(array(\"\
    a\", \"b\", \"c\", \"d\", \"e\"), 5)\narray(\"a\", \"b\", \"c\", \"d\", \"e\"\
    )\n>>> first_n(array(\"a\", \"b\", \"c\", \"d\", \"e\"), 0)\narray()*/", "\tif\
    \ (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\t$is_lower\
    \ = ctype_lower($keys[0]);\n\tforeach ($keys as $key) {\n\t\tif ($is_lower &&\
    \ !ctype_lower($key)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!$is_lower && !ctype_upper($key))\
    \ {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n", "\t$keys = array_keys($dict);\n\
    \t$first_key = $keys[0];\n\t$is_lower = ctype_lower($first_key);\n\t$is_upper\
    \ = ctype_upper($first_key);\n\tforeach ($keys as $key) {\n\t\tif ($is_lower &&\
    \ !ctype_lower($key)) {\n\t\t\treturn false;\n\t\t}\n\t\tif ($is_upper && !ctype_upper($key))\
    \ {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n$dict = array(\"a\"\
    \ => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict) . \"\\n\";\n\
    $dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\");\n\
    echo check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" => \"apple\", 8 =>\
    \ \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict) . \"\\n\";\n$dict\
    \ = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\");\n\
    echo check_dict_case($dict) . \"\\n\";\n$dict = array(\"STATE\" => \"NC\", \"\
    ZIP\" => \"12345\");\necho check_dict_case($dict) . \"\\n\";", "\tif(empty($dict))\
    \ {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\t$lower = array_map('strtolower',\
    \ $keys);\n\t$upper = array_map('strtoupper', $keys);\n\tif($keys == $lower ||\
    \ $keys == $upper) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n$dict = array(\"\
    a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict);\necho \"\
    \\n\";\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"\
    );\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"a\" => \"apple\"\
    , 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict);\necho \"\
    \\n\";\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\");\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict);\necho \"\\n\"\
    ;", "\t$lower = true;\n\t$upper = true;\n\tforeach ($dict as $key => $value) {\n\
    \t\tif (!ctype_lower($key)) {\n\t\t\t$lower = false;\n\t\t}\n\t\tif (!ctype_upper($key))\
    \ {\n\t\t\t$upper = false;\n\t\t}\n\t}\n\tif ($lower || $upper) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/* Given an array of integers,\
    \ return true if the array contains \ntwo numbers that add up to a given number.\n\
    Examples:\n>>> check_sum_exists(array(1, 2, 3, 4, 5), 9)\ntrue\n>>> check_sum_exists(array(1,\
    \ 2, 3, 4, 5), 8)\nfalse\n>>> check_sum_exists(array(1, 2, 3, 4, 5), 7)\ntrue\n\
    >>> check_sum_exists(array(1, 2, 3, 4, 5), 6)\ntrue\n>>> check_sum_exists(array(1,\
    \ 2, 3, 4, 5), 5)\nfalse*/", "    if (empty($dict)) {\n        return false;\n\
    \    }\n    $keys = array_keys($dict);\n    $first_key = $keys[0];\n    $is_lower\
    \ = ctype_lower($first_key);\n    $is_upper = ctype_upper($first_key);\n    if\
    \ ($is_lower || $is_upper) {\n        foreach ($keys as $key) {\n            if\
    \ ($is_lower && !ctype_lower($key)) {\n                return false;\n       \
    \     }\n            if ($is_upper && !ctype_upper($key)) {\n                return\
    \ false;\n            }\n        }\n        return true;\n    }\n    return false;\n\
    }\n\n$dict = array(\"a\" => \"apple\", \"b\" => \"banana\");\nvar_dump(check_dict_case($dict));\n\
    $dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\");\n\
    var_dump(check_dict_case($dict));\n$dict = array(\"a\" => \"apple\", 8 => \"banana\"\
    , \"a\" => \"apple\");\nvar_dump(check_dict_case($dict));\n$dict = array(\"Name\"\
    \ => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\");\nvar_dump(check_dict_case($dict));\n\
    $dict = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\nvar_dump(check_dict_case($dict));",
  "\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\t\
    $first_key = $keys[0];\n\t$is_lower = ctype_lower($first_key);\n\tforeach ($keys\
    \ as $key) {\n\t\tif ($is_lower && !ctype_lower($key)) {\n\t\t\treturn false;\n\
    \t\t}\n\t\tif (!$is_lower && !ctype_upper($key)) {\n\t\t\treturn false;\n\t\t\
    }\n\t}\n\treturn true;\n}\n", "\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\
    \t$keys = array_keys($dict);\n\t$lower = array_map('strtolower', $keys);\n\t$upper\
    \ = array_map('strtoupper', $keys);\n\treturn ($keys == $lower || $keys == $upper);\n\
    }\n\n/* Given an array, return true if all keys are strings in lower \ncase or\
    \ all keys are strings in upper case, else return false.\nThe function should\
    \ return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\tif(empty($dict)) {\n\t\t\
    return false;\n\t}\n\t$keys = array_keys($dict);\n\t$first_key = $keys[0];\n\t\
    $is_upper = strtoupper($first_key) == $first_key;\n\tforeach($keys as $key) {\n\
    \t\tif($is_upper) {\n\t\t\tif(strtoupper($key) != $key) {\n\t\t\t\treturn false;\n\
    \t\t\t}\n\t\t} else {\n\t\t\tif(strtolower($key) != $key) {\n\t\t\t\treturn false;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\n/* Given an array of integers, return\
    \ true if the array contains \na 3 next to a 3 somewhere.\nExamples:\n>>> has_33(array(1,\
    \ 3, 3))\ntrue\n>>> has_33(array(1, 3, 1, 3))\nfalse\n>>> has_33(array(3, 1, 3))\n\
    false\n>>> has_33(array(3, 1, 3, 3))\ntrue\n>>> has_33(array(3, 4, 5, 3, 3))\n\
    true\n>>> has_33(array(3, 4, 5, 6, 7))\nfalse*/", "\tif (empty($dict)) {\n\t\t\
    return false;\n\t}\n\t$keys = array_keys($dict);\n\t$lower = array_map('strtolower',\
    \ $keys);\n\t$upper = array_map('strtoupper', $keys);\n\treturn ($keys == $lower\
    \ || $keys == $upper);\n}\necho check_dict_case(array(\"a\" => \"apple\", \"b\"\
    \ => \"banana\")) ? \"true\" : \"false\";\necho \"\\n\";\necho check_dict_case(array(\"\
    a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\")) ? \"true\" : \"false\"\
    ;\necho \"\\n\";\necho check_dict_case(array(\"a\" => \"apple\", 8 => \"banana\"\
    , \"a\" => \"apple\")) ? \"true\" : \"false\";\necho \"\\n\";\necho check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\")) ? \"true\" :\
    \ \"false\";\necho \"\\n\";\necho check_dict_case(array(\"STATE\" => \"NC\", \"\
    ZIP\" => \"12345\")) ? \"true\" : \"false\";\necho \"\\n\";\necho check_dict_case(array())\
    \ ? \"true\" : \"false\";\necho \"\\n\";", "\tif (empty($dict)) {\n\t\treturn\
    \ false;\n\t}\n\t$keys = array_keys($dict);\n\t$first_key = $keys[0];\n\t$first_key_is_upper\
    \ = ctype_upper($first_key);\n\tforeach ($keys as $key) {\n\t\tif ($first_key_is_upper)\
    \ {\n\t\t\tif (!ctype_upper($key)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else\
    \ {\n\t\t\tif (!ctype_lower($key)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\
    }\n\treturn true;\n}\n\n$dict = array(\"a\" => \"apple\", \"b\" => \"banana\"\
    );\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" => \"apple\",\
    \ \"A\" => \"banana\", \"B\" => \"banana\");\necho check_dict_case($dict) . \"\
    \\n\";\n$dict = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"\
    );\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\");\necho check_dict_case($dict) .\
    \ \"\\n\";\n$dict = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array();\necho check_dict_case($dict) . \"\\n\";", "\t$is_lower\
    \ = true;\n\t$is_upper = true;\n\tforeach ($dict as $key => $value) {\n\t\tif\
    \ (ctype_lower($key)) {\n\t\t\t$is_upper = false;\n\t\t} else {\n\t\t\t$is_lower\
    \ = false;\n\t\t}\n\t}\n\treturn $is_lower || $is_upper;\n}\n\n$dict = array(\"\
    a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict);\necho \"\
    \\n\";\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"\
    );\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"a\" => \"apple\"\
    , 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict);\necho \"\
    \\n\";\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\");\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict);\necho \"\\n\"\
    ;", "\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$first_key = $keys[0];\n\tif (is_string($first_key)) {\n\t\t$case = strtoupper($first_key)\
    \ == $first_key ? 'upper' : 'lower';\n\t\tforeach ($keys as $key) {\n\t\t\tif\
    \ (is_string($key)) {\n\t\t\t\tif (strtoupper($key) == $key && $case == 'lower')\
    \ {\n\t\t\t\t\treturn false;\n\t\t\t\t} else if (strtolower($key) == $key && $case\
    \ == 'upper') {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t\
    return false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\n\n$dict = array(\"a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" =>\
    \ \"apple\", 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\"\
    \ => \"Houston\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict) . \"\\n\";",
  "\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\t\
    $is_lower = ctype_lower($keys[0]);\n\tforeach ($keys as $key) {\n\t\tif ($is_lower\
    \ && !ctype_lower($key)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!$is_lower &&\
    \ !ctype_upper($key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\
    $dict = array(\"a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict);\n\
    echo \"\\n\";\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\");\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict);\n\
    echo \"\\n\";\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\"\
    \ => \"Houston\");\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict);\necho\
    \ \"\\n\";", "\t$is_lower = true;\n\t$is_upper = true;\n\tforeach ($dict as $key\
    \ => $value) {\n\t\tif (is_string($key)) {\n\t\t\tif (ctype_lower($key)) {\n\t\
    \t\t\t$is_upper = false;\n\t\t\t} else {\n\t\t\t\t$is_lower = false;\n\t\t\t}\n\
    \t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn $is_lower || $is_upper;\n\
    }\n\n$dict = array(\"a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" =>\
    \ \"apple\", 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\"\
    \ => \"Houston\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict) . \"\\n\";",
  "\t$lower = true;\n\t$upper = true;\n\tforeach ($dict as $key => $value) {\n\t\t\
    if (ctype_lower($key)) {\n\t\t\t$upper = false;\n\t\t} else {\n\t\t\t$lower =\
    \ false;\n\t\t}\n\t}\n\treturn $lower || $upper;\n}\n\n$dict = array(\"a\" =>\
    \ \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict);\necho \"\\n\"\
    ;\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"\
    );\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"a\" => \"apple\"\
    , 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict);\necho \"\
    \\n\";\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\");\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict);\necho \"\\n\"\
    ;", "\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\tif ($keys == $lower || $keys == $upper) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n\n/* Given an array, return a new array with the elements\
    \ in reverse order.\nExamples:\n>>> reverse_array(array(1, 2, 3, 4, 5))\narray(5,\
    \ 4, 3, 2, 1)\n>>> reverse_array(array(\"a\", \"b\", \"c\", \"d\", \"e\"))\narray(\"\
    e\", \"d\", \"c\", \"b\", \"a\")\n>>> reverse_array(array(\"a\", \"b\", \"c\"\
    , \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"\
    , \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\"\
    , \"z\"))\narray(\"z\", \"y\", \"x\", \"w\", \"v\", \"u\", \"t\", \"s\", \"r\"\
    , \"q\", \"p\", \"o\", \"n\", \"m\", \"l\", \"k\", \"j\", \"i\", \"h\", \"g\"\
    , \"f\", \"e\", \"d\", \"c\", \"b\", \"a\")\n>>> reverse_array(array(\"a\", \"\
    b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"\
    m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"\
    x\", \"y\", \"z\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"\
    I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"\
    T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"", "\t$keys = array_keys($dict);\n\t\
    $first_key = $keys[0];\n\t$is_upper = ctype_upper($first_key);\n\tforeach ($keys\
    \ as $key) {\n\t\tif ($is_upper && !ctype_upper($key)) {\n\t\t\treturn false;\n\
    \t\t} else if (!$is_upper && !ctype_lower($key)) {\n\t\t\treturn false;\n\t\t\
    }\n\t}\n\treturn true;\n}\n\n$dict = array(\"a\" => \"apple\", \"b\" => \"banana\"\
    );\n$dict2 = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"\
    );\n$dict3 = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\");\n\
    $dict4 = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"\
    );\n$dict5 = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\n\necho check_dict_case($dict)\
    \ . \"\\n\";\necho check_dict_case($dict2) . \"\\n\";\necho check_dict_case($dict3)\
    \ . \"\\n\";\necho check_dict_case($dict4) . \"\\n\";\necho check_dict_case($dict5)\
    \ . \"\\n\";", "    $keys = array_keys($dict);\n    $first = $keys[0];\n    $is_upper\
    \ = ctype_upper($first);\n    $is_lower = ctype_lower($first);\n    foreach ($keys\
    \ as $key) {\n        if ($is_upper && !ctype_upper($key)) {\n            return\
    \ false;\n        }\n        if ($is_lower && !ctype_lower($key)) {\n        \
    \    return false;\n        }\n    }\n    return true;\n}\n\n$dict = array(\"\
    a\" => \"apple\", \"b\" => \"banana\");\n$dict2 = array(\"a\" => \"apple\", \"\
    A\" => \"banana\", \"B\" => \"banana\");\n$dict3 = array(\"a\" => \"apple\", 8\
    \ => \"banana\", \"a\" => \"apple\");\n$dict4 = array(\"Name\" => \"John\", \"\
    Age\" => \"36\", \"City\" => \"Houston\");\n$dict5 = array(\"STATE\" => \"NC\"\
    , \"ZIP\" => \"12345\");\n\necho check_dict_case($dict) . \"\\n\";\necho check_dict_case($dict2)\
    \ . \"\\n\";\necho check_dict_case($dict3) . \"\\n\";\necho check_dict_case($dict4)\
    \ . \"\\n\";\necho check_dict_case($dict5) . \"\\n\";", "\tif(empty($dict)) return\
    \ false;\n\t$keys = array_keys($dict);\n\t$keys_lower = array_map('strtolower',\
    \ $keys);\n\t$keys_upper = array_map('strtoupper', $keys);\n\tif($keys === $keys_lower\
    \ || $keys === $keys_upper) return true;\n\treturn false;\n}\n\n$dict = array(\"\
    a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict) ? \"true\"\
    \ : \"false\";\necho \"\\n\";\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\"\
    , \"B\" => \"banana\");\necho check_dict_case($dict) ? \"true\" : \"false\";\n\
    echo \"\\n\";\n$dict = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"\
    apple\");\necho check_dict_case($dict) ? \"true\" : \"false\";\necho \"\\n\";\n\
    $dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"\
    );\necho check_dict_case($dict) ? \"true\" : \"false\";\necho \"\\n\";\n$dict\
    \ = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict)\
    \ ? \"true\" : \"false\";\necho \"\\n\";", "\tif (empty($dict)) {\n\t\treturn\
    \ false;\n\t}\n\t$keys = array_keys($dict);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\t$lower = array_map('strtolower', $keys);\n\tif ($keys == $upper ||\
    \ $keys == $lower) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/* Given an\
    \ array of integers, return the sum of all the integers \nthat have an even index,\
    \ multiplied by the integer at the last index.\nIf the array is empty, return\
    \ 0.\nExamples:\n>>> sum_even_indexed($array)\n0\n>>> sum_even_indexed(array(1,\
    \ 2, 3, 4, 5))\n30\n>>> sum_even_indexed(array(1, 2, 3, 4, 5, 6))\n48\n>>> sum_even_indexed(array(1,\
    \ 2, 3, 4, 5, 6, 7))\n56\n>>> sum_even_indexed(array(1, 2, 3, 4, 5, 6, 7, 8))\n\
    64\n>>> sum_even_indexed(array(1, 2, 3, 4, 5, 6, 7, 8, 9))\n72\n>>> sum_even_indexed(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10))\n80*/", "\tif (empty($dict)) {\n\t\treturn false;\n\
    \t}\n\t$keys = array_keys($dict);\n\t$lower = array_map('strtolower', $keys);\n\
    \t$upper = array_map('strtoupper', $keys);\n\tif ($keys == $lower || $keys ==\
    \ $upper) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n$dict = array(\"a\"\
    \ => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict) . PHP_EOL;\n\
    $dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\");\n\
    echo check_dict_case($dict) . PHP_EOL;\n$dict = array(\"a\" => \"apple\", 8 =>\
    \ \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict) . PHP_EOL;\n$dict\
    \ = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\");\n\
    echo check_dict_case($dict) . PHP_EOL;\n$dict = array(\"STATE\" => \"NC\", \"\
    ZIP\" => \"12345\");\necho check_dict_case($dict) . PHP_EOL;", "\t$keys = array_keys($dict);\n\
    \t$count = count($keys);\n\t$lower = 0;\n\t$upper = 0;\n\tfor ($i = 0; $i < $count;\
    \ $i++) {\n\t\tif (ctype_lower($keys[$i])) {\n\t\t\t$lower++;\n\t\t} elseif (ctype_upper($keys[$i]))\
    \ {\n\t\t\t$upper++;\n\t\t}\n\t}\n\tif ($lower == $count || $upper == $count)\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n$dict = array(\"\
    a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict);\necho \"\
    \\n\";\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"\
    );\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"a\" => \"apple\"\
    , 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict);\necho \"\
    \\n\";\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\");\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict);\necho \"\\n\"\
    ;", "\t$keys = array_keys($dict);\n\t$values = array_values($dict);\n\t$upper\
    \ = array_map('strtoupper', $keys);\n\t$lower = array_map('strtolower', $keys);\n\
    \tif ($keys == $upper || $keys == $lower) {\n\t\treturn true;\n\t} else {\n\t\t\
    return false;\n\t}\n}\n\n/* Given an array, return true if all keys are strings\
    \ in lower \ncase or all keys are strings in upper case, else return false.\n\
    The function should return false is the given array is empty.\nExamples:\n>>>\
    \ check_dict_case(array(\"a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\t$keys = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\tif ($keys === $lower || $keys === $upper) {\n\t\treturn true;\n\t\
    } else {\n\t\treturn false;\n\t}\n}\n\n/* Given an array, return true if all values\
    \ are strings, else return false.\nThe function should return false is the given\
    \ array is empty.\nExamples:\n>>> check_dict_values(array(\"a\" => \"apple\",\
    \ \"b\" => \"banana\"))\ntrue\n>>> check_dict_values(array(\"a\" => \"apple\"\
    , \"b\" => \"banana\", \"c\" => \"banana\"))\ntrue\n>>> check_dict_values(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_values(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\ntrue\n>>> check_dict_values(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\tif(empty($dict)) {\n\t\t\
    return false;\n\t}\n\t$keys = array_keys($dict);\n\t$lower = array_map('strtolower',\
    \ $keys);\n\t$upper = array_map('strtoupper', $keys);\n\tif($keys == $lower ||\
    \ $keys == $upper) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n$dict = array(\"\
    a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict);\necho \"\
    \\n\";\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"\
    );\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"a\" => \"apple\"\
    , 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict);\necho \"\
    \\n\";\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\");\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict);\necho \"\\n\"\
    ;", "\t$keys = array_keys($dict);\n\t$lower = array_map('strtolower', $keys);\n\
    \t$upper = array_map('strtoupper', $keys);\n\tif ($keys == $lower || $keys ==\
    \ $upper) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/* Given\
    \ an array of integers, return the sum of all the integers that have an even index,\
    \ multiplied by the integer at the last index.\nIf the array is empty, return\
    \ 0.\nExamples:\n>>> sum_of_evens_times_last([1, 2, 3, 4, 5])\n30\n>>> sum_of_evens_times_last([3,\
    \ 3, 4, 5, 6])\n48\n>>> sum_of_evens_times_last([2, 2, 2])\n6\n>>> sum_of_evens_times_last([1,\
    \ 1, 1, 1, 1])\n0\n>>> sum_of_evens_times_last([])\n0*/", "\tif (empty($dict))\
    \ {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\t$lower = array_map('strtolower', $keys);\n\tif ($keys == $upper ||\
    \ $keys == $lower) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/* Given an\
    \ array, return true if all keys are strings in lower \ncase or all keys are strings\
    \ in upper case, else return false.\nThe function should return false is the given\
    \ array is empty.\nExamples:\n>>> check_dict_case(array(\"a\" => \"apple\", \"\
    b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\" => \"apple\", \"A\"\
    \ => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\t$keys = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\tif ($keys == $lower || $keys == $upper) {\n\t\treturn true;\n\t}\
    \ else {\n\t\treturn false;\n\t}\n}\n\n/* Given an array of integers, return the\
    \ sum of all the integers that have an even index, \nmultiplied by the last odd\
    \ integer in the array. If the array is empty, you should return 0.\nExamples:\n\
    >>> sum_even_indexed_odd_last([1, 2, 3, 4, 5])\n30\n>>> sum_even_indexed_odd_last([1,\
    \ 2, 3, 4, 5, 6])\n48\n>>> sum_even_indexed_odd_last([1, 2, 3, 4, 5, 6, 7])\n\
    56\n>>> sum_even_indexed_odd_last([1, 2, 3, 4, 5, 6, 7, 8])\n64\n>>> sum_even_indexed_odd_last([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9])\n72\n>>> sum_even_indexed_odd_last([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10])\n90\n>>> sum_even_indexed_odd_last([])\n0*/", "\tif (empty($dict))\
    \ {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\t$lower = array_map('strtolower',\
    \ $keys);\n\t$upper = array_map('strtoupper', $keys);\n\tif ($keys == $lower ||\
    \ $keys == $upper) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/* Given a\
    \ string, return true if the string is a palindrome, \nelse return false. The\
    \ function should return false if the \ngiven string is empty.\nExamples:\n>>>\
    \ is_palindrome(\"madam\")\ntrue\n>>> is_palindrome(\"racecar\")\ntrue\n>>> is_palindrome(\"\
    hello\")\nfalse\n>>> is_palindrome(\"\")\nfalse*/", "\tif (empty($dict)) {\n\t\
    \treturn false;\n\t}\n\t$lower = true;\n\t$upper = true;\n\tforeach ($dict as\
    \ $key => $value) {\n\t\tif (ctype_lower($key)) {\n\t\t\t$upper = false;\n\t\t\
    } else {\n\t\t\t$lower = false;\n\t\t}\n\t}\n\treturn $lower || $upper;\n}\n\n\
    $dict = array(\"a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" =>\
    \ \"apple\", 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\"\
    \ => \"Houston\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict) . \"\\n\";",
  "\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\t\
    $lower_keys = array_map('strtolower', $keys);\n\t$upper_keys = array_map('strtoupper',\
    \ $keys);\n\tif ($keys == $lower_keys || $keys == $upper_keys) {\n\t\treturn true;\n\
    \t}\n\treturn false;\n}\n\n/* Given an array of integers, return true if the array\
    \ contains \na number that is a multiple of 7 or 11, else return false.\nExamples:\n\
    >>> check_multiples(array(7, 11, 21, 27, 35, 49))\ntrue\n>>> check_multiples(array(7,\
    \ 11, 21, 27, 35, 49, 56))\ntrue\n>>> check_multiples(array(7, 11, 21, 27, 35,\
    \ 49, 56, 63))\nfalse\n>>> check_multiples(array(7, 11, 21, 27, 35, 49, 56, 63,\
    \ 70))\ntrue\n>>> check_multiples(array(7, 11, 21, 27, 35, 49, 56, 63, 70, 77))\n\
    true\n>>> check_multiples(array(7, 11, 21, 27, 35, 49, 56, 63, 70, 77, 84))\n\
    false\n>>> check_multiples(array(7, 11, 21, 27, 35, 49, 56, 63, 70, 77, 84, 91))\n\
    true\n>>> check_multiples(array(7, 11, 21, 27, 35, 49, 56, 63, 70, 77, 84, 91,\
    \ 98))\ntrue\n>>> check_multiples(array(7, 11, 21, 27, 35, 49, 56, 63, 70, 77,\
    \ 84, 91, 98, 105))\nfalse\n>>> check_multiples(array(7, 11, 21, 27, 35, 49, 56,\
    \ 63, 70, 77, 84, 91, 98, 105, 112))\ntrue\n>>> check_multiples(array(7, 11, 21,\
    \ 27, 35, 49, 56, 63, 70, 77, 84, 91, 98, 105, 112, 119))\ntrue\n>>> check_multiples(array(7,",
  "\t$lower = array_keys($dict);\n\t$upper = array_keys($dict);\n\t$lower = array_map('strtolower',\
    \ $lower);\n\t$upper = array_map('strtoupper', $upper);\n\tif ($lower == array_keys($dict)\
    \ || $upper == array_keys($dict)) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\necho check_dict_case(array(\"a\" => \"apple\", \"b\" => \"banana\"\
    )) . \"\\n\";\necho check_dict_case(array(\"a\" => \"apple\", \"A\" => \"banana\"\
    , \"B\" => \"banana\")) . \"\\n\";\necho check_dict_case(array(\"a\" => \"apple\"\
    , 8 => \"banana\", \"a\" => \"apple\")) . \"\\n\";\necho check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\")) . \"\\n\";\n\
    echo check_dict_case(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) . \"\\\
    n\";", "    $keys = array_keys($dict);\n    $is_upper = ctype_upper($keys[0]);\n\
    \    foreach ($keys as $key) {\n        if ($is_upper != ctype_upper($key)) {\n\
    \            return false;\n        }\n    }\n    return true;\n}\n\n/* Given\
    \ an array, return true if all keys are strings in lower \ncase or all keys are\
    \ strings in upper case, else return false.\nThe function should return false\
    \ is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"a\" =>\
    \ \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\" => \"\
    apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\tif (empty($dict)) {\n\t\
    \treturn false;\n\t}\n\t$lower = true;\n\t$upper = true;\n\tforeach ($dict as\
    \ $key => $value) {\n\t\tif (strtolower($key) != $key) {\n\t\t\t$lower = false;\n\
    \t\t}\n\t\tif (strtoupper($key) != $key) {\n\t\t\t$upper = false;\n\t\t}\n\t}\n\
    \treturn $lower || $upper;\n}\n\necho check_dict_case(array(\"a\" => \"apple\"\
    , \"b\" => \"banana\")) . \"\\n\";\necho check_dict_case(array(\"a\" => \"apple\"\
    , \"A\" => \"banana\", \"B\" => \"banana\")) . \"\\n\";\necho check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\")) . \"\\n\";\necho check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\")) . \"\\n\";\n\
    echo check_dict_case(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) . \"\\\
    n\";", "\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$is_lower = ctype_lower($keys[0]);\n\tforeach ($keys as $key) {\n\t\tif ($is_lower\
    \ != ctype_lower($key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\
    \necho check_dict_case(array(\"a\" => \"apple\", \"b\" => \"banana\")) . \"\\\
    n\";\necho check_dict_case(array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\"\
    \ => \"banana\")) . \"\\n\";\necho check_dict_case(array(\"a\" => \"apple\", 8\
    \ => \"banana\", \"a\" => \"apple\")) . \"\\n\";\necho check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\")) . \"\\n\";\n\
    echo check_dict_case(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) . \"\\\
    n\";", "\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\tif ($keys == $lower || $keys == $upper) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n\necho check_dict_case(array(\"a\" => \"apple\", \"b\" =>\
    \ \"banana\")) . \"\\n\";\necho check_dict_case(array(\"a\" => \"apple\", \"A\"\
    \ => \"banana\", \"B\" => \"banana\")) . \"\\n\";\necho check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\")) . \"\\n\";\necho check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\")) . \"\\n\";\n\
    echo check_dict_case(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) . \"\\\
    n\";", "\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$lower = array_change_key_case($dict,\
    \ CASE_LOWER);\n\t$upper = array_change_key_case($dict, CASE_UPPER);\n\tif ($lower\
    \ == $dict || $upper == $dict) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n\
    /* Given an array, return true if all values are strings, else return false.\n\
    The function should return false is the given array is empty.\nExamples:\n>>>\
    \ check_dict_string(array(\"a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>>\
    \ check_dict_string(array(\"a\" => \"apple\", \"b\" => \"banana\", \"c\" => \"\
    carrot\"))\ntrue\n>>> check_dict_string(array(\"a\" => \"apple\", \"b\" => \"\
    banana\", \"c\" => \"carrot\", \"d\" => 1))\nfalse\n>>> check_dict_string(array(\"\
    a\" => \"apple\", \"b\" => \"banana\", \"c\" => \"carrot\", \"d\" => \"1\"))\n\
    true\n>>> check_dict_string(array(\"a\" => \"apple\", \"b\" => \"banana\", \"\
    c\" => \"carrot\", \"d\" => \"1\", \"e\" => 1))\nfalse\n>>> check_dict_string(array(\"\
    a\" => \"apple\", \"b\" => \"banana\", \"c\" => \"carrot\", \"d\" => \"1\", \"\
    e\" => \"1\"))\ntrue\n>>> check_dict_string(array(\"a\" => \"apple\", \"b\" =>\
    \ \"banana\", \"c\" => \"carrot\", \"d\" => \"1\", \"e\" => \"1\", \"f\" => 1))\n\
    false\n>>> check_dict_string(array(\"a\" => \"apple\", \"b\" => \"banana\", \"\
    c\" => \"carrot\", \"d\" => \"1\", \"e\" => \"1\", \"f\" => \"1\"))\ntrue\n>>>\
    \ check_dict_string(array(\"a\" => \"apple\", \"b\" => \"banana\", \"c\" => \"\
    carrot\", \"d\" => \"1\", \"e\"", "    $keys = array_keys($dict);\n    $first_key\
    \ = $keys[0];\n    if (is_string($first_key)) {\n        $is_lower = ctype_lower($first_key);\n\
    \        $is_upper = ctype_upper($first_key);\n        foreach ($keys as $key)\
    \ {\n            if ($is_lower && !ctype_lower($key)) {\n                return\
    \ false;\n            }\n            if ($is_upper && !ctype_upper($key)) {\n\
    \                return false;\n            }\n        }\n        return true;\n\
    \    }\n    return false;\n}\n\n/* Given an array, return true if all values are\
    \ strings in lower \ncase or all values are strings in upper case, else return\
    \ false.\nThe function should return false is the given array is empty.\nExamples:\n\
    >>> check_dict_case(array(\"a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>>\
    \ check_dict_case(array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"\
    ))\nfalse\n>>> check_dict_case(array(\"a\" => \"apple\", 8 => \"banana\", \"a\"\
    \ => \"apple\"))\nfalse\n>>> check_dict_case(array(\"Name\" => \"John\", \"Age\"\
    \ => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "    if (empty($dict)) {\n     \
    \   return false;\n    }\n    $keys = array_keys($dict);\n    $first_key = $keys[0];\n\
    \    $is_upper = ctype_upper($first_key);\n    foreach ($keys as $key) {\n   \
    \     if ($is_upper && !ctype_upper($key)) {\n            return false;\n    \
    \    }\n        if (!$is_upper && !ctype_lower($key)) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\n/* Given a string, return true if the\
    \ string is a palindrome, \nelse return false. The function should return false\
    \ if the \ngiven string is empty.\nExamples:\n>>> is_palindrome(\"abba\")\ntrue\n\
    >>> is_palindrome(\"abcba\")\ntrue\n>>> is_palindrome(\"abccba\")\ntrue\n>>> is_palindrome(\"\
    abc\")\nfalse\n>>> is_palindrome(\"\")\nfalse*/", "\tif (empty($dict)) {\n\t\t\
    return false;\n\t}\n\t$keys = array_keys($dict);\n\t$lower = array_map('strtolower',\
    \ $keys);\n\t$upper = array_map('strtoupper', $keys);\n\tif ($keys == $lower ||\
    \ $keys == $upper) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/* Given an\
    \ array, return true if all keys are strings in lower \ncase or all keys are strings\
    \ in upper case, else return false.\nThe function should return false is the given\
    \ array is empty.\nExamples:\n>>> check_dict_case(array(\"a\" => \"apple\", \"\
    b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\" => \"apple\", \"A\"\
    \ => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\tif (empty($dict)) {\n\t\
    \treturn false;\n\t}\n\t$lower = array_keys($dict);\n\t$upper = array_keys($dict);\n\
    \tforeach ($lower as $key => $value) {\n\t\t$lower[$key] = strtolower($value);\n\
    \t}\n\tforeach ($upper as $key => $value) {\n\t\t$upper[$key] = strtoupper($value);\n\
    \t}\n\tif ($lower == array_keys($dict) || $upper == array_keys($dict)) {\n\t\t\
    return true;\n\t}\n\treturn false;\n}\n\n/* Given an array of integers, return\
    \ the sum of the integers \nwith an even index (0, 2, 4, etc.).\nExamples:\n>>>\
    \ sum_even_indexed(array(1, 2, 3, 4, 5, 6))\n12\n>>> sum_even_indexed(array(1,\
    \ 2, 3, 4, 5, 6, 7))\n20\n>>> sum_even_indexed(array(1, 2, 3, 4, 5, 6, 7, 8))\n\
    28\n>>> sum_even_indexed(array(1, 2, 3, 4, 5, 6, 7, 8, 9))\n36\n>>> sum_even_indexed(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10))\n45*/", "\tif (empty($dict)) {\n\t\treturn false;\n\
    \t}\n\t$keys = array_keys($dict);\n\t$first_key = $keys[0];\n\t$is_lower = ctype_lower($first_key);\n\
    \t$is_upper = ctype_upper($first_key);\n\tforeach ($keys as $key) {\n\t\tif ($is_lower\
    \ && !ctype_lower($key)) {\n\t\t\treturn false;\n\t\t}\n\t\tif ($is_upper && !ctype_upper($key))\
    \ {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n$dict = array(\"a\"\
    \ => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict) . \"\\n\";\n\
    $dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\");\n\
    echo check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" => \"apple\", 8 =>\
    \ \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict) . \"\\n\";\n$dict\
    \ = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\");\n\
    echo check_dict_case($dict) . \"\\n\";\n$dict = array(\"STATE\" => \"NC\", \"\
    ZIP\" => \"12345\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array();\n\
    echo check_dict_case($dict) . \"\\n\";", "\t$lower = true;\n\t$upper = true;\n\
    \tforeach ($dict as $key => $value) {\n\t\tif (ctype_lower($key)) {\n\t\t\t$upper\
    \ = false;\n\t\t} else {\n\t\t\t$lower = false;\n\t\t}\n\t}\n\treturn $lower ||\
    \ $upper;\n}\n\n/* Given an array of integers, return the sum of all the integers\
    \ that have an even index, multiplied by the integer at the last index.\nIf the\
    \ array is empty, return 0.\nExamples:\n>>> sum_even_index_multiplied_by_last([1,\
    \ 2, 3, 4, 5])\n30\n>>> sum_even_index_multiplied_by_last([])\n0\n>>> sum_even_index_multiplied_by_last([-3,\
    \ -2, -1, 0, 1, 2, 3])\n0\n>>> sum_even_index_multiplied_by_last([-3, -2, -1,\
    \ 0, 1, 2, 3, 4])\n8\n>>> sum_even_index_multiplied_by_last([-3, -2, -1, 0, 1,\
    \ 2, 3, 4, 5])\n30\n>>> sum_even_index_multiplied_by_last([-3, -2, -1, 0, 1, 2,\
    \ 3, 4, 5, 6])\n42\n>>> sum_even_index_multiplied_by_last([-3, -2, -1, 0, 1, 2,\
    \ 3, 4, 5, 6, 7])\n56*/", "\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$lower\
    \ = array_change_key_case($dict, CASE_LOWER);\n\t$upper = array_change_key_case($dict,\
    \ CASE_UPPER);\n\tif ($lower == $dict) {\n\t\treturn true;\n\t} elseif ($upper\
    \ == $dict) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/* Given\
    \ an array, return true if all keys are strings in lower \ncase or all keys are\
    \ strings in upper case, else return false.\nThe function should return false\
    \ is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"a\" =>\
    \ \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\" => \"\
    apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\t$lower = array_change_key_case($dict,\
    \ CASE_LOWER);\n\t$upper = array_change_key_case($dict, CASE_UPPER);\n\tif ($lower\
    \ == $dict) {\n\t\treturn true;\n\t} elseif ($upper == $dict) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\n\n/* Given an array, return the number\
    \ of times the value \"apple\" appears in the array.\nExamples:\n>>> count_apple(array(\"\
    apple\", \"banana\", \"apple\", \"apple\", \"orange\"))\n3\n>>> count_apple(array(\"\
    apple\", \"banana\", \"apple\", \"apple\", \"orange\", \"apple\"))\n4\n>>> count_apple(array(\"\
    apple\", \"banana\", \"apple\", \"apple\", \"orange\", \"apple\", \"apple\"))\n\
    5\n>>> count_apple(array(\"apple\", \"banana\", \"apple\", \"apple\", \"orange\"\
    , \"apple\", \"apple\", \"apple\"))\n6\n>>> count_apple(array(\"apple\", \"banana\"\
    , \"apple\", \"apple\", \"orange\", \"apple\", \"apple\", \"apple\", \"apple\"\
    ))\n7\n>>> count_apple(array(\"apple\", \"banana\", \"apple\", \"apple\", \"orange\"\
    , \"apple\", \"apple\", \"apple\", \"apple\", \"apple\"))\n8\n>>> count_apple(array(\"\
    apple\", \"banana\", \"apple\", \"apple\", \"orange\", \"apple\", \"apple\", \"\
    apple\", \"apple\", \"apple\", \"apple\"))\n9\n>>> count_apple(array(\"apple\"\
    , \"banana\", \"apple\", \"apple\", \"orange\", \"apple\", \"apple\", \"apple\"\
    , \"apple\", \"apple\", \"apple\", \"apple\"))\n10\n>>> count_apple(array(\"apple\"\
    , \"banana\", \"apple\", \"apple\", \"orange\", \"apple\", \"apple\", \"apple\"\
    , \"apple\", \"apple\", \"apple\", \"apple\", \"apple\"))\n11\n>>> count_apple(array(\"\
    apple\", \"banana\", \"apple\", \"apple\", \"orange\", \"apple\", \"apple\", \"\
    apple\", \"apple\", \"apple\", \"apple\", \"apple\", \"apple\", \"apple\"))\n\
    12\n>>> count_apple(array(\"apple\", \"ban", "\tif (empty($dict)) {\n\t\treturn\
    \ false;\n\t}\n\t$keys = array_keys($dict);\n\t$is_lower = ctype_lower($keys[0]);\n\
    \tforeach ($keys as $key) {\n\t\tif ($is_lower && !ctype_lower($key)) {\n\t\t\t\
    return false;\n\t\t}\n\t\tif (!$is_lower && !ctype_upper($key)) {\n\t\t\treturn\
    \ false;\n\t\t}\n\t}\n\treturn true;\n}\n\n$dict = array(\"a\" => \"apple\", \"\
    b\" => \"banana\");\necho check_dict_case($dict) ? \"true\" : \"false\";\necho\
    \ \"\\n\";\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"\
    banana\");\necho check_dict_case($dict) ? \"true\" : \"false\";\necho \"\\n\"\
    ;\n$dict = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\");\necho\
    \ check_dict_case($dict) ? \"true\" : \"false\";\necho \"\\n\";\n$dict = array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\");\necho check_dict_case($dict)\
    \ ? \"true\" : \"false\";\necho \"\\n\";\n$dict = array(\"STATE\" => \"NC\", \"\
    ZIP\" => \"12345\");\necho check_dict_case($dict) ? \"true\" : \"false\";\necho\
    \ \"\\n\";", "\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$is_lower = true;\n\
    \t$is_upper = true;\n\tforeach ($dict as $key => $value) {\n\t\tif (ctype_lower($key))\
    \ {\n\t\t\t$is_upper = false;\n\t\t} else {\n\t\t\t$is_lower = false;\n\t\t}\n\
    \t}\n\treturn $is_lower || $is_upper;\n}\n", "\tif (empty($dict)) {\n\t\treturn\
    \ false;\n\t}\n\t$lower = true;\n\t$upper = true;\n\tforeach ($dict as $key =>\
    \ $value) {\n\t\tif (!ctype_lower($key)) {\n\t\t\t$lower = false;\n\t\t}\n\t\t\
    if (!ctype_upper($key)) {\n\t\t\t$upper = false;\n\t\t}\n\t}\n\tif ($lower ||\
    \ $upper) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/* Given an array, return\
    \ true if all values are strings in lower \ncase or all values are strings in\
    \ upper case, else return false.\nThe function should return false is the given\
    \ array is empty.\nExamples:\n>>> check_dict_case(array(\"a\" => \"apple\", \"\
    b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\" => \"apple\", \"A\"\
    \ => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\tif (empty($dict)) {\n\t\
    \treturn false;\n\t}\n\t$keys = array_keys($dict);\n\t$lower = array_map('strtolower',\
    \ $keys);\n\t$upper = array_map('strtoupper', $keys);\n\tif ($keys == $lower ||\
    \ $keys == $upper) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/* Given an\
    \ array, return true if all keys are strings in lower \ncase or all keys are strings\
    \ in upper case, else return false.\nThe function should return false is the given\
    \ array is empty.\nExamples:\n>>> check_dict_case(array(\"a\" => \"apple\", \"\
    b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\" => \"apple\", \"A\"\
    \ => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\tif (empty($dict)) {\n\t\
    \treturn false;\n\t}\n\t$lower = array_keys($dict);\n\t$upper = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $lower);\n\t$upper = array_map('strtoupper',\
    \ $upper);\n\tif ($lower == array_keys($dict) || $upper == array_keys($dict))\
    \ {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/* Given an array of strings,\
    \ return an array of strings with all \nduplicates removed.\nExamples:\n>>> remove_duplicates(array(\"\
    a\", \"b\", \"a\", \"c\", \"b\", \"a\"))\narray(\"a\", \"b\", \"c\")\n>>> remove_duplicates(array(\"\
    a\", \"a\", \"a\", \"a\", \"a\", \"a\"))\narray(\"a\")\n>>> remove_duplicates(array(\"\
    a\", \"b\", \"c\", \"d\", \"e\", \"f\"))\narray(\"a\", \"b\", \"c\", \"d\", \"\
    e\", \"f\")\n>>> remove_duplicates(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"\
    f\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"))\narray(\"a\", \"b\", \"c\", \"\
    d\", \"e\", \"f\")\n>>> remove_duplicates(array(\"a\", \"b\", \"c\", \"d\", \"\
    e\", \"f\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"a\", \"b\", \"c\", \"\
    d\", \"e\", \"f\"))\narray(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\")*/", "   \
    \ if (empty($dict)) {\n        return false;\n    }\n    $keys = array_keys($dict);\n\
    \    $first_key = $keys[0];\n    $is_lower = ctype_lower($first_key);\n    $is_upper\
    \ = ctype_upper($first_key);\n    if ($is_lower || $is_upper) {\n        foreach\
    \ ($keys as $key) {\n            if ($is_lower && !ctype_lower($key)) {\n    \
    \            return false;\n            }\n            if ($is_upper && !ctype_upper($key))\
    \ {\n                return false;\n            }\n        }\n        return true;\n\
    \    }\n    return false;\n}\n\n$dict = array(\"a\" => \"apple\", \"b\" => \"\
    banana\");\n$dict1 = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"\
    banana\");\n$dict2 = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"\
    );\n$dict3 = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"\
    );\n$dict4 = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\n$dict5 = array();\n\
    \necho check_dict_case($dict) . \"\\n\";\necho check_dict_case($dict1) . \"\\\
    n\";\necho check_dict_case($dict2) . \"\\n\";\necho check_dict_case($dict3) .\
    \ \"\\n\";\necho check_dict_case($dict4) . \"\\n\";\necho check_dict_case($dict5)\
    \ . \"\\n\";", "\t$keys = array_keys($dict);\n\t$count = count($keys);\n\tif ($count\
    \ == 0) {\n\t\treturn false;\n\t}\n\t$lower = 0;\n\t$upper = 0;\n\tfor ($i = 0;\
    \ $i < $count; $i++) {\n\t\tif (ctype_lower($keys[$i])) {\n\t\t\t$lower++;\n\t\
    \t} elseif (ctype_upper($keys[$i])) {\n\t\t\t$upper++;\n\t\t}\n\t}\n\tif ($lower\
    \ == $count || $upper == $count) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\n\necho check_dict_case(array(\"a\" => \"apple\", \"b\" => \"banana\"))\
    \ . \"\\n\";\necho check_dict_case(array(\"a\" => \"apple\", \"A\" => \"banana\"\
    , \"B\" => \"banana\")) . \"\\n\";\necho check_dict_case(array(\"a\" => \"apple\"\
    , 8 => \"banana\", \"a\" => \"apple\")) . \"\\n\";\necho check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\")) . \"\\n\";\n\
    echo check_dict_case(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) . \"\\\
    n\";", "\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$lower = array_change_key_case($dict,\
    \ CASE_LOWER);\n\t$upper = array_change_key_case($dict, CASE_UPPER);\n\tif ($lower\
    \ == $dict || $upper == $dict) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n\
    /* Given an array, return true if the array contains a string \nwith the value\
    \ \"red\" or \"blue\" in it, else return false.\nExamples:\n>>> check_red_blue(array(\"\
    red\", \"blue\", \"green\"))\ntrue\n>>> check_red_blue(array(\"red\", \"blue\"\
    , \"green\", \"red\"))\ntrue\n>>> check_red_blue(array(\"red\", \"blue\", \"green\"\
    , \"yellow\"))\nfalse\n>>> check_red_blue(array(\"red\", \"blue\", \"green\",\
    \ \"yellow\", \"red\"))\ntrue\n>>> check_red_blue(array(\"red\", \"blue\", \"\
    green\", \"yellow\", \"red\", \"blue\"))\ntrue\n>>> check_red_blue(array(\"red\"\
    , \"blue\", \"green\", \"yellow\", \"red\", \"blue\", \"green\"))\ntrue\n>>> check_red_blue(array(\"\
    red\", \"blue\", \"green\", \"yellow\", \"red\", \"blue\", \"green\", \"red\"\
    ))\ntrue\n>>> check_red_blue(array(\"red\", \"blue\", \"green\", \"yellow\", \"\
    red\", \"blue\", \"green\", \"red\", \"blue\"))\ntrue\n>>> check_red_blue(array(\"\
    red\", \"blue\", \"green\", \"yellow\", \"red\", \"blue\", \"green\", \"red\"\
    , \"blue\", \"green\"))\ntrue\n>>> check_red_blue(array(\"red\", \"blue\", \"\
    green\", \"yellow\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\"\
    , \"red\"))\ntrue\n>>> check_red_blue(array(\"red\", \"blue\", \"green\", \"yellow\"\
    , \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\"\
    ))\ntrue\n>>> check_red_blue(array(\"red\", \"blue\", \"green\", \"yellow\", \"\
    red\", \"blue\",", "    if (empty($dict)) {\n        return false;\n    }\n  \
    \  $keys = array_keys($dict);\n    $first_key = $keys[0];\n    $first_key_is_upper\
    \ = ctype_upper($first_key);\n    foreach ($keys as $key) {\n        if ($first_key_is_upper)\
    \ {\n            if (!ctype_upper($key)) {\n                return false;\n  \
    \          }\n        } else {\n            if (!ctype_lower($key)) {\n      \
    \          return false;\n            }\n        }\n    }\n    return true;\n\
    }\n\n$dict = array(\"a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" =>\
    \ \"apple\", 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\"\
    \ => \"Houston\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict) . \"\\n\";",
  "\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\t\
    $upper = array_map('strtoupper', $keys);\n\t$lower = array_map('strtolower', $keys);\n\
    \tif ($keys == $upper || $keys == $lower) {\n\t\treturn true;\n\t}\n\treturn false;\n\
    }\n\n/* Given an array, return true if all keys are strings in lower \ncase or\
    \ all keys are strings in upper case, else return false.\nThe function should\
    \ return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\tif (empty($dict)) {\n\t\
    \treturn false;\n\t}\n\t$is_lower = true;\n\t$is_upper = true;\n\tforeach ($dict\
    \ as $key => $value) {\n\t\tif (!ctype_lower($key)) {\n\t\t\t$is_lower = false;\n\
    \t\t}\n\t\tif (!ctype_upper($key)) {\n\t\t\t$is_upper = false;\n\t\t}\n\t}\n\t\
    return $is_lower || $is_upper;\n}\necho check_dict_case(array(\"a\" => \"apple\"\
    , \"b\" => \"banana\")) . \"\\n\";\necho check_dict_case(array(\"a\" => \"apple\"\
    , \"A\" => \"banana\", \"B\" => \"banana\")) . \"\\n\";\necho check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\")) . \"\\n\";\necho check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\")) . \"\\n\";\n\
    echo check_dict_case(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) . \"\\\
    n\";", "\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$first_key = $keys[0];\n\t$first_key_is_upper = ctype_upper($first_key);\n\t\
    foreach ($keys as $key) {\n\t\tif ($first_key_is_upper) {\n\t\t\tif (!ctype_upper($key))\
    \ {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\tif (!ctype_lower($key))\
    \ {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\n$dict =\
    \ array(\"a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" =>\
    \ \"apple\", 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\"\
    \ => \"Houston\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict) . \"\\n\";\n\
    $dict = array();\necho check_dict_case($dict) . \"\\n\";", "\t$keys = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\tif ($keys == $lower || $keys == $upper) {\n\t\treturn true;\n\t}\
    \ else {\n\t\treturn false;\n\t}\n}\n\n/* Given an array, return true if all keys\
    \ are strings in lower \ncase or all keys are strings in upper case, else return\
    \ false.\nThe function should return false is the given array is empty.\nExamples:\n\
    >>> check_dict_case(array(\"a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>>\
    \ check_dict_case(array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"\
    ))\nfalse\n>>> check_dict_case(array(\"a\" => \"apple\", 8 => \"banana\", \"a\"\
    \ => \"apple\"))\nfalse\n>>> check_dict_case(array(\"Name\" => \"John\", \"Age\"\
    \ => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\tif (empty($dict)) {\n\t\treturn\
    \ false;\n\t}\n\t$keys = array_keys($dict);\n\t$first_key = $keys[0];\n\t$is_lower\
    \ = ctype_lower($first_key);\n\t$is_upper = ctype_upper($first_key);\n\tif (!$is_lower\
    \ && !$is_upper) {\n\t\treturn false;\n\t}\n\tforeach ($keys as $key) {\n\t\t\
    if ($is_lower && !ctype_lower($key)) {\n\t\t\treturn false;\n\t\t}\n\t\tif ($is_upper\
    \ && !ctype_upper($key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n\
    }\n", "\t$keys = array_keys($dict);\n\t$lower = array_map('strtolower', $keys);\n\
    \t$upper = array_map('strtoupper', $keys);\n\tif ($keys == $lower || $keys ==\
    \ $upper) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\necho check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\")) . \"\\n\";\necho check_dict_case(array(\"\
    a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\")) . \"\\n\";\necho\
    \ check_dict_case(array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"\
    )) . \"\\n\";\necho check_dict_case(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) . \"\\n\";\necho check_dict_case(array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\")) . \"\\n\";", "\tif (empty($dict)) {\n\t\t\
    return false;\n\t}\n\t$keys = array_keys($dict);\n\t$lower = array_map('strtolower',\
    \ $keys);\n\t$upper = array_map('strtoupper', $keys);\n\tif ($keys == $lower ||\
    \ $keys == $upper) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/* Given a\
    \ string, return true if it is a palindrome, else return false.\nExamples:\n>>>\
    \ is_palindrome(\"abba\")\ntrue\n>>> is_palindrome(\"abcba\")\ntrue\n>>> is_palindrome(\"\
    abccba\")\ntrue\n>>> is_palindrome(\"abcdef\")\nfalse\n>>> is_palindrome(\"abcdefg\"\
    )\nfalse\n>>> is_palindrome(\"abcdefgh\")\nfalse\n>>> is_palindrome(\"abcdefghi\"\
    )\nfalse\n>>> is_palindrome(\"abcdefghij\")\nfalse\n>>> is_palindrome(\"abcdefghijk\"\
    )\nfalse\n>>> is_palindrome(\"abcdefghijkl\")\nfalse\n>>> is_palindrome(\"abcdefghijklm\"\
    )\nfalse\n>>> is_palindrome(\"abcdefghijklmn\")\nfalse\n>>> is_palindrome(\"abcdefghijklmno\"\
    )\nfalse\n>>> is_palindrome(\"abcdefghijklmnop\")\nfalse\n>>> is_palindrome(\"\
    abcdefghijklmnopq\")\nfalse\n>>> is_palindrome(\"abcdefghijklmnopqr\")\nfalse\n\
    >>> is_palindrome(\"abcdefghijklmnopqrs\")\nfalse\n>>> is_palindrome(\"abcdefghijklmnopqrst\"\
    )\nfalse\n>>> is_palindrome(\"abcdefghijklmnopqrstu\")\nfalse\n>>> is_palindrome(\"\
    abcdefghijklmnopqrstuv\")\nfalse\n>>> is_palindrome(\"abcdefghijklmnopqrstuvw\"\
    )\nfalse\n>>> is_palindrome(\"abcdefghijklmnopqrstuvwx\")\nfalse\n>>> is_palindrome(\"\
    abcdefghij", "\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\tif ($keys == $lower || $keys == $upper) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n\n/* Given a string, return true if the string is a palindrome,\
    \ \nelse return false. The function should return false is the given \nstring\
    \ is empty.\nExamples:\n>>> is_palindrome(\"racecar\")\ntrue\n>>> is_palindrome(\"\
    apple\")\nfalse\n>>> is_palindrome(\"\")\nfalse\n>>> is_palindrome(\"a\")\ntrue\n\
    >>> is_palindrome(\"aa\")\ntrue\n>>> is_palindrome(\"ab\")\nfalse\n>>> is_palindrome(\"\
    aba\")\ntrue\n>>> is_palindrome(\"abba\")\ntrue\n>>> is_palindrome(\"abcba\")\n\
    true\n>>> is_palindrome(\"abccba\")\ntrue\n>>> is_palindrome(\"abcdcba\")\ntrue\n\
    >>> is_palindrome(\"abcdcbab\")\nfalse*/", "\tif (empty($dict)) {\n\t\treturn\
    \ false;\n\t}\n\t$keys = array_keys($dict);\n\t$lower = array_map('strtolower',\
    \ $keys);\n\t$upper = array_map('strtoupper', $keys);\n\tif ($keys == $lower ||\
    \ $keys == $upper) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/* Given an\
    \ array of strings, return a new array containing the first N strings. \nIf N\
    \ is greater than or equal to the length of the array, then return the original\
    \ array.\nExamples:\n>>> first_n(array(\"a\", \"b\", \"c\", \"d\"), 2)\narray(\"\
    a\", \"b\")\n>>> first_n(array(\"a\", \"b\", \"c\", \"d\"), 4)\narray(\"a\", \"\
    b\", \"c\", \"d\")\n>>> first_n(array(\"a\", \"b\", \"c\", \"d\"), 5)\narray(\"\
    a\", \"b\", \"c\", \"d\")\n>>> first_n(array(\"a\", \"b\", \"c\", \"d\"), 0)\n\
    array()*/", "\t$keys = array_keys($dict);\n\t$is_upper = ctype_upper($keys[0]);\n\
    \tforeach ($keys as $key) {\n\t\tif ($is_upper) {\n\t\t\tif (!ctype_upper($key))\
    \ {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\tif (!ctype_lower($key))\
    \ {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\n/* Given\
    \ an array of strings, return a new array with the strings \nin sorted order,\
    \ except group all the strings that begin with 'x' first.\ne.g. ['mix', 'xyz',\
    \ 'apple', 'xanadu', 'aardvark'] yields\n['xanadu', 'xyz', 'aardvark', 'apple',\
    \ 'mix']\nHint: this can be done by making 2 lists and sorting each of them \n\
    before combining them.\n>>> front_x(['bbb', 'ccc', 'axx', 'xzz', 'xaa'])\n['xaa',\
    \ 'xzz', 'axx', 'bbb', 'ccc']\n>>> front_x(['ccc', 'bbb', 'aaa', 'xcc', 'xaa'])\n\
    ['xaa', 'xcc', 'aaa', 'bbb', 'ccc']\n>>> front_x(['mix', 'xyz', 'apple', 'xanadu',\
    \ 'aardvark'])\n['xanadu', 'xyz', 'aardvark', 'apple', 'mix']*/", "\tif(count($dict)\
    \ == 0) {\n\t\treturn false;\n\t}\n\t$lower = array_map('strtolower', array_keys($dict));\n\
    \t$upper = array_map('strtoupper', array_keys($dict));\n\tif($lower == array_keys($dict)\
    \ || $upper == array_keys($dict)) {\n\t\treturn true;\n\t}\n\treturn false;\n\
    }\n\n/* Given an array, return true if all values are strings, else return false.\n\
    The function should return false is the given array is empty.\nExamples:\n>>>\
    \ check_dict_values(array(\"a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>>\
    \ check_dict_values(array(\"a\" => \"apple\", \"b\" => \"banana\", \"c\" => \"\
    carrot\"))\ntrue\n>>> check_dict_values(array(\"a\" => \"apple\", \"b\" => \"\
    banana\", \"c\" => \"carrot\", \"d\" => 1))\nfalse\n>>> check_dict_values(array(\"\
    a\" => \"apple\", \"b\" => \"banana\", \"c\" => \"carrot\", \"d\" => \"1\"))\n\
    true\n>>> check_dict_values(array(\"a\" => \"apple\", \"b\" => \"banana\", \"\
    c\" => \"carrot\", \"d\" => \"1\", \"e\" => 1))\nfalse\n>>> check_dict_values(array(\"\
    a\" => \"apple\", \"b\" => \"banana\", \"c\" => \"carrot\", \"d\" => \"1\", \"\
    e\" => \"1\"))\ntrue\n>>> check_dict_values(array(\"a\" => \"apple\", \"b\" =>\
    \ \"banana\", \"c\" => \"carrot\", \"d\" => \"1\", \"e\" => \"1\", \"f\" => 1))\n\
    false\n>>> check_dict_values(array(\"a\" => \"apple\", \"b\" => \"banana\", \"\
    c\" => \"carrot\", \"d\" => \"1\", \"e\" => \"1\", \"f\" => \"1\"))\ntrue\n>>>\
    \ check_dict_values(array(\"a\" => \"apple\", \"b\" => \"banana\", \"c\" => \"\
    carrot\",", "\tif (count($dict) == 0) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$first_key = $keys[0];\n\t$is_lower = ctype_lower($first_key);\n\t$is_upper\
    \ = ctype_upper($first_key);\n\tif (!$is_lower && !$is_upper) {\n\t\treturn false;\n\
    \t}\n\tforeach ($keys as $key) {\n\t\tif ($is_lower && !ctype_lower($key)) {\n\
    \t\t\treturn false;\n\t\t}\n\t\tif ($is_upper && !ctype_upper($key)) {\n\t\t\t\
    return false;\n\t\t}\n\t}\n\treturn true;\n}\n\n$dict = array(\"a\" => \"apple\"\
    , \"b\" => \"banana\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"\
    a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"\
    );\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\");\necho check_dict_case($dict) .\
    \ \"\\n\";\n$dict = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict)\
    \ . \"\\n\";", "\tif(empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\tif($keys == $lower || $keys == $upper) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n\n$dict = array(\"a\" => \"apple\", \"b\" => \"banana\");\n\
    echo check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"a\" => \"apple\"\
    , \"A\" => \"banana\", \"B\" => \"banana\");\necho check_dict_case($dict);\necho\
    \ \"\\n\";\n$dict = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"\
    );\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"Name\" => \"\
    John\", \"Age\" => \"36\", \"City\" => \"Houston\");\necho check_dict_case($dict);\n\
    echo \"\\n\";\n$dict = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\necho\
    \ check_dict_case($dict);\necho \"\\n\";", "    $lower = true;\n    $upper = true;\n\
    \    foreach ($dict as $key => $value) {\n        if (!ctype_lower($key)) {\n\
    \            $lower = false;\n        }\n        if (!ctype_upper($key)) {\n \
    \           $upper = false;\n        }\n    }\n    return ($lower || $upper);\n\
    }", "\t$lower = array_keys($dict);\n\t$upper = array_keys($dict);\n\t$lower =\
    \ array_map('strtolower', $lower);\n\t$upper = array_map('strtoupper', $upper);\n\
    \tif ($lower == array_keys($dict) || $upper == array_keys($dict)) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/* Given an array of integers,\
    \ return the sum of all integers in the array.\nExamples:\n>>> sum_array(array(1,\
    \ 2, 3, 4, 5))\n15\n>>> sum_array(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))\n55\n\
    >>> sum_array(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))\n120\n\
    >>> sum_array(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,\
    \ 18, 19, 20))\n210*/", "\tif(empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys\
    \ = array_keys($dict);\n\t$first_key = $keys[0];\n\t$first_key_is_upper = ctype_upper($first_key);\n\
    \tforeach($keys as $key) {\n\t\tif(ctype_upper($key) != $first_key_is_upper) {\n\
    \t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n", "\tif (empty($dict)) {\n\
    \t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\t$lower = array_map('strtolower',\
    \ $keys);\n\t$upper = array_map('strtoupper', $keys);\n\tif ($keys == $lower ||\
    \ $keys == $upper) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/* Given an\
    \ array, return true if all values are strings, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_values(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_values(array(\"\
    a\" => \"apple\", \"b\" => \"banana\", \"c\" => \"banana\"))\ntrue\n>>> check_dict_values(array(\"\
    a\" => \"apple\", \"b\" => \"banana\", \"c\" => \"banana\", \"d\" => 1))\nfalse\n\
    >>> check_dict_values(array(\"a\" => \"apple\", \"b\" => \"banana\", \"c\" =>\
    \ \"banana\", \"d\" => 1, \"e\" => \"apple\"))\nfalse\n>>> check_dict_values(array(\"\
    a\" => \"apple\", \"b\" => \"banana\", \"c\" => \"banana\", \"d\" => 1, \"e\"\
    \ => \"apple\", \"f\" => \"banana\"))\nfalse\n>>> check_dict_values(array(\"a\"\
    \ => \"apple\", \"b\" => \"banana\", \"c\" => \"banana\", \"d\" => 1, \"e\" =>\
    \ \"apple\", \"f\" => \"banana\", \"g\" => \"banana\"))\nfalse\n>>> check_dict_values(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\ntrue\n>>> check_dict_values(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\t$lower = true;\n\t$upper\
    \ = true;\n\tforeach ($dict as $key => $value) {\n\t\tif (ctype_lower($key)) {\n\
    \t\t\t$upper = false;\n\t\t} else {\n\t\t\t$lower = false;\n\t\t}\n\t}\n\treturn\
    \ ($lower || $upper);\n}\n\n/* Given an array, return true if all keys are strings\
    \ in lower \ncase or all keys are strings in upper case, else return false.\n\
    The function should return false is the given array is empty.\nExamples:\n>>>\
    \ check_dict_case(array(\"a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\tif (empty($dict)) {\n\t\
    \treturn false;\n\t}\n\t$lower = true;\n\t$upper = true;\n\tforeach ($dict as\
    \ $key => $value) {\n\t\tif (!ctype_lower($key)) {\n\t\t\t$lower = false;\n\t\t\
    }\n\t\tif (!ctype_upper($key)) {\n\t\t\t$upper = false;\n\t\t}\n\t}\n\tif ($lower\
    \ || $upper) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/* Given an array,\
    \ return true if all keys are strings in lower \ncase or all keys are strings\
    \ in upper case, else return false.\nThe function should return false is the given\
    \ array is empty.\nExamples:\n>>> check_dict_case(array(\"a\" => \"apple\", \"\
    b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\" => \"apple\", \"A\"\
    \ => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "    if (count($dict) == 0)\
    \ {\n        return false;\n    }\n    $lower = true;\n    $upper = true;\n  \
    \  foreach ($dict as $key => $value) {\n        if (strtolower($key) != $key)\
    \ {\n            $lower = false;\n        }\n        if (strtoupper($key) != $key)\
    \ {\n            $upper = false;\n        }\n    }\n    return $lower || $upper;\n\
    }\n\n/* Given an array, return true if the array contains a string \nwith the\
    \ value \"red\" or \"blue\" or \"green\", else return false.\nExamples:\n>>> check_color(array(\"\
    red\", \"blue\", \"green\"))\ntrue\n>>> check_color(array(\"red\", \"blue\", \"\
    yellow\"))\ntrue\n>>> check_color(array(\"red\", \"blue\", \"yellow\", \"black\"\
    ))\nfalse\n>>> check_color(array(\"red\", \"blue\", \"yellow\", \"black\", \"\
    green\"))\ntrue\n>>> check_color(array(\"red\", \"blue\", \"yellow\", \"black\"\
    , \"green\", \"orange\"))\nfalse*/", "    if (empty($dict)) {\n        return\
    \ false;\n    }\n    $keys = array_keys($dict);\n    $first_key = $keys[0];\n\
    \    $first_key_type = gettype($first_key);\n    if ($first_key_type != \"string\"\
    ) {\n        return false;\n    }\n    $is_upper = ctype_upper($first_key);\n\
    \    foreach ($keys as $key) {\n        if (gettype($key) != $first_key_type)\
    \ {\n            return false;\n        }\n        if (ctype_upper($key) != $is_upper)\
    \ {\n            return false;\n        }\n    }\n    return true;\n}\n\n$dict\
    \ = array(\"a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" =>\
    \ \"apple\", 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\"\
    \ => \"Houston\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict) . \"\\n\";",
  "\t$lower = 0;\n\t$upper = 0;\n\tforeach ($dict as $key => $value) {\n\t\tif (ctype_lower($key))\
    \ {\n\t\t\t$lower++;\n\t\t} elseif (ctype_upper($key)) {\n\t\t\t$upper++;\n\t\t\
    }\n\t}\n\tif ($lower == count($dict) || $upper == count($dict)) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/* Given an array, return true\
    \ if all values are strings in lower \ncase or all values are strings in upper\
    \ case, else return false.\nThe function should return false is the given array\
    \ is empty.\nExamples:\n>>> check_dict_case(array(\"a\" => \"apple\", \"b\" =>\
    \ \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\" => \"apple\", \"A\" => \"\
    banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"a\" => \"\
    apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\tif (empty($dict)) {\n\t\
    \treturn false;\n\t}\n\t$lower = array_map('strtolower', array_keys($dict));\n\
    \t$upper = array_map('strtoupper', array_keys($dict));\n\tif ($lower == array_keys($dict)\
    \ || $upper == array_keys($dict)) {\n\t\treturn true;\n\t}\n\treturn false;\n\
    }\n\necho check_dict_case(array(\"a\" => \"apple\", \"b\" => \"banana\")) . \"\
    \\n\";\necho check_dict_case(array(\"a\" => \"apple\", \"A\" => \"banana\", \"\
    B\" => \"banana\")) . \"\\n\";\necho check_dict_case(array(\"a\" => \"apple\"\
    , 8 => \"banana\", \"a\" => \"apple\")) . \"\\n\";\necho check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\")) . \"\\n\";\n\
    echo check_dict_case(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) . \"\\\
    n\";", "\tif(empty($dict)) {\n\t\treturn false;\n\t}\n\t$upper = array_map('strtoupper',\
    \ array_keys($dict));\n\t$lower = array_map('strtolower', array_keys($dict));\n\
    \treturn $upper == array_keys($dict) || $lower == array_keys($dict);\n}\n\n/*\
    \ Given an array, return true if all keys are strings in lower \ncase or all keys\
    \ are strings in upper case, else return false.\nThe function should return false\
    \ is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"a\" =>\
    \ \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\" => \"\
    apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\t$lower = array_change_key_case($dict,\
    \ CASE_LOWER);\n\t$upper = array_change_key_case($dict, CASE_UPPER);\n\tif ($lower\
    \ == $dict || $upper == $dict) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n\
    /* Given an array, return true if all keys are strings in lower \ncase or all\
    \ keys are strings in upper case, else return false.\nThe function should return\
    \ false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\t$lower = true;\n\t$upper\
    \ = true;\n\tforeach ($dict as $key => $value) {\n\t\tif (ctype_lower($key)) {\n\
    \t\t\t$upper = false;\n\t\t} else {\n\t\t\t$lower = false;\n\t\t}\n\t}\n\treturn\
    \ $lower || $upper;\n}\n\n$dict = array(\"a\" => \"apple\", \"b\" => \"banana\"\
    );\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" => \"apple\",\
    \ \"A\" => \"banana\", \"B\" => \"banana\");\necho check_dict_case($dict) . \"\
    \\n\";\n$dict = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"\
    );\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\");\necho check_dict_case($dict) .\
    \ \"\\n\";\n$dict = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict)\
    \ . \"\\n\";", "\t$keys = array_keys($dict);\n\t$lower = array_map('strtolower',\
    \ $keys);\n\t$upper = array_map('strtoupper', $keys);\n\tif ($keys == $lower ||\
    \ $keys == $upper) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\
    \n/* Given an array, return the sum of all the elements in the array.\nExamples:\n\
    >>> sum_array(array(1, 2, 3))\n6\n>>> sum_array(array(1, 2, 3, 4, 5))\n15\n>>>\
    \ sum_array(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))\n55\n>>> sum_array(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))\n120\n>>> sum_array(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20))\n210*/",
  "\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\t\
    $lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper', $keys);\n\
    \tif ($keys == $lower || $keys == $upper) {\n\t\treturn true;\n\t}\n\treturn false;\n\
    }\n\n/* Given an array, return true if the array is sorted in ascending order,\
    \ else return false.\nThe function should return false is the given array is empty.\n\
    Examples:\n>>> check_sorted(array(1, 2, 3, 4, 5))\ntrue\n>>> check_sorted(array(1,\
    \ 2, 3, 4, 5, 6))\ntrue\n>>> check_sorted(array(1, 2, 3, 4, 5, 6, 7))\ntrue\n\
    >>> check_sorted(array(1, 2, 3, 4, 5, 6, 7, 8))\ntrue\n>>> check_sorted(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9))\ntrue\n>>> check_sorted(array(1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10))\ntrue\n>>> check_sorted(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11))\n\
    true\n>>> check_sorted(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))\ntrue\n>>>\
    \ check_sorted(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))\ntrue\n>>> check_sorted(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))\ntrue\n>>> check_sorted(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))\ntrue\n>>> check_sorted(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15", "\tif (empty($dict)) {\n\t\t\
    return false;\n\t}\n\t$upper = array_map('strtoupper', array_keys($dict));\n\t\
    $lower = array_map('strtolower', array_keys($dict));\n\tif ($upper == array_keys($dict)\
    \ || $lower == array_keys($dict)) {\n\t\treturn true;\n\t}\n\treturn false;\n\
    }\n\n$dict = array(\"a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict)\
    \ . PHP_EOL;\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\");\necho check_dict_case($dict) . PHP_EOL;\n$dict = array(\"a\" =>\
    \ \"apple\", 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict)\
    \ . PHP_EOL;\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\"\
    \ => \"Houston\");\necho check_dict_case($dict) . PHP_EOL;\n$dict = array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict) . PHP_EOL;\n\
    $dict = array();\necho check_dict_case($dict) . PHP_EOL;", "\tif (empty($dict))\
    \ {\n\t\treturn false;\n\t}\n\t$upper = 0;\n\t$lower = 0;\n\tforeach ($dict as\
    \ $key => $value) {\n\t\tif (ctype_upper($key)) {\n\t\t\t$upper++;\n\t\t} else\
    \ {\n\t\t\t$lower++;\n\t\t}\n\t}\n\tif ($upper == 0 || $lower == 0) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n$dict = array(\"a\" => \"apple\"\
    , \"b\" => \"banana\");\necho check_dict_case($dict);\necho \"\\n\";\n$dict =\
    \ array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\");\necho check_dict_case($dict);\n\
    echo \"\\n\";\n$dict = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"\
    apple\");\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"Name\"\
    \ => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\");\necho check_dict_case($dict);\n\
    echo \"\\n\";\n$dict = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\necho\
    \ check_dict_case($dict);\necho \"\\n\";", "\tif (empty($dict)) {\n\t\treturn\
    \ false;\n\t}\n\t$keys = array_keys($dict);\n\t$first_key = $keys[0];\n\t$is_upper\
    \ = ctype_upper($first_key);\n\t$is_lower = ctype_lower($first_key);\n\tforeach\
    \ ($keys as $key) {\n\t\tif ($is_upper && !ctype_upper($key)) {\n\t\t\treturn\
    \ false;\n\t\t}\n\t\tif ($is_lower && !ctype_lower($key)) {\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\treturn true;\n}\n\n$dict = array(\"a\" => \"apple\", \"b\" => \"\
    banana\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" => \"\
    apple\", \"A\" => \"banana\", \"B\" => \"banana\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"\
    );\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\");\necho check_dict_case($dict) .\
    \ \"\\n\";\n$dict = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict)\
    \ . \"\\n\";", "    $keys = array_keys($dict);\n    $first_key = $keys[0];\n \
    \   $first_key_type = gettype($first_key);\n    if ($first_key_type == \"string\"\
    ) {\n        $first_key_case = ctype_lower($first_key) ? \"lower\" : \"upper\"\
    ;\n        foreach ($keys as $key) {\n            if (gettype($key) != $first_key_type)\
    \ {\n                return false;\n            }\n            if ($first_key_case\
    \ == \"lower\" && !ctype_lower($key)) {\n                return false;\n     \
    \       }\n            if ($first_key_case == \"upper\" && !ctype_upper($key))\
    \ {\n                return false;\n            }\n        }\n        return true;\n\
    \    }\n    return false;\n}\n\n$dict = array(\"a\" => \"apple\", \"b\" => \"\
    banana\");\nvar_dump(check_dict_case($dict));\n$dict = array(\"a\" => \"apple\"\
    , \"A\" => \"banana\", \"B\" => \"banana\");\nvar_dump(check_dict_case($dict));\n\
    $dict = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\");\nvar_dump(check_dict_case($dict));\n\
    $dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"\
    );\nvar_dump(check_dict_case($dict));\n$dict = array(\"STATE\" => \"NC\", \"ZIP\"\
    \ => \"12345\");\nvar_dump(check_dict_case($dict));", "\tif (empty($dict)) {\n\
    \t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\t$lower = array_map('strtolower',\
    \ $keys);\n\t$upper = array_map('strtoupper', $keys);\n\tif ($keys == $lower ||\
    \ $keys == $upper) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/* Given an\
    \ array of integers, return the sum of all the integers that have an even index,\
    \ multiplied by the integer at the last index.\nIf the array is empty, return\
    \ 0.\nExamples:\n>>> sum_even_indexed_and_last(array(1, 2, 3, 4))\n14\n>>> sum_even_indexed_and_last(array(1,\
    \ 2, 3))\n3\n>>> sum_even_indexed_and_last(array(1, 2, 3, 4, 5))\n30\n>>> sum_even_indexed_and_last(array())\n\
    0*/", "\t$lower = 0;\n\t$upper = 0;\n\tforeach ($dict as $key => $value) {\n\t\
    \tif (ctype_lower($key)) {\n\t\t\t$lower++;\n\t\t} elseif (ctype_upper($key))\
    \ {\n\t\t\t$upper++;\n\t\t}\n\t}\n\tif ($lower == count($dict) || $upper == count($dict))\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n$dict = array(\"\
    a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict) . \"\\n\"\
    ;\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"\
    );\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" => \"apple\",\
    \ 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict) . \"\\n\"\
    ;\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"\
    );\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"STATE\" => \"NC\"\
    , \"ZIP\" => \"12345\");\necho check_dict_case($dict) . \"\\n\";", "\t$lower =\
    \ true;\n\t$upper = true;\n\tforeach ($dict as $key => $value) {\n\t\tif (!ctype_lower($key))\
    \ {\n\t\t\t$lower = false;\n\t\t}\n\t\tif (!ctype_upper($key)) {\n\t\t\t$upper\
    \ = false;\n\t\t}\n\t}\n\tif ($lower || $upper) {\n\t\treturn true;\n\t} else\
    \ {\n\t\treturn false;\n\t}\n}\n\n/* Given an array of integers, return true if\
    \ the array contains \na number that is a multiple of 7, else return false.\n\
    Examples:\n>>> check_for_7(array(1, 2, 3, 4, 5, 6, 7))\ntrue\n>>> check_for_7(array(1,\
    \ 2, 3, 4, 5, 6, 8))\nfalse\n>>> check_for_7(array(1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10))\ntrue\n>>> check_for_7(array(1, 2, 3, 4, 5, 6, 8, 9, 10))\nfalse\n>>> check_for_7(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20))\ntrue\n\
    >>> check_for_7(array(1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,\
    \ 18, 19, 20))\nfalse*/", "\t$lower = true;\n\t$upper = true;\n\tforeach ($dict\
    \ as $key => $value) {\n\t\tif (ctype_lower($key)) {\n\t\t\t$upper = false;\n\t\
    \t} else {\n\t\t\t$lower = false;\n\t\t}\n\t}\n\treturn $lower || $upper;\n}\n\
    \n/* Given an array, return true if all keys are strings in lower \ncase or all\
    \ keys are strings in upper case, else return false.\nThe function should return\
    \ false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\t$lower = true;\n\t$upper\
    \ = true;\n\tforeach ($dict as $key => $value) {\n\t\tif (!ctype_lower($key))\
    \ {\n\t\t\t$lower = false;\n\t\t}\n\t\tif (!ctype_upper($key)) {\n\t\t\t$upper\
    \ = false;\n\t\t}\n\t}\n\treturn $lower || $upper;\n}\n", "\tif (empty($dict))\
    \ {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\t$lower = array_map('strtolower',\
    \ $keys);\n\t$upper = array_map('strtoupper', $keys);\n\tif ($keys == $lower ||\
    \ $keys == $upper) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/* Given an\
    \ array, return true if all keys are strings in lower \ncase or all keys are strings\
    \ in upper case, else return false.\nThe function should return false is the given\
    \ array is empty.\nExamples:\n>>> check_dict_case(array(\"a\" => \"apple\", \"\
    b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\" => \"apple\", \"A\"\
    \ => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\tif(empty($dict)) return\
    \ false;\n\t$keys = array_keys($dict);\n\t$upper = array_map('strtoupper', $keys);\n\
    \t$lower = array_map('strtolower', $keys);\n\tif($keys == $upper || $keys == $lower)\
    \ return true;\n\treturn false;\n}\n\n/* Given an array, return true if all keys\
    \ are strings in lower \ncase or all keys are strings in upper case, else return\
    \ false.\nThe function should return false is the given array is empty.\nExamples:\n\
    >>> check_dict_case(array(\"a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>>\
    \ check_dict_case(array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"\
    ))\nfalse\n>>> check_dict_case(array(\"a\" => \"apple\", 8 => \"banana\", \"a\"\
    \ => \"apple\"))\nfalse\n>>> check_dict_case(array(\"Name\" => \"John\", \"Age\"\
    \ => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\tif(empty($dict)) {\n\t\treturn\
    \ false;\n\t}\n\t$lower = true;\n\t$upper = true;\n\tforeach($dict as $key =>\
    \ $value) {\n\t\tif(!ctype_lower($key)) {\n\t\t\t$lower = false;\n\t\t}\n\t\t\
    if(!ctype_upper($key)) {\n\t\t\t$upper = false;\n\t\t}\n\t}\n\tif($lower || $upper)\
    \ {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n$dict = array(\"a\" => \"apple\"\
    , \"b\" => \"banana\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"\
    a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"\
    );\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\");\necho check_dict_case($dict) .\
    \ \"\\n\";\n$dict = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict)\
    \ . \"\\n\";", "\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\tif ($keys == $lower || $keys == $upper) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n\n/* Given an array of integers, return true if the array\
    \ contains \na number that is a multiple of 7, else return false.\nExamples:\n\
    >>> check_multiples_of_7(array(14, 21, 49, 0, -7))\ntrue\n>>> check_multiples_of_7(array(14,\
    \ 21, 49, 0, -6))\nfalse\n>>> check_multiples_of_7(array(14, 21, 49, 0, -8))\n\
    false\n>>> check_multiples_of_7(array(14, 21, 49, 0, -14))\ntrue\n>>> check_multiples_of_7(array(14,\
    \ 21, 49, 0, -21))\ntrue\n>>> check_multiples_of_7(array(14, 21, 49, 0, -28))\n\
    true\n>>> check_multiples_of_7(array(14, 21, 49, 0, -35))\ntrue\n>>> check_multiples_of_7(array(14,\
    \ 21, 49, 0, -42))\ntrue\n>>> check_multiples_of_7(array(14, 21, 49, 0, -49))\n\
    true\n>>> check_multiples_of_7(array(14, 21, 49, 0, -56))\ntrue\n>>> check_multiples_of_7(array(14,\
    \ 21, 49, 0, -63))\ntrue\n>>> check_multiples_of_7(array(14, 21, 49, 0, -70))\n\
    true\n>>> check_multiples_of_7(array(14, 21, 49, 0, -77))\ntrue\n>>> check_multiples_of_7(array(14,\
    \ 21, 49, 0, -84))\ntrue\n>>> check_multiples_of_7(array(14, 21, 49, 0", "\t$keys\
    \ = array_keys($dict);\n\t$first_key = $keys[0];\n\t$first_key_is_lower = ctype_lower($first_key);\n\
    \t$first_key_is_upper = ctype_upper($first_key);\n\tif ($first_key_is_lower ||\
    \ $first_key_is_upper) {\n\t\tforeach ($keys as $key) {\n\t\t\tif ($first_key_is_lower\
    \ && !ctype_lower($key)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif ($first_key_is_upper\
    \ && !ctype_upper($key)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn\
    \ true;\n\t}\n\treturn false;\n}\n\n$dict = array(\"a\" => \"apple\", \"b\" =>\
    \ \"banana\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" =>\
    \ \"apple\", \"A\" => \"banana\", \"B\" => \"banana\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"\
    );\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\");\necho check_dict_case($dict) .\
    \ \"\\n\";\n$dict = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict)\
    \ . \"\\n\";", "\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$lower = array_change_key_case($dict,\
    \ CASE_LOWER);\n\t$upper = array_change_key_case($dict, CASE_UPPER);\n\tif ($lower\
    \ == $dict || $upper == $dict) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n\
    /* Given an array, return true if all keys are strings in lower \ncase or all\
    \ keys are strings in upper case, else return false.\nThe function should return\
    \ false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\tif (empty($dict)) {\n\t\
    \treturn false;\n\t}\n\t$keys = array_keys($dict);\n\t$lower = array_map('strtolower',\
    \ $keys);\n\t$upper = array_map('strtoupper', $keys);\n\tif ($keys == $lower ||\
    \ $keys == $upper) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\necho check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\")) . \"\\n\";\necho check_dict_case(array(\"\
    a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\")) . \"\\n\";\necho\
    \ check_dict_case(array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"\
    )) . \"\\n\";\necho check_dict_case(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) . \"\\n\";\necho check_dict_case(array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\")) . \"\\n\";", "\tif (empty($dict)) {\n\t\t\
    return false;\n\t}\n\t$keys = array_keys($dict);\n\t$lower = array_map('strtolower',\
    \ $keys);\n\t$upper = array_map('strtoupper', $keys);\n\tif ($keys == $lower ||\
    \ $keys == $upper) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n$dict = array(\"\
    a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict);\necho \"\
    \\n\";\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"\
    );\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"a\" => \"apple\"\
    , 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict);\necho \"\
    \\n\";\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\");\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict);\necho \"\\n\"\
    ;", "\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$lower = true;\n\t$upper\
    \ = true;\n\tforeach ($dict as $key => $value) {\n\t\tif (ctype_lower($key)) {\n\
    \t\t\t$upper = false;\n\t\t} else {\n\t\t\t$lower = false;\n\t\t}\n\t}\n\treturn\
    \ $lower || $upper;\n}\n\necho check_dict_case(array(\"a\" => \"apple\", \"b\"\
    \ => \"banana\")) . \"\\n\";\necho check_dict_case(array(\"a\" => \"apple\", \"\
    A\" => \"banana\", \"B\" => \"banana\")) . \"\\n\";\necho check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\")) . \"\\n\";\necho check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\")) . \"\\n\";\n\
    echo check_dict_case(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) . \"\\\
    n\";", "\t$lower = true;\n\t$upper = true;\n\tforeach ($dict as $key => $value)\
    \ {\n\t\tif (ctype_lower($key)) {\n\t\t\t$upper = false;\n\t\t} else {\n\t\t\t\
    $lower = false;\n\t\t}\n\t}\n\treturn $lower || $upper;\n}\n\n/* Given an array,\
    \ return true if all keys are strings in lower \ncase or all keys are strings\
    \ in upper case, else return false.\nThe function should return false is the given\
    \ array is empty.\nExamples:\n>>> check_dict_case(array(\"a\" => \"apple\", \"\
    b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\" => \"apple\", \"A\"\
    \ => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\t$keys = array_keys($dict);\n\
    \t$is_upper = ctype_upper($keys[0]);\n\t$is_lower = ctype_lower($keys[0]);\n\t\
    foreach ($keys as $key) {\n\t\tif ($is_upper && !ctype_upper($key)) {\n\t\t\t\
    return false;\n\t\t}\n\t\tif ($is_lower && !ctype_lower($key)) {\n\t\t\treturn\
    \ false;\n\t\t}\n\t}\n\treturn true;\n}\n\n/* Given an array, return true if all\
    \ values are strings in lower \ncase or all values are strings in upper case,\
    \ else return false.\nThe function should return false is the given array is empty.\n\
    Examples:\n>>> check_dict_case(array(\"a\" => \"apple\", \"b\" => \"banana\"))\n\
    true\n>>> check_dict_case(array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\"\
    \ => \"banana\"))\nfalse\n>>> check_dict_case(array(\"a\" => \"apple\", 8 => \"\
    banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"Name\" => \"\
    John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "    if (empty($dict)) {\n\
    \        return false;\n    }\n    $keys = array_keys($dict);\n    $first_key\
    \ = $keys[0];\n    $first_key_case = strtolower($first_key) === $first_key ? \"\
    lower\" : \"upper\";\n    foreach ($keys as $key) {\n        $key_case = strtolower($key)\
    \ === $key ? \"lower\" : \"upper\";\n        if ($key_case !== $first_key_case)\
    \ {\n            return false;\n        }\n    }\n    return true;\n}\n\n/* Given\
    \ an array of integers, return true if the array contains \na duplicate number,\
    \ else return false.\nExamples:\n>>> check_duplicate(array(1, 2, 3, 4, 5))\nfalse\n\
    >>> check_duplicate(array(1, 2, 3, 4, 5, 1))\ntrue\n>>> check_duplicate(array(1,\
    \ 2, 3, 4, 5, 5))\ntrue\n>>> check_duplicate(array(1, 2, 3, 4, 5, 5, 5))\ntrue\n\
    >>> check_duplicate(array(1, 2, 3, 4, 5, 5, 5, 5))\ntrue\n>>> check_duplicate(array(1,\
    \ 2, 3, 4, 5, 5, 5, 5, 5))\ntrue\n>>> check_duplicate(array(1, 2, 3, 4, 5, 5,\
    \ 5, 5, 5, 5))\ntrue\n>>> check_duplicate(array(1, 2, 3, 4, 5, 5, 5, 5, 5, 5,\
    \ 5))\ntrue\n>>> check_duplicate(array(1, 2, 3, 4, 5, 5, 5, 5, 5, 5, 5, 5))\n\
    true\n>>> check_duplicate(array(1, 2, 3, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5))\ntrue\n\
    >>> check_duplicate(array(1, 2, 3, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5))\ntrue\n>>>\
    \ check_duplicate(", "\tif (count($dict) == 0) {\n\t\treturn false;\n\t}\n\t$lower\
    \ = true;\n\t$upper = true;\n\tforeach ($dict as $key => $value) {\n\t\tif (!ctype_lower($key))\
    \ {\n\t\t\t$lower = false;\n\t\t}\n\t\tif (!ctype_upper($key)) {\n\t\t\t$upper\
    \ = false;\n\t\t}\n\t}\n\treturn $lower || $upper;\n}\n\n$dict = array(\"a\" =>\
    \ \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict);\necho \"\\n\"\
    ;\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"\
    );\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"a\" => \"apple\"\
    , 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict);\necho \"\
    \\n\";\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\");\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict);\necho \"\\n\"\
    ;", "\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$upper = array_map('strtoupper', $keys);\n\t$lower = array_map('strtolower',\
    \ $keys);\n\tif ($keys == $upper || $keys == $lower) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n\n/* Given an array, return true if all keys are strings in\
    \ lower \ncase or all keys are strings in upper case, else return false.\nThe\
    \ function should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\t$lower = true;\n\t$upper\
    \ = true;\n\tforeach ($dict as $key => $value) {\n\t\tif (ctype_lower($key)) {\n\
    \t\t\t$upper = false;\n\t\t} else {\n\t\t\t$lower = false;\n\t\t}\n\t}\n\treturn\
    \ $lower || $upper;\n}\n\n$dict = array(\"a\" => \"apple\", \"b\" => \"banana\"\
    );\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" => \"apple\",\
    \ \"A\" => \"banana\", \"B\" => \"banana\");\necho check_dict_case($dict) . \"\
    \\n\";\n$dict = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"\
    );\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\");\necho check_dict_case($dict) .\
    \ \"\\n\";\n$dict = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict)\
    \ . \"\\n\";", "\tif(empty($dict)) return false;\n\t$keys = array_keys($dict);\n\
    \t$first_key = $keys[0];\n\t$is_upper = ctype_upper($first_key);\n\tforeach($keys\
    \ as $key) {\n\t\tif($is_upper) {\n\t\t\tif(!ctype_upper($key)) return false;\n\
    \t\t} else {\n\t\t\tif(!ctype_lower($key)) return false;\n\t\t}\n\t}\n\treturn\
    \ true;\n}\n\n$dict = array(\"a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" =>\
    \ \"apple\", 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\"\
    \ => \"Houston\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict) . \"\\n\";",
  "\t$keys = array_keys($dict);\n\t$lower = array_map('strtolower', $keys);\n\t$upper\
    \ = array_map('strtoupper', $keys);\n\tif ($keys == $lower || $keys == $upper)\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/* Given an array,\
    \ return true if all values are strings, else return false.\nThe function should\
    \ return false is the given array is empty.\nExamples:\n>>> check_dict_values(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_values(array(\"\
    a\" => \"apple\", \"b\" => \"banana\", \"c\" => 1))\nfalse\n>>> check_dict_values(array(\"\
    a\" => \"apple\", \"b\" => \"banana\", \"c\" => \"1\"))\ntrue\n>>> check_dict_values(array(\"\
    a\" => \"apple\", \"b\" => \"banana\", \"c\" => \"1\", \"d\" => 1))\nfalse\n>>>\
    \ check_dict_values(array(\"a\" => \"apple\", \"b\" => \"banana\", \"c\" => \"\
    1\", \"d\" => \"1\"))\ntrue\n>>> check_dict_values(array(\"a\" => \"apple\", \"\
    b\" => \"banana\", \"c\" => \"1\", \"d\" => \"1\", \"e\" => 1))\nfalse*/", "\t\
    $upper = 0;\n\t$lower = 0;\n\tforeach ($dict as $key => $value) {\n\t\tif (ctype_upper($key))\
    \ {\n\t\t\t$upper++;\n\t\t} elseif (ctype_lower($key)) {\n\t\t\t$lower++;\n\t\t\
    }\n\t}\n\tif ($upper == count($dict) || $lower == count($dict)) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/* Given an array of strings,\
    \ return a new array containing the first N strings. \nIf N is greater than or\
    \ equal to the length of the array, then return the original array.\nExamples:\n\
    >>> first_n(array(\"a\", \"b\", \"c\", \"d\"), 2)\narray(\"a\", \"b\")\n>>> first_n(array(\"\
    a\", \"b\", \"c\", \"d\"), 4)\narray(\"a\", \"b\", \"c\", \"d\")\n>>> first_n(array(\"\
    a\", \"b\", \"c\", \"d\"), 10)\narray(\"a\", \"b\", \"c\", \"d\")\n>>> first_n(array(\"\
    a\", \"b\", \"c\", \"d\"), 0)\narray()*/", "\t$lower = array_change_key_case($dict,\
    \ CASE_LOWER);\n\t$upper = array_change_key_case($dict, CASE_UPPER);\n\tif ($lower\
    \ == $dict || $upper == $dict) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\
    $dict = array(\"a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict);\n\
    echo \"<br>\";\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\");\necho check_dict_case($dict);\necho \"<br>\";\n$dict = array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict);\n\
    echo \"<br>\";\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\"\
    \ => \"Houston\");\necho check_dict_case($dict);\necho \"<br>\";\n$dict = array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict);\necho\
    \ \"<br>\";", "\t$lower = true;\n\t$upper = true;\n\tforeach ($dict as $key =>\
    \ $value) {\n\t\tif (strtolower($key) != $key) {\n\t\t\t$lower = false;\n\t\t\
    }\n\t\tif (strtoupper($key) != $key) {\n\t\t\t$upper = false;\n\t\t}\n\t}\n\t\
    if ($lower || $upper) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/* Given\
    \ an array, return true if all keys are strings in lower \ncase or all keys are\
    \ strings in upper case, else return false.\nThe function should return false\
    \ is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"a\" =>\
    \ \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\" => \"\
    apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\t$keys = array_keys($dict);\n\
    \t$first = $keys[0];\n\t$type = gettype($first);\n\tif ($type == \"string\") {\n\
    \t\tif (ctype_lower($first)) {\n\t\t\tforeach ($keys as $key) {\n\t\t\t\tif (!ctype_lower($key))\
    \ {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (ctype_upper($first))\
    \ {\n\t\t\tforeach ($keys as $key) {\n\t\t\t\tif (!ctype_upper($key)) {\n\t\t\t\
    \t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\treturn false;\n\t\t\
    }\n\t} else {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\n/* Given an array,\
    \ return the number of elements that are \nequal to the given value.\nExamples:\n\
    >>> count_value(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 5)\n1\n>>> count_value(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10), 10)\n1\n>>> count_value(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10), 11)\n0\n>>> count_value(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),\
    \ 1)\n1\n>>> count_value(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 2)\n1\n>>> count_value(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10), 3)\n1\n>>> count_value(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10), 4)\n1\n>>> count_value(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 6)\n\
    1\n>>> count_value(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),", "\tif (empty($dict))\
    \ {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\t$lower = array_map('strtolower', $keys);\n\tif ($keys == $upper ||\
    \ $keys == $lower) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n$dict = array(\"\
    a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict) . \"\\n\"\
    ;\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"\
    );\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" => \"apple\",\
    \ 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict) . \"\\n\"\
    ;\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"\
    );\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"STATE\" => \"NC\"\
    , \"ZIP\" => \"12345\");\necho check_dict_case($dict) . \"\\n\";", "\tif (empty($dict))\
    \ {\n\t\treturn false;\n\t}\n\t$lower = array_keys($dict);\n\t$upper = array_keys($dict);\n\
    \tforeach ($lower as $key => $value) {\n\t\t$lower[$key] = strtolower($value);\n\
    \t}\n\tforeach ($upper as $key => $value) {\n\t\t$upper[$key] = strtoupper($value);\n\
    \t}\n\tif ($lower == array_keys($dict) || $upper == array_keys($dict)) {\n\t\t\
    return true;\n\t}\n\treturn false;\n}\n\n/* Given an array, return true if all\
    \ values are strings, else return false.\nThe function should return false is\
    \ the given array is empty.\nExamples:\n>>> check_dict_values(array(\"a\" => \"\
    apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_values(array(\"a\" => \"\
    apple\", \"b\" => \"banana\", \"c\" => 8))\nfalse\n>>> check_dict_values(array(\"\
    a\" => \"apple\", \"b\" => \"banana\", \"c\" => \"8\"))\ntrue\n>>> check_dict_values(array(\"\
    a\" => \"apple\", \"b\" => \"banana\", \"c\" => \"8\", \"d\" => 8))\nfalse\n>>>\
    \ check_dict_values(array(\"a\" => \"apple\", \"b\" => \"banana\", \"c\" => \"\
    8\", \"d\" => \"8\"))\ntrue\n>>> check_dict_values(array(\"a\" => \"apple\", \"\
    b\" => \"banana\", \"c\" => \"8\", \"d\" => \"8\", \"e\" => 8))\nfalse\n>>> check_dict_values(array(\"\
    a\" => \"apple\", \"b\" => \"banana\", \"c\" => \"8\", \"d\" => \"8\", \"e\" =>\
    \ \"8\"))\ntrue\n>>> check_dict_values(array(\"a\" => \"apple\", \"b\" => \"banana\"\
    , \"c\" => \"8\", \"d\" => \"8\", \"e\" => \"8\", \"f\" => 8))\nfalse\n>>> check_dict_values(array(\"\
    a\" => \"", "\t$keys = array_keys($dict);\n\t$first_key = $keys[0];\n\tif (is_string($first_key))\
    \ {\n\t\t$is_lower = ctype_lower($first_key);\n\t\tforeach ($keys as $key) {\n\
    \t\t\tif (is_string($key)) {\n\t\t\t\tif ($is_lower && !ctype_lower($key)) {\n\
    \t\t\t\t\treturn false;\n\t\t\t\t} else if (!$is_lower && !ctype_upper($key))\
    \ {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn false;\n\
    \t\t\t}\n\t\t}\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n$dict\
    \ = array(\"a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" =>\
    \ \"apple\", 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\"\
    \ => \"Houston\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict) . \"\\n\";",
  "\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\t\
    $lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper', $keys);\n\
    \tif ($keys === $lower || $keys === $upper) {\n\t\treturn true;\n\t}\n\treturn\
    \ false;\n}\n\n/* Given an array of integers, return true if the array contains\
    \ \na 5 immediately followed by a 7.\nExamples:\n>>> check_57(array(1, 2, 3, 4,\
    \ 5, 6, 7))\nfalse\n>>> check_57(array(1, 2, 3, 4, 5, 7))\ntrue\n>>> check_57(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9))\nfalse\n>>> check_57(array(1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 5, 7))\ntrue\n>>> check_57(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 5, 7, 9))\nfalse\n\
    >>> check_57(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 5, 7, 9, 5, 7))\ntrue*/", "    if\
    \ (empty($dict)) {\n        return false;\n    }\n    $lower = array_keys($dict);\n\
    \    $upper = array_keys($dict);\n    $lower = array_map('strtolower', $lower);\n\
    \    $upper = array_map('strtoupper', $upper);\n    if ($lower == array_keys($dict)\
    \ || $upper == array_keys($dict)) {\n        return true;\n    }\n    return false;\n\
    }\n\n/* Given an array, return true if all keys are strings in lower \ncase or\
    \ all keys are strings in upper case, else return false.\nThe function should\
    \ return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\tif (empty($dict)) {\n\t\
    \treturn false;\n\t}\n\t$lower = array_change_key_case($dict, CASE_LOWER);\n\t\
    $upper = array_change_key_case($dict, CASE_UPPER);\n\tif ($lower == $dict || $upper\
    \ == $dict) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n$dict = array(\"a\"\
    \ => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict);\necho \"\\\
    n\";\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"\
    );\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"a\" => \"apple\"\
    , 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict);\necho \"\
    \\n\";\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\");\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict);\necho \"\\n\"\
    ;", "    if (empty($dict)) {\n        return false;\n    }\n    $keys = array_keys($dict);\n\
    \    $first_key = $keys[0];\n    if (is_string($first_key)) {\n        $is_lower\
    \ = ctype_lower($first_key);\n        $is_upper = ctype_upper($first_key);\n \
    \       foreach ($keys as $key) {\n            if (is_string($key)) {\n      \
    \          if ($is_lower && !ctype_lower($key)) {\n                    return\
    \ false;\n                }\n                if ($is_upper && !ctype_upper($key))\
    \ {\n                    return false;\n                }\n            } else\
    \ {\n                return false;\n            }\n        }\n        return true;\n\
    \    } else {\n        return false;\n    }\n}\n\n/* Given an array, return true\
    \ if all values are strings in lower \ncase or all values are strings in upper\
    \ case, else return false.\nThe function should return false is the given array\
    \ is empty.\nExamples:\n>>> check_dict_case(array(\"a\" => \"apple\", \"b\" =>\
    \ \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\" => \"apple\", \"A\" => \"\
    banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"a\" => \"\
    apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\tif (empty($dict)) {\n\t\
    \treturn false;\n\t}\n\t$keys = array_keys($dict);\n\t$lower = array_map('strtolower',\
    \ $keys);\n\t$upper = array_map('strtoupper', $keys);\n\treturn ($keys == $lower\
    \ || $keys == $upper);\n}\n\n/* Given an array of strings, return an array of\
    \ strings with all \nthe strings in the array that are anagrams of each other.\n\
    Examples:\n>>> find_anagrams(array(\"cat\", \"dog\", \"tac\", \"god\", \"act\"\
    ))\narray(\"cat\", \"tac\", \"act\")\n>>> find_anagrams(array(\"cat\", \"dog\"\
    , \"tac\", \"god\", \"act\", \"mouse\"))\narray(\"cat\", \"tac\", \"act\")\n>>>\
    \ find_anagrams(array(\"cat\", \"dog\", \"tac\", \"god\", \"act\", \"mouse\",\
    \ \"act\"))\narray(\"cat\", \"tac\", \"act\", \"act\")\n>>> find_anagrams(array(\"\
    cat\", \"dog\", \"tac\", \"god\", \"act\", \"mouse\", \"act\", \"act\"))\narray(\"\
    cat\", \"tac\", \"act\", \"act\", \"act\")*/", "\tif (empty($dict)) {\n\t\treturn\
    \ false;\n\t}\n\t$keys = array_keys($dict);\n\t$lower = array_map('strtolower',\
    \ $keys);\n\t$upper = array_map('strtoupper', $keys);\n\tif ($keys == $lower ||\
    \ $keys == $upper) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/* Given an\
    \ array, return true if all keys are strings in lower \ncase or all keys are strings\
    \ in upper case, else return false.\nThe function should return false is the given\
    \ array is empty.\nExamples:\n>>> check_dict_case(array(\"a\" => \"apple\", \"\
    b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\" => \"apple\", \"A\"\
    \ => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\tif (empty($dict)) {\n\t\
    \treturn false;\n\t}\n\t$lower_keys = array_keys(array_change_key_case($dict,\
    \ CASE_LOWER));\n\t$upper_keys = array_keys(array_change_key_case($dict, CASE_UPPER));\n\
    \tif ($lower_keys == array_keys($dict) || $upper_keys == array_keys($dict)) {\n\
    \t\treturn true;\n\t}\n\treturn false;\n}\n\n/* Given an array of strings, return\
    \ an array of strings with the first \nletter of each string capitalized.\nExamples:\n\
    >>> capitalize_first_letter(array(\"apple\", \"banana\", \"orange\"))\narray(\"\
    Apple\", \"Banana\", \"Orange\")\n>>> capitalize_first_letter(array(\"APPLE\"\
    , \"BANANA\", \"ORANGE\"))\narray(\"Apple\", \"Banana\", \"Orange\")\n>>> capitalize_first_letter(array(\"\
    aPPLE\", \"bANANA\", \"oRANGE\"))\narray(\"Apple\", \"Banana\", \"Orange\")\n\
    >>> capitalize_first_letter(array(\"apple\", \"banana\", \"orange\", \"APPLE\"\
    , \"BANANA\", \"ORANGE\"))\narray(\"Apple\", \"Banana\", \"Orange\", \"Apple\"\
    , \"Banana\", \"Orange\")\n>>> capitalize_first_letter(array(\"APPLE\", \"BANANA\"\
    , \"ORANGE\", \"apple\", \"banana\", \"orange\"))\narray(\"Apple\", \"Banana\"\
    , \"Orange\", \"Apple\", \"Banana\", \"Orange\")\n>>> capitalize_first_letter(array(\"\
    aPPLE\", \"bANANA\", \"oRANGE\", \"apple\", \"banana\", \"orange\"))\narray(\"\
    Apple\", \"Banana\", \"Orange\", \"Apple\", \"Banana\", \"Orange\")*/", "\tif(empty($dict))\
    \ {\n\t\treturn false;\n\t}\n\t$lower = array_keys($dict);\n\t$upper = array_keys($dict);\n\
    \tforeach($lower as $key => $value) {\n\t\t$lower[$key] = strtolower($value);\n\
    \t}\n\tforeach($upper as $key => $value) {\n\t\t$upper[$key] = strtoupper($value);\n\
    \t}\n\tif($lower == array_keys($dict) || $upper == array_keys($dict)) {\n\t\t\
    return true;\n\t}\n\treturn false;\n}\n\n/* Given an array, return true if all\
    \ keys are strings in lower \ncase or all keys are strings in upper case, else\
    \ return false.\nThe function should return false is the given array is empty.\n\
    Examples:\n>>> check_dict_case(array(\"a\" => \"apple\", \"b\" => \"banana\"))\n\
    true\n>>> check_dict_case(array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\"\
    \ => \"banana\"))\nfalse\n>>> check_dict_case(array(\"a\" => \"apple\", 8 => \"\
    banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"Name\" => \"\
    John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\t$lower = [];\n\t$upper\
    \ = [];\n\tforeach ($dict as $key => $value) {\n\t\tif (is_string($key)) {\n\t\
    \t\tif (strtolower($key) == $key) {\n\t\t\t\t$lower[] = $key;\n\t\t\t} elseif\
    \ (strtoupper($key) == $key) {\n\t\t\t\t$upper[] = $key;\n\t\t\t}\n\t\t}\n\t}\n\
    \tif (count($lower) == count($dict) || count($upper) == count($dict)) {\n\t\t\
    return true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/* Given an array of integers,\
    \ return true if all the integers are \neven or all the integers are odd, else\
    \ return false.\nExamples:\n>>> check_even_odd(array(2, 4, 6, 8))\ntrue\n>>> check_even_odd(array(2,\
    \ 4, 6, 7))\nfalse\n>>> check_even_odd(array(2, 4, 6, 8, 7))\nfalse\n>>> check_even_odd(array(1,\
    \ 3, 5, 7))\ntrue\n>>> check_even_odd(array(1, 3, 5, 7, 9))\ntrue\n>>> check_even_odd(array(1,\
    \ 3, 5, 7, 8))\nfalse*/", "    if (empty($dict)) {\n        return false;\n  \
    \  }\n    $lower = array_change_key_case($dict, CASE_LOWER);\n    $upper = array_change_key_case($dict,\
    \ CASE_UPPER);\n    if ($lower == $dict || $upper == $dict) {\n        return\
    \ true;\n    }\n    return false;\n}\n\n$dict1 = array(\"a\" => \"apple\", \"\
    b\" => \"banana\");\n$dict2 = array(\"a\" => \"apple\", \"A\" => \"banana\", \"\
    B\" => \"banana\");\n$dict3 = array(\"a\" => \"apple\", 8 => \"banana\", \"a\"\
    \ => \"apple\");\n$dict4 = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\"\
    \ => \"Houston\");\n$dict5 = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\n\
    \necho check_dict_case($dict1) . \"\\n\";\necho check_dict_case($dict2) . \"\\\
    n\";\necho check_dict_case($dict3) . \"\\n\";\necho check_dict_case($dict4) .\
    \ \"\\n\";\necho check_dict_case($dict5) . \"\\n\";", "\t$lower = array_map('strtolower',\
    \ array_keys($dict));\n\t$upper = array_map('strtoupper', array_keys($dict));\n\
    \tif ($lower == array_keys($dict) || $upper == array_keys($dict)) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/* Given an array, return the\
    \ number of elements that are \nstrings in lower case or strings in upper case.\n\
    Examples:\n>>> count_dict_case(array(\"a\" => \"apple\", \"b\" => \"banana\"))\n\
    2\n>>> count_dict_case(array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\"))\n0\n>>> count_dict_case(array(\"a\" => \"apple\", 8 => \"banana\"\
    , \"a\" => \"apple\"))\n1\n>>> count_dict_case(array(\"Name\" => \"John\", \"\
    Age\" => \"36\", \"City\" => \"Houston\"))\n1\n>>> count_dict_case(array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\"))\n2*/", "\t$lower = 0;\n\t$upper = 0;\n\tforeach\
    \ ($dict as $key => $value) {\n\t\tif (ctype_lower($key)) {\n\t\t\t$lower++;\n\
    \t\t} elseif (ctype_upper($key)) {\n\t\t\t$upper++;\n\t\t}\n\t}\n\tif ($lower\
    \ == count($dict) || $upper == count($dict)) {\n\t\treturn true;\n\t} else {\n\
    \t\treturn false;\n\t}\n}\n\n/* Given an array, return true if all keys are strings\
    \ in lower \ncase or all keys are strings in upper case, else return false.\n\
    The function should return false is the given array is empty.\nExamples:\n>>>\
    \ check_dict_case(array(\"a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "    $lower = array_map('strtolower',\
    \ array_keys($dict));\n    $upper = array_map('strtoupper', array_keys($dict));\n\
    \    if ($lower == array_keys($dict) || $upper == array_keys($dict)) {\n     \
    \   return true;\n    } else {\n        return false;\n    }\n}\n\n/* Given an\
    \ array, return true if all keys are strings in lower \ncase or all keys are strings\
    \ in upper case, else return false.\nThe function should return false is the given\
    \ array is empty.\nExamples:\n>>> check_dict_case(array(\"a\" => \"apple\", \"\
    b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\" => \"apple\", \"A\"\
    \ => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\t$keys = array_keys($dict);\n\
    \t$all_lower = true;\n\t$all_upper = true;\n\tforeach ($keys as $key) {\n\t\t\
    if (ctype_lower($key)) {\n\t\t\t$all_upper = false;\n\t\t} else {\n\t\t\t$all_lower\
    \ = false;\n\t\t}\n\t}\n\treturn $all_lower || $all_upper;\n}\n\n/* Given an array\
    \ of strings, return the longest string in the array.\nExamples:\n>>> longest_string(array(\"\
    a\", \"aa\", \"aaa\"))\n\"aaa\"\n>>> longest_string(array(\"a\", \"aa\", \"aaa\"\
    , \"aaaa\"))\n\"aaaa\"\n>>> longest_string(array(\"a\", \"aa\", \"aaa\", \"aaaa\"\
    , \"aaaaa\"))\n\"aaaaa\"\n>>> longest_string(array(\"a\", \"aa\", \"aaa\", \"\
    aaaa\", \"aaaaa\", \"aaaaaa\"))\n\"aaaaaa\"\n>>> longest_string(array(\"a\", \"\
    aa\", \"aaa\", \"aaaa\", \"aaaaa\", \"aaaaaa\", \"aaaaaaa\"))\n\"aaaaaaa\"\n>>>\
    \ longest_string(array(\"a\", \"aa\", \"aaa\", \"aaaa\", \"aaaaa\", \"aaaaaa\"\
    , \"aaaaaaa\", \"aaaaaaaa\"))\n\"aaaaaaaa\"\n>>> longest_string(array(\"a\", \"\
    aa\", \"aaa\", \"aaaa\", \"aaaaa\", \"aaaaaa\", \"aaaaaaa\", \"aaaaaaaa\", \"\
    aaaaaaaaa\"))\n\"aaaaaaaaa\"\n>>> longest_string(array(\"a\", \"aa\", \"aaa\"\
    , \"aaaa\", \"aaaaa\", \"aaaaaa\", \"aaaaaaa\", \"aaaaaaaa\", \"aaaaaaaaa\", \"\
    aaaaaaaaaa\"))\n\"aaaaaaaaaa\"\n>>> longest_string(array(\"a\", \"aa\", \"aaa\"\
    , \"aaaa\", \"aaaaa\", \"aaaaaa\", \"aaaaaaa\", \"aaaaaaaa\", \"aaaaaaaaa\", \"\
    aaaaaaaaaa\", \"aaaaaaaaaaa\"))\n\"aaaaaaaaaaa\"\n>>> longest_string(array(\"\
    a\", \"aa\", \"aaa\", \"aaaa\", \"aaaaa\", \"aaaaaa\", \"aaaaaaa\", \"aaaaaaaa\"\
    , \"aaaaaaaaa\", \"aaaaaaaaaa\", \"aaaaaaaaaaa\", \"aaaaaaaaaaaa\"))\n\"", "\t\
    $keys = array_keys($dict);\n\t$is_upper = ctype_upper($keys[0]);\n\tforeach ($keys\
    \ as $key) {\n\t\tif ($is_upper != ctype_upper($key)) {\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\treturn true;\n}\n\n/* Given an array, return true if all keys are\
    \ strings in lower \ncase or all keys are strings in upper case, else return false.\n\
    The function should return false is the given array is empty.\nExamples:\n>>>\
    \ check_dict_case(array(\"a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "    $lower = true;\n    $upper\
    \ = true;\n    foreach ($dict as $key => $value) {\n        if (ctype_lower($key))\
    \ {\n            $upper = false;\n        } elseif (ctype_upper($key)) {\n   \
    \         $lower = false;\n        } else {\n            return false;\n     \
    \   }\n    }\n    return $lower || $upper;\n}\n\n/* Given an array, return true\
    \ if all keys are strings in lower \ncase or all keys are strings in upper case,\
    \ else return false.\nThe function should return false is the given array is empty.\n\
    Examples:\n>>> check_dict_case(array(\"a\" => \"apple\", \"b\" => \"banana\"))\n\
    true\n>>> check_dict_case(array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\"\
    \ => \"banana\"))\nfalse\n>>> check_dict_case(array(\"a\" => \"apple\", 8 => \"\
    banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"Name\" => \"\
    John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\t$keys = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\tif ($keys == $lower || $keys == $upper) {\n\t\treturn true;\n\t}\
    \ else {\n\t\treturn false;\n\t}\n}\n\n/* Given an array of integers, return true\
    \ if the array contains \na 5 immediately followed by a 7.\nExamples:\n>>> check_57(array(1,\
    \ 2, 3, 4, 5, 6, 7))\nfalse\n>>> check_57(array(1, 2, 3, 4, 5, 7))\ntrue\n>>>\
    \ check_57(array(1, 2, 3, 4, 5, 6, 7, 8, 9))\nfalse\n>>> check_57(array(1, 2,\
    \ 3, 4, 5, 7, 8, 9))\ntrue\n>>> check_57(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))\n\
    false\n>>> check_57(array(1, 2, 3, 4, 5, 7, 8, 9, 10))\ntrue*/", "\tif (count($dict)\
    \ == 0) return false;\n\t$keys = array_keys($dict);\n\t$is_lower = ctype_lower($keys[0]);\n\
    \tforeach ($keys as $key) {\n\t\tif ($is_lower && !ctype_lower($key)) return false;\n\
    \t\tif (!$is_lower && !ctype_upper($key)) return false;\n\t}\n\treturn true;\n\
    }\n\necho check_dict_case(array(\"a\" => \"apple\", \"b\" => \"banana\")) ? \"\
    true\" : \"false\";\necho \"\\n\";\necho check_dict_case(array(\"a\" => \"apple\"\
    , \"A\" => \"banana\", \"B\" => \"banana\")) ? \"true\" : \"false\";\necho \"\\\
    n\";\necho check_dict_case(array(\"a\" => \"apple\", 8 => \"banana\", \"a\" =>\
    \ \"apple\")) ? \"true\" : \"false\";\necho \"\\n\";\necho check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\")) ? \"true\" :\
    \ \"false\";\necho \"\\n\";\necho check_dict_case(array(\"STATE\" => \"NC\", \"\
    ZIP\" => \"12345\")) ? \"true\" : \"false\";\necho \"\\n\";", "\tif (empty($dict))\
    \ {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\t$first_key = $keys[0];\n\
    \t$first_key_is_upper = ctype_upper($first_key);\n\tforeach ($keys as $key) {\n\
    \t\tif (ctype_upper($key) != $first_key_is_upper) {\n\t\t\treturn false;\n\t\t\
    }\n\t}\n\treturn true;\n}\n\n$dict = array(\"a\" => \"apple\", \"b\" => \"banana\"\
    );\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" => \"apple\",\
    \ \"A\" => \"banana\", \"B\" => \"banana\");\necho check_dict_case($dict) . \"\
    \\n\";\n$dict = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"\
    );\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\");\necho check_dict_case($dict) .\
    \ \"\\n\";\n$dict = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array();\necho check_dict_case($dict) . \"\\n\";", "\tif\
    \ (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\t$first_key\
    \ = $keys[0];\n\t$first_key_case = strtoupper($first_key) == $first_key ? 'upper'\
    \ : 'lower';\n\tforeach ($keys as $key) {\n\t\t$key_case = strtoupper($key) ==\
    \ $key ? 'upper' : 'lower';\n\t\tif ($key_case != $first_key_case) {\n\t\t\treturn\
    \ false;\n\t\t}\n\t}\n\treturn true;\n}\n", "\t$lower = true;\n\t$upper = true;\n\
    \tforeach ($dict as $key => $value) {\n\t\tif (ctype_lower($key)) {\n\t\t\t$upper\
    \ = false;\n\t\t} else {\n\t\t\t$lower = false;\n\t\t}\n\t}\n\tif ($lower || $upper)\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/* Given an array,\
    \ return true if all keys are strings in lower \ncase or all keys are strings\
    \ in upper case, else return false.\nThe function should return false is the given\
    \ array is empty.\nExamples:\n>>> check_dict_case(array(\"a\" => \"apple\", \"\
    b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\" => \"apple\", \"A\"\
    \ => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/", "\t$lower = 0;\n\t$upper =\
    \ 0;\n\tforeach ($dict as $key => $value) {\n\t\tif (strtolower($key) == $key)\
    \ {\n\t\t\t$lower++;\n\t\t} elseif (strtoupper($key) == $key) {\n\t\t\t$upper++;\n\
    \t\t}\n\t}\n\tif ($lower == count($dict) || $upper == count($dict)) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\n$array = array(\"a\" => \"apple\"\
    , \"b\" => \"banana\");\necho check_dict_case($array);"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

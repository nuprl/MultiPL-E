language: php
name: HumanEval_20_find_closest_elements
results:
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $diff = abs($numbers[0] - $numbers[1]);\n    for ($i = 0;\
    \ $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $diff) {\n     \
    \           $closest[0] = $numbers[$i];\n                $closest[1] = $numbers[$j];\n\
    \                $diff = abs($numbers[$i] - $numbers[$j]);\n            }\n  \
    \      }\n    }\n    return $closest;\n}\n\n$numbers = array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2);\n$closest = find_closest_elements($numbers);\necho \"The closest\
    \ elements are: \" . $closest[0] . \" and \" . $closest[1];\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "The closest elements are: 2 and 2.2\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp0gwvtore.php:34\nStack trace:\n#0 /tmp/tmp0gwvtore.php(40):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp0gwvtore.php on line 34\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $closest_diff = abs($closest[0] - $closest[1]);\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n           \
    \ if ($diff < $closest_diff) {\n                $closest_diff = $diff;\n     \
    \           $closest[0] = $numbers[$i];\n                $closest[1] = $numbers[$j];\n\
    \            }\n        }\n    }\n    return $closest;\n}\n\n/*\n * From a supplied\
    \ array of numbers (of length at least two) select and return two that are the\
    \ farthest from each\nother and return them in order (smaller number, larger number).\n\
    >>> find_farthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n\
    >>> find_farthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)\n\
    \ */\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpafbvkeuq.php:40\n\
    Stack trace:\n#0 /tmp/tmpafbvkeuq.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpafbvkeuq.php\
    \ on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest_elements = array();\n    $closest_difference = 0;\n    for ($i\
    \ = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            $difference = abs($numbers[$i] - $numbers[$j]);\n     \
    \       if ($difference < $closest_difference || $closest_difference == 0) {\n\
    \                $closest_difference = $difference;\n                $closest_elements\
    \ = array($numbers[$i], $numbers[$j]);\n            }\n        }\n    }\n    return\
    \ $closest_elements;\n}\n\n/* From a supplied array of numbers (of length at least\
    \ two) select and return two that are the furthest from each\nother and return\
    \ them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgzmzvru9.php:35\n\
    Stack trace:\n#0 /tmp/tmpgzmzvru9.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpgzmzvru9.php\
    \ on line 35\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $min = $numbers[0];\n    $max = $numbers[0];\n    $min_index = 0;\n \
    \   $max_index = 0;\n    for ($i = 1; $i < count($numbers); $i++) {\n        if\
    \ ($numbers[$i] < $min) {\n            $min = $numbers[$i];\n            $min_index\
    \ = $i;\n        }\n        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n\
    \            $max_index = $i;\n        }\n    }\n    if ($min_index < $max_index)\
    \ {\n        return array($min, $max);\n    } else {\n        return array($max,\
    \ $min);\n    }\n}\n\n/* From a supplied array of numbers (of length at least\
    \ two) select and return two that are the furthest from each\nother and return\
    \ them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjvyko54o.php:41\n\
    Stack trace:\n#0 /tmp/tmpjvyko54o.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpjvyko54o.php\
    \ on line 41\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $min = $numbers[0];\n    $max = $numbers[0];\n    $min_index = 0;\n \
    \   $max_index = 0;\n    $min_diff = abs($numbers[0] - $numbers[1]);\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        if ($numbers[$i] < $min) {\n\
    \            $min = $numbers[$i];\n            $min_index = $i;\n        }\n \
    \       if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n       \
    \     $max_index = $i;\n        }\n        if ($i > 0) {\n            $diff =\
    \ abs($numbers[$i] - $numbers[$i - 1]);\n            if ($diff < $min_diff) {\n\
    \                $min_diff = $diff;\n                $min = $numbers[$i - 1];\n\
    \                $max = $numbers[$i];\n                $min_index = $i - 1;\n\
    \                $max_index = $i;\n            }\n        }\n    }\n    if ($min_index\
    \ > $max_index) {\n        $temp = $min;\n        $min = $max;\n        $max =\
    \ $temp;\n    }\n    return array($min, $max);\n}\n\n/* From a supplied array\
    \ of numbers (of length at least two) select and return two that are the furthest\
    \ from each\nother and return them in order (smaller number, larger number).\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7ym1ja2d.php:53\n\
    Stack trace:\n#0 /tmp/tmp7ym1ja2d.php(60): test()\n#1 {main}\n  thrown in /tmp/tmp7ym1ja2d.php\
    \ on line 53\n"
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $min_diff = INF;\n    for ($i = 0; $i < count($numbers)\
    \ - 1; $i++) {\n        for ($j = $i + 1; $j < count($numbers); $j++) {\n    \
    \        $diff = abs($numbers[$i] - $numbers[$j]);\n            if ($diff < $min_diff)\
    \ {\n                $min_diff = $diff;\n                $closest = array($numbers[$i],\
    \ $numbers[$j]);\n            }\n        }\n    }\n    sort($closest);\n    return\
    \ $closest;\n}\n\n/* From a supplied array of numbers (of length at least two)\
    \ select and return two that are the furthest from each\nother and return them\
    \ in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $min = $numbers[0];\n    $max = $numbers[0];\n    $min_index = 0;\n \
    \   $max_index = 0;\n    for ($i = 1; $i < count($numbers); $i++) {\n        if\
    \ ($numbers[$i] < $min) {\n            $min = $numbers[$i];\n            $min_index\
    \ = $i;\n        }\n        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n\
    \            $max_index = $i;\n        }\n    }\n    $min_dif = $max - $min;\n\
    \    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j\
    \ < count($numbers); $j++) {\n            if ($numbers[$i] != $numbers[$j]) {\n\
    \                $dif = abs($numbers[$i] - $numbers[$j]);\n                if\
    \ ($dif < $min_dif) {\n                    $min_dif = $dif;\n                \
    \    $min_index = $i;\n                    $max_index = $j;\n                }\n\
    \            }\n        }\n    }\n    return array($numbers[$min_index], $numbers[$max_index]);\n\
    }\n\n/* From a supplied array of numbers (of length at least two) select and return\
    \ two that are the furthest from each\nother and return them in order (smaller\
    \ number, larger number).\n>>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnzbpv7l7.php:51\n\
    Stack trace:\n#0 /tmp/tmpnzbpv7l7.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpnzbpv7l7.php\
    \ on line 51\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array($numbers[0], $numbers[1]);\n    $closest_diff = abs($numbers[0]\
    \ - $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++) {\n        for\
    \ ($j = $i + 1; $j < count($numbers); $j++) {\n            $diff = abs($numbers[$i]\
    \ - $numbers[$j]);\n            if ($diff < $closest_diff) {\n               \
    \ $closest_diff = $diff;\n                $closest = array($numbers[$i], $numbers[$j]);\n\
    \            }\n        }\n    }\n    return $closest;\n}\n\n/* From a supplied\
    \ array of numbers (of length at least two) select and return two that are the\
    \ furthest from each\nother and return them in order (smaller number, larger number).\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt5yovdsr.php:35\n\
    Stack trace:\n#0 /tmp/tmpt5yovdsr.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpt5yovdsr.php\
    \ on line 35\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest_diff = null;\n    for ($i = 0; $i <\
    \ count($numbers) - 1; $i++) {\n        $diff = abs($numbers[$i] - $numbers[$i\
    \ + 1]);\n        if ($closest_diff === null || $diff < $closest_diff) {\n   \
    \         $closest_diff = $diff;\n            $closest = array($numbers[$i], $numbers[$i\
    \ + 1]);\n        }\n    }\n    return $closest;\n}\n\n/* From a supplied array\
    \ of numbers (of length at least two) select and return two that are the furthest\
    \ from each\nother and return them in order (smaller number, larger number).\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkzl41s0z.php:33\n\
    Stack trace:\n#0 /tmp/tmpkzl41s0z.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpkzl41s0z.php\
    \ on line 33\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest_elements = array();\n    $closest_difference = PHP_INT_MAX;\n\
    \    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j\
    \ < count($numbers); $j++) {\n            $difference = abs($numbers[$i] - $numbers[$j]);\n\
    \            if ($difference < $closest_difference) {\n                $closest_difference\
    \ = $difference;\n                $closest_elements = array($numbers[$i], $numbers[$j]);\n\
    \            }\n        }\n    }\n    return $closest_elements;\n}\n\n$numbers\
    \ = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2);\nprint_r(find_closest_elements($numbers));\n\
    \n/*\n * From a supplied array of numbers (of length at least two) select and\
    \ return two that are the furthest from each\nother and return them in order (smaller\
    \ number, larger number).\n>>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0))\narray(1.0, 5.0)\n */\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmptssib7pb.php:40\nStack trace:\n#0 /tmp/tmptssib7pb.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmptssib7pb.php on line 40\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $diff = abs($numbers[0] - $numbers[1]);\n    for ($i = 0;\
    \ $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $diff) {\n     \
    \           $closest[0] = $numbers[$i];\n                $closest[1] = $numbers[$j];\n\
    \                $diff = abs($numbers[$i] - $numbers[$j]);\n            }\n  \
    \      }\n    }\n    return $closest;\n}\n\n$numbers = array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2);\nprint_r(find_closest_elements($numbers));\necho \"<br>\";\n$numbers\
    \ = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0);\nprint_r(find_closest_elements($numbers));\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\n<br>Array\n(\n    [0] => 2\n\
    \    [1] => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf8zuo8mq.php:36\n\
    Stack trace:\n#0 /tmp/tmpf8zuo8mq.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpf8zuo8mq.php\
    \ on line 36\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $closest_diff = abs($closest[0] - $closest[1]);\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n           \
    \ if ($diff < $closest_diff) {\n                $closest_diff = $diff;\n     \
    \           $closest[0] = $numbers[$i];\n                $closest[1] = $numbers[$j];\n\
    \            }\n        }\n    }\n    return $closest;\n}\n\n/* From a supplied\
    \ array of numbers (of length at least two) select and return two that are the\
    \ furthest from each\nother and return them in order (smaller number, larger number).\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43gbjxve.php:38\n\
    Stack trace:\n#0 /tmp/tmp43gbjxve.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp43gbjxve.php\
    \ on line 38\n"
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $min = abs($numbers[0] - $numbers[1]);\n    $result = array($numbers[0],\
    \ $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($numbers); $j++) {\n            if (abs($numbers[$i] -\
    \ $numbers[$j]) < $min) {\n                $min = abs($numbers[$i] - $numbers[$j]);\n\
    \                $result = array($numbers[$i], $numbers[$j]);\n            }\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\n/* From a supplied\
    \ array of numbers (of length at least two) select and return two that are the\
    \ furthest apart\nand return them in order (smaller number, larger number).\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $min = $numbers[0];\n    $max = $numbers[0];\n    $min_index = 0;\n \
    \   $max_index = 0;\n    for ($i = 1; $i < count($numbers); $i++) {\n        if\
    \ ($numbers[$i] < $min) {\n            $min = $numbers[$i];\n            $min_index\
    \ = $i;\n        }\n        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n\
    \            $max_index = $i;\n        }\n    }\n    $closest = array();\n   \
    \ if ($min_index < $max_index) {\n        $closest[] = $min;\n        $closest[]\
    \ = $max;\n    } else {\n        $closest[] = $max;\n        $closest[] = $min;\n\
    \    }\n    return $closest;\n}\n\n/* From a supplied array of numbers (of length\
    \ at least two) select and return two that are the furthest from each\nother and\
    \ return them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqllwl4qr.php:45\n\
    Stack trace:\n#0 /tmp/tmpqllwl4qr.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpqllwl4qr.php\
    \ on line 45\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $closest_diff = abs($closest[0] - $closest[1]);\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n           \
    \ if ($diff < $closest_diff) {\n                $closest_diff = $diff;\n     \
    \           $closest[0] = $numbers[$i];\n                $closest[1] = $numbers[$j];\n\
    \            }\n        }\n    }\n    return $closest;\n}\n\n/* From a supplied\
    \ array of numbers (of length at least two) select and return two that are the\
    \ furthest from each\nother and return them in order (smaller number, larger number).\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43gbjxve.php:38\n\
    Stack trace:\n#0 /tmp/tmp43gbjxve.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp43gbjxve.php\
    \ on line 38\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $min = INF;\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        for ($j = $i + 1; $j < count($numbers); $j++) {\n         \
    \   $diff = abs($numbers[$i] - $numbers[$j]);\n            if ($diff < $min) {\n\
    \                $min = $diff;\n                $closest = array($numbers[$i],\
    \ $numbers[$j]);\n            }\n        }\n    }\n    return $closest;\n}\n\n\
    /*\n * From a supplied array of numbers (of length at least two) select and return\
    \ two that are the furthest from each\nother and return them in order (smaller\
    \ number, larger number).\n>>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0))\narray(1.0, 5.0)\n */\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6oh8zq7l.php:37\n\
    Stack trace:\n#0 /tmp/tmp6oh8zq7l.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp6oh8zq7l.php\
    \ on line 37\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array($numbers[0], $numbers[1]);\n    $diff = abs($numbers[0]\
    \ - $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++) {\n        for\
    \ ($j = $i + 1; $j < count($numbers); $j++) {\n            if (abs($numbers[$i]\
    \ - $numbers[$j]) < $diff) {\n                $diff = abs($numbers[$i] - $numbers[$j]);\n\
    \                $closest = array($numbers[$i], $numbers[$j]);\n            }\n\
    \        }\n    }\n    return $closest;\n}\n\n$numbers = array(1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2);\nprint_r(find_closest_elements($numbers));\n\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpp0eg3mrw.php:31\nStack trace:\n#0 /tmp/tmpp0eg3mrw.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpp0eg3mrw.php on line 31\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $diff = abs($numbers[0] - $numbers[1]);\n    for ($i = 0;\
    \ $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $diff) {\n     \
    \           $closest[0] = $numbers[$i];\n                $closest[1] = $numbers[$j];\n\
    \                $diff = abs($numbers[$i] - $numbers[$j]);\n            }\n  \
    \      }\n    }\n    return $closest;\n}\n\n$numbers = array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2);\n$numbers2 = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0);\n\necho '<pre>';\n\
    print_r(find_closest_elements($numbers));\necho '</pre>';\n\necho '<pre>';\nprint_r(find_closest_elements($numbers2));\n\
    echo '</pre>';\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 2\n    [1] => 2.2\n)\n</pre><pre>Array\n(\n \
    \   [0] => 2\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpt6bpykbq.php:41\nStack trace:\n#0 /tmp/tmpt6bpykbq.php(47): test()\n\
    #1 {main}\n  thrown in /tmp/tmpt6bpykbq.php on line 41\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $smallest = $numbers[0];\n    $largest = $numbers[0];\n    $smallest_diff\
    \ = $numbers[1] - $numbers[0];\n    for ($i = 1; $i < count($numbers); $i++) {\n\
    \        if ($numbers[$i] - $numbers[$i - 1] < $smallest_diff) {\n           \
    \ $smallest_diff = $numbers[$i] - $numbers[$i - 1];\n            $smallest = $numbers[$i\
    \ - 1];\n            $largest = $numbers[$i];\n        }\n    }\n    return array($smallest,\
    \ $largest);\n}\n\n/* From a supplied array of numbers (of length at least two)\
    \ select and return two that are the furthest from each\nother and return them\
    \ in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $closest_diff = abs($closest[0] - $closest[1]);\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n           \
    \ if ($diff < $closest_diff) {\n                $closest_diff = $diff;\n     \
    \           $closest[0] = $numbers[$i];\n                $closest[1] = $numbers[$j];\n\
    \            }\n        }\n    }\n    return $closest;\n}\n\n/* From a supplied\
    \ array of numbers (of length at least two) select and return two that are the\
    \ furthest from each\nother and return them in order (smaller number, larger number).\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp43gbjxve.php:38\n\
    Stack trace:\n#0 /tmp/tmp43gbjxve.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp43gbjxve.php\
    \ on line 38\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array($numbers[0], $numbers[1]);\n    $closest_diff = abs($numbers[0]\
    \ - $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++) {\n        for\
    \ ($j = $i + 1; $j < count($numbers); $j++) {\n            $diff = abs($numbers[$i]\
    \ - $numbers[$j]);\n            if ($diff < $closest_diff) {\n               \
    \ $closest_diff = $diff;\n                $closest = array($numbers[$i], $numbers[$j]);\n\
    \            }\n        }\n    }\n    return $closest;\n}\n\n/* From a supplied\
    \ array of numbers (of length at least two) select and return two that are the\
    \ furthest from each\nother and return them in order (smaller number, larger number).\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt5yovdsr.php:35\n\
    Stack trace:\n#0 /tmp/tmpt5yovdsr.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpt5yovdsr.php\
    \ on line 35\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $closest_diff = abs($closest[0] - $closest[1]);\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n           \
    \ if ($diff < $closest_diff) {\n                $closest[0] = $numbers[$i];\n\
    \                $closest[1] = $numbers[$j];\n                $closest_diff =\
    \ $diff;\n            }\n        }\n    }\n    return $closest;\n}\n\n/* From\
    \ a supplied array of numbers (of length at least two) select and return two that\
    \ are the furthest from each\nother and return them in order (smaller number,\
    \ larger number).\n>>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2))\n\
    array(1.0, 5.0)\n>>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0))\n\
    array(1.0, 5.0)*/\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps452lkpf.php:38\n\
    Stack trace:\n#0 /tmp/tmps452lkpf.php(44): test()\n#1 {main}\n  thrown in /tmp/tmps452lkpf.php\
    \ on line 38\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $min_diff = abs($numbers[0] - $numbers[1]);\n    $min_pair = array($numbers[0],\
    \ $numbers[1]);\n    $size = count($numbers);\n    for ($i = 0; $i < $size; $i++)\
    \ {\n        for ($j = $i + 1; $j < $size; $j++) {\n            $diff = abs($numbers[$i]\
    \ - $numbers[$j]);\n            if ($diff < $min_diff) {\n                $min_diff\
    \ = $diff;\n                $min_pair = array($numbers[$i], $numbers[$j]);\n \
    \           }\n        }\n    }\n    return $min_pair;\n}\n\n$numbers = array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2);\n$numbers2 = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0);\n\
    \nprint_r(find_closest_elements($numbers));\nprint_r(find_closest_elements($numbers2));\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\nArray\n(\n    [0] => 2\n   \
    \ [1] => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1dl3hf11.php:35\n\
    Stack trace:\n#0 /tmp/tmp1dl3hf11.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp1dl3hf11.php\
    \ on line 35\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $closest[2] = abs($numbers[0] - $numbers[1]);\n    for ($i\
    \ = 0; $i < count($numbers) - 1; $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $closest[2]) {\n\
    \                $closest[0] = $numbers[$i];\n                $closest[1] = $numbers[$j];\n\
    \                $closest[2] = abs($numbers[$i] - $numbers[$j]);\n           \
    \ }\n        }\n    }\n    return array($closest[0], $closest[1]);\n}\n\n/*\n\
    \ * From a supplied array of numbers (of length at least two) select and return\
    \ two that are the furthest from each\nother and return them in order (smaller\
    \ number, larger number).\n>>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0))\narray(1.0, 5.0)\n */\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaxd2ihh7.php:39\n\
    Stack trace:\n#0 /tmp/tmpaxd2ihh7.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpaxd2ihh7.php\
    \ on line 39\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $min = $numbers[0];\n    $max = $numbers[0];\n    $min_index = 0;\n \
    \   $max_index = 0;\n    for ($i = 1; $i < count($numbers); $i++) {\n        if\
    \ ($numbers[$i] < $min) {\n            $min = $numbers[$i];\n            $min_index\
    \ = $i;\n        }\n        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n\
    \            $max_index = $i;\n        }\n    }\n    $min_diff = $max - $min;\n\
    \    for ($i = 0; $i < count($numbers); $i++) {\n        if ($i != $min_index\
    \ && $i != $max_index) {\n            $diff = abs($numbers[$i] - $numbers[$min_index]);\n\
    \            if ($diff < $min_diff) {\n                $min_diff = $diff;\n  \
    \              $max_index = $i;\n            }\n        }\n    }\n    return array($numbers[$min_index],\
    \ $numbers[$max_index]);\n}\n\n/* From a supplied array of numbers (of length\
    \ at least two) select and return two that are the furthest from each\nother and\
    \ return them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8pgkftxt.php:47\n\
    Stack trace:\n#0 /tmp/tmp8pgkftxt.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp8pgkftxt.php\
    \ on line 47\n"
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n\t$min_diff = abs($numbers[0] - $numbers[1]);\n\t$min_numbers = array($numbers[0],\
    \ $numbers[1]);\n\tfor ($i = 0; $i < count($numbers); $i++) {\n\t\tfor ($j = $i\
    \ + 1; $j < count($numbers); $j++) {\n\t\t\t$diff = abs($numbers[$i] - $numbers[$j]);\n\
    \t\t\tif ($diff < $min_diff) {\n\t\t\t\t$min_diff = $diff;\n\t\t\t\t$min_numbers\
    \ = array($numbers[$i], $numbers[$j]);\n\t\t\t}\n\t\t}\n\t}\n\tsort($min_numbers);\n\
    \treturn $min_numbers;\n}\n\n/* From a supplied array of numbers (of length at\
    \ least two) select and return two that are the furthest from each\nother and\
    \ return them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $min = abs($numbers[0] - $numbers[1]);\n    $result = array($numbers[0],\
    \ $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($numbers); $j++) {\n            if (abs($numbers[$i] -\
    \ $numbers[$j]) < $min) {\n                $min = abs($numbers[$i] - $numbers[$j]);\n\
    \                $result = array($numbers[$i], $numbers[$j]);\n            }\n\
    \        }\n    }\n    return $result;\n}\n\n$numbers = array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2);\n$numbers2 = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0);\n\necho '<pre>';\n\
    print_r(find_closest_elements($numbers));\necho '</pre>';\n\necho '<pre>';\nprint_r(find_closest_elements($numbers2));\n\
    echo '</pre>';\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 2\n    [1] => 2.2\n)\n</pre><pre>Array\n(\n \
    \   [0] => 2\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp23fvph1q.php:38\nStack trace:\n#0 /tmp/tmp23fvph1q.php(44): test()\n\
    #1 {main}\n  thrown in /tmp/tmp23fvph1q.php on line 38\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $diff = abs($numbers[0] - $numbers[1]);\n    for ($i = 0;\
    \ $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $diff) {\n     \
    \           $closest[0] = $numbers[$i];\n                $closest[1] = $numbers[$j];\n\
    \                $diff = abs($numbers[$i] - $numbers[$j]);\n            }\n  \
    \      }\n    }\n    return $closest;\n}\n\n/* From a supplied array of numbers\
    \ (of length at least two) select and return two that are the furthest from each\n\
    other and return them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r1cq32y.php:37\n\
    Stack trace:\n#0 /tmp/tmp7r1cq32y.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp7r1cq32y.php\
    \ on line 37\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n\t$closest = array();\n\t$min_diff = INF;\n\tfor ($i = 0; $i < count($numbers)\
    \ - 1; $i++) {\n\t\t$diff = abs($numbers[$i] - $numbers[$i + 1]);\n\t\tif ($diff\
    \ < $min_diff) {\n\t\t\t$min_diff = $diff;\n\t\t\t$closest = array($numbers[$i],\
    \ $numbers[$i + 1]);\n\t\t}\n\t}\n\tsort($closest);\n\treturn $closest;\n}\n\n\
    /* From a supplied array of numbers (of length at least two) select and return\
    \ two that are the furthest from each\nother and return them in order (smaller\
    \ number, larger number).\n>>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2br05q4t.php:34\n\
    Stack trace:\n#0 /tmp/tmp2br05q4t.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp2br05q4t.php\
    \ on line 34\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array($numbers[0], $numbers[1]);\n    $min_diff = abs($numbers[0]\
    \ - $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++) {\n        for\
    \ ($j = $i + 1; $j < count($numbers); $j++) {\n            $diff = abs($numbers[$i]\
    \ - $numbers[$j]);\n            if ($diff < $min_diff) {\n                $min_diff\
    \ = $diff;\n                $closest = array($numbers[$i], $numbers[$j]);\n  \
    \          }\n        }\n    }\n    return $closest;\n}\n\n/* From a supplied\
    \ array of numbers (of length at least two) select and return two that are the\
    \ furthest from each\nother and return them in order (smaller number, larger number).\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3wx81rsp.php:35\n\
    Stack trace:\n#0 /tmp/tmp3wx81rsp.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp3wx81rsp.php\
    \ on line 35\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n  $closest = array();\n  $closest[0] = $numbers[0];\n  $closest[1] = $numbers[1];\n\
    \  $closest_diff = abs($numbers[0] - $numbers[1]);\n  for ($i = 0; $i < count($numbers);\
    \ $i++) {\n    for ($j = $i + 1; $j < count($numbers); $j++) {\n      $diff =\
    \ abs($numbers[$i] - $numbers[$j]);\n      if ($diff < $closest_diff) {\n    \
    \    $closest_diff = $diff;\n        $closest[0] = $numbers[$i];\n        $closest[1]\
    \ = $numbers[$j];\n      }\n    }\n  }\n  return $closest;\n}\n\n/* From a supplied\
    \ array of numbers (of length at least two) select and return two that are the\
    \ furthest from each\nother and return them in order (smaller number, larger number).\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeqi9gtah.php:38\n\
    Stack trace:\n#0 /tmp/tmpeqi9gtah.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpeqi9gtah.php\
    \ on line 38\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $min_diff = abs($numbers[0] - $numbers[1]);\n    $min_diff_index = 0;\n\
    \    for ($i = 1; $i < count($numbers) - 1; $i++) {\n        $diff = abs($numbers[$i]\
    \ - $numbers[$i + 1]);\n        if ($diff < $min_diff) {\n            $min_diff\
    \ = $diff;\n            $min_diff_index = $i;\n        }\n    }\n    return array($numbers[$min_diff_index],\
    \ $numbers[$min_diff_index + 1]);\n}\n\n/*\n * From a supplied array of numbers\
    \ (of length at least two) select and return two that are the furthest from each\n\
    other and return them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)\n*/\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpti7fe0ht.php:35\n\
    Stack trace:\n#0 /tmp/tmpti7fe0ht.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpti7fe0ht.php\
    \ on line 35\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array(0, 0);\n    $closest_diff = abs($numbers[0] - $numbers[1]);\n\
    \    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j\
    \ < count($numbers); $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n\
    \            if ($diff < $closest_diff) {\n                $closest_diff = $diff;\n\
    \                $closest = array($numbers[$i], $numbers[$j]);\n            }\n\
    \        }\n    }\n    return $closest;\n}\n\n$numbers = array(1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2);\necho \"The closest elements are: \";\nprint_r(find_closest_elements($numbers));\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "The closest elements are: Array\n(\n    [0] => 2\n    [1] => 2.2\n)\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpykuncfsi.php:32\nStack\
    \ trace:\n#0 /tmp/tmpykuncfsi.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpykuncfsi.php\
    \ on line 32\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest_elements = array();\n    $closest_difference = 0;\n    $difference\
    \ = 0;\n    $count = count($numbers);\n    for ($i = 0; $i < $count; $i++) {\n\
    \        for ($j = $i + 1; $j < $count; $j++) {\n            $difference = abs($numbers[$i]\
    \ - $numbers[$j]);\n            if ($difference < $closest_difference || $closest_difference\
    \ == 0) {\n                $closest_difference = $difference;\n              \
    \  $closest_elements = array($numbers[$i], $numbers[$j]);\n            }\n   \
    \     }\n    }\n    return $closest_elements;\n}\n\n$numbers = array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2);\n$closest_elements = find_closest_elements($numbers);\n\
    echo \"The closest elements are \" . $closest_elements[0] . \" and \" . $closest_elements[1];\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "The closest elements are 2 and 2.2\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmplw4lry08.php:34\nStack trace:\n#0 /tmp/tmplw4lry08.php(40):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmplw4lry08.php on line 34\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $closest_diff = abs($closest[0] - $closest[1]);\n    $length\
    \ = count($numbers);\n    for ($i = 0; $i < $length; $i++) {\n        for ($j\
    \ = $i + 1; $j < $length; $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n\
    \            if ($diff < $closest_diff) {\n                $closest[0] = $numbers[$i];\n\
    \                $closest[1] = $numbers[$j];\n                $closest_diff =\
    \ $diff;\n            }\n        }\n    }\n    return $closest;\n}\n\n/* From\
    \ a supplied array of numbers (of length at least two) select and return two that\
    \ are the furthest from each\nother and return them in order (smaller number,\
    \ larger number).\n>>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2))\n\
    array(1.0, 5.0)\n>>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0))\n\
    array(1.0, 5.0)*/\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv5fr8dcv.php:39\n\
    Stack trace:\n#0 /tmp/tmpv5fr8dcv.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpv5fr8dcv.php\
    \ on line 39\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array($numbers[0], $numbers[1]);\n    $diff = abs($numbers[0]\
    \ - $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++) {\n        for\
    \ ($j = $i + 1; $j < count($numbers); $j++) {\n            if (abs($numbers[$i]\
    \ - $numbers[$j]) < $diff) {\n                $diff = abs($numbers[$i] - $numbers[$j]);\n\
    \                $closest = array($numbers[$i], $numbers[$j]);\n            }\n\
    \        }\n    }\n    return $closest;\n}\n\n/*\n * From a supplied array of\
    \ numbers (of length at least two) select and return two that are the furthest\
    \ from each\nother and return them in order (smaller number, larger number).\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)\n\
    \ */\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsi7q9hd1.php:36\n\
    Stack trace:\n#0 /tmp/tmpsi7q9hd1.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpsi7q9hd1.php\
    \ on line 36\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    for ($i = 0; $i < count($numbers) - 1; $i++) {\n       \
    \ for ($j = $i + 1; $j < count($numbers); $j++) {\n            if (abs($numbers[$i]\
    \ - $numbers[$j]) < abs($closest[0] - $closest[1])) {\n                $closest[0]\
    \ = $numbers[$i];\n                $closest[1] = $numbers[$j];\n            }\n\
    \        }\n    }\n    return $closest;\n}\n\n/*\n * From a supplied array of\
    \ numbers (of length at least two) select and return two that are the furthest\
    \ from each\nother and return them in order (smaller number, larger number).\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)\n\
    \ */\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw1unfnh8.php:37\n\
    Stack trace:\n#0 /tmp/tmpw1unfnh8.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpw1unfnh8.php\
    \ on line 37\n"
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $min = abs($numbers[0] - $numbers[1]);\n    $result = array($numbers[0],\
    \ $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($numbers); $j++) {\n            if (abs($numbers[$i] -\
    \ $numbers[$j]) < $min) {\n                $min = abs($numbers[$i] - $numbers[$j]);\n\
    \                $result = array($numbers[$i], $numbers[$j]);\n            }\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\n$numbers = array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2);\nprint_r(find_closest_elements($numbers));\n\nfunction\
    \ candidate(...$args) {\n    return find_closest_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9,\
    \ 4.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\n"
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $smallest_difference = null;\n    $closest_elements = array();\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            $difference = abs($numbers[$i] - $numbers[$j]);\n     \
    \       if ($smallest_difference === null || $difference < $smallest_difference)\
    \ {\n                $smallest_difference = $difference;\n                $closest_elements\
    \ = array($numbers[$i], $numbers[$j]);\n            }\n        }\n    }\n    sort($closest_elements);\n\
    \    return $closest_elements;\n}\n\n/*\n * From a supplied array of numbers (of\
    \ length at least two) select and return two that are the furthest from each\n\
    other and return them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)\n*/\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest_elements = array();\n    $min_diff = $numbers[1] - $numbers[0];\n\
    \    $closest_elements[] = $numbers[0];\n    $closest_elements[] = $numbers[1];\n\
    \    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j\
    \ < count($numbers); $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n\
    \            if ($diff < $min_diff) {\n                $min_diff = $diff;\n  \
    \              $closest_elements = array();\n                $closest_elements[]\
    \ = $numbers[$i];\n                $closest_elements[] = $numbers[$j];\n     \
    \       }\n        }\n    }\n    return $closest_elements;\n}\n\n$numbers = array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2);\n$closest_elements = find_closest_elements($numbers);\n\
    echo \"The closest elements are: \";\nforeach ($closest_elements as $element)\
    \ {\n    echo $element . \" \";\n}\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "The closest elements are: 2 2.2 \n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpb_30h9rw.php:40\nStack trace:\n#0 /tmp/tmpb_30h9rw.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpb_30h9rw.php on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $closest_diff = abs($closest[0] - $closest[1]);\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n           \
    \ if ($diff < $closest_diff) {\n                $closest[0] = $numbers[$i];\n\
    \                $closest[1] = $numbers[$j];\n                $closest_diff =\
    \ $diff;\n            }\n        }\n    }\n    return $closest;\n}\n\n$numbers\
    \ = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2);\n$closest = find_closest_elements($numbers);\n\
    echo \"The closest numbers are \" . $closest[0] . \" and \" . $closest[1] . \"\
    \\n\";\n\n$numbers = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0);\n$closest = find_closest_elements($numbers);\n\
    echo \"The closest numbers are \" . $closest[0] . \" and \" . $closest[1] . \"\
    \\n\";\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "The closest numbers are 2 and 2.2\nThe closest numbers are 2 and 2\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp3zpuwd6h.php:39\nStack\
    \ trace:\n#0 /tmp/tmp3zpuwd6h.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp3zpuwd6h.php\
    \ on line 39\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $diff = abs($numbers[0] - $numbers[1]);\n    for ($i = 0;\
    \ $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $diff) {\n     \
    \           $closest[0] = $numbers[$i];\n                $closest[1] = $numbers[$j];\n\
    \                $diff = abs($numbers[$i] - $numbers[$j]);\n            }\n  \
    \      }\n    }\n    return $closest;\n}\n\n$numbers = array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2);\n$closest = find_closest_elements($numbers);\necho \"The closest\
    \ elements are \" . $closest[0] . \" and \" . $closest[1];\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "The closest elements are 2 and 2.2\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp2vmrlzrh.php:34\nStack trace:\n#0 /tmp/tmp2vmrlzrh.php(40):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp2vmrlzrh.php on line 34\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $diff = abs($numbers[0] - $numbers[1]);\n    for ($i = 0;\
    \ $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $diff) {\n     \
    \           $closest[0] = $numbers[$i];\n                $closest[1] = $numbers[$j];\n\
    \                $diff = abs($numbers[$i] - $numbers[$j]);\n            }\n  \
    \      }\n    }\n    return $closest;\n}\n\n$numbers = array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2);\n$closest = find_closest_elements($numbers);\necho \"The closest\
    \ elements are: \" . $closest[0] . \" and \" . $closest[1];\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "The closest elements are: 2 and 2.2\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp0gwvtore.php:34\nStack trace:\n#0 /tmp/tmp0gwvtore.php(40):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp0gwvtore.php on line 34\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest_elements = array();\n    $min_diff = abs($numbers[0] - $numbers[1]);\n\
    \    $closest_elements[] = $numbers[0];\n    $closest_elements[] = $numbers[1];\n\
    \    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j\
    \ < count($numbers); $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n\
    \            if ($diff < $min_diff) {\n                $min_diff = $diff;\n  \
    \              $closest_elements[0] = $numbers[$i];\n                $closest_elements[1]\
    \ = $numbers[$j];\n            }\n        }\n    }\n    return $closest_elements;\n\
    }\n\n$numbers = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2);\n$closest_elements = find_closest_elements($numbers);\n\
    echo \"The closest elements are: \" . $closest_elements[0] . \" and \" . $closest_elements[1];\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "The closest elements are: 2 and 2.2\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmph7ya_tii.php:35\nStack trace:\n#0 /tmp/tmph7ya_tii.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmph7ya_tii.php on line 35\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $diff = abs($numbers[0] - $numbers[1]);\n    for ($i = 0;\
    \ $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $diff) {\n     \
    \           $closest[0] = $numbers[$i];\n                $closest[1] = $numbers[$j];\n\
    \                $diff = abs($numbers[$i] - $numbers[$j]);\n            }\n  \
    \      }\n    }\n    return $closest;\n}\n\n$numbers = array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2);\nprint_r(find_closest_elements($numbers));\n\n/*\n * From a supplied\
    \ array of numbers (of length at least two) select and return two that are the\
    \ furthest from each\nother and return them in order (smaller number, larger number).\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpl32qrp_9.php:41\nStack trace:\n#0 /tmp/tmpl32qrp_9.php(47):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpl32qrp_9.php on line 41\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $min = abs($numbers[0] - $numbers[1]);\n    $min_elements = array($numbers[0],\
    \ $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($numbers); $j++) {\n            if (abs($numbers[$i] -\
    \ $numbers[$j]) < $min) {\n                $min = abs($numbers[$i] - $numbers[$j]);\n\
    \                $min_elements = array($numbers[$i], $numbers[$j]);\n        \
    \    }\n        }\n    }\n    return $min_elements;\n}\n\n/* From a supplied array\
    \ of numbers (of length at least two) select and return two that are the furthest\
    \ from each\nother and return them in order (smaller number, larger number).\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp37b9zpjr.php:34\n\
    Stack trace:\n#0 /tmp/tmp37b9zpjr.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp37b9zpjr.php\
    \ on line 34\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n\t$min_diff = $numbers[1] - $numbers[0];\n\t$min_pair = array($numbers[0],\
    \ $numbers[1]);\n\tfor ($i = 0; $i < count($numbers) - 1; $i++) {\n\t\t$diff =\
    \ $numbers[$i + 1] - $numbers[$i];\n\t\tif ($diff < $min_diff) {\n\t\t\t$min_diff\
    \ = $diff;\n\t\t\t$min_pair = array($numbers[$i], $numbers[$i + 1]);\n\t\t}\n\t\
    }\n\treturn $min_pair;\n}\n\n/* From a supplied array of numbers (of length at\
    \ least two) select and return two that are the furthest from each\nother and\
    \ return them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgjgw66ny.php:32\n\
    Stack trace:\n#0 /tmp/tmpgjgw66ny.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpgjgw66ny.php\
    \ on line 32\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $diff = abs($numbers[0] - $numbers[1]);\n    $closest_elements = array($numbers[0],\
    \ $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($numbers); $j++) {\n            if (abs($numbers[$i] -\
    \ $numbers[$j]) < $diff) {\n                $diff = abs($numbers[$i] - $numbers[$j]);\n\
    \                $closest_elements = array($numbers[$i], $numbers[$j]);\n    \
    \        }\n        }\n    }\n    return $closest_elements;\n}\n\n$numbers = array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2);\n$closest_elements = find_closest_elements($numbers);\n\
    echo \"The closest elements are \" . $closest_elements[0] . \" and \" . $closest_elements[1];\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "The closest elements are 2 and 2.2\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpyvjygugi.php:31\nStack trace:\n#0 /tmp/tmpyvjygugi.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpyvjygugi.php on line 31\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $closest_diff = abs($closest[0] - $closest[1]);\n    $numbers_count\
    \ = count($numbers);\n    for ($i = 0; $i < $numbers_count; $i++) {\n        for\
    \ ($j = $i + 1; $j < $numbers_count; $j++) {\n            $diff = abs($numbers[$i]\
    \ - $numbers[$j]);\n            if ($diff < $closest_diff) {\n               \
    \ $closest_diff = $diff;\n                $closest[0] = $numbers[$i];\n      \
    \          $closest[1] = $numbers[$j];\n            }\n        }\n    }\n    return\
    \ $closest;\n}\n\n/* From a supplied array of numbers (of length at least two)\
    \ select and return two that are the furthest from each\nother and return them\
    \ in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnmdsw2y1.php:39\n\
    Stack trace:\n#0 /tmp/tmpnmdsw2y1.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpnmdsw2y1.php\
    \ on line 39\n"
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $min = abs($numbers[0] - $numbers[1]);\n   \
    \ for ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $min) {\n      \
    \          $min = abs($numbers[$i] - $numbers[$j]);\n                $closest\
    \ = array($numbers[$i], $numbers[$j]);\n            }\n        }\n    }\n    sort($closest);\n\
    \    return $closest;\n}\n\n/* From a supplied array of numbers (of length at\
    \ least two) select and return two that are the furthest from each\nother and\
    \ return them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $smallest = $numbers[0];\n    $largest = $numbers[0];\n    $smallest_diff\
    \ = $numbers[1] - $numbers[0];\n    for ($i = 1; $i < count($numbers); $i++) {\n\
    \        $diff = $numbers[$i] - $numbers[$i - 1];\n        if ($diff < $smallest_diff)\
    \ {\n            $smallest_diff = $diff;\n            $smallest = $numbers[$i\
    \ - 1];\n            $largest = $numbers[$i];\n        }\n    }\n    return array($smallest,\
    \ $largest);\n}\n\n$numbers = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2);\n$numbers2\
    \ = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0);\n\necho \"The closest elements in the\
    \ array are: \";\nprint_r(find_closest_elements($numbers));\necho \"<br>\";\n\
    echo \"The closest elements in the array are: \";\nprint_r(find_closest_elements($numbers2));\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "The closest elements in the array are: Array\n(\n    [0] => 5\n    [1]\
    \ => 2.2\n)\n<br>The closest elements in the array are: Array\n(\n    [0] => 5\n\
    \    [1] => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzm8iz6jh.php:36\n\
    Stack trace:\n#0 /tmp/tmpzm8iz6jh.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpzm8iz6jh.php\
    \ on line 36\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $closest_diff = abs($closest[0] - $closest[1]);\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n           \
    \ if ($diff < $closest_diff) {\n                $closest[0] = $numbers[$i];\n\
    \                $closest[1] = $numbers[$j];\n                $closest_diff =\
    \ $diff;\n            }\n        }\n    }\n    return $closest;\n}\n\n$numbers\
    \ = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2);\n$closest = find_closest_elements($numbers);\n\
    echo \"The closest numbers are \" . $closest[0] . \" and \" . $closest[1] . \"\
    \\n\";\n\n$numbers = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0);\n$closest = find_closest_elements($numbers);\n\
    echo \"The closest numbers are \" . $closest[0] . \" and \" . $closest[1] . \"\
    \\n\";\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "The closest numbers are 2 and 2.2\nThe closest numbers are 2 and 2\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmp3zpuwd6h.php:39\nStack\
    \ trace:\n#0 /tmp/tmp3zpuwd6h.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp3zpuwd6h.php\
    \ on line 39\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array($numbers[0], $numbers[1]);\n    $diff = abs($numbers[0]\
    \ - $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++) {\n        for\
    \ ($j = $i + 1; $j < count($numbers); $j++) {\n            if (abs($numbers[$i]\
    \ - $numbers[$j]) < $diff) {\n                $diff = abs($numbers[$i] - $numbers[$j]);\n\
    \                $closest = array($numbers[$i], $numbers[$j]);\n            }\n\
    \        }\n    }\n    return $closest;\n}\n\n$numbers = array(1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2);\n$closest = find_closest_elements($numbers);\nprint_r($closest);\n\
    \nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp6krsy507.php:32\nStack trace:\n#0 /tmp/tmp6krsy507.php(38):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp6krsy507.php on line 32\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array(0, 0);\n    $diff = abs($numbers[0] - $numbers[1]);\n\
    \    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j\
    \ < count($numbers); $j++) {\n            if (abs($numbers[$i] - $numbers[$j])\
    \ < $diff) {\n                $diff = abs($numbers[$i] - $numbers[$j]);\n    \
    \            $closest[0] = $numbers[$i];\n                $closest[1] = $numbers[$j];\n\
    \            }\n        }\n    }\n    return $closest;\n}\n\n/* From a supplied\
    \ array of numbers (of length at least two) select and return two that are the\
    \ furthest from each\nother and return them in order (smaller number, larger number).\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsmw902lv.php:35\n\
    Stack trace:\n#0 /tmp/tmpsmw902lv.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpsmw902lv.php\
    \ on line 35\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $min_diff = abs($numbers[0] - $numbers[1]);\n    $min_pair = array($numbers[0],\
    \ $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($numbers); $j++) {\n            $diff = abs($numbers[$i]\
    \ - $numbers[$j]);\n            if ($diff < $min_diff) {\n                $min_diff\
    \ = $diff;\n                $min_pair = array($numbers[$i], $numbers[$j]);\n \
    \           }\n        }\n    }\n    return $min_pair;\n}\n\n$numbers = array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2);\n$numbers2 = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0);\n\
    \nprint_r(find_closest_elements($numbers));\nprint_r(find_closest_elements($numbers2));\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\nArray\n(\n    [0] => 2\n   \
    \ [1] => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgsyyoilo.php:34\n\
    Stack trace:\n#0 /tmp/tmpgsyyoilo.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpgsyyoilo.php\
    \ on line 34\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $diff = abs($numbers[0] - $numbers[1]);\n    for ($i = 0;\
    \ $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $diff) {\n     \
    \           $closest[0] = $numbers[$i];\n                $closest[1] = $numbers[$j];\n\
    \                $diff = abs($numbers[$i] - $numbers[$j]);\n            }\n  \
    \      }\n    }\n    return $closest;\n}\n\n/* From a supplied array of numbers\
    \ (of length at least two) select and return two that are the furthest from each\n\
    other and return them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r1cq32y.php:37\n\
    Stack trace:\n#0 /tmp/tmp7r1cq32y.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp7r1cq32y.php\
    \ on line 37\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $min = $numbers[0];\n    $max = $numbers[0];\n    $min_index = 0;\n \
    \   $max_index = 0;\n    $min_diff = 0;\n    $max_diff = 0;\n    $min_diff_index\
    \ = 0;\n    $max_diff_index = 0;\n    for ($i = 0; $i < count($numbers); $i++)\
    \ {\n        if ($numbers[$i] < $min) {\n            $min = $numbers[$i];\n  \
    \          $min_index = $i;\n        }\n        if ($numbers[$i] > $max) {\n \
    \           $max = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \  }\n    for ($i = 0; $i < count($numbers); $i++) {\n        if ($numbers[$i]\
    \ < $max && $numbers[$i] > $min) {\n            if ($max - $numbers[$i] < $min_diff\
    \ || $min_diff == 0) {\n                $min_diff = $max - $numbers[$i];\n   \
    \             $min_diff_index = $i;\n            }\n            if ($numbers[$i]\
    \ - $min > $max_diff || $max_diff == 0) {\n                $max_diff = $numbers[$i]\
    \ - $min;\n                $max_diff_index = $i;\n            }\n        }\n \
    \   }\n    if ($min_diff < $max_diff) {\n        return array($numbers[$min_index],\
    \ $numbers[$min_diff_index]);\n    } else {\n        return array($numbers[$max_diff_index],\
    \ $numbers[$max_index]);\n    }\n}\n\n/* From a supplied array of numbers (of\
    \ length at least two) select and return two that are the furthest from each\n\
    other and return them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0,\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 46 in /tmp/tmp98elyp7i.php on
    line 46

    '
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $min_diff = abs($numbers[0] - $numbers[1]);\n    $min_numbers = array($numbers[0],\
    \ $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($numbers); $j++) {\n            $diff = abs($numbers[$i]\
    \ - $numbers[$j]);\n            if ($diff < $min_diff) {\n                $min_diff\
    \ = $diff;\n                $min_numbers = array($numbers[$i], $numbers[$j]);\n\
    \            }\n        }\n    }\n    return $min_numbers;\n}\n\n/* From a supplied\
    \ array of numbers (of length at least two) select and return two that are the\
    \ furthest from each\nother and return them in order (smaller number, larger number).\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest_elements = array();\n    $min_diff = abs($numbers[0] - $numbers[1]);\n\
    \    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j\
    \ < count($numbers); $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n\
    \            if ($diff < $min_diff) {\n                $min_diff = $diff;\n  \
    \              $closest_elements = array($numbers[$i], $numbers[$j]);\n      \
    \      }\n        }\n    }\n    return $closest_elements;\n}\n\n$numbers = array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2);\n$closest_elements = find_closest_elements($numbers);\n\
    echo \"The closest elements are: \" . $closest_elements[0] . \" and \" . $closest_elements[1];\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "The closest elements are: 2 and 2.2\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpiqgrs_4n.php:32\nStack trace:\n#0 /tmp/tmpiqgrs_4n.php(38):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpiqgrs_4n.php on line 32\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $closest_diff = abs($closest[0] - $closest[1]);\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n           \
    \ if ($diff < $closest_diff) {\n                $closest_diff = $diff;\n     \
    \           $closest[0] = $numbers[$i];\n                $closest[1] = $numbers[$j];\n\
    \            }\n        }\n    }\n    return $closest;\n}\n\n$numbers = array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2);\n$closest = find_closest_elements($numbers);\necho\
    \ '<pre>';\nprint_r($closest);\necho '</pre>';\n\n/*\n * From a supplied array\
    \ of numbers (of length at least two) select and return two that are the furthest\
    \ from each\nother and return them in order (smaller number, larger number).\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)\n\
    \ */\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 2\n    [1] => 2.2\n)\n</pre>\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpiff_p17o.php:46\nStack trace:\n#0 /tmp/tmpiff_p17o.php(52):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpiff_p17o.php on line 46\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n\t$min = abs($numbers[0] - $numbers[1]);\n\t$min_index = 0;\n\tfor ($i =\
    \ 0; $i < count($numbers) - 1; $i++) {\n\t\tif (abs($numbers[$i] - $numbers[$i\
    \ + 1]) < $min) {\n\t\t\t$min = abs($numbers[$i] - $numbers[$i + 1]);\n\t\t\t\
    $min_index = $i;\n\t\t}\n\t}\n\treturn array($numbers[$min_index], $numbers[$min_index\
    \ + 1]);\n}\n\n/* Write a function that takes a string and returns the number\
    \ of vowels in the string.\n>>> count_vowels(\"hello\")\n2\n>>> count_vowels(\"\
    world\")\n1\n>>> count_vowels(\"\")\n0*/\nfunction candidate(...$args) {\n   \
    \ return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg2dj59pg.php:33\n\
    Stack trace:\n#0 /tmp/tmpg2dj59pg.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpg2dj59pg.php\
    \ on line 33\n"
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest_pair = array($numbers[0], $numbers[1]);\n    $closest_distance\
    \ = abs($numbers[0] - $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++)\
    \ {\n        for ($j = $i + 1; $j < count($numbers); $j++) {\n            $distance\
    \ = abs($numbers[$i] - $numbers[$j]);\n            if ($distance < $closest_distance)\
    \ {\n                $closest_distance = $distance;\n                $closest_pair\
    \ = array($numbers[$i], $numbers[$j]);\n            }\n        }\n    }\n    sort($closest_pair);\n\
    \    return $closest_pair;\n}\n\n/* From a supplied array of numbers (of length\
    \ at least two) select and return two that are the furthest from each\nother and\
    \ return them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $min = abs($numbers[0] - $numbers[1]);\n    $result = array($numbers[0],\
    \ $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($numbers); $j++) {\n            if (abs($numbers[$i] -\
    \ $numbers[$j]) < $min) {\n                $min = abs($numbers[$i] - $numbers[$j]);\n\
    \                $result = array($numbers[$i], $numbers[$j]);\n            }\n\
    \        }\n    }\n    return $result;\n}\n\n/*\n * From a supplied array of numbers\
    \ (of length at least two) select and return two that are the furthest from each\n\
    other and return them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)\n*/\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpepw9kqj6.php:36\n\
    Stack trace:\n#0 /tmp/tmpepw9kqj6.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpepw9kqj6.php\
    \ on line 36\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $smallest = null;\n    $smallest_pair = null;\n    for ($i = 0; $i <\
    \ count($numbers) - 1; $i++) {\n        $diff = abs($numbers[$i] - $numbers[$i\
    \ + 1]);\n        if ($smallest === null || $diff < $smallest) {\n           \
    \ $smallest = $diff;\n            $smallest_pair = array($numbers[$i], $numbers[$i\
    \ + 1]);\n        }\n    }\n    return $smallest_pair;\n}\n\n/*\n * From a supplied\
    \ array of numbers (of length at least two) select and return two that are the\
    \ furthest from each\nother and return them in order (smaller number, larger number).\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)\n\
    */\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9aczbw7b.php:35\n\
    Stack trace:\n#0 /tmp/tmp9aczbw7b.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp9aczbw7b.php\
    \ on line 35\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $min_diff = abs($numbers[0] - $numbers[1]);\n    $min_index = 0;\n  \
    \  for ($i = 0; $i < count($numbers) - 1; $i++) {\n        $diff = abs($numbers[$i]\
    \ - $numbers[$i + 1]);\n        if ($diff < $min_diff) {\n            $min_diff\
    \ = $diff;\n            $min_index = $i;\n        }\n    }\n    return array($numbers[$min_index],\
    \ $numbers[$min_index + 1]);\n}\n\n/* From a supplied array of numbers (of length\
    \ at least two) select and return two that are the furthest apart\nand return\
    \ them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgtjx6lth.php:33\n\
    Stack trace:\n#0 /tmp/tmpgtjx6lth.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpgtjx6lth.php\
    \ on line 33\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest_elements = array();\n    $closest_distance = 0;\n    for ($i\
    \ = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            $distance = abs($numbers[$i] - $numbers[$j]);\n       \
    \     if ($distance < $closest_distance || $closest_distance == 0) {\n       \
    \         $closest_distance = $distance;\n                $closest_elements =\
    \ array($numbers[$i], $numbers[$j]);\n            }\n        }\n    }\n    return\
    \ $closest_elements;\n}\n\n$numbers = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2);\n$closest_elements\
    \ = find_closest_elements($numbers);\necho \"The closest elements in the array\
    \ are: \" . $closest_elements[0] . \" and \" . $closest_elements[1];\n\nfunction\
    \ candidate(...$args) {\n    return find_closest_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9,\
    \ 4.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "The closest elements in the array are: 2 and 2.2\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp78smdbiv.php:33\nStack trace:\n#0 /tmp/tmp78smdbiv.php(39):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp78smdbiv.php on line 33\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n\t$closest = array();\n\t$closest[0] = $numbers[0];\n\t$closest[1] = $numbers[1];\n\
    \t$closest_diff = abs($numbers[0] - $numbers[1]);\n\tfor ($i = 0; $i < count($numbers);\
    \ $i++) {\n\t\tfor ($j = $i + 1; $j < count($numbers); $j++) {\n\t\t\t$diff =\
    \ abs($numbers[$i] - $numbers[$j]);\n\t\t\tif ($diff < $closest_diff) {\n\t\t\t\
    \t$closest_diff = $diff;\n\t\t\t\t$closest[0] = $numbers[$i];\n\t\t\t\t$closest[1]\
    \ = $numbers[$j];\n\t\t\t}\n\t\t}\n\t}\n\treturn $closest;\n}\n\n/* From a supplied\
    \ array of numbers (of length at least two) select and return two that are the\
    \ furthest from each\nother and return them in order (smaller number, larger number).\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm4wpxzj3.php:38\n\
    Stack trace:\n#0 /tmp/tmpm4wpxzj3.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpm4wpxzj3.php\
    \ on line 38\n"
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n\t$closest = array(0, 0);\n\t$closest_diff = abs($numbers[0] - $numbers[1]);\n\
    \t$length = count($numbers);\n\tfor ($i = 0; $i < $length; $i++) {\n\t\tfor ($j\
    \ = $i + 1; $j < $length; $j++) {\n\t\t\t$diff = abs($numbers[$i] - $numbers[$j]);\n\
    \t\t\tif ($diff < $closest_diff) {\n\t\t\t\t$closest_diff = $diff;\n\t\t\t\t$closest\
    \ = array($numbers[$i], $numbers[$j]);\n\t\t\t}\n\t\t}\n\t}\n\tsort($closest);\n\
    \treturn $closest;\n}\n\n/* From a supplied array of numbers (of length at least\
    \ two) select and return two that are the furthest from each\nother and return\
    \ them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest_pair = array($numbers[0], $numbers[1]);\n    $closest_distance\
    \ = abs($numbers[0] - $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++)\
    \ {\n        for ($j = $i + 1; $j < count($numbers); $j++) {\n            $distance\
    \ = abs($numbers[$i] - $numbers[$j]);\n            if ($distance < $closest_distance)\
    \ {\n                $closest_distance = $distance;\n                $closest_pair\
    \ = array($numbers[$i], $numbers[$j]);\n            }\n        }\n    }\n    sort($closest_pair);\n\
    \    return $closest_pair;\n}\n\n/*\n * Write a function that takes a string as\
    \ input and returns the string reversed.\n * >>> reverse_string('hello')\n * 'olleh'\n\
    \ * >>> reverse_string('world')\n * 'dlrow'\n */\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $min = INF;\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        for ($j = $i + 1; $j < count($numbers); $j++) {\n         \
    \   $diff = abs($numbers[$i] - $numbers[$j]);\n            if ($diff < $min) {\n\
    \                $min = $diff;\n                $closest = array($numbers[$i],\
    \ $numbers[$j]);\n            }\n        }\n    }\n    return $closest;\n}\n\n\
    /* From a supplied array of numbers (of length at least two) select and return\
    \ two that are the furthest from each\nother and return them in order (smaller\
    \ number, larger number).\n>>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy_vfkrti.php:35\n\
    Stack trace:\n#0 /tmp/tmpy_vfkrti.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpy_vfkrti.php\
    \ on line 35\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $min = $numbers[0];\n    $max = $numbers[0];\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        if ($numbers[$i] < $min) {\n            $min = $numbers[$i];\n\
    \        }\n        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n\
    \        }\n    }\n    return array($min, $max);\n}\n\n/* From a supplied array\
    \ of numbers (of length at least two) select and return two that are the furthest\
    \ from each\nother and return them in order (smaller number, larger number).\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprb4husw4.php:33\n\
    Stack trace:\n#0 /tmp/tmprb4husw4.php(40): test()\n#1 {main}\n  thrown in /tmp/tmprb4husw4.php\
    \ on line 33\n"
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $min = INF;\n    for ($i = 0; $i < count($numbers)\
    \ - 1; $i++) {\n        for ($j = $i + 1; $j < count($numbers); $j++) {\n    \
    \        $diff = abs($numbers[$i] - $numbers[$j]);\n            if ($diff < $min)\
    \ {\n                $min = $diff;\n                $closest = array($numbers[$i],\
    \ $numbers[$j]);\n            }\n        }\n    }\n    sort($closest);\n    return\
    \ $closest;\n}\n\n/*\n * From a supplied array of numbers (of length at least\
    \ two) select and return two that are the furthest from each\nother and return\
    \ them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)\n */\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest_elements = array();\n    $closest_difference = null;\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            $difference = abs($numbers[$i] - $numbers[$j]);\n     \
    \       if ($closest_difference === null || $difference < $closest_difference)\
    \ {\n                $closest_difference = $difference;\n                $closest_elements\
    \ = array($numbers[$i], $numbers[$j]);\n            }\n        }\n    }\n    return\
    \ $closest_elements;\n}\n\n$numbers = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2);\n$closest_elements\
    \ = find_closest_elements($numbers);\necho \"The closest elements are: \" . $closest_elements[0]\
    \ . \" and \" . $closest_elements[1];\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "The closest elements are: 2 and 2.2\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpybug7dmx.php:32\nStack trace:\n#0 /tmp/tmpybug7dmx.php(38):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpybug7dmx.php on line 32\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $min = INF;\n    $closest = array();\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        for ($j = $i + 1; $j < count($numbers); $j++) {\n         \
    \   $diff = abs($numbers[$i] - $numbers[$j]);\n            if ($diff < $min) {\n\
    \                $min = $diff;\n                $closest = array($numbers[$i],\
    \ $numbers[$j]);\n            }\n        }\n    }\n    return $closest;\n}\n\n\
    /*\n * From a supplied array of numbers (of length at least two) select and return\
    \ two that are the furthest from each\nother and return them in order (smaller\
    \ number, larger number).\n>>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0))\narray(1.0, 5.0)\n */\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo80iqgzt.php:37\n\
    Stack trace:\n#0 /tmp/tmpo80iqgzt.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpo80iqgzt.php\
    \ on line 37\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $closest_diff = abs($closest[0] - $closest[1]);\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n           \
    \ if ($diff < $closest_diff) {\n                $closest[0] = $numbers[$i];\n\
    \                $closest[1] = $numbers[$j];\n                $closest_diff =\
    \ $diff;\n            }\n        }\n    }\n    return $closest;\n}\n\n/*\n * From\
    \ a supplied array of numbers (of length at least two) select and return two that\
    \ are the furthest from each\nother and return them in order (smaller number,\
    \ larger number).\n>>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2))\n\
    array(1.0, 5.0)\n>>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0))\n\
    array(1.0, 5.0)\n */\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpic_g8dww.php:40\n\
    Stack trace:\n#0 /tmp/tmpic_g8dww.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpic_g8dww.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest_elements = array();\n    $closest_difference = null;\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            $difference = abs($numbers[$i] - $numbers[$j]);\n     \
    \       if ($closest_difference === null || $difference < $closest_difference)\
    \ {\n                $closest_difference = $difference;\n                $closest_elements\
    \ = array($numbers[$i], $numbers[$j]);\n            }\n        }\n    }\n    return\
    \ $closest_elements;\n}\n\n$numbers = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2);\n$closest_elements\
    \ = find_closest_elements($numbers);\necho \"The closest elements are: \" . $closest_elements[0]\
    \ . \" and \" . $closest_elements[1];\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "The closest elements are: 2 and 2.2\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpybug7dmx.php:32\nStack trace:\n#0 /tmp/tmpybug7dmx.php(38):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpybug7dmx.php on line 32\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $closest_diff = abs($closest[0] - $closest[1]);\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n           \
    \ if ($diff < $closest_diff) {\n                $closest[0] = $numbers[$i];\n\
    \                $closest[1] = $numbers[$j];\n                $closest_diff =\
    \ $diff;\n            }\n        }\n    }\n    return $closest;\n}\n\n$numbers\
    \ = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2);\n$closest = find_closest_elements($numbers);\n\
    echo \"The closest elements are \" . $closest[0] . \" and \" . $closest[1] . \"\
    \\n\";\n\n$numbers = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0);\n$closest = find_closest_elements($numbers);\n\
    echo \"The closest elements are \" . $closest[0] . \" and \" . $closest[1] . \"\
    \\n\";\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "The closest elements are 2 and 2.2\nThe closest elements are 2 and 2\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpz7hc6j_r.php:39\nStack\
    \ trace:\n#0 /tmp/tmpz7hc6j_r.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpz7hc6j_r.php\
    \ on line 39\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest_elements = array();\n    $min_diff = INF;\n    for ($i = 0;\
    \ $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n           \
    \ if ($diff < $min_diff) {\n                $min_diff = $diff;\n             \
    \   $closest_elements = array($numbers[$i], $numbers[$j]);\n            }\n  \
    \      }\n    }\n    return $closest_elements;\n}\n\n$numbers = array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2);\nprint_r(find_closest_elements($numbers));\n\n$numbers\
    \ = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0);\nprint_r(find_closest_elements($numbers));\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\nArray\n(\n    [0] => 2\n   \
    \ [1] => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdw4ms0cp.php:34\n\
    Stack trace:\n#0 /tmp/tmpdw4ms0cp.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpdw4ms0cp.php\
    \ on line 34\n"
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest_elements = array();\n    $min_diff = null;\n    for ($i = 0;\
    \ $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n           \
    \ if ($min_diff === null || $diff < $min_diff) {\n                $min_diff =\
    \ $diff;\n                $closest_elements = array($numbers[$i], $numbers[$j]);\n\
    \            }\n        }\n    }\n    sort($closest_elements);\n    return $closest_elements;\n\
    }\n\n$numbers = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2);\n$numbers1 = array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0);\nprint_r(find_closest_elements($numbers));\nprint_r(find_closest_elements($numbers1));\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\nArray\n(\n    [0] => 2\n   \
    \ [1] => 2\n)\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $diff = abs($numbers[0] - $numbers[1]);\n    for ($i = 0;\
    \ $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $diff) {\n     \
    \           $closest[0] = $numbers[$i];\n                $closest[1] = $numbers[$j];\n\
    \                $diff = abs($numbers[$i] - $numbers[$j]);\n            }\n  \
    \      }\n    }\n    return $closest;\n}\n\n/* From a supplied array of numbers\
    \ (of length at least two) select and return two that are the furthest from each\n\
    other and return them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r1cq32y.php:37\n\
    Stack trace:\n#0 /tmp/tmp7r1cq32y.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp7r1cq32y.php\
    \ on line 37\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $diff = abs($numbers[0] - $numbers[1]);\n    for ($i = 0;\
    \ $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $diff) {\n     \
    \           $closest[0] = $numbers[$i];\n                $closest[1] = $numbers[$j];\n\
    \                $diff = abs($numbers[$i] - $numbers[$j]);\n            }\n  \
    \      }\n    }\n    return $closest;\n}\n\n/* From a supplied array of numbers\
    \ (of length at least two) select and return two that are the furthest from each\n\
    other and return them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r1cq32y.php:37\n\
    Stack trace:\n#0 /tmp/tmp7r1cq32y.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp7r1cq32y.php\
    \ on line 37\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest_elements = array();\n    $closest_difference = null;\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            $difference = abs($numbers[$i] - $numbers[$j]);\n     \
    \       if ($closest_difference === null || $difference < $closest_difference)\
    \ {\n                $closest_difference = $difference;\n                $closest_elements\
    \ = array($numbers[$i], $numbers[$j]);\n            }\n        }\n    }\n    return\
    \ $closest_elements;\n}\n\n/* From a supplied array of numbers (of length at least\
    \ two) select and return two that are the furthest from each\nother and return\
    \ them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3ekdb0c2.php:35\n\
    Stack trace:\n#0 /tmp/tmp3ekdb0c2.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp3ekdb0c2.php\
    \ on line 35\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n\t$closest_elements = array();\n\t$closest_difference = 0;\n\tfor ($i = 0;\
    \ $i < count($numbers); $i++) {\n\t\tfor ($j = $i + 1; $j < count($numbers); $j++)\
    \ {\n\t\t\t$difference = abs($numbers[$i] - $numbers[$j]);\n\t\t\tif ($difference\
    \ < $closest_difference || $closest_difference == 0) {\n\t\t\t\t$closest_difference\
    \ = $difference;\n\t\t\t\t$closest_elements = array($numbers[$i], $numbers[$j]);\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn $closest_elements;\n}\n\n/* From a supplied array\
    \ of numbers (of length at least two) select and return two that are the furthest\
    \ from each\nother and return them in order (smaller number, larger number).\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9pi8ksuj.php:35\n\
    Stack trace:\n#0 /tmp/tmp9pi8ksuj.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp9pi8ksuj.php\
    \ on line 35\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $min = INF;\n    $result = array();\n    for ($i = 0; $i < count($numbers)\
    \ - 1; $i++) {\n        for ($j = $i + 1; $j < count($numbers); $j++) {\n    \
    \        $diff = abs($numbers[$i] - $numbers[$j]);\n            if ($diff < $min)\
    \ {\n                $min = $diff;\n                $result = array($numbers[$i],\
    \ $numbers[$j]);\n            }\n        }\n    }\n    return $result;\n}\n\n\
    /* From a supplied array of numbers (of length at least two) select and return\
    \ two that are the furthest from each\nother and return them in order (smaller\
    \ number, larger number).\n>>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4uhifafi.php:35\n\
    Stack trace:\n#0 /tmp/tmp4uhifafi.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp4uhifafi.php\
    \ on line 35\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $closest[2] = abs($numbers[0] - $numbers[1]);\n    for ($i\
    \ = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $closest[2]) {\n\
    \                $closest[0] = $numbers[$i];\n                $closest[1] = $numbers[$j];\n\
    \                $closest[2] = abs($numbers[$i] - $numbers[$j]);\n           \
    \ }\n        }\n    }\n    return array($closest[0], $closest[1]);\n}\n\n/* From\
    \ a supplied array of numbers (of length at least two) select and return two that\
    \ are the furthest from each\nother and return them in order (smaller number,\
    \ larger number).\n>>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2))\n\
    array(1.0, 5.0)\n>>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0))\n\
    array(1.0, 5.0)*/\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm61tnbnt.php:37\n\
    Stack trace:\n#0 /tmp/tmpm61tnbnt.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpm61tnbnt.php\
    \ on line 37\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $min = abs($numbers[0] - $numbers[1]);\n    for ($i = 0;\
    \ $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $min) {\n      \
    \          $min = abs($numbers[$i] - $numbers[$j]);\n                $closest[0]\
    \ = $numbers[$i];\n                $closest[1] = $numbers[$j];\n            }\n\
    \        }\n    }\n    return $closest;\n}\n\n$numbers = array(1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2);\n$closest = find_closest_elements($numbers);\nprint_r($closest);\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpit3dpj05.php:34\nStack trace:\n#0 /tmp/tmpit3dpj05.php(40):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpit3dpj05.php on line 34\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $min_diff = abs($numbers[0] - $numbers[1]);\n    $min_diff_index = 0;\n\
    \    for ($i = 1; $i < count($numbers) - 1; $i++) {\n        $diff = abs($numbers[$i]\
    \ - $numbers[$i + 1]);\n        if ($diff < $min_diff) {\n            $min_diff\
    \ = $diff;\n            $min_diff_index = $i;\n        }\n    }\n    return array($numbers[$min_diff_index],\
    \ $numbers[$min_diff_index + 1]);\n}\n\n/* From a supplied array of numbers (of\
    \ length at least two) select and return two that are the furthest from each\n\
    other and return them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphtyragbl.php:33\n\
    Stack trace:\n#0 /tmp/tmphtyragbl.php(39): test()\n#1 {main}\n  thrown in /tmp/tmphtyragbl.php\
    \ on line 33\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $min = abs($numbers[0] - $numbers[1]);\n    $result = array($numbers[0],\
    \ $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($numbers); $j++) {\n            if (abs($numbers[$i] -\
    \ $numbers[$j]) < $min) {\n                $min = abs($numbers[$i] - $numbers[$j]);\n\
    \                $result = array($numbers[$i], $numbers[$j]);\n            }\n\
    \        }\n    }\n    return $result;\n}\n\n$numbers = array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2);\nvar_dump(find_closest_elements($numbers));\n\n$numbers = array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0);\nvar_dump(find_closest_elements($numbers));\nfunction\
    \ candidate(...$args) {\n    return find_closest_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9,\
    \ 4.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest_elements = array();\n    $closest_difference = 0;\n    for ($i\
    \ = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            $difference = abs($numbers[$i] - $numbers[$j]);\n     \
    \       if ($difference < $closest_difference || $closest_difference == 0) {\n\
    \                $closest_difference = $difference;\n                $closest_elements\
    \ = array($numbers[$i], $numbers[$j]);\n            }\n        }\n    }\n    return\
    \ $closest_elements;\n}\n\n/* From a supplied array of numbers (of length at least\
    \ two) select and return two that are the furthest from each\nother and return\
    \ them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgzmzvru9.php:35\n\
    Stack trace:\n#0 /tmp/tmpgzmzvru9.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpgzmzvru9.php\
    \ on line 35\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $diff = abs($numbers[0] - $numbers[1]);\n    for ($i = 0;\
    \ $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $diff) {\n     \
    \           $closest[0] = $numbers[$i];\n                $closest[1] = $numbers[$j];\n\
    \                $diff = abs($numbers[$i] - $numbers[$j]);\n            }\n  \
    \      }\n    }\n    return $closest;\n}\n\n$numbers = array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2);\nprint_r(find_closest_elements($numbers));\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpkpg__sfk.php:33\nStack trace:\n#0 /tmp/tmpkpg__sfk.php(39):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpkpg__sfk.php on line 33\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $diff = abs($numbers[0] - $numbers[1]);\n    for ($i = 0;\
    \ $i < count($numbers); $i++) {\n        for ($j = 0; $j < count($numbers); $j++)\
    \ {\n            if ($i != $j) {\n                $new_diff = abs($numbers[$i]\
    \ - $numbers[$j]);\n                if ($new_diff < $diff) {\n               \
    \     $diff = $new_diff;\n                    $closest[0] = $numbers[$i];\n  \
    \                  $closest[1] = $numbers[$j];\n                }\n          \
    \  }\n        }\n    }\n    return $closest;\n}\n\n/* From a supplied array of\
    \ numbers (of length at least two) select and return two that are the furthest\
    \ from each\nother and return them in order (smaller number, larger number).\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplqpyhfq7.php:40\n\
    Stack trace:\n#0 /tmp/tmplqpyhfq7.php(46): test()\n#1 {main}\n  thrown in /tmp/tmplqpyhfq7.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n\t$closest_elements = array();\n\t$closest_difference = null;\n\tfor ($i\
    \ = 0; $i < count($numbers) - 1; $i++) {\n\t\tfor ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n\t\t\t$difference = abs($numbers[$i] - $numbers[$j]);\n\t\t\tif ($closest_difference\
    \ === null || $difference < $closest_difference) {\n\t\t\t\t$closest_difference\
    \ = $difference;\n\t\t\t\t$closest_elements = array($numbers[$i], $numbers[$j]);\n\
    \t\t\t}\n\t\t}\n\t}\n\tsort($closest_elements);\n\treturn $closest_elements;\n\
    }\n\n/* From a supplied array of numbers (of length at least two) select and return\
    \ two that are the furthest from each\nother and return them in order (smaller\
    \ number, larger number).\n>>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $min_diff = abs($numbers[0] - $numbers[1]);\n    for ($i\
    \ = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n           \
    \ if ($diff < $min_diff) {\n                $min_diff = $diff;\n             \
    \   $closest[0] = $numbers[$i];\n                $closest[1] = $numbers[$j];\n\
    \            }\n        }\n    }\n    return $closest;\n}\n\n$numbers = array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2);\n$closest = find_closest_elements($numbers);\necho\
    \ \"The closest elements are: \" . $closest[0] . \" and \" . $closest[1];\nfunction\
    \ candidate(...$args) {\n    return find_closest_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9,\
    \ 4.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "The closest elements are: 2 and 2.2\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp1h_by3wo.php:35\nStack trace:\n#0 /tmp/tmp1h_by3wo.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp1h_by3wo.php on line 35\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $diff = abs($numbers[0] - $numbers[1]);\n    for ($i = 0;\
    \ $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $diff) {\n     \
    \           $closest[0] = $numbers[$i];\n                $closest[1] = $numbers[$j];\n\
    \                $diff = abs($numbers[$i] - $numbers[$j]);\n            }\n  \
    \      }\n    }\n    return $closest;\n}\n\n/*\n * From a supplied array of numbers\
    \ (of length at least two) select and return two that are the furthest from each\n\
    other and return them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)\n*/\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp4vxqutm.php:39\n\
    Stack trace:\n#0 /tmp/tmpp4vxqutm.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpp4vxqutm.php\
    \ on line 39\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest_elements = array();\n    $closest_difference = abs($numbers[0]\
    \ - $numbers[1]);\n    $closest_elements[0] = $numbers[0];\n    $closest_elements[1]\
    \ = $numbers[1];\n    for ($i = 0; $i < count($numbers); $i++) {\n        for\
    \ ($j = $i + 1; $j < count($numbers); $j++) {\n            $difference = abs($numbers[$i]\
    \ - $numbers[$j]);\n            if ($difference < $closest_difference) {\n   \
    \             $closest_difference = $difference;\n                $closest_elements[0]\
    \ = $numbers[$i];\n                $closest_elements[1] = $numbers[$j];\n    \
    \        }\n        }\n    }\n    return $closest_elements;\n}\n\n$numbers = array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2);\n$closest_elements = find_closest_elements($numbers);\n\
    echo '<pre>';\nprint_r($closest_elements);\necho '</pre>';\n\n$numbers = array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0);\n$closest_elements = find_closest_elements($numbers);\n\
    echo '<pre>';\nprint_r($closest_elements);\necho '</pre>';\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 2\n    [1] => 2.2\n)\n</pre><pre>Array\n(\n \
    \   [0] => 2\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp0ztik2tz.php:43\nStack trace:\n#0 /tmp/tmp0ztik2tz.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp0ztik2tz.php on line 43\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest_elements = array();\n    $closest_difference = $numbers[1] -\
    \ $numbers[0];\n    $closest_elements[0] = $numbers[0];\n    $closest_elements[1]\
    \ = $numbers[1];\n    for ($i = 0; $i < count($numbers) - 1; $i++) {\n       \
    \ $difference = $numbers[$i + 1] - $numbers[$i];\n        if ($difference < $closest_difference)\
    \ {\n            $closest_difference = $difference;\n            $closest_elements[0]\
    \ = $numbers[$i];\n            $closest_elements[1] = $numbers[$i + 1];\n    \
    \    }\n    }\n    return $closest_elements;\n}\n\n$numbers = array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2);\n$closest_elements = find_closest_elements($numbers);\n\
    echo \"The closest elements are: \" . $closest_elements[0] . \" and \" . $closest_elements[1];\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "The closest elements are: 5 and 2.2\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpxsd35tvy.php:32\nStack trace:\n#0 /tmp/tmpxsd35tvy.php(39):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpxsd35tvy.php on line 32\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest_pair = array(0, 0);\n    $closest_diff = abs($numbers[0] - $numbers[1]);\n\
    \    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j\
    \ < count($numbers); $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n\
    \            if ($diff < $closest_diff) {\n                $closest_diff = $diff;\n\
    \                $closest_pair = array($numbers[$i], $numbers[$j]);\n        \
    \    }\n        }\n    }\n    return $closest_pair;\n}\n\n$numbers = array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2);\n$closest_pair = find_closest_elements($numbers);\n\
    echo $closest_pair[0] . ' ' . $closest_pair[1];\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "2 2.2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpap3coyxi.php:32\n\
    Stack trace:\n#0 /tmp/tmpap3coyxi.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpap3coyxi.php\
    \ on line 32\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array($numbers[0], $numbers[1]);\n    $min_diff = abs($numbers[0]\
    \ - $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++) {\n        for\
    \ ($j = $i + 1; $j < count($numbers); $j++) {\n            $diff = abs($numbers[$i]\
    \ - $numbers[$j]);\n            if ($diff < $min_diff) {\n                $min_diff\
    \ = $diff;\n                $closest = array($numbers[$i], $numbers[$j]);\n  \
    \          }\n        }\n    }\n    return $closest;\n}\n\n$numbers = array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2);\n$numbers1 = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0);\n\
    \nprint_r(find_closest_elements($numbers));\nprint_r(find_closest_elements($numbers1));\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\nArray\n(\n    [0] => 2\n   \
    \ [1] => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzjplghsu.php:34\n\
    Stack trace:\n#0 /tmp/tmpzjplghsu.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpzjplghsu.php\
    \ on line 34\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n\t$closest = array();\n\t$closest[0] = $numbers[0];\n\t$closest[1] = $numbers[1];\n\
    \t$closest_diff = abs($numbers[0] - $numbers[1]);\n\tfor ($i = 0; $i < count($numbers);\
    \ $i++) {\n\t\tfor ($j = $i + 1; $j < count($numbers); $j++) {\n\t\t\t$diff =\
    \ abs($numbers[$i] - $numbers[$j]);\n\t\t\tif ($diff < $closest_diff) {\n\t\t\t\
    \t$closest[0] = $numbers[$i];\n\t\t\t\t$closest[1] = $numbers[$j];\n\t\t\t\t$closest_diff\
    \ = $diff;\n\t\t\t}\n\t\t}\n\t}\n\treturn $closest;\n}\n\n/* From a supplied array\
    \ of numbers (of length at least two) select and return two that are the furthest\
    \ from each\nother and return them in order (smaller number, larger number).\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $min = abs($numbers[0] - $numbers[1]);\n    $result = array($numbers[0],\
    \ $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($numbers); $j++) {\n            if (abs($numbers[$i] -\
    \ $numbers[$j]) < $min) {\n                $min = abs($numbers[$i] - $numbers[$j]);\n\
    \                $result = array($numbers[$i], $numbers[$j]);\n            }\n\
    \        }\n    }\n    sort($result);\n    return $result;\n}\n\n$numbers = array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2);\necho '<pre>';\nprint_r(find_closest_elements($numbers));\n\
    echo '</pre>';\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 2\n    [1] => 2.2\n)\n</pre>"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $diff = abs($numbers[0] - $numbers[1]);\n    for ($i = 0;\
    \ $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $diff) {\n     \
    \           $closest[0] = $numbers[$i];\n                $closest[1] = $numbers[$j];\n\
    \                $diff = abs($numbers[$i] - $numbers[$j]);\n            }\n  \
    \      }\n    }\n    return $closest;\n}\n\n/* From a supplied array of numbers\
    \ (of length at least two) select and return two that are the furthest from each\n\
    other and return them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r1cq32y.php:37\n\
    Stack trace:\n#0 /tmp/tmp7r1cq32y.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp7r1cq32y.php\
    \ on line 37\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest_elements = array();\n    $closest_difference = 0;\n    $numbers_count\
    \ = count($numbers);\n    for ($i = 0; $i < $numbers_count; $i++) {\n        for\
    \ ($j = $i + 1; $j < $numbers_count; $j++) {\n            $difference = abs($numbers[$i]\
    \ - $numbers[$j]);\n            if ($difference < $closest_difference || $closest_difference\
    \ == 0) {\n                $closest_difference = $difference;\n              \
    \  $closest_elements = array($numbers[$i], $numbers[$j]);\n            }\n   \
    \     }\n    }\n    return $closest_elements;\n}\n\n$numbers = array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2);\n$closest_elements = find_closest_elements($numbers);\n\
    echo \"The closest elements are \" . $closest_elements[0] . \" and \" . $closest_elements[1];\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "The closest elements are 2 and 2.2\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpyd4rc_kt.php:33\nStack trace:\n#0 /tmp/tmpyd4rc_kt.php(39):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpyd4rc_kt.php on line 33\n"
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest_diff = abs($numbers[0] - $numbers[1]);\n    $closest_elements\
    \ = array($numbers[0], $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++)\
    \ {\n        for ($j = $i + 1; $j < count($numbers); $j++) {\n            $diff\
    \ = abs($numbers[$i] - $numbers[$j]);\n            if ($diff < $closest_diff)\
    \ {\n                $closest_diff = $diff;\n                $closest_elements\
    \ = array($numbers[$i], $numbers[$j]);\n            }\n        }\n    }\n    sort($closest_elements);\n\
    \    return $closest_elements;\n}\n\n/* From a supplied array of numbers (of length\
    \ at least two) select and return two that are the furthest from each\nother and\
    \ return them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $closest_diff = abs($closest[0] - $closest[1]);\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n           \
    \ if ($diff < $closest_diff) {\n                $closest_diff = $diff;\n     \
    \           $closest[0] = $numbers[$i];\n                $closest[1] = $numbers[$j];\n\
    \            }\n        }\n    }\n    return $closest;\n}\n\n$numbers = array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2);\n$closest = find_closest_elements($numbers);\nprint_r($closest);\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpgtnook4v.php:35\nStack trace:\n#0 /tmp/tmpgtnook4v.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpgtnook4v.php on line 35\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n\t$min = $numbers[0] - $numbers[1];\n\t$min_index = 0;\n\tfor ($i = 0; $i\
    \ < count($numbers) - 1; $i++) {\n\t\t$diff = $numbers[$i] - $numbers[$i + 1];\n\
    \t\tif (abs($diff) < abs($min)) {\n\t\t\t$min = $diff;\n\t\t\t$min_index = $i;\n\
    \t\t}\n\t}\n\treturn array($numbers[$min_index], $numbers[$min_index + 1]);\n\
    }\n\n/* From a supplied array of numbers (of length at least two) select and return\
    \ two that are the furthest from each\nother and return them in order (smaller\
    \ number, larger number).\n>>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf_viodux.php:33\n\
    Stack trace:\n#0 /tmp/tmpf_viodux.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpf_viodux.php\
    \ on line 33\n"
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $min = INF;\n    for ($i = 0; $i < count($numbers);\
    \ $i++) {\n        for ($j = $i + 1; $j < count($numbers); $j++) {\n         \
    \   $diff = abs($numbers[$i] - $numbers[$j]);\n            if ($diff < $min) {\n\
    \                $min = $diff;\n                $closest = array($numbers[$i],\
    \ $numbers[$j]);\n            }\n        }\n    }\n    sort($closest);\n    return\
    \ $closest;\n}\n\n/* From a supplied array of numbers (of length at least two)\
    \ select and return two that are the furthest from each\nother and return them\
    \ in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest_elements = array();\n    $closest_difference = 0;\n    $current_difference\
    \ = 0;\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i +\
    \ 1; $j < count($numbers); $j++) {\n            $current_difference = abs($numbers[$i]\
    \ - $numbers[$j]);\n            if ($current_difference < $closest_difference\
    \ || $closest_difference == 0) {\n                $closest_difference = $current_difference;\n\
    \                $closest_elements = array($numbers[$i], $numbers[$j]);\n    \
    \        }\n        }\n    }\n    return $closest_elements;\n}\n\n$numbers = array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2);\n$closest_elements = find_closest_elements($numbers);\n\
    echo \"The closest elements are: \" . $closest_elements[0] . \" and \" . $closest_elements[1];\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "The closest elements are: 2 and 2.2\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp_vdcqkd3.php:33\nStack trace:\n#0 /tmp/tmp_vdcqkd3.php(39):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp_vdcqkd3.php on line 33\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $diff = abs($numbers[0] - $numbers[1]);\n    for ($i = 0;\
    \ $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $diff) {\n     \
    \           $closest[0] = $numbers[$i];\n                $closest[1] = $numbers[$j];\n\
    \                $diff = abs($numbers[$i] - $numbers[$j]);\n            }\n  \
    \      }\n    }\n    return $closest;\n}\n\n$numbers = array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2);\nvar_dump(find_closest_elements($numbers));\n\n/*\n * From a supplied\
    \ array of numbers (of length at least two) select and return two that are the\
    \ furthest from each\nother and return them in order (smaller number, larger number).\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)\n\
    \ */\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "array(2) {\n  [0]=>\n  float(2)\n  [1]=>\n  float(2.2)\n}\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpcdpnz3xd.php:42\nStack trace:\n\
    #0 /tmp/tmpcdpnz3xd.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpcdpnz3xd.php\
    \ on line 42\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $min = abs($numbers[0] - $numbers[1]);\n    $min_elements = array($numbers[0],\
    \ $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($numbers); $j++) {\n            if (abs($numbers[$i] -\
    \ $numbers[$j]) < $min) {\n                $min = abs($numbers[$i] - $numbers[$j]);\n\
    \                $min_elements = array($numbers[$i], $numbers[$j]);\n        \
    \    }\n        }\n    }\n    return $min_elements;\n}\n\n/* From a supplied array\
    \ of numbers (of length at least two) select and return two that are the furthest\
    \ from each\nother and return them in order (smaller number, larger number).\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp37b9zpjr.php:34\n\
    Stack trace:\n#0 /tmp/tmp37b9zpjr.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp37b9zpjr.php\
    \ on line 34\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $closest_diff = abs($closest[0] - $closest[1]);\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n           \
    \ if ($diff < $closest_diff) {\n                $closest[0] = $numbers[$i];\n\
    \                $closest[1] = $numbers[$j];\n                $closest_diff =\
    \ $diff;\n            }\n        }\n    }\n    return $closest;\n}\n\n$numbers\
    \ = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2);\n$closest = find_closest_elements($numbers);\n\
    echo $closest[0] . \" \" . $closest[1];\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "2 2.2\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkythd21r.php:35\n\
    Stack trace:\n#0 /tmp/tmpkythd21r.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpkythd21r.php\
    \ on line 35\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n\t$closest = array();\n\t$closest[0] = $numbers[0];\n\t$closest[1] = $numbers[1];\n\
    \t$diff = abs($numbers[0] - $numbers[1]);\n\tfor ($i = 0; $i < count($numbers);\
    \ $i++) {\n\t\tfor ($j = $i + 1; $j < count($numbers); $j++) {\n\t\t\tif (abs($numbers[$i]\
    \ - $numbers[$j]) < $diff) {\n\t\t\t\t$closest[0] = $numbers[$i];\n\t\t\t\t$closest[1]\
    \ = $numbers[$j];\n\t\t\t\t$diff = abs($numbers[$i] - $numbers[$j]);\n\t\t\t}\n\
    \t\t}\n\t}\n\treturn $closest;\n}\n\n/* From a supplied array of numbers (of length\
    \ at least two) select and return two that are the furthest from each\nother and\
    \ return them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6kfoyxx4.php:37\n\
    Stack trace:\n#0 /tmp/tmp6kfoyxx4.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp6kfoyxx4.php\
    \ on line 37\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest_elements = array();\n    $closest_difference = 0;\n    for ($i\
    \ = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            $difference = abs($numbers[$i] - $numbers[$j]);\n     \
    \       if ($difference < $closest_difference || $closest_difference == 0) {\n\
    \                $closest_difference = $difference;\n                $closest_elements\
    \ = array($numbers[$i], $numbers[$j]);\n            }\n        }\n    }\n    return\
    \ $closest_elements;\n}\n\n/* From a supplied array of numbers (of length at least\
    \ two) select and return two that are the furthest from each\nother and return\
    \ them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgzmzvru9.php:35\n\
    Stack trace:\n#0 /tmp/tmpgzmzvru9.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpgzmzvru9.php\
    \ on line 35\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $diff = abs($numbers[0] - $numbers[1]);\n    for ($i = 0;\
    \ $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $diff) {\n     \
    \           $closest[0] = $numbers[$i];\n                $closest[1] = $numbers[$j];\n\
    \                $diff = abs($numbers[$i] - $numbers[$j]);\n            }\n  \
    \      }\n    }\n    return $closest;\n}\n\n$numbers = array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2);\necho \"The closest elements are: \";\nprint_r(find_closest_elements($numbers));\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "The closest elements are: Array\n(\n    [0] => 2\n    [1] => 2.2\n)\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpj5tj5ujy.php:34\nStack\
    \ trace:\n#0 /tmp/tmpj5tj5ujy.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpj5tj5ujy.php\
    \ on line 34\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest_elements = array();\n    $min_diff = abs($numbers[0] - $numbers[1]);\n\
    \    $closest_elements[] = $numbers[0];\n    $closest_elements[] = $numbers[1];\n\
    \    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j\
    \ < count($numbers); $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n\
    \            if ($diff < $min_diff) {\n                $min_diff = $diff;\n  \
    \              $closest_elements[0] = $numbers[$i];\n                $closest_elements[1]\
    \ = $numbers[$j];\n            }\n        }\n    }\n    return $closest_elements;\n\
    }\n\n$numbers = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2);\n$closest_elements = find_closest_elements($numbers);\n\
    echo \"The closest numbers are: \" . $closest_elements[0] . \" and \" . $closest_elements[1];\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "The closest numbers are: 2 and 2.2\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpxx3xsnqu.php:35\nStack trace:\n#0 /tmp/tmpxx3xsnqu.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpxx3xsnqu.php on line 35\n"
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest_diff = abs($numbers[0] - $numbers[1]);\n    $closest_elements\
    \ = array($numbers[0], $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++)\
    \ {\n        for ($j = $i + 1; $j < count($numbers); $j++) {\n            $diff\
    \ = abs($numbers[$i] - $numbers[$j]);\n            if ($diff < $closest_diff)\
    \ {\n                $closest_diff = $diff;\n                $closest_elements\
    \ = array($numbers[$i], $numbers[$j]);\n            }\n        }\n    }\n    sort($closest_elements);\n\
    \    return $closest_elements;\n}\n\n$numbers = array(1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2);\n$closest_elements = find_closest_elements($numbers);\necho \"The closest\
    \ elements are: \" . $closest_elements[0] . \" and \" . $closest_elements[1];\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'The closest elements are: 2 and 2.2'
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest_elements = array();\n    $closest_difference = null;\n    for\
    \ ($i = 0; $i < count($numbers) - 1; $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            $difference = abs($numbers[$i] - $numbers[$j]);\n     \
    \       if ($closest_difference === null || $difference < $closest_difference)\
    \ {\n                $closest_difference = $difference;\n                $closest_elements\
    \ = array($numbers[$i], $numbers[$j]);\n            }\n        }\n    }\n    sort($closest_elements);\n\
    \    return $closest_elements;\n}\n\n$numbers = array(1.0, 2.0, 3.0, 4.0, 5.0,\
    \ 2.2);\n$closest_elements = find_closest_elements($numbers);\necho \"The closest\
    \ elements in array: \";\nprint_r($numbers);\necho \" are \";\nprint_r($closest_elements);\n\
    echo \"\\n\";\n\n$numbers = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0);\n$closest_elements\
    \ = find_closest_elements($numbers);\necho \"The closest elements in array: \"\
    ;\nprint_r($numbers);\necho \" are \";\nprint_r($closest_elements);\necho \"\\\
    n\";\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "The closest elements in array: Array\n(\n    [0] => 1\n    [1] => 2\n \
    \   [2] => 3\n    [3] => 4\n    [4] => 5\n    [5] => 2.2\n)\n are Array\n(\n \
    \   [0] => 2\n    [1] => 2.2\n)\n\nThe closest elements in array: Array\n(\n \
    \   [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4] => 5\n    [5]\
    \ => 2\n)\n are Array\n(\n    [0] => 2\n    [1] => 2\n)\n\n"
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array($numbers[0], $numbers[1]);\n    $min_diff = abs($numbers[0]\
    \ - $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++) {\n        for\
    \ ($j = $i + 1; $j < count($numbers); $j++) {\n            $diff = abs($numbers[$i]\
    \ - $numbers[$j]);\n            if ($diff < $min_diff) {\n                $min_diff\
    \ = $diff;\n                $closest = array($numbers[$i], $numbers[$j]);\n  \
    \          }\n        }\n    }\n    sort($closest);\n    return $closest;\n}\n\
    \n/* From a supplied array of numbers (of length at least two) select and return\
    \ two that are the furthest from each\nother and return them in order (smaller\
    \ number, larger number).\n>>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n\t$diff = abs($numbers[0] - $numbers[1]);\n\t$index = 0;\n\tfor ($i = 0;\
    \ $i < count($numbers) - 1; $i++) {\n\t\tif (abs($numbers[$i] - $numbers[$i +\
    \ 1]) < $diff) {\n\t\t\t$diff = abs($numbers[$i] - $numbers[$i + 1]);\n\t\t\t\
    $index = $i;\n\t\t}\n\t}\n\treturn array($numbers[$index], $numbers[$index + 1]);\n\
    }\n\n/* From a supplied array of numbers (of length at least two) select and return\
    \ two that are the furthest from each\nother and return them in order (smaller\
    \ number, larger number).\n>>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn3ybor4g.php:32\n\
    Stack trace:\n#0 /tmp/tmpn3ybor4g.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpn3ybor4g.php\
    \ on line 32\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array(0, 0);\n    $diff = abs($numbers[0] - $numbers[1]);\n\
    \    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j\
    \ < count($numbers); $j++) {\n            if (abs($numbers[$i] - $numbers[$j])\
    \ < $diff) {\n                $diff = abs($numbers[$i] - $numbers[$j]);\n    \
    \            $closest[0] = $numbers[$i];\n                $closest[1] = $numbers[$j];\n\
    \            }\n        }\n    }\n    return $closest;\n}\n\n$numbers = array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2);\n$closest = find_closest_elements($numbers);\necho\
    \ \"The closest elements are: \" . $closest[0] . \" and \" . $closest[1];\nfunction\
    \ candidate(...$args) {\n    return find_closest_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9,\
    \ 4.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "The closest elements are: 2 and 2.2\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpnt7tpg0f.php:32\nStack trace:\n#0 /tmp/tmpnt7tpg0f.php(38):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpnt7tpg0f.php on line 32\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $min = $numbers[0];\n    $max = $numbers[0];\n    $min_index = 0;\n \
    \   $max_index = 0;\n    for ($i = 1; $i < count($numbers); $i++) {\n        if\
    \ ($numbers[$i] < $min) {\n            $min = $numbers[$i];\n            $min_index\
    \ = $i;\n        }\n        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n\
    \            $max_index = $i;\n        }\n    }\n    $min_diff = $max - $min;\n\
    \    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j\
    \ < count($numbers); $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n\
    \            if ($diff < $min_diff) {\n                $min_diff = $diff;\n  \
    \              $min_index = $i;\n                $max_index = $j;\n          \
    \  }\n        }\n    }\n    return array($numbers[$min_index], $numbers[$max_index]);\n\
    }\n\n/* From a supplied array of numbers (of length at least two) select and return\
    \ two that are the furthest from each\nother and return them in order (smaller\
    \ number, larger number).\n>>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpchkqf2rt.php:49\n\
    Stack trace:\n#0 /tmp/tmpchkqf2rt.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpchkqf2rt.php\
    \ on line 49\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $diff = abs($numbers[0] - $numbers[1]);\n    for ($i = 0;\
    \ $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $diff) {\n     \
    \           $closest[0] = $numbers[$i];\n                $closest[1] = $numbers[$j];\n\
    \                $diff = abs($numbers[$i] - $numbers[$j]);\n            }\n  \
    \      }\n    }\n    return $closest;\n}\n\n/* From a supplied array of numbers\
    \ (of length at least two) select and return two that are the furthest from each\n\
    other and return them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r1cq32y.php:37\n\
    Stack trace:\n#0 /tmp/tmp7r1cq32y.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp7r1cq32y.php\
    \ on line 37\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $diff = abs($numbers[0] - $numbers[1]);\n    for ($i = 0;\
    \ $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $diff) {\n     \
    \           $closest[0] = $numbers[$i];\n                $closest[1] = $numbers[$j];\n\
    \                $diff = abs($numbers[$i] - $numbers[$j]);\n            }\n  \
    \      }\n    }\n    return $closest;\n}\n\n/*\n * From a supplied array of numbers\
    \ (of length at least two) select and return two that are the furthest from each\n\
    other and return them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)\n */\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0upu8czy.php:39\n\
    Stack trace:\n#0 /tmp/tmp0upu8czy.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp0upu8czy.php\
    \ on line 39\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $diff = abs($numbers[0] - $numbers[1]);\n    for ($i = 0;\
    \ $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $diff) {\n     \
    \           $closest[0] = $numbers[$i];\n                $closest[1] = $numbers[$j];\n\
    \                $diff = abs($numbers[$i] - $numbers[$j]);\n            }\n  \
    \      }\n    }\n    return $closest;\n}\n\n/* From a supplied array of numbers\
    \ (of length at least two) select and return two that are the furthest from each\n\
    other and return them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r1cq32y.php:37\n\
    Stack trace:\n#0 /tmp/tmp7r1cq32y.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp7r1cq32y.php\
    \ on line 37\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest_elements = array();\n    $min_diff = $numbers[1] - $numbers[0];\n\
    \    $closest_elements[] = $numbers[0];\n    $closest_elements[] = $numbers[1];\n\
    \    for ($i = 0; $i < count($numbers) - 1; $i++) {\n        $diff = $numbers[$i\
    \ + 1] - $numbers[$i];\n        if ($diff < $min_diff) {\n            $min_diff\
    \ = $diff;\n            $closest_elements = array();\n            $closest_elements[]\
    \ = $numbers[$i];\n            $closest_elements[] = $numbers[$i + 1];\n     \
    \   }\n    }\n    return $closest_elements;\n}\n\n$numbers = array(1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2);\n$numbers2 = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0);\n\necho '<pre>';\n\
    print_r(find_closest_elements($numbers));\necho '</pre>';\n\necho '<pre>';\nprint_r(find_closest_elements($numbers2));\n\
    echo '</pre>';\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 5\n    [1] => 2.2\n)\n</pre><pre>Array\n(\n \
    \   [0] => 5\n    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpnpbk1sek.php:40\nStack trace:\n#0 /tmp/tmpnpbk1sek.php(47): test()\n\
    #1 {main}\n  thrown in /tmp/tmpnpbk1sek.php on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n\t$min = abs($numbers[0] - $numbers[1]);\n\t$min_index = 0;\n\tfor ($i =\
    \ 1; $i < count($numbers) - 1; $i++) {\n\t\t$diff = abs($numbers[$i] - $numbers[$i\
    \ + 1]);\n\t\tif ($diff < $min) {\n\t\t\t$min = $diff;\n\t\t\t$min_index = $i;\n\
    \t\t}\n\t}\n\treturn array($numbers[$min_index], $numbers[$min_index + 1]);\n\
    }\n\n/* From a supplied array of numbers (of length at least two) select and return\
    \ two that are the furthest apart and\nreturn them in order (smaller number, larger\
    \ number).\n>>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2))\n\
    array(1.0, 5.0)\n>>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0))\n\
    array(1.0, 5.0)*/\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcx0a8hhe.php:33\n\
    Stack trace:\n#0 /tmp/tmpcx0a8hhe.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpcx0a8hhe.php\
    \ on line 33\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $min = $numbers[0];\n    $max = $numbers[0];\n    $min_index = 0;\n \
    \   $max_index = 0;\n    for ($i = 1; $i < count($numbers); $i++) {\n        if\
    \ ($numbers[$i] < $min) {\n            $min = $numbers[$i];\n            $min_index\
    \ = $i;\n        }\n        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n\
    \            $max_index = $i;\n        }\n    }\n    if ($min_index == $max_index)\
    \ {\n        return array($min, $max);\n    }\n    $diff = $max - $min;\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if ($numbers[$j] - $numbers[$i] < $diff) {\n          \
    \      $diff = $numbers[$j] - $numbers[$i];\n                $min = $numbers[$i];\n\
    \                $max = $numbers[$j];\n            }\n        }\n    }\n    return\
    \ array($min, $max);\n}\n\n$numbers = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2);\nprint_r(find_closest_elements($numbers));\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 5\n    [1] => 2.2\n)\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpr_7qae84.php:46\nStack trace:\n#0 /tmp/tmpr_7qae84.php(53):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpr_7qae84.php on line 46\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $diff = abs($numbers[0] - $numbers[1]);\n    for ($i = 0;\
    \ $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $diff) {\n     \
    \           $closest[0] = $numbers[$i];\n                $closest[1] = $numbers[$j];\n\
    \                $diff = abs($numbers[$i] - $numbers[$j]);\n            }\n  \
    \      }\n    }\n    return $closest;\n}\n\n/* From a supplied array of numbers\
    \ (of length at least two) select and return two that are the furthest apart\n\
    and return them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvavm9h62.php:37\n\
    Stack trace:\n#0 /tmp/tmpvavm9h62.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpvavm9h62.php\
    \ on line 37\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $difference = abs($numbers[0] - $numbers[1]);\n    for ($i\
    \ = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $difference) {\n\
    \                $difference = abs($numbers[$i] - $numbers[$j]);\n           \
    \     $closest[0] = $numbers[$i];\n                $closest[1] = $numbers[$j];\n\
    \            }\n        }\n    }\n    return $closest;\n}\n\n$numbers = array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2);\n$closest = find_closest_elements($numbers);\necho\
    \ \"The closest numbers are: \" . $closest[0] . \" and \" . $closest[1];\nfunction\
    \ candidate(...$args) {\n    return find_closest_elements(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9,\
    \ 4.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "The closest numbers are: 2 and 2.2\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpyh8fo0i6.php:34\nStack trace:\n#0 /tmp/tmpyh8fo0i6.php(40):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpyh8fo0i6.php on line 34\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest_elements = array();\n    $closest_difference = null;\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            $difference = abs($numbers[$i] - $numbers[$j]);\n     \
    \       if ($closest_difference === null || $difference < $closest_difference)\
    \ {\n                $closest_difference = $difference;\n                $closest_elements\
    \ = array($numbers[$i], $numbers[$j]);\n            }\n        }\n    }\n    return\
    \ $closest_elements;\n}\n\n$numbers = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2);\nprint_r(find_closest_elements($numbers));\n\
    \n$numbers = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0);\nprint_r(find_closest_elements($numbers));\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $diff = abs($numbers[0] - $numbers[1]);\n    for ($i = 0;\
    \ $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $diff) {\n     \
    \           $closest[0] = $numbers[$i];\n                $closest[1] = $numbers[$j];\n\
    \                $diff = abs($numbers[$i] - $numbers[$j]);\n            }\n  \
    \      }\n    }\n    return $closest;\n}\n\n/* From a supplied array of numbers\
    \ (of length at least two) select and return two that are the furthest from each\n\
    other and return them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r1cq32y.php:37\n\
    Stack trace:\n#0 /tmp/tmp7r1cq32y.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp7r1cq32y.php\
    \ on line 37\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $diff = abs($numbers[0] - $numbers[1]);\n    for ($i = 0;\
    \ $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $diff) {\n     \
    \           $closest[0] = $numbers[$i];\n                $closest[1] = $numbers[$j];\n\
    \                $diff = abs($numbers[$i] - $numbers[$j]);\n            }\n  \
    \      }\n    }\n    return $closest;\n}\n\n/* From a supplied array of numbers\
    \ (of length at least two) select and return two that are the furthest from each\n\
    other and return them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r1cq32y.php:37\n\
    Stack trace:\n#0 /tmp/tmp7r1cq32y.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp7r1cq32y.php\
    \ on line 37\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $min = abs($numbers[0] - $numbers[1]);\n    for ($i = 0;\
    \ $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $min) {\n      \
    \          $min = abs($numbers[$i] - $numbers[$j]);\n                $closest[0]\
    \ = $numbers[$i];\n                $closest[1] = $numbers[$j];\n            }\n\
    \        }\n    }\n    return $closest;\n}\n\n$numbers = array(1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2);\n$closest = find_closest_elements($numbers);\necho \"The closest\
    \ elements are: \" . $closest[0] . \" and \" . $closest[1];\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "The closest elements are: 2 and 2.2\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpud03ytlv.php:34\nStack trace:\n#0 /tmp/tmpud03ytlv.php(40):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpud03ytlv.php on line 34\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $min = $numbers[0];\n    $max = $numbers[1];\n    $min_diff = abs($numbers[0]\
    \ - $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++) {\n        for\
    \ ($j = $i + 1; $j < count($numbers); $j++) {\n            $diff = abs($numbers[$i]\
    \ - $numbers[$j]);\n            if ($diff < $min_diff) {\n                $min_diff\
    \ = $diff;\n                $min = $numbers[$i];\n                $max = $numbers[$j];\n\
    \            }\n        }\n    }\n    return array($min, $max);\n}\n\n$numbers\
    \ = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2);\n$numbers2 = array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0);\n\nprint_r(find_closest_elements($numbers));\nprint_r(find_closest_elements($numbers2));\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\nArray\n(\n    [0] => 2\n   \
    \ [1] => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr2o4nezx.php:36\n\
    Stack trace:\n#0 /tmp/tmpr2o4nezx.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpr2o4nezx.php\
    \ on line 36\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $diff = abs($numbers[0] - $numbers[1]);\n    for ($i = 0;\
    \ $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $diff) {\n     \
    \           $closest[0] = $numbers[$i];\n                $closest[1] = $numbers[$j];\n\
    \                $diff = abs($numbers[$i] - $numbers[$j]);\n            }\n  \
    \      }\n    }\n    return $closest;\n}\n\n/* From a supplied array of numbers\
    \ (of length at least two) select and return two that are the furthest from each\n\
    other and return them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r1cq32y.php:37\n\
    Stack trace:\n#0 /tmp/tmp7r1cq32y.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp7r1cq32y.php\
    \ on line 37\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $closest_diff = abs($closest[0] - $closest[1]);\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n           \
    \ if ($diff < $closest_diff) {\n                $closest_diff = $diff;\n     \
    \           $closest[0] = $numbers[$i];\n                $closest[1] = $numbers[$j];\n\
    \            }\n        }\n    }\n    return $closest;\n}\n\n$numbers = array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2);\n$closest = find_closest_elements($numbers);\necho\
    \ \"The closest elements are \" . $closest[0] . \" and \" . $closest[1] . \"\\\
    n\";\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $min = $numbers[0];\n    $max = $numbers[0];\n    $min_index = 0;\n \
    \   $max_index = 0;\n    for ($i = 1; $i < count($numbers); $i++) {\n        if\
    \ ($numbers[$i] < $min) {\n            $min = $numbers[$i];\n            $min_index\
    \ = $i;\n        }\n        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n\
    \            $max_index = $i;\n        }\n    }\n    $min_diff = $max - $min;\n\
    \    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j\
    \ < count($numbers); $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n\
    \            if ($diff < $min_diff) {\n                $min_diff = $diff;\n  \
    \              $min_index = $i;\n                $max_index = $j;\n          \
    \  }\n        }\n    }\n    return array($numbers[$min_index], $numbers[$max_index]);\n\
    }\n\n/*\n * From a supplied array of numbers (of length at least two) select and\
    \ return two that are the closest to each\nother and return them in order (smaller\
    \ number, larger number).\n>>> find_closest_elements(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0))\narray(2.0, 2.0)\n */\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfsnwhxs0.php:51\n\
    Stack trace:\n#0 /tmp/tmpfsnwhxs0.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpfsnwhxs0.php\
    \ on line 51\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $diff = abs($numbers[0] - $numbers[1]);\n    for ($i = 0;\
    \ $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $diff) {\n     \
    \           $closest[0] = $numbers[$i];\n                $closest[1] = $numbers[$j];\n\
    \                $diff = abs($numbers[$i] - $numbers[$j]);\n            }\n  \
    \      }\n    }\n    return $closest;\n}\n\n$numbers = array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2);\n$numbers1 = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0);\necho \"<pre>\"\
    ;\nprint_r(find_closest_elements($numbers));\nprint_r(find_closest_elements($numbers1));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 2\n    [1] => 2.2\n)\nArray\n(\n    [0] => 2\n\
    \    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1n7fy2u7.php:37\n\
    Stack trace:\n#0 /tmp/tmp1n7fy2u7.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp1n7fy2u7.php\
    \ on line 37\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest_elements = array();\n    $closest_difference = null;\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            $difference = abs($numbers[$i] - $numbers[$j]);\n     \
    \       if ($closest_difference === null || $difference < $closest_difference)\
    \ {\n                $closest_difference = $difference;\n                $closest_elements\
    \ = array($numbers[$i], $numbers[$j]);\n            }\n        }\n    }\n    return\
    \ $closest_elements;\n}\n\n$numbers = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2);\n$closest_elements\
    \ = find_closest_elements($numbers);\necho \"The closest elements in array \"\
    \ . implode(', ', $numbers) . \" are \" . implode(', ', $closest_elements) . \"\
    .\";\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "The closest elements in array 1, 2, 3, 4, 5, 2.2 are 2, 2.2.\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpi5_2ics9.php:32\nStack trace:\n\
    #0 /tmp/tmpi5_2ics9.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpi5_2ics9.php\
    \ on line 32\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $min = $numbers[0];\n    $max = $numbers[0];\n    $min_index = 0;\n \
    \   $max_index = 0;\n    $min_diff = abs($numbers[0] - $numbers[1]);\n    $max_diff\
    \ = abs($numbers[0] - $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++)\
    \ {\n        if ($numbers[$i] < $min) {\n            $min = $numbers[$i];\n  \
    \          $min_index = $i;\n        }\n        if ($numbers[$i] > $max) {\n \
    \           $max = $numbers[$i];\n            $max_index = $i;\n        }\n  \
    \      if ($i > 0) {\n            $diff = abs($numbers[$i] - $numbers[$i - 1]);\n\
    \            if ($diff < $min_diff) {\n                $min_diff = $diff;\n  \
    \              $min = $numbers[$i - 1];\n                $max = $numbers[$i];\n\
    \                $min_index = $i - 1;\n                $max_index = $i;\n    \
    \        }\n            if ($diff > $max_diff) {\n                $max_diff =\
    \ $diff;\n            }\n        }\n    }\n    if ($min_index > $max_index) {\n\
    \        $temp = $min;\n        $min = $max;\n        $max = $temp;\n    }\n \
    \   return array($min, $max);\n}\n\n/* From a supplied array of numbers (of length\
    \ at least two) select and return two that are the furthest from each\nother and\
    \ return them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprxyvc3io.php:57\n\
    Stack trace:\n#0 /tmp/tmprxyvc3io.php(64): test()\n#1 {main}\n  thrown in /tmp/tmprxyvc3io.php\
    \ on line 57\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $closest_diff = abs($closest[0] - $closest[1]);\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n           \
    \ if ($diff < $closest_diff) {\n                $closest[0] = $numbers[$i];\n\
    \                $closest[1] = $numbers[$j];\n                $closest_diff =\
    \ $diff;\n            }\n        }\n    }\n    return $closest;\n}\n\n/*\n * From\
    \ a supplied array of numbers (of length at least two) select and return two that\
    \ are the furthest from each\nother and return them in order (smaller number,\
    \ larger number).\n>>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2))\n\
    array(1.0, 5.0)\n>>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0))\n\
    array(1.0, 5.0)\n */\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpic_g8dww.php:40\n\
    Stack trace:\n#0 /tmp/tmpic_g8dww.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpic_g8dww.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $min_diff = abs($numbers[0] - $numbers[1]);\n    $min_pair = array($numbers[0],\
    \ $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($numbers); $j++) {\n            $diff = abs($numbers[$i]\
    \ - $numbers[$j]);\n            if ($diff < $min_diff) {\n                $min_diff\
    \ = $diff;\n                $min_pair = array($numbers[$i], $numbers[$j]);\n \
    \           }\n        }\n    }\n    sort($min_pair);\n    return $min_pair;\n\
    }\n\n$numbers = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2);\n$numbers1 = array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0);\n\necho \"<pre>\";\nprint_r(find_closest_elements($numbers));\n\
    echo \"</pre>\";\n\necho \"<pre>\";\nprint_r(find_closest_elements($numbers1));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 2\n    [1] => 2.2\n)\n</pre><pre>Array\n(\n \
    \   [0] => 2\n    [1] => 2\n)\n</pre>"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest_elements = array();\n    $min_diff = $numbers[1] - $numbers[0];\n\
    \    for ($i = 0; $i < count($numbers) - 1; $i++) {\n        $diff = $numbers[$i\
    \ + 1] - $numbers[$i];\n        if ($diff < $min_diff) {\n            $min_diff\
    \ = $diff;\n            $closest_elements = array($numbers[$i], $numbers[$i +\
    \ 1]);\n        }\n    }\n    return $closest_elements;\n}\n\n$numbers = array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2);\nprint_r(find_closest_elements($numbers));\n\n/*\n\
    \ * From a supplied array of numbers (of length at least two) select and return\
    \ two that are the furthest from each\nother and return them in order (smaller\
    \ number, larger number).\n>>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0))\narray(1.0, 5.0)\n */\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $closest_diff = abs($closest[0] - $closest[1]);\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n           \
    \ if ($diff < $closest_diff) {\n                $closest[0] = $numbers[$i];\n\
    \                $closest[1] = $numbers[$j];\n                $closest_diff =\
    \ $diff;\n            }\n        }\n    }\n    return $closest;\n}\n\n$numbers\
    \ = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2);\n$closest = find_closest_elements($numbers);\n\
    echo \"The closest numbers are: \" . $closest[0] . \" and \" . $closest[1];\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "The closest numbers are: 2 and 2.2\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp9vj0f6jo.php:35\nStack trace:\n#0 /tmp/tmp9vj0f6jo.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp9vj0f6jo.php on line 35\n"
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    sort($numbers);\n    $closest = array($numbers[0], $numbers[1]);\n  \
    \  $diff = abs($numbers[0] - $numbers[1]);\n    for ($i = 0; $i < count($numbers)\
    \ - 1; $i++) {\n        $new_diff = abs($numbers[$i] - $numbers[$i + 1]);\n  \
    \      if ($new_diff < $diff) {\n            $diff = $new_diff;\n            $closest\
    \ = array($numbers[$i], $numbers[$i + 1]);\n        }\n    }\n    return $closest;\n\
    }\n\n/* From a supplied array of numbers (of length at least two) select and return\
    \ two that are the furthest from each\nother and return them in order (smaller\
    \ number, larger number).\n>>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n\t$closest = array();\n\t$closest[0] = $numbers[0];\n\t$closest[1] = $numbers[1];\n\
    \t$closest_diff = abs($numbers[0] - $numbers[1]);\n\tfor ($i = 0; $i < count($numbers);\
    \ $i++) {\n\t\tfor ($j = $i + 1; $j < count($numbers); $j++) {\n\t\t\t$diff =\
    \ abs($numbers[$i] - $numbers[$j]);\n\t\t\tif ($diff < $closest_diff) {\n\t\t\t\
    \t$closest[0] = $numbers[$i];\n\t\t\t\t$closest[1] = $numbers[$j];\n\t\t\t\t$closest_diff\
    \ = $diff;\n\t\t\t}\n\t\t}\n\t}\n\tsort($closest);\n\treturn $closest;\n}\n\n\
    /* From a supplied array of numbers (of length at least two) select and return\
    \ two that are the furthest from each\nother and return them in order (smaller\
    \ number, larger number).\n>>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array(0, 0);\n    $min_distance = abs($numbers[0] - $numbers[1]);\n\
    \    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j\
    \ < count($numbers); $j++) {\n            $distance = abs($numbers[$i] - $numbers[$j]);\n\
    \            if ($distance < $min_distance) {\n                $min_distance =\
    \ $distance;\n                $closest = array($numbers[$i], $numbers[$j]);\n\
    \            }\n        }\n    }\n    return $closest;\n}\n\n/* From a supplied\
    \ array of numbers (of length at least two) select and return two that are the\
    \ furthest from each\nother and return them in order (smaller number, larger number).\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp0rpenrk.php:35\n\
    Stack trace:\n#0 /tmp/tmpp0rpenrk.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpp0rpenrk.php\
    \ on line 35\n"
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array($numbers[0], $numbers[1]);\n    $min_distance = abs($numbers[0]\
    \ - $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++) {\n        for\
    \ ($j = $i + 1; $j < count($numbers); $j++) {\n            $distance = abs($numbers[$i]\
    \ - $numbers[$j]);\n            if ($distance < $min_distance) {\n           \
    \     $min_distance = $distance;\n                $closest = array($numbers[$i],\
    \ $numbers[$j]);\n            }\n        }\n    }\n    sort($closest);\n    return\
    \ $closest;\n}\n\n$numbers = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2);\n$closest =\
    \ find_closest_elements($numbers);\necho \"The closest elements are: \" . $closest[0]\
    \ . \" and \" . $closest[1];\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'The closest elements are: 2 and 2.2'
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $min = abs($numbers[0] - $numbers[1]);\n    $min_numbers = array($numbers[0],\
    \ $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($numbers); $j++) {\n            if (abs($numbers[$i] -\
    \ $numbers[$j]) < $min) {\n                $min = abs($numbers[$i] - $numbers[$j]);\n\
    \                $min_numbers = array($numbers[$i], $numbers[$j]);\n         \
    \   }\n        }\n    }\n    return $min_numbers;\n}\n\n/* From a supplied array\
    \ of numbers (of length at least two) select and return two that are the furthest\
    \ apart\nand return them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7wcikmu9.php:34\n\
    Stack trace:\n#0 /tmp/tmp7wcikmu9.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp7wcikmu9.php\
    \ on line 34\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n\t$min = $numbers[0] - $numbers[1];\n\t$min_pair = array($numbers[0], $numbers[1]);\n\
    \tfor ($i = 0; $i < count($numbers); $i++) {\n\t\tfor ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n\t\t\tif (abs($numbers[$i] - $numbers[$j]) < $min) {\n\t\t\t\t$min\
    \ = abs($numbers[$i] - $numbers[$j]);\n\t\t\t\t$min_pair = array($numbers[$i],\
    \ $numbers[$j]);\n\t\t\t}\n\t\t}\n\t}\n\tsort($min_pair);\n\treturn $min_pair;\n\
    }\n\n/* From a supplied array of numbers (of length at least two) select and return\
    \ two that are the furthest from each\nother and return them in order (smaller\
    \ number, larger number).\n>>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2r14pdit.php:34\n\
    Stack trace:\n#0 /tmp/tmp2r14pdit.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp2r14pdit.php\
    \ on line 34\n"
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $smallest_difference = null;\n    $closest_elements = array();\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            $difference = abs($numbers[$i] - $numbers[$j]);\n     \
    \       if ($smallest_difference === null || $difference < $smallest_difference)\
    \ {\n                $smallest_difference = $difference;\n                $closest_elements\
    \ = array($numbers[$i], $numbers[$j]);\n            }\n        }\n    }\n    sort($closest_elements);\n\
    \    return $closest_elements;\n}\n\n/*\n * From a supplied array of numbers (of\
    \ length at least two) select and return two that are the furthest from each\n\
    other and return them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)\n */\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $min_diff = abs($numbers[0] - $numbers[1]);\n    $min_pair = array($numbers[0],\
    \ $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($numbers); $j++) {\n            $diff = abs($numbers[$i]\
    \ - $numbers[$j]);\n            if ($diff < $min_diff) {\n                $min_diff\
    \ = $diff;\n                $min_pair = array($numbers[$i], $numbers[$j]);\n \
    \           }\n        }\n    }\n    sort($min_pair);\n    return $min_pair;\n\
    }\n\n/* From a supplied array of numbers (of length at least two) select and return\
    \ two that are the furthest from each\nother and return them in order (smaller\
    \ number, larger number).\n>>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $closest_distance = abs($numbers[0] - $numbers[1]);\n  \
    \  for ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j <\
    \ count($numbers); $j++) {\n            $distance = abs($numbers[$i] - $numbers[$j]);\n\
    \            if ($distance < $closest_distance) {\n                $closest[0]\
    \ = $numbers[$i];\n                $closest[1] = $numbers[$j];\n             \
    \   $closest_distance = $distance;\n            }\n        }\n    }\n    return\
    \ $closest;\n}\n\n/* From a supplied array of numbers (of length at least two)\
    \ select and return two that are the furthest from each\nother and return them\
    \ in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array(0,0);\n    $closest_diff = abs($numbers[0] - $numbers[1]);\n\
    \    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j\
    \ < count($numbers); $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n\
    \            if ($diff < $closest_diff) {\n                $closest_diff = $diff;\n\
    \                $closest = array($numbers[$i], $numbers[$j]);\n            }\n\
    \        }\n    }\n    return $closest;\n}\n\n/* From a supplied array of numbers\
    \ (of length at least two) select and return two that are the furthest from each\n\
    other and return them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp56gi_f9c.php:35\n\
    Stack trace:\n#0 /tmp/tmp56gi_f9c.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp56gi_f9c.php\
    \ on line 35\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest_elements = array();\n    $closest_difference = null;\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            $difference = abs($numbers[$i] - $numbers[$j]);\n     \
    \       if ($closest_difference === null || $difference < $closest_difference)\
    \ {\n                $closest_difference = $difference;\n                $closest_elements\
    \ = array($numbers[$i], $numbers[$j]);\n            }\n        }\n    }\n    return\
    \ $closest_elements;\n}\n\n/*\n * From a supplied array of numbers (of length\
    \ at least two) select and return two that are the furthest from each\nother and\
    \ return them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)\n */\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7_cwzsrt.php:37\n\
    Stack trace:\n#0 /tmp/tmp7_cwzsrt.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp7_cwzsrt.php\
    \ on line 37\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest_elements = array();\n    $closest_distance = 0;\n    for ($i\
    \ = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            $distance = abs($numbers[$i] - $numbers[$j]);\n       \
    \     if ($distance < $closest_distance || $closest_distance == 0) {\n       \
    \         $closest_distance = $distance;\n                $closest_elements =\
    \ array($numbers[$i], $numbers[$j]);\n            }\n        }\n    }\n    return\
    \ $closest_elements;\n}\n\n/* From a supplied array of numbers (of length at least\
    \ two) select and return two that are the furthest from each\nother and return\
    \ them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd9sjiyp2.php:35\n\
    Stack trace:\n#0 /tmp/tmpd9sjiyp2.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpd9sjiyp2.php\
    \ on line 35\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array(0, 0);\n    $min_diff = abs($numbers[0] - $numbers[1]);\n\
    \    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j\
    \ < count($numbers); $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n\
    \            if ($diff < $min_diff) {\n                $min_diff = $diff;\n  \
    \              $closest = array($numbers[$i], $numbers[$j]);\n            }\n\
    \        }\n    }\n    return $closest;\n}\n\n/* From a supplied array of numbers\
    \ (of length at least two) select and return two that are the furthest from each\n\
    other and return them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpir9tbpea.php:35\n\
    Stack trace:\n#0 /tmp/tmpir9tbpea.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpir9tbpea.php\
    \ on line 35\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n\t$closest = array();\n\t$closest[0] = $numbers[0];\n\t$closest[1] = $numbers[1];\n\
    \t$closest_diff = abs($numbers[0] - $numbers[1]);\n\tfor ($i = 0; $i < count($numbers);\
    \ $i++) {\n\t\tfor ($j = $i + 1; $j < count($numbers); $j++) {\n\t\t\t$diff =\
    \ abs($numbers[$i] - $numbers[$j]);\n\t\t\tif ($diff < $closest_diff) {\n\t\t\t\
    \t$closest_diff = $diff;\n\t\t\t\t$closest[0] = $numbers[$i];\n\t\t\t\t$closest[1]\
    \ = $numbers[$j];\n\t\t\t}\n\t\t}\n\t}\n\treturn $closest;\n}\n\n/* From a supplied\
    \ array of numbers (of length at least two) select and return two that are the\
    \ furthest from each\nother and return them in order (smaller number, larger number).\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm4wpxzj3.php:38\n\
    Stack trace:\n#0 /tmp/tmpm4wpxzj3.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpm4wpxzj3.php\
    \ on line 38\n"
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $min_diff = abs($numbers[0] - $numbers[1]);\n    $min_pair = array($numbers[0],\
    \ $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($numbers); $j++) {\n            $diff = abs($numbers[$i]\
    \ - $numbers[$j]);\n            if ($diff < $min_diff) {\n                $min_diff\
    \ = $diff;\n                $min_pair = array($numbers[$i], $numbers[$j]);\n \
    \           }\n        }\n    }\n    sort($min_pair);\n    return $min_pair;\n\
    }\n\n/*\n * From a supplied array of numbers (of length at least two) select and\
    \ return two that are the furthest from each\nother and return them in order (smaller\
    \ number, larger number).\n>>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0))\narray(1.0, 5.0)\n */\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $diff = abs($numbers[0] - $numbers[1]);\n    for ($i = 0;\
    \ $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $diff) {\n     \
    \           $closest[0] = $numbers[$i];\n                $closest[1] = $numbers[$j];\n\
    \                $diff = abs($numbers[$i] - $numbers[$j]);\n            }\n  \
    \      }\n    }\n    return $closest;\n}\n\n/* From a supplied array of numbers\
    \ (of length at least two) select and return two that are the furthest from each\n\
    other and return them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7r1cq32y.php:37\n\
    Stack trace:\n#0 /tmp/tmp7r1cq32y.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp7r1cq32y.php\
    \ on line 37\n"
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $min_diff = abs($numbers[0] - $numbers[1]);\n    $min_pair = array($numbers[0],\
    \ $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($numbers); $j++) {\n            $diff = abs($numbers[$i]\
    \ - $numbers[$j]);\n            if ($diff < $min_diff) {\n                $min_diff\
    \ = $diff;\n                $min_pair = array($numbers[$i], $numbers[$j]);\n \
    \           }\n        }\n    }\n    sort($min_pair);\n    return $min_pair;\n\
    }\n\n/*\n * Write a function that takes a string and returns the number of vowels\
    \ in the string.\n * >>> count_vowels(\"hello\")\n * 2\n * >>> count_vowels(\"\
    world\")\n * 1\n * >>> count_vowels(\"\")\n * 0\n */\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n\t$closest = array();\n\t$diff = abs($numbers[0] - $numbers[1]);\n\t$closest[0]\
    \ = $numbers[0];\n\t$closest[1] = $numbers[1];\n\tfor ($i = 0; $i < count($numbers);\
    \ $i++) {\n\t\tfor ($j = $i + 1; $j < count($numbers); $j++) {\n\t\t\tif (abs($numbers[$i]\
    \ - $numbers[$j]) < $diff) {\n\t\t\t\t$diff = abs($numbers[$i] - $numbers[$j]);\n\
    \t\t\t\t$closest[0] = $numbers[$i];\n\t\t\t\t$closest[1] = $numbers[$j];\n\t\t\
    \t}\n\t\t}\n\t}\n\treturn $closest;\n}\n\n/* From a supplied array of numbers\
    \ (of length at least two) select and return two that are the furthest from each\n\
    other and return them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpml9d3u5e.php:37\n\
    Stack trace:\n#0 /tmp/tmpml9d3u5e.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpml9d3u5e.php\
    \ on line 37\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    for ($i = 0; $i < count($numbers); $i++) {\n        for\
    \ ($j = $i + 1; $j < count($numbers); $j++) {\n            if (abs($numbers[$i]\
    \ - $numbers[$j]) < abs($closest[0] - $closest[1])) {\n                $closest[0]\
    \ = $numbers[$i];\n                $closest[1] = $numbers[$j];\n            }\n\
    \        }\n    }\n    return $closest;\n}\n\n$numbers = array(1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2);\n$closest = find_closest_elements($numbers);\necho \"The closest\
    \ numbers are: \" . $closest[0] . \" and \" . $closest[1];\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "The closest numbers are: 2 and 2.2\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpscpem2o_.php:32\nStack trace:\n#0 /tmp/tmpscpem2o_.php(38):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpscpem2o_.php on line 32\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array($numbers[0], $numbers[1]);\n    $diff = abs($numbers[0]\
    \ - $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++) {\n        for\
    \ ($j = $i + 1; $j < count($numbers); $j++) {\n            if (abs($numbers[$i]\
    \ - $numbers[$j]) < $diff) {\n                $diff = abs($numbers[$i] - $numbers[$j]);\n\
    \                $closest = array($numbers[$i], $numbers[$j]);\n            }\n\
    \        }\n    }\n    return $closest;\n}\n\n/*\n * From a supplied array of\
    \ numbers (of length at least two) select and return two that are the furthest\
    \ from each\nother and return them in order (smaller number, larger number).\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)\n\
    \ */\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsi7q9hd1.php:36\n\
    Stack trace:\n#0 /tmp/tmpsi7q9hd1.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpsi7q9hd1.php\
    \ on line 36\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $closest[2] = abs($numbers[0] - $numbers[1]);\n    for ($i\
    \ = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $closest[2]) {\n\
    \                $closest[0] = $numbers[$i];\n                $closest[1] = $numbers[$j];\n\
    \                $closest[2] = abs($numbers[$i] - $numbers[$j]);\n           \
    \ }\n        }\n    }\n    return array($closest[0], $closest[1]);\n}\n\n/* From\
    \ a supplied array of numbers (of length at least two) select and return two that\
    \ are the furthest from each\nother and return them in order (smaller number,\
    \ larger number).\n>>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2))\n\
    array(1.0, 5.0)\n>>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0))\n\
    array(1.0, 5.0)*/\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm61tnbnt.php:37\n\
    Stack trace:\n#0 /tmp/tmpm61tnbnt.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpm61tnbnt.php\
    \ on line 37\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n\t$min = abs($numbers[0] - $numbers[1]);\n\t$result = array($numbers[0],\
    \ $numbers[1]);\n\tfor ($i = 0; $i < count($numbers); $i++) {\n\t\tfor ($j = $i\
    \ + 1; $j < count($numbers); $j++) {\n\t\t\tif (abs($numbers[$i] - $numbers[$j])\
    \ < $min) {\n\t\t\t\t$min = abs($numbers[$i] - $numbers[$j]);\n\t\t\t\t$result\
    \ = array($numbers[$i], $numbers[$j]);\n\t\t\t}\n\t\t}\n\t}\n\treturn $result;\n\
    }\n\n/* From a supplied array of numbers (of length at least two) select and return\
    \ two that are the furthest apart\nand return them in order (smaller number, larger\
    \ number).\n>>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2))\n\
    array(1.0, 5.0)\n>>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0))\n\
    array(1.0, 5.0)*/\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdmoqzd5_.php:34\n\
    Stack trace:\n#0 /tmp/tmpdmoqzd5_.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpdmoqzd5_.php\
    \ on line 34\n"
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $min_diff = abs($numbers[0] - $numbers[1]);\n    $min_pair = array($numbers[0],\
    \ $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($numbers); $j++) {\n            $diff = abs($numbers[$i]\
    \ - $numbers[$j]);\n            if ($diff < $min_diff) {\n                $min_diff\
    \ = $diff;\n                $min_pair = array($numbers[$i], $numbers[$j]);\n \
    \           }\n        }\n    }\n    sort($min_pair);\n    return $min_pair;\n\
    }\n\n/* From a supplied array of numbers (of length at least two) select and return\
    \ two that are the furthest from each\nother and return them in order (smaller\
    \ number, larger number).\n>>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $diff = abs($numbers[0] - $numbers[1]);\n    for ($i = 0;\
    \ $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $diff) {\n     \
    \           $closest[0] = $numbers[$i];\n                $closest[1] = $numbers[$j];\n\
    \                $diff = abs($numbers[$i] - $numbers[$j]);\n            }\n  \
    \      }\n    }\n    return $closest;\n}\n\n$numbers = array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2);\n$closest = find_closest_elements($numbers);\necho \"The closest\
    \ numbers are: \" . $closest[0] . \" and \" . $closest[1];\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "The closest numbers are: 2 and 2.2\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpdkb8lf48.php:34\nStack trace:\n#0 /tmp/tmpdkb8lf48.php(40):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpdkb8lf48.php on line 34\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest_diff = abs($numbers[0] - $numbers[1]);\n    $closest_elements\
    \ = array($numbers[0], $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++)\
    \ {\n        for ($j = $i + 1; $j < count($numbers); $j++) {\n            $diff\
    \ = abs($numbers[$i] - $numbers[$j]);\n            if ($diff < $closest_diff)\
    \ {\n                $closest_diff = $diff;\n                $closest_elements\
    \ = array($numbers[$i], $numbers[$j]);\n            }\n        }\n    }\n    return\
    \ $closest_elements;\n}\n\n/* From a supplied array of numbers (of length at least\
    \ two) select and return two that are the furthest from each\nother and return\
    \ them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4dvbk9mx.php:35\n\
    Stack trace:\n#0 /tmp/tmp4dvbk9mx.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp4dvbk9mx.php\
    \ on line 35\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $min = $numbers[0];\n    $max = $numbers[0];\n    $min_index = 0;\n \
    \   $max_index = 0;\n    for ($i = 1; $i < count($numbers); $i++) {\n        if\
    \ ($numbers[$i] < $min) {\n            $min = $numbers[$i];\n            $min_index\
    \ = $i;\n        }\n        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n\
    \            $max_index = $i;\n        }\n    }\n    if ($min_index < $max_index)\
    \ {\n        return array($min, $max);\n    } else {\n        return array($max,\
    \ $min);\n    }\n}\n\n/* From a supplied array of numbers (of length at least\
    \ two) select and return two that are the furthest from each\nother and return\
    \ them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjvyko54o.php:41\n\
    Stack trace:\n#0 /tmp/tmpjvyko54o.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpjvyko54o.php\
    \ on line 41\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $diff = abs($numbers[0] - $numbers[1]);\n    for ($i = 0;\
    \ $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $diff) {\n     \
    \           $closest[0] = $numbers[$i];\n                $closest[1] = $numbers[$j];\n\
    \                $diff = abs($numbers[$i] - $numbers[$j]);\n            }\n  \
    \      }\n    }\n    return $closest;\n}\n\n$numbers = array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2);\n$closest = find_closest_elements($numbers);\necho \"The closest\
    \ elements are: \" . $closest[0] . \" and \" . $closest[1];\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "The closest elements are: 2 and 2.2\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp0gwvtore.php:34\nStack trace:\n#0 /tmp/tmp0gwvtore.php(40):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp0gwvtore.php on line 34\n"
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $min_diff = abs($numbers[0] - $numbers[1]);\n    $min_elements = array($numbers[0],\
    \ $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($numbers); $j++) {\n            $diff = abs($numbers[$i]\
    \ - $numbers[$j]);\n            if ($diff < $min_diff) {\n                $min_diff\
    \ = $diff;\n                $min_elements = array($numbers[$i], $numbers[$j]);\n\
    \            }\n        }\n    }\n    sort($min_elements);\n    return $min_elements;\n\
    }\n\n/* From a supplied array of numbers (of length at least two) select and return\
    \ two that are the furthest from each\nother and return them in order (smaller\
    \ number, larger number).\n>>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n\t$closest = array($numbers[0], $numbers[1]);\n\t$closest_diff = abs($numbers[0]\
    \ - $numbers[1]);\n\tfor ($i = 0; $i < count($numbers); $i++) {\n\t\tfor ($j =\
    \ $i + 1; $j < count($numbers); $j++) {\n\t\t\t$diff = abs($numbers[$i] - $numbers[$j]);\n\
    \t\t\tif ($diff < $closest_diff) {\n\t\t\t\t$closest_diff = $diff;\n\t\t\t\t$closest\
    \ = array($numbers[$i], $numbers[$j]);\n\t\t\t}\n\t\t}\n\t}\n\tsort($closest);\n\
    \treturn $closest;\n}\n\n/* From a supplied array of numbers (of length at least\
    \ two) select and return two that are the furthest from each\nother and return\
    \ them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $min = abs($numbers[0] - $numbers[1]);\n    for ($i = 0;\
    \ $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $min) {\n      \
    \          $min = abs($numbers[$i] - $numbers[$j]);\n                $closest[0]\
    \ = $numbers[$i];\n                $closest[1] = $numbers[$j];\n            }\n\
    \        }\n    }\n    return $closest;\n}\n\n$numbers = array(1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.2);\necho \"<pre>\";\nprint_r(find_closest_elements($numbers));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 2\n    [1] => 2.2\n)\n</pre>\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpad6lkra_.php:35\nStack trace:\n#0 /tmp/tmpad6lkra_.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpad6lkra_.php on line 35\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $diff = abs($numbers[0] - $numbers[1]);\n    for ($i = 0;\
    \ $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $diff) {\n     \
    \           $closest[0] = $numbers[$i];\n                $closest[1] = $numbers[$j];\n\
    \                $diff = abs($numbers[$i] - $numbers[$j]);\n            }\n  \
    \      }\n    }\n    return $closest;\n}\n\n$numbers = array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2);\n$closest = find_closest_elements($numbers);\necho \"The closest\
    \ elements are: \" . $closest[0] . \" and \" . $closest[1];\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "The closest elements are: 2 and 2.2\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp0gwvtore.php:34\nStack trace:\n#0 /tmp/tmp0gwvtore.php(40):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp0gwvtore.php on line 34\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest_distance = null;\n    $closest_elements = null;\n    for ($i\
    \ = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            $distance = abs($numbers[$i] - $numbers[$j]);\n       \
    \     if ($closest_distance === null || $distance < $closest_distance) {\n   \
    \             $closest_distance = $distance;\n                $closest_elements\
    \ = array($numbers[$i], $numbers[$j]);\n            }\n        }\n    }\n    return\
    \ $closest_elements;\n}\n\n/* From a supplied array of numbers (of length at least\
    \ two) select and return two that are the farthest from each\nother and return\
    \ them in order (smaller number, larger number).\n>>> find_farthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_farthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $min = null;\n    $min_pair = null;\n    for ($i = 0; $i < count($numbers)\
    \ - 1; $i++) {\n        for ($j = $i + 1; $j < count($numbers); $j++) {\n    \
    \        $diff = abs($numbers[$i] - $numbers[$j]);\n            if ($min === null\
    \ || $diff < $min) {\n                $min = $diff;\n                $min_pair\
    \ = array($numbers[$i], $numbers[$j]);\n            }\n        }\n    }\n    return\
    \ $min_pair;\n}\n\n/* From a supplied array of numbers (of length at least two)\
    \ select and return two that are the furthest from each\nother and return them\
    \ in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph2d_c040.php:35\n\
    Stack trace:\n#0 /tmp/tmph2d_c040.php(41): test()\n#1 {main}\n  thrown in /tmp/tmph2d_c040.php\
    \ on line 35\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest_diff = null;\n    $numbers_count =\
    \ count($numbers);\n    for ($i = 0; $i < $numbers_count; $i++) {\n        for\
    \ ($j = $i + 1; $j < $numbers_count; $j++) {\n            $diff = abs($numbers[$i]\
    \ - $numbers[$j]);\n            if ($closest_diff === null || $diff < $closest_diff)\
    \ {\n                $closest_diff = $diff;\n                $closest = array($numbers[$i],\
    \ $numbers[$j]);\n            }\n        }\n    }\n    return $closest;\n}\n\n\
    /*\n * Write a function that takes a string as an argument and returns a string\
    \ with the first character of each word\n * capitalized.\n * >>> capitalize_words('hello\
    \ world')\n * 'Hello World'\n * >>> capitalize_words('hello world, how are you?')\n\
    \ * 'Hello World, How Are You?'\n * >>> capitalize_words('hello world, how are\
    \ you? i\\'m fine. thank you.')\n * 'Hello World, How Are You? I\\'m Fine. Thank\
    \ You.'\n */\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprsc_3hw2.php:40\n\
    Stack trace:\n#0 /tmp/tmprsc_3hw2.php(46): test()\n#1 {main}\n  thrown in /tmp/tmprsc_3hw2.php\
    \ on line 40\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $diff = abs($numbers[0] - $numbers[1]);\n    for ($i = 0;\
    \ $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $diff) {\n     \
    \           $closest[0] = $numbers[$i];\n                $closest[1] = $numbers[$j];\n\
    \                $diff = abs($numbers[$i] - $numbers[$j]);\n            }\n  \
    \      }\n    }\n    return $closest;\n}\n\n/*\n * From a supplied array of numbers\
    \ (of length at least two) select and return two that are the furthest from each\n\
    other and return them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)\n */\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0upu8czy.php:39\n\
    Stack trace:\n#0 /tmp/tmp0upu8czy.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp0upu8czy.php\
    \ on line 39\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $min_diff = abs($numbers[0] - $numbers[1]);\n    $min_numbers = array($numbers[0],\
    \ $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($numbers); $j++) {\n            $diff = abs($numbers[$i]\
    \ - $numbers[$j]);\n            if ($diff < $min_diff) {\n                $min_diff\
    \ = $diff;\n                $min_numbers = array($numbers[$i], $numbers[$j]);\n\
    \            }\n        }\n    }\n    return $min_numbers;\n}\n\n/* From a supplied\
    \ array of numbers (of length at least two) select and return two that are the\
    \ furthest from each\nother and return them in order (smaller number, larger number).\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $closest_diff = abs($closest[0] - $closest[1]);\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n           \
    \ if ($diff < $closest_diff) {\n                $closest[0] = $numbers[$i];\n\
    \                $closest[1] = $numbers[$j];\n                $closest_diff =\
    \ $diff;\n            }\n        }\n    }\n    return $closest;\n}\n\n/* From\
    \ a supplied array of numbers (of length at least two) select and return two that\
    \ are the furthest from each\nother and return them in order (smaller number,\
    \ larger number).\n>>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2))\n\
    array(1.0, 5.0)\n>>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0))\n\
    array(1.0, 5.0)*/\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps452lkpf.php:38\n\
    Stack trace:\n#0 /tmp/tmps452lkpf.php(44): test()\n#1 {main}\n  thrown in /tmp/tmps452lkpf.php\
    \ on line 38\n"
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest_diff = abs($numbers[0] - $numbers[1]);\n    $closest_elements\
    \ = array($numbers[0], $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++)\
    \ {\n        for ($j = $i + 1; $j < count($numbers); $j++) {\n            $diff\
    \ = abs($numbers[$i] - $numbers[$j]);\n            if ($diff < $closest_diff)\
    \ {\n                $closest_diff = $diff;\n                $closest_elements\
    \ = array($numbers[$i], $numbers[$j]);\n            }\n        }\n    }\n    sort($closest_elements);\n\
    \    return $closest_elements;\n}\n\n/* From a supplied array of numbers (of length\
    \ at least two) select and return two that are the furthest from each\nother and\
    \ return them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest_diff = $numbers[1] - $numbers[0];\n    $closest_elements = array($numbers[0],\
    \ $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($numbers); $j++) {\n            $diff = abs($numbers[$i]\
    \ - $numbers[$j]);\n            if ($diff < $closest_diff) {\n               \
    \ $closest_diff = $diff;\n                $closest_elements = array($numbers[$i],\
    \ $numbers[$j]);\n            }\n        }\n    }\n    sort($closest_elements);\n\
    \    return $closest_elements;\n}\n\n/* From a supplied array of numbers (of length\
    \ at least two) select and return two that are the furthest from each\nother and\
    \ return them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $diff = abs($numbers[0] - $numbers[1]);\n    for ($i = 0;\
    \ $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $diff) {\n     \
    \           $closest[0] = $numbers[$i];\n                $closest[1] = $numbers[$j];\n\
    \                $diff = abs($numbers[$i] - $numbers[$j]);\n            }\n  \
    \      }\n    }\n    return $closest;\n}\n\n$numbers = array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2);\n$closest = find_closest_elements($numbers);\necho \"The closest\
    \ elements are: \" . $closest[0] . \" and \" . $closest[1];\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "The closest elements are: 2 and 2.2\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp0gwvtore.php:34\nStack trace:\n#0 /tmp/tmp0gwvtore.php(40):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp0gwvtore.php on line 34\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $min = $numbers[0];\n    $max = $numbers[0];\n    $min_index = 0;\n \
    \   $max_index = 0;\n    for ($i = 1; $i < count($numbers); $i++) {\n        if\
    \ ($numbers[$i] < $min) {\n            $min = $numbers[$i];\n            $min_index\
    \ = $i;\n        }\n        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n\
    \            $max_index = $i;\n        }\n    }\n    $min_diff = $max - $min;\n\
    \    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j\
    \ < count($numbers); $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n\
    \            if ($diff < $min_diff) {\n                $min_diff = $diff;\n  \
    \              $min_index = $i;\n                $max_index = $j;\n          \
    \  }\n        }\n    }\n    if ($min_index > $max_index) {\n        $temp = $min_index;\n\
    \        $min_index = $max_index;\n        $max_index = $temp;\n    }\n    return\
    \ array($numbers[$min_index], $numbers[$max_index]);\n}\n\n/*\n * From a supplied\
    \ array of numbers (of length at least two) select and return two that are the\
    \ furthest from each\nother and return them in order (smaller number, larger number).\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)\n\
    \ */\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk19jutio.php:56\n\
    Stack trace:\n#0 /tmp/tmpk19jutio.php(62): test()\n#1 {main}\n  thrown in /tmp/tmpk19jutio.php\
    \ on line 56\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $min = abs($numbers[0] - $numbers[1]);\n    $min_index = 0;\n    for\
    \ ($i = 1; $i < count($numbers) - 1; $i++) {\n        $diff = abs($numbers[$i]\
    \ - $numbers[$i + 1]);\n        if ($diff < $min) {\n            $min = $diff;\n\
    \            $min_index = $i;\n        }\n    }\n    return array($numbers[$min_index],\
    \ $numbers[$min_index + 1]);\n}\n\n/*\n * From a supplied array of numbers (of\
    \ length at least two) select and return two that are the farthest from each\n\
    other and return them in order (smaller number, larger number).\n>>> find_farthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_farthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)\n */\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3098e3wc.php:35\n\
    Stack trace:\n#0 /tmp/tmp3098e3wc.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp3098e3wc.php\
    \ on line 35\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $closest_diff = abs($closest[0] - $closest[1]);\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n           \
    \ if ($diff < $closest_diff) {\n                $closest[0] = $numbers[$i];\n\
    \                $closest[1] = $numbers[$j];\n                $closest_diff =\
    \ $diff;\n            }\n        }\n    }\n    return $closest;\n}\n\n$numbers\
    \ = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2);\n$closest = find_closest_elements($numbers);\n\
    echo \"The closest elements are: \" . $closest[0] . \" and \" . $closest[1];\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "The closest elements are: 2 and 2.2\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmps008hpq_.php:35\nStack trace:\n#0 /tmp/tmps008hpq_.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmps008hpq_.php on line 35\n"
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n\t$min_diff = abs($numbers[0] - $numbers[1]);\n\t$min_pair = array($numbers[0],\
    \ $numbers[1]);\n\tfor ($i = 0; $i < count($numbers); $i++) {\n\t\tfor ($j = $i\
    \ + 1; $j < count($numbers); $j++) {\n\t\t\t$diff = abs($numbers[$i] - $numbers[$j]);\n\
    \t\t\tif ($diff < $min_diff) {\n\t\t\t\t$min_diff = $diff;\n\t\t\t\t$min_pair\
    \ = array($numbers[$i], $numbers[$j]);\n\t\t\t}\n\t\t}\n\t}\n\tsort($min_pair);\n\
    \treturn $min_pair;\n}\n\n/* From a supplied array of numbers (of length at least\
    \ two) select and return two that are the furthest from each\nother and return\
    \ them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $min = abs($numbers[0] - $numbers[1]);\n    $result = array($numbers[0],\
    \ $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($numbers); $j++) {\n            if (abs($numbers[$i] -\
    \ $numbers[$j]) < $min) {\n                $min = abs($numbers[$i] - $numbers[$j]);\n\
    \                $result = array($numbers[$i], $numbers[$j]);\n            }\n\
    \        }\n    }\n    return $result;\n}\n\n$numbers = array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2);\n$numbers2 = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0);\necho '<pre>';\n\
    print_r(find_closest_elements($numbers));\nprint_r(find_closest_elements($numbers2));\n\
    echo '</pre>';\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 2\n    [1] => 2.2\n)\nArray\n(\n    [0] => 2\n\
    \    [1] => 2\n)\n</pre>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkobv0iwy.php:34\n\
    Stack trace:\n#0 /tmp/tmpkobv0iwy.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpkobv0iwy.php\
    \ on line 34\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $min = abs($numbers[0] - $numbers[1]);\n    $min_index = 0;\n    for\
    \ ($i = 0; $i < count($numbers) - 1; $i++) {\n        $diff = abs($numbers[$i]\
    \ - $numbers[$i + 1]);\n        if ($diff < $min) {\n            $min = $diff;\n\
    \            $min_index = $i;\n        }\n    }\n    return array($numbers[$min_index],\
    \ $numbers[$min_index + 1]);\n}\n\n/* From a supplied array of numbers (of length\
    \ at least two) select and return two that are the furthest from each\nother and\
    \ return them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9nbxy4vd.php:33\n\
    Stack trace:\n#0 /tmp/tmp9nbxy4vd.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp9nbxy4vd.php\
    \ on line 33\n"
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array(0, 0);\n    $min_diff = abs($numbers[0] - $numbers[1]);\n\
    \    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j\
    \ < count($numbers); $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n\
    \            if ($diff < $min_diff) {\n                $min_diff = $diff;\n  \
    \              $closest = array($numbers[$i], $numbers[$j]);\n            }\n\
    \        }\n    }\n    sort($closest);\n    return $closest;\n}\n\n/* From a supplied\
    \ array of numbers (of length at least two) select and return two that are the\
    \ furthest from each\nother and return them in order (smaller number, larger number).\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n\
    >>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $diff = abs($numbers[0] - $numbers[1]);\n    for ($i = 0;\
    \ $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $diff) {\n     \
    \           $closest[0] = $numbers[$i];\n                $closest[1] = $numbers[$j];\n\
    \                $diff = abs($numbers[$i] - $numbers[$j]);\n            }\n  \
    \      }\n    }\n    return $closest;\n}\n\n$numbers = array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2);\n$numbers2 = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0);\n\nprint_r(find_closest_elements($numbers));\n\
    print_r(find_closest_elements($numbers2));\nfunction candidate(...$args) {\n \
    \   return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n  \
    \  if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0,\
    \ 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 2\n    [1] => 2.2\n)\nArray\n(\n    [0] => 2\n   \
    \ [1] => 2\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoxye4scg.php:36\n\
    Stack trace:\n#0 /tmp/tmpoxye4scg.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpoxye4scg.php\
    \ on line 36\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $closest_diff = abs($closest[0] - $closest[1]);\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n           \
    \ if ($diff < $closest_diff) {\n                $closest_diff = $diff;\n     \
    \           $closest[0] = $numbers[$i];\n                $closest[1] = $numbers[$j];\n\
    \            }\n        }\n    }\n    return $closest;\n}\n\n$numbers = array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2);\n$closest = find_closest_elements($numbers);\necho\
    \ \"The closest numbers are \" . $closest[0] . \" and \" . $closest[1] . \".\"\
    ;\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "The closest numbers are 2 and 2.2.\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp2urul31i.php:35\nStack trace:\n#0 /tmp/tmp2urul31i.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp2urul31i.php on line 35\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1]\
    \ = $numbers[1];\n    $closest_diff = abs($closest[0] - $closest[1]);\n    for\
    \ ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n            $diff = abs($numbers[$i] - $numbers[$j]);\n           \
    \ if ($diff < $closest_diff) {\n                $closest[0] = $numbers[$i];\n\
    \                $closest[1] = $numbers[$j];\n                $closest_diff =\
    \ $diff;\n            }\n        }\n    }\n    return $closest;\n}\n\n$numbers\
    \ = array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2);\n$closest = find_closest_elements($numbers);\n\
    echo \"The closest elements are: \" . $closest[0] . \" and \" . $closest[1];\n\
    function candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "The closest elements are: 2 and 2.2\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmps008hpq_.php:35\nStack trace:\n#0 /tmp/tmps008hpq_.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmps008hpq_.php on line 35\n"
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest_diff = abs($numbers[0] - $numbers[1]);\n    $closest_elements\
    \ = array($numbers[0], $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++)\
    \ {\n        for ($j = $i + 1; $j < count($numbers); $j++) {\n            $diff\
    \ = abs($numbers[$i] - $numbers[$j]);\n            if ($diff < $closest_diff)\
    \ {\n                $closest_diff = $diff;\n                $closest_elements\
    \ = array($numbers[$i], $numbers[$j]);\n            }\n        }\n    }\n    sort($closest_elements);\n\
    \    return $closest_elements;\n}\n\n/*\n * From a supplied array of numbers (of\
    \ length at least two) select and return two that are the furthest from each\n\
    other and return them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)\n */\nfunction candidate(...$args)\
    \ {\n    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest_elements = array();\n    $closest_difference = null;\n    $length\
    \ = count($numbers);\n    for ($i = 0; $i < $length; $i++) {\n        for ($j\
    \ = $i + 1; $j < $length; $j++) {\n            $difference = abs($numbers[$i]\
    \ - $numbers[$j]);\n            if ($closest_difference === null || $difference\
    \ < $closest_difference) {\n                $closest_difference = $difference;\n\
    \                $closest_elements = array($numbers[$i], $numbers[$j]);\n    \
    \        }\n        }\n    }\n    sort($closest_elements);\n    return $closest_elements;\n\
    }\n\n/* From a supplied array of numbers (of length at least two) select and return\
    \ two that are the furthest from each\nother and return them in order (smaller\
    \ number, larger number).\n>>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $min = $numbers[0];\n    $max = $numbers[1];\n    $min_index = 0;\n \
    \   $max_index = 1;\n    for ($i = 0; $i < count($numbers); $i++) {\n        if\
    \ ($numbers[$i] < $min) {\n            $min = $numbers[$i];\n            $min_index\
    \ = $i;\n        }\n        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n\
    \            $max_index = $i;\n        }\n    }\n    $min_diff = $max - $min;\n\
    \    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j = 0; $j < count($numbers);\
    \ $j++) {\n            if ($i != $j) {\n                $diff = abs($numbers[$i]\
    \ - $numbers[$j]);\n                if ($diff < $min_diff) {\n               \
    \     $min_diff = $diff;\n                    $min_index = $i;\n             \
    \       $max_index = $j;\n                }\n            }\n        }\n    }\n\
    \    return array($numbers[$min_index], $numbers[$max_index]);\n}\n\n/* From a\
    \ supplied array of numbers (of length at least two) select and return two that\
    \ are the furthest from each\nother and return them in order (smaller number,\
    \ larger number).\n>>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2))\n\
    array(1.0, 5.0)\n>>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0))\n\
    array(1.0, 5.0)*/\nfunction candidate(...$args) {\n    return find_closest_elements(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0,\
    \ 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1, 2.2,\
    \ 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1u933jvz.php:51\n\
    Stack trace:\n#0 /tmp/tmp1u933jvz.php(57): test()\n#1 {main}\n  thrown in /tmp/tmp1u933jvz.php\
    \ on line 51\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n\t$closest = array();\n\t$closest[0] = $numbers[0];\n\t$closest[1] = $numbers[1];\n\
    \tfor ($i = 0; $i < count($numbers); $i++) {\n\t\tfor ($j = $i + 1; $j < count($numbers);\
    \ $j++) {\n\t\t\tif (abs($numbers[$i] - $numbers[$j]) < abs($closest[0] - $closest[1]))\
    \ {\n\t\t\t\t$closest[0] = $numbers[$i];\n\t\t\t\t$closest[1] = $numbers[$j];\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn $closest;\n}\n\n/* From a supplied array of numbers\
    \ (of length at least two) select and return two that are the furthest from each\n\
    other and return them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb4008ewj.php:35\n\
    Stack trace:\n#0 /tmp/tmpb4008ewj.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpb4008ewj.php\
    \ on line 35\n"
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $min = abs($numbers[0] - $numbers[1]);\n    $result = array($numbers[0],\
    \ $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j\
    \ = $i + 1; $j < count($numbers); $j++) {\n            if (abs($numbers[$i] -\
    \ $numbers[$j]) < $min) {\n                $min = abs($numbers[$i] - $numbers[$j]);\n\
    \                $result = array($numbers[$i], $numbers[$j]);\n            }\n\
    \        }\n    }\n    return $result;\n}\n\n/* From a supplied array of numbers\
    \ (of length at least two) select and return two that are the furthest from each\n\
    other and return them in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw1uih3vp.php:34\n\
    Stack trace:\n#0 /tmp/tmpw1uih3vp.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpw1uih3vp.php\
    \ on line 34\n"
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n    $closest = array();\n    $min = INF;\n    for ($i = 0; $i < count($numbers)\
    \ - 1; $i++) {\n        for ($j = $i + 1; $j < count($numbers); $j++) {\n    \
    \        $diff = abs($numbers[$i] - $numbers[$j]);\n            if ($diff < $min)\
    \ {\n                $min = $diff;\n                $closest = array($numbers[$i],\
    \ $numbers[$j]);\n            }\n        }\n    }\n    sort($closest);\n    return\
    \ $closest;\n}\n\n/* From a supplied array of numbers (of length at least two)\
    \ select and return two that are the furthest from each\nother and return them\
    \ in order (smaller number, larger number).\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n\
    \    return find_closest_elements(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array(1.0, 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 5.9, 4.0, 5.0)) !== array(5.0, 5.9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.0)) !== array(2.0, 2.0)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1.1, 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* From a supplied array of numbers (of length at least two) select\
    \ and return two that are the closest to each\nother and return them in order\
    \ (smaller number, larger number).\n>>> find_closest_elements(array(1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 2.2))\narray(2.0, 2.2)\n>>> find_closest_elements(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.0))\narray(2.0, 2.0)*/\nfunction find_closest_elements($numbers)\
    \ {\n\t$min = abs($numbers[0] - $numbers[1]);\n\t$min_index = 0;\n\tfor ($i =\
    \ 1; $i < count($numbers) - 1; $i++) {\n\t\t$diff = abs($numbers[$i] - $numbers[$i\
    \ + 1]);\n\t\tif ($diff < $min) {\n\t\t\t$min = $diff;\n\t\t\t$min_index = $i;\n\
    \t\t}\n\t}\n\treturn array($numbers[$min_index], $numbers[$min_index + 1]);\n\
    }\n\n/* From a supplied array of numbers (of length at least two) select and return\
    \ two that are the furthest from each\nother and return them in order (smaller\
    \ number, larger number).\n>>> find_furthest_elements(array(1.0, 2.0, 3.0, 4.0,\
    \ 5.0, 2.2))\narray(1.0, 5.0)\n>>> find_furthest_elements(array(1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 2.0))\narray(1.0, 5.0)*/\nfunction candidate(...$args) {\n    return\
    \ find_closest_elements(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.9, 4.0, 5.0, 2.2)) !== array(3.9, 4.0)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 5.9, 4.0, 5.0)) !== array(5.0,\
    \ 5.9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 2.2)) !== array(2.0, 2.2)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0, 4.0, 5.0, 2.0)) !== array(2.0,\
    \ 2.0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.1,\
    \ 2.2, 3.1, 4.1, 5.1)) !== array(2.2, 3.1)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbjtt18ul.php:33\n\
    Stack trace:\n#0 /tmp/tmpbjtt18ul.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpbjtt18ul.php\
    \ on line 33\n"
  timestamp: 1660220717

language: php
name: HumanEval_92_any_int
results:
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7) . \"<br>\"\
    ;\necho any_int(3, 2, 2) . \"<br>\";\necho any_int(3, -2, 1) . \"<br>\";\necho\
    \ any_int(3.6, -2.2, 2) . \"<br>\";\n\n/* Create a function that takes a string\
    \ and returns the number of words in the string.\nExamples\n>>> count_words(\"\
    Hello world\")\n2\n>>> count_words(\"I am a student\")\n4\n>>> count_words(\"\"\
    )\n0*/\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br><br>
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7) . \"<br>\"\
    ;\necho any_int(3, 2, 2) . \"<br>\";\necho any_int(3, -2, 1) . \"<br>\";\necho\
    \ any_int(3.6, -2.2, 2) . \"<br>\";\n\n/* Create a function that takes a string\
    \ and returns the number of words in the string.\nExamples\n>>> count_words(\"\
    Hello world\")\n2\n>>> count_words(\"Hello world, I'm a string\")\n5\n>>> count_words(\"\
    \")\n0\n>>> count_words(\" \")\n0*/\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br><br>
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7) . \"\\n\"\
    ;\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3, -2, 1) . \"\\n\";\necho any_int(3.6,\
    \ -2.2, 2) . \"\\n\";\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    1


    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(3, -2, 1);\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    return (($x + $y == $z) || ($x + $z == $y)\
    \ || ($y + $z == $x)) && (is_int($x) && is_int($y) && is_int($z));\n}\n\necho\
    \ any_int(5, 2, 7) . \"\\n\";\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3,\
    \ -2, 1) . \"\\n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    1


    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\n/* Create a function that takes\
    \ a string and returns the number of vowels in the string.\nExamples\n>>> count_vowels(\"\
    hello\")\n2\n>>> count_vowels(\"apple\")\n2\n>>> count_vowels(\"pizza\")\n2\n\
    >>> count_vowels(\"rhythm\")\n2\n>>> count_vowels(\"banana\")\n3\n>>> count_vowels(\"\
    \")\n0\n>>> count_vowels(\"grrrr\")\n0\n>>> count_vowels(\"grrrrrhythm\")\n2*/\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\n/* Create a function that takes\
    \ a string and returns the number of words in the string.\nExamples\n>>> count_words(\"\
    Hello world\")\n2\n>>> count_words(\"Lorem ipsum dolor sit amet.\")\n5\n>>> count_words(\"\
    \")\n0*/\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7) . \"\\n\"\
    ;\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3, -2, 1) . \"\\n\";\necho any_int(3.6,\
    \ -2.2, 2) . \"\\n\";\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    1


    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho \"\
    <br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho\
    \ \"<br>\";\necho any_int(3.6, -2.2, 2);\necho \"<br>\";\necho any_int(3.6, -2.2,\
    \ 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7) . \"\\n\"\
    ;\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3, -2, 1) . \"\\n\";\necho any_int(3.6,\
    \ -2.2, 2) . \"\\n\";\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    1


    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(3, -2, 1);\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(3, -2, 1);\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho \"\
    <br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho\
    \ \"<br>\";\necho any_int(3.6, -2.2, 2);\necho \"<br>\";\necho any_int(3.6, -2.2,\
    \ 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.0);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.1);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.3);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.4);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2.5);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.6);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.7);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.8);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.9);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 3.0);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 3.1);\necho \"<br>\";\necho any_int(3.6, -2.2, 3.2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho \"\
    <br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho\
    \ \"<br>\";\necho any_int(3.6, -2.2, 2);\necho \"<br>\";\n\n/* Create a function\
    \ that takes a string and returns a string with the first letter of each word\
    \ capitalized.\nExamples\n>>> capitalize(\"hello world\")\n\"Hello World\"\n>>>\
    \ capitalize(\"HELLO WORLD\")\n\"Hello World\"\n>>> capitalize(\"hello WORLD\"\
    )\n\"Hello World\"\n>>> capitalize(\"hEllo world\")\n\"Hello World\"\n>>> capitalize(\"\
    hEllo wORLD\")\n\"Hello World\"\n>>> capitalize(\"hEllo wORLD\")\n\"Hello World\"\
    \n>>> capitalize(\"hEllo wORLD\")\n\"Hello World\"\n>>> capitalize(\"hEllo wORLD\"\
    )\n\"Hello World\"\n>>> capitalize(\"hEllo wORLD\")\n\"Hello World\"\n>>> capitalize(\"\
    hEllo wORLD\")\n\"Hello World\"\n>>> capitalize(\"hEllo wORLD\")\n\"Hello World\"\
    \n>>> capitalize(\"hEllo wORLD\")\n\"Hello World\"\n>>> capitalize(\"hEllo wORLD\"\
    )\n\"Hello World\"\n>>> capitalize(\"hEllo wORLD\")\n\"Hello World\"\n>>> capitalize(\"\
    hEllo wORLD\")\n\"Hello World\"\n>>> capitalize(\"hEllo wORLD\")\n\"Hello World\"\
    \n>>> capitalize(\"hEllo wORLD\")\n\"Hello World\"\n>>> capitalize(\"hEllo wORLD\"\
    )\n\"Hello World\"\n>>> capitalize(\"hEllo wORLD\")\n\"Hello World\"\n>>> capitalize(\"\
    hEllo wORLD\")\n\"Hello World\"\n>>> capitalize(\"hEllo wORLD\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 35 in /tmp/tmpvmaequhf.php on
    line 35

    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    return (($x + $y == $z) || ($x + $z == $y)\
    \ || ($y + $z == $x)) && (is_int($x) && is_int($y) && is_int($z));\n}\n\necho\
    \ any_int(5, 2, 7);\necho \"<br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\n\
    echo any_int(3, -2, 1);\necho \"<br>\";\necho any_int(3.6, -2.2, 2);\necho \"\
    <br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2,\
    \ 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\n\
    \nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    return (is_int($x) && is_int($y) && is_int($z))\
    \ && ($x == $y + $z || $y == $x + $z || $z == $x + $y);\n}\n\necho any_int(3,\
    \ -2, 1);\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\n/* Create a function that takes\
    \ a string and returns the number of words in the string.\nExamples\n>>> count_words(\"\
    Hello World\")\n2\n>>> count_words(\"I love PHP\")\n3\n>>> count_words(\"\")\n\
    0*/\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho \"\
    <br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho\
    \ \"<br>\";\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n   \
    \ return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br>
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(3, -2, 1);\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(3, -2, 1);\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    return $x == $y + $z || $y == $x + $z || $z\
    \ == $x + $y;\n}\n\necho any_int(5, 2, 7) . PHP_EOL;\necho any_int(3, 2, 2) .\
    \ PHP_EOL;\necho any_int(3, -2, 1) . PHP_EOL;\necho any_int(3.6, -2.2, 2) . PHP_EOL;\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n1\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsmg66wy4.php:29\n\
    Stack trace:\n#0 /tmp/tmpsmg66wy4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpsmg66wy4.php\
    \ on line 29\n"
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\n/* Create a function that takes\
    \ a string and returns the number of words in the string.\nExamples\n>>> count_words(\"\
    Hello world\")\n2\n>>> count_words(\"Hello world, it's me\")\n4\n>>> count_words(\"\
    Hello world it's me\")\n4\n>>> count_words(\"Hello world, it's me!\")\n4\n>>>\
    \ count_words(\"Hello world it's me!\")\n4*/\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    return $x + $y == $z || $x + $z == $y || $y\
    \ + $z == $x;\n}\n\necho any_int(5, 2, 7) . \"<br>\";\necho any_int(3, 2, 2) .\
    \ \"<br>\";\necho any_int(3, -2, 1) . \"<br>\";\necho any_int(3.6, -2.2, 2) .\
    \ \"<br>\";\n\n/* Create a function that takes a string and returns the number\
    \ of words in the string.\nExamples\n>>> count_words(\"Hello World\")\n2\n>>>\
    \ count_words(\"Hello World, I am a string\")\n5\n>>> count_words(\"\")\n0*/\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1<br><br>1<br><br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1dkxeh65.php:38\n\
    Stack trace:\n#0 /tmp/tmp1dkxeh65.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp1dkxeh65.php\
    \ on line 38\n"
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if(is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n         \
    \   return true;\n        }\n    }\n    return false;\n}\necho any_int(5, 2, 7);\n\
    echo any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    return (is_int($x) && is_int($y) && is_int($z))\
    \ && ($x + $y == $z || $x + $z == $y || $y + $z == $x);\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho \"\
    <br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho\
    \ \"<br>\";\necho any_int(3.6, -2.2, 2);\necho \"<br>\";\necho any_int(3.6, -2.2,\
    \ 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho \"\
    <br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho\
    \ \"<br>\";\necho any_int(3.6, -2.2, 2);\necho \"<br>\";\necho any_int(3.6, -2.2,\
    \ 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7) . '<br>';\n\
    echo any_int(3, 2, 2) . '<br>';\necho any_int(3, -2, 1) . '<br>';\necho any_int(3.6,\
    \ -2.2, 2) . '<br>';\n\n/* Create a function that takes a string and returns the\
    \ number of words in the string.\nExamples\n>>> count_words(\"Hello World\")\n\
    2\n>>> count_words(\"Hello World, my name is John\")\n5\n>>> count_words(\"Lorem\
    \ ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt\
    \ ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation\
    \ ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor\
    \ in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.\
    \ Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt\
    \ mollit anim id est laborum.\")\n28*/\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br><br>
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (($x == $y + $z) || ($y == $x + $z) ||\
    \ ($z == $x + $y)) {\n        return true;\n    } else {\n        return false;\n\
    \    }\n}\n\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2,\
    \ 1);\necho any_int(3.6, -2.2, 2);\n\n/* Create a function that takes a string\
    \ and returns the number of words in the string.\nExamples\n>>> count_words(\"\
    Hello world\")\n2\n>>> count_words(\"This is a sentence\")\n4\n>>> count_words(\"\
    \")\n0\n>>> count_words(\"one two three\")\n3\n>>> count_words(\"a b c d e f g\
    \ h i j k l m n o p q r s t u v w x y z\")\n26*/\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprc9msorx.php:46\n\
    Stack trace:\n#0 /tmp/tmprc9msorx.php(56): test()\n#1 {main}\n  thrown in /tmp/tmprc9msorx.php\
    \ on line 46\n"
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\n/* Create a function that takes\
    \ a string and returns a string with all vowels removed.\nExamples\n>>> remove_vowels(\"\
    I have never seen a thin person drinking Diet Coke.\")\n\" hv nvr sn  thn prsn\
    \ drnkng Dt Ck.\"\n>>> remove_vowels(\"We're gonna build a wall!\")\n\"W'r gnn\
    \ bld  wll!\"\n>>> remove_vowels(\"Happy Thanksgiving to all--even the haters\
    \ and losers!\")\n\"Hppy Thnksgvng t ll--vn th htrs nd lsrs!\"*/\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7) . \"\\n\"\
    ;\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3, -2, 1) . \"\\n\";\necho any_int(3.6,\
    \ -2.2, 2) . \"\\n\";\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    1


    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho \"\
    <br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho\
    \ \"<br>\";\necho any_int(3.6, -2.2, 2);\necho \"<br>\";\necho any_int(3.6, -2.2,\
    \ 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\n/* Create a function that takes\
    \ a string and returns a string with all vowels removed.\nExamples\n>>> remove_vowels(\"\
    Hello!\")\n\"Hll!\"\n>>> remove_vowels(\"Tomatoes\")\n\"Tmts\"\n>>> remove_vowels(\"\
    Reverse Vowels In A String\")\n\"Rvrs Vwls n A Strng\"\n>>> remove_vowels(\"aeiou\"\
    )\n\"\"\n>>> remove_vowels(\"why try, shy fly?\")\n\"why try, shy fly?\"*/\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if ($x == ($y + $z) && is_int($x) && is_int($y)\
    \ && is_int($z)) {\n        return true;\n    } elseif ($y == ($x + $z) && is_int($x)\
    \ && is_int($y) && is_int($z)) {\n        return true;\n    } elseif ($z == ($x\
    \ + $y) && is_int($x) && is_int($y) && is_int($z)) {\n        return true;\n \
    \   } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho\
    \ any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho \"\
    <br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho\
    \ \"<br>\";\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n   \
    \ return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br>
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n\tif (is_int($x) && is_int($y) && is_int($z))\
    \ {\n\t\tif ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n\t\t\treturn\
    \ true;\n\t\t}\n\t}\n\treturn false;\n}\n\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(3, -2, 1);\necho\
    \ any_int(3.6, -2.2, 2);\necho any_int(3, 2, 2);\necho any_int(5, 2, 7);\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7) . \"\\n\"\
    ;\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3, -2, 1) . \"\\n\";\necho any_int(3.6,\
    \ -2.2, 2) . \"\\n\";\n\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    1


    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(3, -2, 1);\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(3, -2, 1);\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho \"\
    <br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho\
    \ \"<br>\";\necho any_int(3.6, -2.2, 2);\necho \"<br>\";\necho any_int(3.6, -2.2,\
    \ 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n  if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n    if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n      return\
    \ true;\n    }\n  }\n  return false;\n}\n\necho any_int(5, 2, 7) . \"\\n\";\n\
    echo any_int(3, 2, 2) . \"\\n\";\necho any_int(3, -2, 1) . \"\\n\";\necho any_int(3.6,\
    \ -2.2, 2) . \"\\n\";\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    1


    '
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if ($x == $y + $z || $y == $x + $z || $z ==\
    \ $x + $y) {\n        return true;\n    }\n    return false;\n}\n\necho any_int(5,\
    \ 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2,\
    \ 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpley803hy.php:32\n\
    Stack trace:\n#0 /tmp/tmpley803hy.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpley803hy.php\
    \ on line 32\n"
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(3, -2, 1);\n\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho \"\
    <br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho\
    \ \"<br>\";\necho any_int(3.6, -2.2, 2);\necho \"<br>\";\necho any_int(3.6, -2.2,\
    \ 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    return (is_int($x) && is_int($y) && is_int($z))\
    \ && ($x + $y == $z || $x + $z == $y || $y + $z == $x);\n}\n\necho any_int(5,\
    \ 2, 7) . \"\\n\";\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3, -2, 1) .\
    \ \"\\n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    1


    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(3, -2, 1);\n\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(3, -2, 1);\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho \"\
    <br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho\
    \ \"<br>\";\necho any_int(3.6, -2.2, 2);\necho \"<br>\";\necho any_int(3.6, -2.2,\
    \ 2.1);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.1);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.1);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.1);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.1);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.1);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2.1);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.1);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.1);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.1);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.1);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2.1);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.1);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.1);\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n  if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n    if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n      return\
    \ true;\n    }\n  }\n  return false;\n}\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    return (is_int($x) && is_int($y) && is_int($z))\
    \ && ($x + $y == $z || $x + $z == $y || $y + $z == $x);\n}\n\necho any_int(5,\
    \ 2, 7) . \"\\n\";\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3, -2, 1) .\
    \ \"\\n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    1


    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7) . \"<br>\"\
    ;\necho any_int(3, 2, 2) . \"<br>\";\necho any_int(3, -2, 1) . \"<br>\";\necho\
    \ any_int(3.6, -2.2, 2) . \"<br>\";\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br><br>
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho \"\
    <br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho\
    \ \"<br>\";\necho any_int(3.6, -2.2, 2);\necho \"<br>\";\necho any_int(3.6, -2.2,\
    \ 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho \"\
    <br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho\
    \ \"<br>\";\necho any_int(3.6, -2.2, 2);\necho \"<br>\";\necho any_int(3.6, -2.2,\
    \ 2.1);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.1);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.1);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.1);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.1);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.1);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2.1);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.1);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.1);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.1);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.1);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2.1);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.1);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.1);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7) . \"<br>\"\
    ;\necho any_int(3, 2, 2) . \"<br>\";\necho any_int(3, -2, 1) . \"<br>\";\necho\
    \ any_int(3.6, -2.2, 2) . \"<br>\";\n\n/* Create a function that takes a string\
    \ and returns the number of words in the string.\nExamples\n>>> count_words(\"\
    Hello World\")\n2\n>>> count_words(\"Hello World, how are you?\")\n5\n>>> count_words(\"\
    Hi, my name is John\")\n4*/\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br><br>
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\n/* Create a function that takes\
    \ a string and returns the number of words in the string.\nExamples\n>>> count_words(\"\
    This is a test\")\n4\n>>> count_words(\"This is a test with a lot of words\")\n\
    10\n>>> count_words(\"\")\n0\n>>> count_words(\"This is a test with a lot of words\
    \ and more words\")\n12*/\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(3, -2, 1);\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\n/* Create a function that takes\
    \ a string and returns a string with the first letter of each word capitalized.\n\
    Examples\n>>> capitalize(\"hello world\")\n\"Hello World\"\n>>> capitalize(\"\
    i love coding\")\n\"I Love Coding\"\n>>> capitalize(\"i love coding\")\n\"I Love\
    \ Coding\"\n>>> capitalize(\"i love coding\")\n\"I Love Coding\"\n>>> capitalize(\"\
    i love coding\")\n\"I Love Coding\"\n>>> capitalize(\"i love coding\")\n\"I Love\
    \ Coding\"\n>>> capitalize(\"i love coding\")\n\"I Love Coding\"\n>>> capitalize(\"\
    i love coding\")\n\"I Love Coding\"\n>>> capitalize(\"i love coding\")\n\"I Love\
    \ Coding\"\n>>> capitalize(\"i love coding\")\n\"I Love Coding\"\n>>> capitalize(\"\
    i love coding\")\n\"I Love Coding\"\n>>> capitalize(\"i love coding\")\n\"I Love\
    \ Coding\"\n>>> capitalize(\"i love coding\")\n\"I Love Coding\"\n>>> capitalize(\"\
    i love coding\")\n\"I Love Coding\"\n>>> capitalize(\"i love coding\")\n\"I Love\
    \ Coding\"\n>>> capitalize(\"i love coding\")\n\"I Love Coding\"\n>>> capitalize(\"\
    i love coding\")\n\"I Love Coding\"\n>>> capitalize(\"i love coding\")\n\"I Love\
    \ Coding\"\n>>> capitalize(\"i love coding\")\n\"I Love Coding\"\n>>> capitalize(\"\
    i love coding\")\n\"I Love Coding\"\n>>> capitalize(\"i love coding\")\n\"I Love\
    \ Coding\"\n>>> capitalize(\"i love coding\")\n\"I Love Coding\"\n>>> capitalize(\"\
    i love coding\")\n\"I Love Coding\"\n>>> capitalize(\"i love coding\")\n\"I Love\
    \ Coding\"\n>>> capitalize(\"i love coding\")\n\"I Love Coding\"\n>>> capitalize(\"\
    i love coding\")\n\"I Love Coding\"\n>>> capitalize(\"i love coding\")\n\"\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 26 in /tmp/tmpn0fulo3x.php on
    line 26

    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    return (is_int($x) && is_int($y) && is_int($z))\
    \ && ($x + $y == $z || $x + $z == $y || $y + $z == $x);\n}\n\n/* Create a function\
    \ that takes a string and returns the number of words in the string.\nExamples\n\
    >>> count_words(\"Hello world\")\n2\n>>> count_words(\"I love PHP\")\n3\n>>> count_words(\"\
    \")\n0*/\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho \"\
    <br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho\
    \ \"<br>\";\necho any_int(3.6, -2.2, 2);\necho \"<br>\";\n\n/*Create a function\
    \ that takes a string and returns the number of words in the string.\nExamples\n\
    >>> count_words(\"Hello world\")\n2\n>>> count_words(\"Lorem ipsum dolor sit amet\"\
    )\n5\n>>> count_words(\"\")\n0*/\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br><br>
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho \"\
    <br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho\
    \ \"<br>\";\necho any_int(3.6, -2.2, 2);\necho \"<br>\";\necho any_int(3.6, -2.2,\
    \ 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho \"\
    <br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho\
    \ \"<br>\";\necho any_int(3.6, -2.2, 2);\necho \"<br>\";\n\n/* Create a function\
    \ that takes a string and returns the number of vowels in the string.\nExamples\n\
    >>> count_vowels(\"apple\")\n2\n>>> count_vowels(\"cheesecake\")\n5\n>>> count_vowels(\"\
    bbb\")\n0\n>>> count_vowels(\"\")\n0*/\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br><br>
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\n/* Create a function that takes\
    \ a string and returns true if the string contains only alphabetic characters\
    \ and false otherwise.\nExamples\n>>> alpha_only(\"abc\")\ntrue\n>>> alpha_only(\"\
    abc123\")\nfalse\n>>> alpha_only(\"abc.123\")\nfalse\n>>> alpha_only(\"abc-123\"\
    )\nfalse\n>>> alpha_only(\"abc-123.def\")\nfalse\n>>> alpha_only(\"abc-123.def.ghi\"\
    )\nfalse\n>>> alpha_only(\"abc-123.def.ghi.jkl\")\nfalse\n>>> alpha_only(\"abc-123.def.ghi.jkl.mno\"\
    )\nfalse\n>>> alpha_only(\"abc-123.def.ghi.jkl.mno.pqr\")\nfalse\n>>> alpha_only(\"\
    abc-123.def.ghi.jkl.mno.pqr.stu\")\nfalse\n>>> alpha_only(\"abc-123.def.ghi.jkl.mno.pqr.stu.vwx\"\
    )\nfalse\n>>> alpha_only(\"abc-123.def.ghi.jkl.mno.pqr.stu.vwx.yz\")\nfalse\n\
    >>> alpha_only(\"abc-123.def.ghi.jkl.mno.pqr.stu.vwx.yz.ABC\")\nfalse\n>>> alpha_only(\"\
    abc-123.def.ghi.jkl.mno.pqr.stu.vwx.yz.ABC.DEF\")\nfalse\n>>> alpha_only(\"abc-123.def.ghi.jkl.mno.pqr.stu.vwx.yz.ABC.DEF.GHI\"\
    )\nfalse\n>>> alpha_only(\"abc-123.def.ghi.jkl.mno.pqr.stu.vwx.yz.\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 26 in /tmp/tmpmjpy8izc.php on
    line 26

    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(3, -2, 1);\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    return (is_int($x) && is_int($y) && is_int($z))\
    \ && ($x + $y == $z || $x + $z == $y || $y + $z == $x);\n}\n\n/* Create a function\
    \ that takes a string and returns the number of words in the string.\nExamples\n\
    >>> count_words(\"Hello world\")\n2\n>>> count_words(\"I love PHP\")\n3\n>>> count_words(\"\
    \")\n0*/\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho \"\
    <br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho\
    \ \"<br>\";\necho any_int(3.6, -2.2, 2);\necho \"<br>\";\n\n/* Create a function\
    \ that takes a string and returns a string with the first letter of each word\
    \ capitalized.\nExamples\n>>> capitalize(\"hello world\")\n\"Hello World\"\n>>>\
    \ capitalize(\"HELLO WORLD\")\n\"Hello World\"\n>>> capitalize(\"hello WORLD\"\
    )\n\"Hello World\"\n>>> capitalize(\"HELLO world\")\n\"Hello World\"\n>>> capitalize(\"\
    hello WORLD\")\n\"Hello World\"\n>>> capitalize(\"hello World\")\n\"Hello World\"\
    \n>>> capitalize(\"HELLO World\")\n\"Hello World\"\n>>> capitalize(\"HELLO WORLD\"\
    )\n\"Hello World\"\n>>> capitalize(\"HELLO WORLD\")\n\"Hello World\"\n>>> capitalize(\"\
    HELLO WORLD\")\n\"Hello World\"\n>>> capitalize(\"HELLO WORLD\")\n\"Hello World\"\
    \n>>> capitalize(\"HELLO WORLD\")\n\"Hello World\"\n>>> capitalize(\"HELLO WORLD\"\
    )\n\"Hello World\"\n>>> capitalize(\"HELLO WORLD\")\n\"Hello World\"\n>>> capitalize(\"\
    HELLO WORLD\")\n\"Hello World\"\n>>> capitalize(\"HELLO WORLD\")\n\"Hello World\"\
    \n>>> capitalize(\"HELLO WORLD\")\n\"Hello World\"\n>>> capitalize(\"HELLO WORLD\"\
    )\n\"Hello World\"\n>>> capitalize(\"HELLO WORLD\")\n\"Hello World\"\n>>> capitalize(\"\
    HELLO WORLD\")\n\"Hello World\"\n>>> capitalize(\"HELLO WORLD\")\n\"Hello World\"\
    \n>>> capitalize(\"HELLO WORLD\")\n\"Hello World\"\n>>> capitalize(\"HELLO WORLD\"\
    )\n\"Hello World\"\n>>> capitalize(\"\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 35 in /tmp/tmpffwpjs4n.php on
    line 35

    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(3, -2, 1);\n\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho \"\
    <br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho\
    \ \"<br>\";\necho any_int(3.6, -2.2, 2);\necho \"<br>\";\necho any_int(3.6, -2.2,\
    \ 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho \"\
    <br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho\
    \ \"<br>\";\necho any_int(3.6, -2.2, 2);\necho \"<br>\";\n\n/* Create a function\
    \ that takes a string and returns a string with spaces in between all of the characters.\n\
    Examples\n>>> space_out(\"hello\")\n\"h e l l o\"\n>>> space_out(\"space\")\n\"\
    s p a c e\"\n>>> space_out(\"far out\")\n\"f a r   o u t\"\n>>> space_out(\"elongated\
    \ musk\")\n\"e l o n g a t e d   m u s k\"*/\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br><br>
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\n/*\nCreate a function that takes\
    \ a string and returns the number of words in the string.\nExamples\n>>> count_words(\"\
    This is a sentence\")\n4\n>>> count_words(\"This is a sentence with a lot of words\"\
    )\n9\n>>> count_words(\"This is a sentence with a lot of words and a lot of words\"\
    )\n12\n*/\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho '<br>';\n\
    echo any_int(3, 2, 2);\necho '<br>';\necho any_int(3, -2, 1);\necho '<br>';\n\
    echo any_int(3.6, -2.2, 2);\necho '<br>';\necho any_int(3.6, -2.2, 2.2);\necho\
    \ '<br>';\necho any_int(3.6, -2.2, 2.2);\necho '<br>';\necho any_int(3.6, -2.2,\
    \ 2.2);\necho '<br>';\necho any_int(3.6, -2.2, 2.2);\necho '<br>';\necho any_int(3.6,\
    \ -2.2, 2.2);\necho '<br>';\necho any_int(3.6, -2.2, 2.2);\necho '<br>';\necho\
    \ any_int(3.6, -2.2, 2.2);\necho '<br>';\necho any_int(3.6, -2.2, 2.2);\necho\
    \ '<br>';\necho any_int(3.6, -2.2, 2.2);\necho '<br>';\necho any_int(3.6, -2.2,\
    \ 2.2);\necho '<br>';\necho any_int(3.6, -2.2, 2.2);\necho '<br>';\necho any_int(3.6,\
    \ -2.2, 2.2);\necho '<br>';\necho any_int(3.6, -2.2, 2.2);\necho '<br>';\necho\
    \ any\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting "," or ";" in
    /tmp/tmptbpoajuv.php on line 60

    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7) . PHP_EOL;\n\
    echo any_int(3, 2, 2) . PHP_EOL;\necho any_int(3, -2, 1) . PHP_EOL;\necho any_int(3.6,\
    \ -2.2, 2) . PHP_EOL;\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    1


    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7) . \"<br>\"\
    ;\necho any_int(3, 2, 2) . \"<br>\";\necho any_int(3, -2, 1) . \"<br>\";\necho\
    \ any_int(3.6, -2.2, 2) . \"<br>\";\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br><br>
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7) . \"<br>\"\
    ;\necho any_int(3, 2, 2) . \"<br>\";\necho any_int(3, -2, 1) . \"<br>\";\necho\
    \ any_int(3.6, -2.2, 2) . \"<br>\";\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br><br>
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7) . \"\\n\"\
    ;\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3, -2, 1) . \"\\n\";\necho any_int(3.6,\
    \ -2.2, 2) . \"\\n\";\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    1


    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(3, -2, 1);\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    return ($x + $y == $z || $x + $z == $y ||\
    \ $y + $z == $x) && is_int($x) && is_int($y) && is_int($z);\n}\necho any_int(5,\
    \ 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2,\
    \ 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (($x == $y + $z) || ($y == $x + $z) ||\
    \ ($z == $x + $y)) {\n        return true;\n    } else {\n        return false;\n\
    \    }\n}\necho any_int(5, 2, 7);\necho \"<br>\";\necho any_int(3, 2, 2);\necho\
    \ \"<br>\";\necho any_int(3, -2, 1);\necho \"<br>\";\necho any_int(3.6, -2.2,\
    \ 2);\necho \"<br>\";\necho \"<br>\";\n\n/* Create a function that takes a string\
    \ and returns a string with all vowels removed.\nExamples\n>>> remove_vowels(\"\
    Hello!\")\n\"Hll!\"\n>>> remove_vowels(\"Tomatoes\")\n\"Tmts\"\n>>> remove_vowels(\"\
    Reverse Vowels In A String\")\n\"Rvrs Vwls n A Strng\"\n>>> remove_vowels(\"aeiou\"\
    )\n\"\"\n>>> remove_vowels(\"why try, shy fly?\")\n\"why try, shy fly?\"*/\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1<br><br>1<br><br><br>\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpr4ixapyw.php:50\nStack trace:\n#0 /tmp/tmpr4ixapyw.php(60): test()\n\
    #1 {main}\n  thrown in /tmp/tmpr4ixapyw.php on line 50\n"
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho \"\
    <br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho\
    \ \"<br>\";\necho any_int(3.6, -2.2, 2);\necho \"<br>\";\necho any_int(3.6, -2.2,\
    \ 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7) . \"<br>\"\
    ;\necho any_int(3, 2, 2) . \"<br>\";\necho any_int(3, -2, 1) . \"<br>\";\necho\
    \ any_int(3.6, -2.2, 2) . \"<br>\";\n\n/* Create a function that takes 3 numbers.\n\
    Returns true if one of the numbers is equal to the sum of the other two, and all\
    \ numbers are integers.\nReturns false in any other cases.\nExamples\n>>> any_int(5,\
    \ 2, 7)\ntrue\n>>> any_int(3, 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6,\
    \ -2.2, 2)\nfalse*/\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br><br>
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (($x == $y + $z) || ($y == $x + $z) ||\
    \ ($z == $x + $y)) {\n        return true;\n    } else {\n        return false;\n\
    \    }\n}\necho any_int(5, 2, 7) . \"<br>\";\necho any_int(3, 2, 2) . \"<br>\"\
    ;\necho any_int(3, -2, 1) . \"<br>\";\necho any_int(3.6, -2.2, 2) . \"<br>\";\n\
    \n/* Create a function that takes a string and returns the number of words in\
    \ it.\nExamples\n>>> count_words(\"Hello world\")\n2\n>>> count_words(\"This is\
    \ a sentence\")\n4\n>>> count_words(\"\")\n0*/\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1<br><br>1<br><br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqz9qx6x2.php:41\n\
    Stack trace:\n#0 /tmp/tmpqz9qx6x2.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpqz9qx6x2.php\
    \ on line 41\n"
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\n\n/* Create a\
    \ function that takes a string and returns a string with the first letter of each\
    \ word capitalized.\nExamples\n>>> capitalize(\"hello world\")\n\"Hello World\"\
    \n>>> capitalize(\"i love coding\")\n\"I Love Coding\"\n>>> capitalize(\"i love\
    \ coding\")\n\"I Love Coding\"\n>>> capitalize(\"i love coding\")\n\"I Love Coding\"\
    */\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n  if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n    if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n      return\
    \ true;\n    }\n  }\n  return false;\n}\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if ($x == $y + $z || $y == $x + $z || $z ==\
    \ $x + $y) {\n        return true;\n    } else {\n        return false;\n    }\n\
    }\n\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\n\
    echo any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpopsx2v7i.php:33\n\
    Stack trace:\n#0 /tmp/tmpopsx2v7i.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpopsx2v7i.php\
    \ on line 33\n"
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7) . \"<br>\"\
    ;\necho any_int(3, 2, 2) . \"<br>\";\necho any_int(3, -2, 1) . \"<br>\";\necho\
    \ any_int(3.6, -2.2, 2) . \"<br>\";\n\n/* Create a function that takes a string\
    \ and returns the number of words in the string.\nExamples\n>>> count_words(\"\
    Hello World\")\n2\n>>> count_words(\"Hello World, I am a string\")\n6\n>>> count_words(\"\
    \")\n0\n>>> count_words(\"This is a sentence\")\n4*/\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br><br>
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(3, -2, 1);\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    return (is_int($x) && is_int($y) && is_int($z))\
    \ && ($x == $y + $z || $y == $x + $z || $z == $x + $y);\n}\necho any_int(3, -2,\
    \ 1);\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\nvar_dump(any_int(5, 2, 7));\n\
    var_dump(any_int(3, 2, 2));\nvar_dump(any_int(3, -2, 1));\nvar_dump(any_int(3.6,\
    \ -2.2, 2));\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'bool(true)

    bool(false)

    bool(true)

    bool(false)

    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(3, -2, 1);\necho any_int(3.6,\
    \ -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\n/* Create a function that takes\
    \ a string and returns true if it's a valid hex code and false otherwise.\nExamples\n\
    >>> is_hex(\"#ff0000\")\ntrue\n>>> is_hex(\"#ff00\")\nfalse\n>>> is_hex(\"#ff00ff\"\
    )\ntrue\n>>> is_hex(\"#ff00ff00\")\nfalse\n>>> is_hex(\"#ff00ff0\")\ntrue\n>>>\
    \ is_hex(\"#ff00ff0g\")\nfalse\n>>> is_hex(\"#ff00ff0g0\")\nfalse\n>>> is_hex(\"\
    #ff00ff0g0g\")\nfalse\n>>> is_hex(\"#ff00ff0g0g0\")\nfalse\n>>> is_hex(\"#ff00ff0g0g0g\"\
    )\nfalse\n>>> is_hex(\"#ff00ff0g0g0g0\")\nfalse\n>>> is_hex(\"#ff00ff0g0g0g0g\"\
    )\nfalse\n>>> is_hex(\"#ff00ff0g0g0g0g0\")\nfalse\n>>> is_hex(\"#ff00ff0g0g0g0g0g\"\
    )\nfalse\n>>> is_hex(\"#ff00ff0g0g0g0g0g0\")\nfalse\n>>> is_hex(\"#ff00ff0g0g0g0g0g0g\"\
    )\nfalse\n>>> is_hex(\"#ff00ff0g0g0g0g0g0g0\")\nfalse\n>>> is_hex(\"#ff00ff0g0g0g0g0g0g0g\"\
    )\nfalse\n>>> is_hex(\"#ff00ff0g0g0g0g0g0g0g0\")\nfalse\n>>> is_hex(\"#ff00ff0g0g0g0g0g0g0g0g\"\
    )\nfalse\n>>>\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 26 in /tmp/tmpfag6d1ln.php on
    line 26

    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(3, -2, 1);\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(3, -2, 1);\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(3, -2, 1);\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7) . \"\\n\"\
    ;\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3, -2, 1) . \"\\n\";\necho any_int(3.6,\
    \ -2.2, 2) . \"\\n\";\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    1


    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho \"\
    <br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho\
    \ \"<br>\";\necho any_int(3.6, -2.2, 2);\necho \"<br>\";\necho any_int(3.6, -2.2,\
    \ 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(3, -2, 1);\n\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho \"\
    <br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho\
    \ \"<br>\";\necho any_int(3.6, -2.2, 2);\necho \"<br>\";\necho any_int(3.6, -2.2,\
    \ 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho \"\
    <br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho\
    \ \"<br>\";\necho any_int(3.6, -2.2, 2);\necho \"<br>\";\necho any_int(3.6, -2.2,\
    \ 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\n\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    return (is_int($x) && is_int($y) && is_int($z))\
    \ && ($x + $y == $z || $x + $z == $y || $y + $z == $x);\n}\n\necho any_int(5,\
    \ 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2,\
    \ 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(3, -2, 1);\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n  if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n    if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n      return\
    \ true;\n    }\n  }\n  return false;\n}\n\n/* Create a function that takes a string\
    \ and returns a string with the first letter of each word capitalized.\nExamples\n\
    >>> capitalize(\"hello world\")\n\"Hello World\"\n>>> capitalize(\"HELLO WORLD\"\
    )\n\"HELLO WORLD\"\n>>> capitalize(\"hello WORLD\")\n\"Hello WORLD\"\n>>> capitalize(\"\
    hEllO wOrLd\")\n\"HEllO WOrLd\"\n>>> capitalize(\"hEllO wOrLd\")\n\"HEllO WOrLd\"\
    \n*/\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (($x == $y + $z) || ($y == $x + $z) ||\
    \ ($z == $x + $y)) {\n        return true;\n    } else {\n        return false;\n\
    \    }\n}\necho any_int(3, -2, 1);\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpan49xnpw.php:29\n\
    Stack trace:\n#0 /tmp/tmpan49xnpw.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpan49xnpw.php\
    \ on line 29\n"
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7) . \"<br>\"\
    ;\necho any_int(3, 2, 2) . \"<br>\";\necho any_int(3, -2, 1) . \"<br>\";\necho\
    \ any_int(3.6, -2.2, 2) . \"<br>\";\n\n/* Create a function that takes a string\
    \ and returns the number of words in the string.\nExamples\n>>> count_words(\"\
    Hello world\")\n2\n>>> count_words(\"Hello world, how are you?\")\n5\n>>> count_words(\"\
    \")\n0*/\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br><br>
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7) . '<br>';\n\
    echo any_int(3, 2, 2) . '<br>';\necho any_int(3, -2, 1) . '<br>';\necho any_int(3.6,\
    \ -2.2, 2) . '<br>';\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br><br>
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho \"\
    <br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho\
    \ \"<br>\";\necho any_int(3.6, -2.2, 2);\necho \"<br>\";\necho any_int(3.6, -2.2,\
    \ 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho \"\
    <br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho\
    \ \"<br>\";\necho any_int(3.6, -2.2, 2);\necho \"<br>\";\n\n/* Create a function\
    \ that takes a string and returns the number of words in the string.\nExamples\n\
    >>> count_words(\"Hello World\")\n2\n>>> count_words(\"Hello World, I'm here\"\
    )\n4\n>>> count_words(\"\")\n0\n>>> count_words(\" \")\n0\n>>> count_words(\"\
    \  \")\n0\n>>> count_words(\"a\")\n1\n>>> count_words(\"a \")\n1\n>>> count_words(\"\
    \ a\")\n1\n>>> count_words(\" a \")\n1\n>>> count_words(\"a b\")\n2\n>>> count_words(\"\
    a b \")\n2\n>>> count_words(\" a b\")\n2\n>>> count_words(\" a b \")\n2\n>>> count_words(\"\
    a b c\")\n3\n>>> count_words(\"a b c \")\n3\n>>> count_words(\" a b c\")\n3\n\
    >>> count_words(\" a b c \")\n3\n>>> count_words(\"a b c d\")\n4\n>>> count_words(\"\
    a b c d \")\n4\n>>> count_words(\" a b c d\")\n4\n>>> count_words(\" a b c d \"\
    )\n4\n>>> count_words(\"a b c d e\")\n5\n>>> count_words(\"a b c d e \")\n5\n\
    >>> count_words(\" a b c d e\")\n5\n>>> count_words(\" a b c d e \")\n5\n>>> count_words(\"\
    a b c d e f\")\n6\n>>>\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 34 in /tmp/tmpj62ry_gt.php on
    line 34

    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (($x == $y + $z) || ($y == $x + $z) ||\
    \ ($z == $x + $y)) {\n        return true;\n    } else {\n        return false;\n\
    \    }\n}\n\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2,\
    \ 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp91lp3yk9.php:33\n\
    Stack trace:\n#0 /tmp/tmp91lp3yk9.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp91lp3yk9.php\
    \ on line 33\n"
  timestamp: 1660220839
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    return (is_int($x) && is_int($y) && is_int($z))\
    \ && ($x + $y == $z || $x + $z == $y || $y + $z == $x);\n}\necho any_int(5, 2,\
    \ 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2,\
    \ 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220839
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    return (is_int($x) && is_int($y) && is_int($z))\
    \ && ($x + $y == $z || $x + $z == $y || $y + $z == $x);\n}\necho any_int(3, -2,\
    \ 1);\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220839
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n  if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n    if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n      return\
    \ true;\n    }\n  }\n  return false;\n}\n\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220839
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7) . \"\\n\"\
    ;\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3, -2, 1) . \"\\n\";\necho any_int(3.6,\
    \ -2.2, 2) . \"\\n\";\n\n/* Create a function that takes a string and returns\
    \ the number of words in the string.\nExamples\n>>> count_words(\"Hello World\"\
    )\n2\n>>> count_words(\"Hello World, how are you?\")\n5\n>>> count_words(\"\"\
    )\n0\n>>> count_words(\"  \")\n0\n>>> count_words(\"This is a test\")\n4\n>>>\
    \ count_words(\"This is a test.\")\n4\n>>> count_words(\"This is a test.  \")\n\
    4\n>>> count_words(\"This is a test.  This is a test.\")\n4\n>>> count_words(\"\
    This is a test.  This is a test.  \")\n4\n>>> count_words(\"This is a test.  This\
    \ is a test.  This is a test.\")\n4\n>>> count_words(\"This is a test.  This is\
    \ a test.  This is a test.  \")\n4\n>>> count_words(\"This is a test.  This is\
    \ a test.  This is a test.  This is a test.\")\n4\n>>> count_words(\"This is a\
    \ test.  This is a test.  This is a test.  This is a test.  \")\n4\n>>> count_words(\"\
    This is a test.  This is a test.  This is a test.  This is a test.  This is a\
    \ test.\")\n4\n>>> count_words(\"This is a test.  This is a test.  This is a test.\
    \  This is a test.  This is a test.  \")\n4\n>>> count_words\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 31 in /tmp/tmp9forztby.php on
    line 31

    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7) . \"<br>\"\
    ;\necho any_int(3, 2, 2) . \"<br>\";\necho any_int(3, -2, 1) . \"<br>\";\necho\
    \ any_int(3.6, -2.2, 2) . \"<br>\";\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br><br>
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(3, -2, 1);\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    return (is_int($x) && is_int($y) && is_int($z))\
    \ && ($x + $y == $z || $x + $z == $y || $y + $z == $x);\n}\n\n/* Create a function\
    \ that takes an array of numbers.\nReturns true if all numbers are positive, and\
    \ false otherwise.\nExamples\n>>> all_positive([1, 2, 3, 4, 5])\ntrue\n>>> all_positive([1,\
    \ -2, 3, -4, 5])\nfalse\n>>> all_positive([-1, -2, -3, -4, -5])\nfalse*/\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\n\n/* Create a\
    \ function that takes a string and returns the number of words in the string.\n\
    Examples\n>>> word_count(\"Hello World\")\n2\n>>> word_count(\"This is a sentence\"\
    )\n4\n>>> word_count(\"\")\n0*/\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\n\n/* Create a\
    \ function that takes a string and returns a string with all vowels removed.\n\
    Examples\n>>> remove_vowels(\"Hello!\")\n\"Hll!\"\n>>> remove_vowels(\"Tomatoes\"\
    )\n\"Tmts\"\n>>> remove_vowels(\"Reverse Vowels In A String\")\n\"Rvrs Vwls n\
    \ A Strng\"\n>>> remove_vowels(\"aeiou\")\n\"\"\n>>> remove_vowels(\"why try,\
    \ shy fly?\")\n\"why try, shy fly?\"*/\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220839
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    return ($x + $y == $z || $x + $z == $y ||\
    \ $y + $z == $x) && (is_int($x) && is_int($y) && is_int($z));\n}\n\n/* Create\
    \ a function that takes a string and returns a string with its letters in alphabetical\
    \ order.\nExamples\n>>> alphabet_soup(\"hello\")\n\"ehllo\"\n>>> alphabet_soup(\"\
    edabit\")\n\"abdeit\"\n>>> alphabet_soup(\"hacker\")\n\"acehkr\"\n>>> alphabet_soup(\"\
    geek\")\n\"eegk\"\n>>> alphabet_soup(\"javascript\")\n\"aacijprstv\"*/\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if ($x == $y + $z || $y == $x + $z || $z ==\
    \ $x + $y) {\n        return true;\n    } else {\n        return false;\n    }\n\
    }\n\necho any_int(5, 2, 7);\necho \"<br>\";\necho any_int(3, 2, 2);\necho \"<br>\"\
    ;\necho any_int(3, -2, 1);\necho \"<br>\";\necho any_int(3.6, -2.2, 2);\necho\
    \ \"<br>\";\n\n/*Create a function that takes a string and returns a string with\
    \ all vowels removed.\nExamples\n>>> remove_vowels(\"Hello!\")\n\"Hll!\"\n>>>\
    \ remove_vowels(\"Tomatoes\")\n\"Tmts\"\n>>> remove_vowels(\"Reverse Vowels In\
    \ A String\")\n\"Rvrs Vwls n A Strng\"\n>>> remove_vowels(\"aeiou\")\n\"\"\n>>>\
    \ remove_vowels(\"why try, shy fly?\")\n\"why try, shy fly?\"*/\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1<br><br>1<br><br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl4lwc2s6.php:50\n\
    Stack trace:\n#0 /tmp/tmpl4lwc2s6.php(60): test()\n#1 {main}\n  thrown in /tmp/tmpl4lwc2s6.php\
    \ on line 50\n"
  timestamp: 1660220839
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n  if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n    if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n      return\
    \ true;\n    }\n  }\n  return false;\n}\necho any_int(5, 2, 7) . \"\\n\";\necho\
    \ any_int(3, 2, 2) . \"\\n\";\necho any_int(3, -2, 1) . \"\\n\";\necho any_int(3.6,\
    \ -2.2, 2) . \"\\n\";\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1


    1


    '
  timestamp: 1660220839
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (($x == $y + $z) || ($y == $x + $z) ||\
    \ ($z == $x + $y)) {\n        return true;\n    } else {\n        return false;\n\
    \    }\n}\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2,\
    \ 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj3d4v9xb.php:32\n\
    Stack trace:\n#0 /tmp/tmpj3d4v9xb.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpj3d4v9xb.php\
    \ on line 32\n"
  timestamp: 1660220839
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7) . \"<br>\"\
    ;\necho any_int(3, 2, 2) . \"<br>\";\necho any_int(3, -2, 1) . \"<br>\";\necho\
    \ any_int(3.6, -2.2, 2) . \"<br>\";\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br><br>
  timestamp: 1660220839
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(3, -2, 1);\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho \"\
    <br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho\
    \ \"<br>\";\necho any_int(3.6, -2.2, 2);\necho \"<br>\";\necho any_int(3.6, -2.2,\
    \ 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220839
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7) . '<br>';\n\
    echo any_int(3, 2, 2) . '<br>';\necho any_int(3, -2, 1) . '<br>';\necho any_int(3.6,\
    \ -2.2, 2) . '<br>';\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br><br>
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if ($x == $y + $z || $y == $x + $z || $z ==\
    \ $x + $y) {\n        return true;\n    } else {\n        return false;\n    }\n\
    }\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho\
    \ any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzouwxgvi.php:32\n\
    Stack trace:\n#0 /tmp/tmpzouwxgvi.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpzouwxgvi.php\
    \ on line 32\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho \"\
    <br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho\
    \ \"<br>\";\necho any_int(3.6, -2.2, 2);\necho \"<br>\";\necho any_int(3.6, -2.2,\
    \ 2.1);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.3);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.4);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.5);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.6);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2.7);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.8);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.9);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 3);\necho \"<br>\";\necho any_int(3.6, -2.2, 3.1);\necho\
    \ \"<br>\";\necho any_int(3.6, -2.2, 3.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 3.3);\necho \"<br>\";\necho any_int(3.6, -2.2, 3.4);\necho\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpxmayixeb.php on line 62

    '
  timestamp: 1660220839
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    return (is_int($x) && is_int($y) && is_int($z))\
    \ && ($x + $y == $z || $x + $z == $y || $y + $z == $x);\n}\n\necho any_int(5,\
    \ 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2,\
    \ 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n\tif (is_int($x) && is_int($y) && is_int($z))\
    \ {\n\t\tif ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n\t\t\treturn\
    \ true;\n\t\t}\n\t}\n\treturn false;\n}\n\necho any_int(3, -2, 1);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220839
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7) . \"<br>\"\
    ;\necho any_int(3, 2, 2) . \"<br>\";\necho any_int(3, -2, 1) . \"<br>\";\necho\
    \ any_int(3.6, -2.2, 2) . \"<br>\";\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br><br>
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n  if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n    if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n      return\
    \ true;\n    }\n  }\n  return false;\n}\necho any_int(3, -2, 1);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1'
  timestamp: 1660220839
- exit_code: 0
  program: "<?php\n/* Create a function that takes 3 numbers.\nReturns true if one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nExamples\n>>> any_int(5, 2, 7)\ntrue\n>>> any_int(3,\
    \ 2, 2)\nfalse\n>>> any_int(3, -2, 1)\ntrue\n>>> any_int(3.6, -2.2, 2)\nfalse*/\n\
    function any_int($x, $y, $z) {\n    if (is_int($x) && is_int($y) && is_int($z))\
    \ {\n        if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        \
    \    return true;\n        } else {\n            return false;\n        }\n  \
    \  } else {\n        return false;\n    }\n}\n\necho any_int(5, 2, 7);\necho \"\
    <br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho\
    \ \"<br>\";\necho any_int(3.6, -2.2, 2);\necho \"<br>\";\n\n/* Create a function\
    \ that takes a string and returns the number of vowels in the string.\nExamples\n\
    >>> count_vowels(\"apple\")\n2\n>>> count_vowels(\"cheesecake\")\n5\n>>> count_vowels(\"\
    bbb\")\n0*/\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br>1<br><br>
  timestamp: 1660220839

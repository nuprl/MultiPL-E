language: php
name: HumanEval_26_remove_duplicates
results:
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $new_array = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $new_array)) {\n            $new_array[] = $number;\n        }\n    }\n    return\
    \ $new_array;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_2_1u_a_.php:27\n\
    Stack trace:\n#0 /tmp/tmp_2_1u_a_.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp_2_1u_a_.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $numbers = array_unique($numbers);\n    return $numbers;\n}\n\n/* From an array\
    \ of integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_3mbkl50.php:22\n\
    Stack trace:\n#0 /tmp/tmp_3mbkl50.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_3mbkl50.php\
    \ on line 22\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $unique = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $unique)) {\n            $unique[] = $number;\n        }\n    }\n    return\
    \ $unique;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbhnjrrfo.php:27\n\
    Stack trace:\n#0 /tmp/tmpbhnjrrfo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpbhnjrrfo.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $unique_numbers = array();\n    foreach ($numbers as $number) {\n        if\
    \ (!in_array($number, $unique_numbers)) {\n            $unique_numbers[] = $number;\n\
    \        }\n    }\n    return $unique_numbers;\n}\n\n/* From an array of integers,\
    \ remove all elements that occur more than once.\nKeep order of elements left\
    \ the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1,\
    \ 3, 4)*/\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1dy78vp9.php:27\n\
    Stack trace:\n#0 /tmp/tmp1dy78vp9.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp1dy78vp9.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $numbers = array_unique($numbers);\n    return $numbers;\n}\n\n/* From an array\
    \ of integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_3mbkl50.php:22\n\
    Stack trace:\n#0 /tmp/tmp_3mbkl50.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_3mbkl50.php\
    \ on line 22\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n\t$result\
    \ = array();\n\tforeach ($numbers as $number) {\n\t\tif (!in_array($number, $result))\
    \ {\n\t\t\t$result[] = $number;\n\t\t}\n\t}\n\treturn $result;\n}\n\n/* From an\
    \ array of integers, remove all elements that occur more than once.\nKeep order\
    \ of elements left the same as in the input.\n>>> remove_duplicates(array(1, 2,\
    \ 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp7_8a610.php:27\n\
    Stack trace:\n#0 /tmp/tmpp7_8a610.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpp7_8a610.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n\t$result\
    \ = array();\n\tforeach ($numbers as $number) {\n\t\tif (!in_array($number, $result))\
    \ {\n\t\t\t$result[] = $number;\n\t\t}\n\t}\n\treturn $result;\n}\n\n/* From an\
    \ array of integers, remove all elements that occur more than once.\nKeep order\
    \ of elements left the same as in the input.\n>>> remove_duplicates(array(1, 2,\
    \ 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp7_8a610.php:27\n\
    Stack trace:\n#0 /tmp/tmpp7_8a610.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpp7_8a610.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n\t$result\
    \ = array();\n\tforeach ($numbers as $number) {\n\t\tif (!in_array($number, $result))\
    \ {\n\t\t\t$result[] = $number;\n\t\t}\n\t}\n\treturn $result;\n}\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo1o4nq65.php:22\n\
    Stack trace:\n#0 /tmp/tmpo1o4nq65.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpo1o4nq65.php\
    \ on line 22\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n\t$result\
    \ = array();\n\tforeach ($numbers as $number) {\n\t\tif (!in_array($number, $result))\
    \ {\n\t\t\t$result[] = $number;\n\t\t}\n\t}\n\treturn $result;\n}\n\n/* From an\
    \ array of integers, remove all elements that occur more than once.\nKeep order\
    \ of elements left the same as in the input.\n>>> remove_duplicates(array(1, 2,\
    \ 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp7_8a610.php:27\n\
    Stack trace:\n#0 /tmp/tmpp7_8a610.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpp7_8a610.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, return an array of all the integers\
    \ that are\ndivisible by 3.\n>>> divisible_by_three(array(1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9))\narray(3, 6, 9)*/\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqycfovtw.php:27\n\
    Stack trace:\n#0 /tmp/tmpqycfovtw.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpqycfovtw.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $numbers = array_unique($numbers);\n    return $numbers;\n}\n\n/* From an array\
    \ of integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_3mbkl50.php:22\n\
    Stack trace:\n#0 /tmp/tmp_3mbkl50.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_3mbkl50.php\
    \ on line 22\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $numbers = array_unique($numbers);\n    return $numbers;\n}\n\n/* From an array\
    \ of integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_3mbkl50.php:22\n\
    Stack trace:\n#0 /tmp/tmp_3mbkl50.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_3mbkl50.php\
    \ on line 22\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $arr = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $arr)) {\n            $arr[] = $number;\n        }\n    }\n    return $arr;\n\
    }\n\n/* From an array of integers, remove all elements that occur more than once.\n\
    Keep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd4zyammg.php:27\n\
    Stack trace:\n#0 /tmp/tmpd4zyammg.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpd4zyammg.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/*\n * From an array of integers, remove all elements that occur\
    \ more than once.\n * Keep order of elements left the same as in the input.\n\
    \ * >>> remove_duplicates(array(1, 2, 3, 2, 4))\n * array(1, 3, 4)\n */\nfunction\
    \ candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn78jb84e.php:29\n\
    Stack trace:\n#0 /tmp/tmpn78jb84e.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpn78jb84e.php\
    \ on line 29\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $numbers = array_unique($numbers);\n    return $numbers;\n}\n\n/* From an array\
    \ of integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_3mbkl50.php:22\n\
    Stack trace:\n#0 /tmp/tmp_3mbkl50.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_3mbkl50.php\
    \ on line 22\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $numbers = array_unique($numbers);\n    return $numbers;\n}\nprint_r(remove_duplicates(array(1,\
    \ 2, 3, 2, 4)));\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [4] => 4\n)\n\n\
    Fatal error: Uncaught Exception: Test failed! in /tmp/tmpo6pfmkbw.php:18\nStack\
    \ trace:\n#0 /tmp/tmpo6pfmkbw.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpo6pfmkbw.php\
    \ on line 18\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $new_array = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $new_array)) {\n            $new_array[] = $number;\n        }\n    }\n    return\
    \ $new_array;\n}\n\n/*\n * From an array of integers, remove all elements that\
    \ occur more than once.\n * Keep order of elements left the same as in the input.\n\
    \ * >>> remove_duplicates(array(1, 2, 3, 2, 4))\n * array(1, 3, 4)\n */\nfunction\
    \ candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmxkec6an.php:29\n\
    Stack trace:\n#0 /tmp/tmpmxkec6an.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpmxkec6an.php\
    \ on line 29\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    $count = array_count_values($numbers);\n    foreach\
    \ ($numbers as $number) {\n        if ($count[$number] == 1) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\n/* From an array of\
    \ integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $unique = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $unique)) {\n            $unique[] = $number;\n        }\n    }\n    return\
    \ $unique;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbhnjrrfo.php:27\n\
    Stack trace:\n#0 /tmp/tmpbhnjrrfo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpbhnjrrfo.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $new_array = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $new_array)) {\n            $new_array[] = $number;\n        }\n    }\n    return\
    \ $new_array;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_2_1u_a_.php:27\n\
    Stack trace:\n#0 /tmp/tmp_2_1u_a_.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp_2_1u_a_.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $numbers = array_unique($numbers);\n    return $numbers;\n}\n\n/* From an array\
    \ of integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_3mbkl50.php:22\n\
    Stack trace:\n#0 /tmp/tmp_3mbkl50.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_3mbkl50.php\
    \ on line 22\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/*From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6mnlxabi.php:27\n\
    Stack trace:\n#0 /tmp/tmp6mnlxabi.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp6mnlxabi.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $numbers = array_unique($numbers);\n    return $numbers;\n}\n\n/*\n * From an\
    \ array of integers, remove all elements that occur more than once.\n * Keep order\
    \ of elements left the same as in the input.\n * >>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\n * array(1, 3, 4)\n */\nfunction candidate(...$args) {\n    return\
    \ remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd76xl16w.php:24\n\
    Stack trace:\n#0 /tmp/tmpd76xl16w.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpd76xl16w.php\
    \ on line 24\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $unique_numbers = array();\n    foreach ($numbers as $number) {\n        if\
    \ (!in_array($number, $unique_numbers)) {\n            $unique_numbers[] = $number;\n\
    \        }\n    }\n    return $unique_numbers;\n}\n\n/* From an array of integers,\
    \ remove all elements that occur more than once.\nKeep order of elements left\
    \ the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1,\
    \ 3, 4)*/\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1dy78vp9.php:27\n\
    Stack trace:\n#0 /tmp/tmp1dy78vp9.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp1dy78vp9.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $numbers = array_unique($numbers);\n    return $numbers;\n}\n\n/*\n * From an\
    \ array of integers, remove all elements that occur more than once.\n * Keep order\
    \ of elements left the same as in the input.\n * >>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\n * array(1, 3, 4)\n */\nfunction candidate(...$args) {\n    return\
    \ remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd76xl16w.php:24\n\
    Stack trace:\n#0 /tmp/tmpd76xl16w.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpd76xl16w.php\
    \ on line 24\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n\t$result\
    \ = array();\n\tforeach ($numbers as $number) {\n\t\tif (!in_array($number, $result))\
    \ {\n\t\t\t$result[] = $number;\n\t\t}\n\t}\n\treturn $result;\n}\n\n/* From an\
    \ array of integers, remove all elements that occur more than once.\nKeep order\
    \ of elements left the same as in the input.\n>>> remove_duplicates(array(1, 2,\
    \ 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp7_8a610.php:27\n\
    Stack trace:\n#0 /tmp/tmpp7_8a610.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpp7_8a610.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $unique = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $unique)) {\n            $unique[] = $number;\n        }\n    }\n    return\
    \ $unique;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbhnjrrfo.php:27\n\
    Stack trace:\n#0 /tmp/tmpbhnjrrfo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpbhnjrrfo.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n\t$numbers\
    \ = array_unique($numbers);\n\treturn $numbers;\n}\n\n/* From an array of integers,\
    \ remove all elements that occur more than once.\nKeep order of elements left\
    \ the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1,\
    \ 3, 4)*/\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmple8r4rvm.php:22\n\
    Stack trace:\n#0 /tmp/tmple8r4rvm.php(25): test()\n#1 {main}\n  thrown in /tmp/tmple8r4rvm.php\
    \ on line 22\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $numbers = array_unique($numbers);\n    return $numbers;\n}\n\n/* From an array\
    \ of integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_3mbkl50.php:22\n\
    Stack trace:\n#0 /tmp/tmp_3mbkl50.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_3mbkl50.php\
    \ on line 22\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $numbers = array_unique($numbers);\n    return $numbers;\n}\n\n/*\n * From an\
    \ array of integers, remove all elements that occur more than once.\n * Keep order\
    \ of elements left the same as in the input.\n * >>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\n * array(1, 3, 4)\n */\nfunction candidate(...$args) {\n    return\
    \ remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd76xl16w.php:24\n\
    Stack trace:\n#0 /tmp/tmpd76xl16w.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpd76xl16w.php\
    \ on line 24\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n\t$numbers\
    \ = array_unique($numbers);\n\treturn $numbers;\n}\n\n/* Given a string, return\
    \ a new string with the characters in reverse order.\n>>> reverse_string('hello')\n\
    'olleh'*/\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6ept57ko.php:21\n\
    Stack trace:\n#0 /tmp/tmp6ept57ko.php(24): test()\n#1 {main}\n  thrown in /tmp/tmp6ept57ko.php\
    \ on line 21\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3,\
    \ 4)\n*/\n\n/*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)\n\
    */\n\n/*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)\n*/\n\n\
    /*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)\n*/\n\n/*\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)\n*/\n\n/*\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)\n*/\n\n/*\n>>> remove_duplicates(array(1, 2, 3,\
    \ 2, 4))\narray(1, 3, 4)\n*/\n\n/*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)\n*/\n\n/*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1,\
    \ 3, 4)\n*/\n\n/*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)\n\
    */\n\n/*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)\n*/\n\n\
    /*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)\n*/\n\n/*\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)\n*/\n\n/*\n>>> remove_duplicates(array(1\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 81 in /tmp/tmp4_oeamyw.php on
    line 81

    '
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/*\n * From an array of integers, remove all elements that occur\
    \ more than once.\n * Keep order of elements left the same as in the input.\n\
    \ * >>> remove_duplicates(array(1, 2, 3, 2, 4))\n * array(1, 3, 4)\n */\nfunction\
    \ candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn78jb84e.php:29\n\
    Stack trace:\n#0 /tmp/tmpn78jb84e.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpn78jb84e.php\
    \ on line 29\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $numbers = array_unique($numbers);\n    return $numbers;\n}\n\n/* From an array\
    \ of integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_3mbkl50.php:22\n\
    Stack trace:\n#0 /tmp/tmp_3mbkl50.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_3mbkl50.php\
    \ on line 22\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $unique = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $unique)) {\n            $unique[] = $number;\n        }\n    }\n    return\
    \ $unique;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbhnjrrfo.php:27\n\
    Stack trace:\n#0 /tmp/tmpbhnjrrfo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpbhnjrrfo.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $numbers = array_unique($numbers);\n    return $numbers;\n}\n\n/* From an array\
    \ of integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_3mbkl50.php:22\n\
    Stack trace:\n#0 /tmp/tmp_3mbkl50.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_3mbkl50.php\
    \ on line 22\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $numbers = array_unique($numbers);\n    return $numbers;\n}\n\n/* From an array\
    \ of integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_3mbkl50.php:22\n\
    Stack trace:\n#0 /tmp/tmp_3mbkl50.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_3mbkl50.php\
    \ on line 22\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $unique = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $unique)) {\n            $unique[] = $number;\n        }\n    }\n    return\
    \ $unique;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbhnjrrfo.php:27\n\
    Stack trace:\n#0 /tmp/tmpbhnjrrfo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpbhnjrrfo.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $numbers = array_unique($numbers);\n    return $numbers;\n}\n\n/* From an array\
    \ of integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_3mbkl50.php:22\n\
    Stack trace:\n#0 /tmp/tmp_3mbkl50.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_3mbkl50.php\
    \ on line 22\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $new_array = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $new_array)) {\n            $new_array[] = $number;\n        }\n    }\n    return\
    \ $new_array;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_2_1u_a_.php:27\n\
    Stack trace:\n#0 /tmp/tmp_2_1u_a_.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp_2_1u_a_.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/*\n * From an array of integers, remove all elements that occur\
    \ more than once.\n * Keep order of elements left the same as in the input.\n\
    \ * >>> remove_duplicates(array(1, 2, 3, 2, 4))\n * array(1, 3, 4)\n */\nfunction\
    \ candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn78jb84e.php:29\n\
    Stack trace:\n#0 /tmp/tmpn78jb84e.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpn78jb84e.php\
    \ on line 29\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/*\n * From an array of integers, remove all elements that occur\
    \ more than once.\n * Keep order of elements left the same as in the input.\n\
    \ * >>> remove_duplicates(array(1, 2, 3, 2, 4))\n * array(1, 3, 4)\n */\nfunction\
    \ candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn78jb84e.php:29\n\
    Stack trace:\n#0 /tmp/tmpn78jb84e.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpn78jb84e.php\
    \ on line 29\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $numbers = array_unique($numbers);\n    return $numbers;\n}\n\n/* From an array\
    \ of integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_3mbkl50.php:22\n\
    Stack trace:\n#0 /tmp/tmp_3mbkl50.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_3mbkl50.php\
    \ on line 22\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/*\n * From an array of integers, remove all elements that occur\
    \ more than once.\n * Keep order of elements left the same as in the input.\n\
    \ * >>> remove_duplicates(array(1, 2, 3, 2, 4))\n * array(1, 3, 4)\n */\nfunction\
    \ candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn78jb84e.php:29\n\
    Stack trace:\n#0 /tmp/tmpn78jb84e.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpn78jb84e.php\
    \ on line 29\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $unique_numbers = array();\n    foreach ($numbers as $number) {\n        if\
    \ (!in_array($number, $unique_numbers)) {\n            $unique_numbers[] = $number;\n\
    \        }\n    }\n    return $unique_numbers;\n}\n\n/* From an array of integers,\
    \ remove all elements that occur more than once.\nKeep order of elements left\
    \ the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1,\
    \ 3, 4)*/\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1dy78vp9.php:27\n\
    Stack trace:\n#0 /tmp/tmp1dy78vp9.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp1dy78vp9.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/*\n * From an array of integers, remove all elements that occur\
    \ more than once.\n * Keep order of elements left the same as in the input.\n\
    \ * >>> remove_duplicates(array(1, 2, 3, 2, 4))\n * array(1, 3, 4)\n */\nfunction\
    \ candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn78jb84e.php:29\n\
    Stack trace:\n#0 /tmp/tmpn78jb84e.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpn78jb84e.php\
    \ on line 29\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n\t$numbers\
    \ = array_unique($numbers);\n\treturn $numbers;\n}\n\n/* From an array of integers,\
    \ remove all elements that occur more than once.\nKeep order of elements left\
    \ the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1,\
    \ 3, 4)*/\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmple8r4rvm.php:22\n\
    Stack trace:\n#0 /tmp/tmple8r4rvm.php(25): test()\n#1 {main}\n  thrown in /tmp/tmple8r4rvm.php\
    \ on line 22\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $numbers = array_unique($numbers);\n    return $numbers;\n}\n\n/* From an array\
    \ of integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_3mbkl50.php:22\n\
    Stack trace:\n#0 /tmp/tmp_3mbkl50.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_3mbkl50.php\
    \ on line 22\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n\t$result\
    \ = array();\n\tforeach ($numbers as $number) {\n\t\tif (!in_array($number, $result))\
    \ {\n\t\t\t$result[] = $number;\n\t\t}\n\t}\n\treturn $result;\n}\n\n/* From an\
    \ array of integers, remove all elements that occur more than once.\nKeep order\
    \ of elements left the same as in the input.\n>>> remove_duplicates(array(1, 2,\
    \ 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp7_8a610.php:27\n\
    Stack trace:\n#0 /tmp/tmpp7_8a610.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpp7_8a610.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $numbers = array_unique($numbers);\n    return $numbers;\n}\n\n/*\n * From an\
    \ array of integers, remove all elements that occur more than once.\n * Keep order\
    \ of elements left the same as in the input.\n * >>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\n * array(1, 3, 4)\n */\nfunction candidate(...$args) {\n    return\
    \ remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd76xl16w.php:24\n\
    Stack trace:\n#0 /tmp/tmpd76xl16w.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpd76xl16w.php\
    \ on line 24\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/*\n * From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)\n*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw59qvdrj.php:29\n\
    Stack trace:\n#0 /tmp/tmpw59qvdrj.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpw59qvdrj.php\
    \ on line 29\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $numbers = array_unique($numbers);\n    return $numbers;\n}\n\n/* From an array\
    \ of integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_3mbkl50.php:22\n\
    Stack trace:\n#0 /tmp/tmp_3mbkl50.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_3mbkl50.php\
    \ on line 22\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $unique = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $unique)) {\n            $unique[] = $number;\n        }\n    }\n    return\
    \ $unique;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbhnjrrfo.php:27\n\
    Stack trace:\n#0 /tmp/tmpbhnjrrfo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpbhnjrrfo.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $unique = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $unique)) {\n            $unique[] = $number;\n        }\n    }\n    return\
    \ $unique;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbhnjrrfo.php:27\n\
    Stack trace:\n#0 /tmp/tmpbhnjrrfo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpbhnjrrfo.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $numbers = array_unique($numbers);\n    return $numbers;\n}\n\n/* From an array\
    \ of integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_3mbkl50.php:22\n\
    Stack trace:\n#0 /tmp/tmp_3mbkl50.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_3mbkl50.php\
    \ on line 22\n"
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    $count = array_count_values($numbers);\n    foreach\
    \ ($numbers as $number) {\n        if ($count[$number] == 1) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\n/* From an array of\
    \ integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 0
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    $count = array_count_values($numbers);\n    foreach\
    \ ($numbers as $number) {\n        if ($count[$number] == 1) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\n/* From an array of\
    \ integers, return a new array with each element multiplied by 2.\n>>> double_array(array(1,\
    \ 2, 3))\narray(2, 4, 6)*/\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $numbers = array_unique($numbers);\n    return $numbers;\n}\n\n/* From an array\
    \ of integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_3mbkl50.php:22\n\
    Stack trace:\n#0 /tmp/tmp_3mbkl50.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_3mbkl50.php\
    \ on line 22\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $numbers = array_unique($numbers);\n    return $numbers;\n}\n\n/*Given a string,\
    \ return a new string that has transformed based on the input:\nChange case of\
    \ every character, ie. lower case to upper case, upper case to lower case.\nReverse\
    \ the order of words from the input.\nNote: You will have to handle multiple spaces,\
    \ and leading/trailing spaces.\nFor example:\n\"Example Input\" ==> \"iNPUT eXAMPLE\"\
    \nYou may assume the input only contain English alphabet and spaces.\n*/\nfunction\
    \ candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpza3bba0w.php:26\n\
    Stack trace:\n#0 /tmp/tmpza3bba0w.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpza3bba0w.php\
    \ on line 26\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $numbers = array_unique($numbers);\n    return $numbers;\n}\n\n/* Given an array\
    \ of integers, return an array of integers with the duplicates removed.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 2, 3, 4)*/\nfunction candidate(...$args) {\n    return\
    \ remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptl5t4e3a.php:21\n\
    Stack trace:\n#0 /tmp/tmptl5t4e3a.php(24): test()\n#1 {main}\n  thrown in /tmp/tmptl5t4e3a.php\
    \ on line 21\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, return an array of all pairs of\
    \ integers that sum to 0.\n>>> find_zero_sum_pairs(array(1, 2, -1, -2, 0, 0))\n\
    array(array(-1, 1), array(-2, 2))*/\nfunction candidate(...$args) {\n    return\
    \ remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_pwrnrpq.php:26\n\
    Stack trace:\n#0 /tmp/tmp_pwrnrpq.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp_pwrnrpq.php\
    \ on line 26\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $numbers_unique = array_unique($numbers);\n    return $numbers_unique;\n}\n\n\
    /* From an array of integers, remove all elements that occur more than once.\n\
    Keep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9qfup96i.php:22\n\
    Stack trace:\n#0 /tmp/tmp9qfup96i.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp9qfup96i.php\
    \ on line 22\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n  $new_array\
    \ = [];\n  foreach ($numbers as $number) {\n    if (!in_array($number, $new_array))\
    \ {\n      $new_array[] = $number;\n    }\n  }\n  return $new_array;\n}\n\n/*\
    \ From an array of integers, remove all elements that occur more than once.\n\
    Keep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoziycor1.php:27\n\
    Stack trace:\n#0 /tmp/tmpoziycor1.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpoziycor1.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n\t$result\
    \ = array();\n\tforeach ($numbers as $number) {\n\t\tif (!in_array($number, $result))\
    \ {\n\t\t\t$result[] = $number;\n\t\t}\n\t}\n\treturn $result;\n}\n\n/* From an\
    \ array of integers, remove all elements that occur more than once.\nKeep order\
    \ of elements left the same as in the input.\n>>> remove_duplicates(array(1, 2,\
    \ 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp7_8a610.php:27\n\
    Stack trace:\n#0 /tmp/tmpp7_8a610.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpp7_8a610.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $numbers = array_unique($numbers);\n    return $numbers;\n}\n\n/*\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)\n*/\n\n/*\n>>> remove_duplicates(array(1, 2, 3,\
    \ 2, 4))\narray(1, 3, 4)\n*/\n\n/*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)\n*/\n\n/*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1,\
    \ 3, 4)\n*/\n\n/*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)\n\
    */\n\n/*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)\n*/\n\n\
    /*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)\n*/\n\n/*\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)\n*/\n\n/*\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)\n*/\n\n/*\n>>> remove_duplicates(array(1, 2, 3,\
    \ 2, 4))\narray(1, 3, 4)\n*/\n\n/*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)\n*/\n\n/*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1,\
    \ 3, 4)\n*/\n\n/*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)\n\
    */\n\n/*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)\n*/\n\n\
    /*\n>>> remove_duplicates(array(1\nfunction candidate(...$args) {\n    return\
    \ remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 81 in /tmp/tmp79lzsie7.php on
    line 81

    '
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n\t$numbers\
    \ = array_unique($numbers);\n\treturn $numbers;\n}\n\n/* From an array of integers,\
    \ remove all elements that occur more than once.\nKeep order of elements left\
    \ the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1,\
    \ 3, 4)*/\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmple8r4rvm.php:22\n\
    Stack trace:\n#0 /tmp/tmple8r4rvm.php(25): test()\n#1 {main}\n  thrown in /tmp/tmple8r4rvm.php\
    \ on line 22\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3,\
    \ 4)\n*/\n\n/*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)\n\
    */\n\n/*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)\n*/\n\n\
    /*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)\n*/\n\n/*\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)\n*/\n\n/*\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)\n*/\n\n/*\n>>> remove_duplicates(array(1, 2, 3,\
    \ 2, 4))\narray(1, 3, 4)\n*/\n\n/*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)\n*/\n\n/*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1,\
    \ 3, 4)\n*/\n\n/*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)\n\
    */\n\n/*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)\n*/\n\n\
    /*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)\n*/\n\n/*\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)\n*/\n\n/*\n>>> remove_duplicates(array(1\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 81 in /tmp/tmp4_oeamyw.php on
    line 81

    '
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $numbers = array_unique($numbers);\n    return $numbers;\n}\n\n/* From an array\
    \ of integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_3mbkl50.php:22\n\
    Stack trace:\n#0 /tmp/tmp_3mbkl50.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_3mbkl50.php\
    \ on line 22\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $numbers = array_unique($numbers);\n    return $numbers;\n}\n\n/* From an array\
    \ of integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_3mbkl50.php:22\n\
    Stack trace:\n#0 /tmp/tmp_3mbkl50.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_3mbkl50.php\
    \ on line 22\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $numbers = array_unique($numbers);\n    return $numbers;\n}\n\n/* From an array\
    \ of integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_3mbkl50.php:22\n\
    Stack trace:\n#0 /tmp/tmp_3mbkl50.php(25): test()\n#1 {main}\n  thrown in /tmp/tmp_3mbkl50.php\
    \ on line 22\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/*\n * From an array of integers, remove all elements that occur\
    \ more than once.\n * Keep order of elements left the same as in the input.\n\
    \ * >>> remove_duplicates(array(1, 2, 3, 2, 4))\n * array(1, 3, 4)\n */\nfunction\
    \ candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn78jb84e.php:29\n\
    Stack trace:\n#0 /tmp/tmpn78jb84e.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpn78jb84e.php\
    \ on line 29\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $unique = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $unique)) {\n            $unique[] = $number;\n        }\n    }\n    return\
    \ $unique;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbhnjrrfo.php:27\n\
    Stack trace:\n#0 /tmp/tmpbhnjrrfo.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpbhnjrrfo.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716
- exit_code: 255
  program: "<?php\n/* From an array of integers, remove all elements that occur more\
    \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n   \
    \ $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsug4x3ea.php:27\n\
    Stack trace:\n#0 /tmp/tmpsug4x3ea.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpsug4x3ea.php\
    \ on line 27\n"
  timestamp: 1660220716

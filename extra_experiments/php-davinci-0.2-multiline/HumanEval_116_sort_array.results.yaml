language: php
name: HumanEval_116_sort_array
results:
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a1 = substr_count($a[1], '1');\n    $b1 = substr_count($b[1],\
    \ '1');\n    if ($a1 == $b1) return $a[0] - $b[0];\n    return $a1 - $b1;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\n/*\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 27 in /tmp/tmprjt7ffp8.php on
    line 27

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr2 =\
    \ [];\n  foreach ($arr as $key => $value) {\n    $arr2[$key] = decbin($value);\n\
    \  }\n  $arr3 = [];\n  foreach ($arr2 as $key => $value) {\n    $arr3[$key] =\
    \ substr_count($value, '1');\n  }\n  asort($arr3);\n  $arr4 = [];\n  foreach ($arr3\
    \ as $key => $value) {\n    $arr4[$key] = bindec($arr2[$key]);\n  }\n  return\
    \ $arr4;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpggytcwf6.php:33\n\
    Stack trace:\n#0 /tmp/tmpggytcwf6.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpggytcwf6.php\
    \ on line 33\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($x) {\n    return [$x, decbin($x)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a = substr_count($a[1], '1');\n    $b = substr_count($b[1],\
    \ '1');\n    if ($a == $b) {\n      return $a[0] - $b[0];\n    }\n    return $a\
    \ - $b;\n  });\n  return array_map(function($x) {\n    return $x[0];\n  }, $arr);\n\
    }\n\n/*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 29 in /tmp/tmpqrmn1y0p.php on
    line 29

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n    $arr2\
    \ = [];\n    foreach ($arr as $value) {\n        $arr2[] = decbin($value);\n \
    \   }\n    $arr3 = [];\n    foreach ($arr2 as $value) {\n        $arr3[] = substr_count($value,\
    \ '1');\n    }\n    $arr4 = [];\n    foreach ($arr3 as $value) {\n        $arr4[]\
    \ = $value;\n    }\n    $arr5 = [];\n    foreach ($arr as $value) {\n        $arr5[]\
    \ = $value;\n    }\n    $arr6 = [];\n    foreach ($arr4 as $value) {\n       \
    \ $arr6[] = $value;\n    }\n    $arr7 = [];\n    foreach ($arr6 as $value) {\n\
    \        $arr7[] = $value;\n    }\n    $arr8 = [];\n    foreach ($arr7 as $value)\
    \ {\n        $arr8[] = $value;\n    }\n    $arr9 = [];\n    foreach ($arr8 as\
    \ $value) {\n        $arr9[] = $value;\n    }\n    $arr10 = [];\n    foreach ($arr9\
    \ as $value) {\n        $arr10[] = $value;\n    }\n    $arr11 = [];\n    foreach\
    \ ($arr10 as $value) {\n        $arr11[] = $value;\n    }\n    $arr12 = [];\n\
    \    foreach ($arr11 as $value) {\n        $arr12[] = $value;\n    }\n    $arr13\
    \ = [];\n    foreach ($arr12 as $value) {\n        $arr13[] = $value;\n    }\n\
    \    $arr14 = [];\n    foreach ($arr13 as $value) {\n        $arr14[] = $value;\n\
    \    }\n    $arr15 = [];\n    foreach ($arr14 as $value) {\n        $arr15[] =\
    \ $value;\n    }\n    $arr16 = [];\n    foreach ($arr15 as $value) {\n       \
    \ $arr16[] = $value;\n    }\n    $arr17 = [];\n    foreach ($arr16 as $value)\
    \ {\n        $arr17[] =\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmplwxda18i.php on line 76

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n    $arr\
    \ = array_map(function($n) {\n        return [$n, decbin($n)];\n    }, $arr);\n\
    \    usort($arr, function($a, $b) {\n        $a1 = substr_count($a[1], '1');\n\
    \        $b1 = substr_count($b[1], '1');\n        if ($a1 == $b1) {\n        \
    \    return $a[0] - $b[0];\n        }\n        return $a1 - $b1;\n    });\n  \
    \  return array_map(function($n) {\n        return $n[0];\n    }, $arr);\n}\n\n\
    /*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 29 in /tmp/tmpda_b1923.php on
    line 29

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n    $arr\
    \ = array_map(function($n) {\n        return [$n, decbin($n)];\n    }, $arr);\n\
    \    usort($arr, function($a, $b) {\n        $a = substr_count($a[1], '1');\n\
    \        $b = substr_count($b[1], '1');\n        if ($a == $b) {\n           \
    \ return $a[0] - $b[0];\n        }\n        return $a - $b;\n    });\n    return\
    \ array_map(function($n) {\n        return $n[0];\n    }, $arr);\n}\n\n/*\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 29 in /tmp/tmpduw2uv6u.php on
    line 29

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr1 =\
    \ [];\n  $arr2 = [];\n  $arr3 = [];\n  $arr4 = [];\n  foreach ($arr as $key =>\
    \ $value) {\n    if ($value < 0) {\n      $arr1[] = $value;\n    } elseif ($value\
    \ == 0) {\n      $arr2[] = $value;\n    } elseif ($value == 1) {\n      $arr3[]\
    \ = $value;\n    } else {\n      $arr4[] = $value;\n    }\n  }\n  sort($arr1);\n\
    \  sort($arr2);\n  sort($arr3);\n  sort($arr4);\n  $arr = array_merge($arr1, $arr2,\
    \ $arr3, $arr4);\n  return $arr;\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl3vs1grm.php:41\n\
    Stack trace:\n#0 /tmp/tmpl3vs1grm.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpl3vs1grm.php\
    \ on line 41\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n    $arr\
    \ = array_map(function($n) {\n        return [$n, decbin($n)];\n    }, $arr);\n\
    \    usort($arr, function($a, $b) {\n        $a1 = substr_count($a[1], '1');\n\
    \        $b1 = substr_count($b[1], '1');\n        if ($a1 == $b1) {\n        \
    \    return $a[0] - $b[0];\n        }\n        return $a1 - $b1;\n    });\n  \
    \  return array_map(function($n) {\n        return $n[0];\n    }, $arr);\n}\n\n\
    /*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 29 in /tmp/tmpda_b1923.php on
    line 29

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($v) {\n    return [$v, decbin($v)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n    $b_ones = substr_count($b[1],\
    \ '1');\n    if ($a_ones == $b_ones) {\n      return $a[0] - $b[0];\n    }\n \
    \   return $a_ones - $b_ones;\n  });\n  return array_map(function($v) {\n    return\
    \ $v[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcquf1ryg.php:35\n\
    Stack trace:\n#0 /tmp/tmpcquf1ryg.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpcquf1ryg.php\
    \ on line 35\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n    $arr2\
    \ = [];\n    foreach ($arr as $value) {\n        $arr2[] = decbin($value);\n \
    \   }\n    $arr3 = [];\n    foreach ($arr2 as $key => $value) {\n        $arr3[$key]\
    \ = substr_count($value, '1');\n    }\n    asort($arr3);\n    $arr4 = [];\n  \
    \  foreach ($arr3 as $key => $value) {\n        $arr4[] = $arr[$key];\n    }\n\
    \    return $arr4;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnq345bfn.php:33\n\
    Stack trace:\n#0 /tmp/tmpnq345bfn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpnq345bfn.php\
    \ on line 33\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n    $b_ones = substr_count($b[1],\
    \ '1');\n    if ($a_ones == $b_ones) {\n      return $a[0] - $b[0];\n    }\n \
    \   return $a_ones - $b_ones;\n  });\n  return array_map(function($n) {\n    return\
    \ $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgcbew6da.php:35\n\
    Stack trace:\n#0 /tmp/tmpgcbew6da.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpgcbew6da.php\
    \ on line 35\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a1 = substr_count($a[1], '1');\n    $b1 = substr_count($b[1],\
    \ '1');\n    if ($a1 == $b1) {\n      return $a[0] - $b[0];\n    }\n    return\
    \ $a1 - $b1;\n  });\n  return array_map(function($n) {\n    return $n[0];\n  },\
    \ $arr);\n}\n\n/*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 29 in /tmp/tmp6be1y4wi.php on
    line 29

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr_bin\
    \ = [];\n  $arr_dec = [];\n  foreach ($arr as $key => $value) {\n    $arr_bin[$key]\
    \ = decbin($value);\n    $arr_dec[$key] = $value;\n  }\n  array_multisort(array_map('strlen',\
    \ $arr_bin), SORT_ASC, $arr_bin, $arr_dec);\n  return $arr_dec;\n}\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2nxvw5mr.php:27\n\
    Stack trace:\n#0 /tmp/tmp2nxvw5mr.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp2nxvw5mr.php\
    \ on line 27\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr_bin\
    \ = [];\n  foreach ($arr as $key => $value) {\n    $arr_bin[$key] = decbin($value);\n\
    \  }\n  $arr_bin_count = [];\n  foreach ($arr_bin as $key => $value) {\n    $arr_bin_count[$key]\
    \ = substr_count($value, '1');\n  }\n  asort($arr_bin_count);\n  $arr_bin_count_keys\
    \ = array_keys($arr_bin_count);\n  $arr_bin_count_values = array_values($arr_bin_count);\n\
    \  $arr_bin_count_values_unique = array_unique($arr_bin_count_values);\n  $arr_bin_count_values_unique_keys\
    \ = array_keys($arr_bin_count_values_unique);\n  $arr_bin_count_values_unique_values\
    \ = array_values($arr_bin_count_values_unique);\n  $arr_bin_count_values_unique_values_keys\
    \ = [];\n  foreach ($arr_bin_count_values_unique_values as $key => $value) {\n\
    \    $arr_bin_count_values_unique_values_keys[$key] = array_keys($arr_bin_count_values,\
    \ $value);\n  }\n  $arr_bin_count_values_unique_values_keys_values = [];\n  foreach\
    \ ($arr_bin_count_values_unique_values_keys as $key => $value) {\n    $arr_bin_count_values_unique_values_keys_values[$key]\
    \ = [];\n    foreach ($value as $key2 => $value2) {\n      $arr_bin_count_values_unique_values_keys_values[$key][$key2]\
    \ = $arr[$arr_bin_count_keys[$value2]];\n    }\n  }\n  $arr_bin_count_values_unique_values_keys_values_sorted\
    \ = [];\n  foreach ($arr_bin_count_values_unique_values_keys_values as $key =>\
    \ $value) {\n    $arr_bin_count_values_unique_values_keys\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmp25akmpvs.php
    on line 41

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr2 =\
    \ array();\n  foreach ($arr as $key => $value) {\n    $arr2[$key] = decbin($value);\n\
    \  }\n  foreach ($arr2 as $key => $value) {\n    $arr2[$key] = substr_count($value,\
    \ '1');\n  }\n  asort($arr2);\n  foreach ($arr2 as $key => $value) {\n    $arr2[$key]\
    \ = $arr[$key];\n  }\n  return $arr2;\n}\nfunction candidate(...$args) {\n   \
    \ return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpom4xbsz_.php:31\n\
    Stack trace:\n#0 /tmp/tmpom4xbsz_.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpom4xbsz_.php\
    \ on line 31\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr1 =\
    \ [];\n  $arr2 = [];\n  $arr3 = [];\n  foreach ($arr as $key => $value) {\n  \
    \  $arr1[$key] = decbin($value);\n    $arr2[$key] = substr_count($arr1[$key],\
    \ '1');\n    $arr3[$key] = $value;\n  }\n  array_multisort($arr2, SORT_ASC, $arr3,\
    \ SORT_ASC, $arr);\n  return $arr;\n}\nfunction candidate(...$args) {\n    return\
    \ sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8kv58dhj.php:30\n\
    Stack trace:\n#0 /tmp/tmp8kv58dhj.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp8kv58dhj.php\
    \ on line 30\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr_ones\
    \ = [];\n  $arr_dec = [];\n  foreach ($arr as $key => $value) {\n    $arr_ones[$key]\
    \ = substr_count(decbin($value), '1');\n    $arr_dec[$key] = $value;\n  }\n  array_multisort($arr_ones,\
    \ SORT_ASC, $arr_dec, SORT_ASC, $arr);\n  return $arr;\n}\n\nprint_r(sort_array([1,\
    \ 0, 2, 3, 4]));\n\n/*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 25 in /tmp/tmpf_4la4wh.php on
    line 25

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n    $arr1\
    \ = [];\n    $arr2 = [];\n    foreach ($arr as $value) {\n        $arr1[] = decbin($value);\n\
    \    }\n    foreach ($arr1 as $key => $value) {\n        $arr2[$key] = substr_count($value,\
    \ '1');\n    }\n    array_multisort($arr2, SORT_ASC, $arr);\n    return $arr;\n\
    }\n\n/*\n    ----TESTE----\n*/\n\n$arr = [1, 5, 2, 3, 4];\n\necho \"<pre>\";\n\
    print_r(sort_array($arr));\necho \"</pre>\";\nfunction candidate(...$args) {\n\
    \    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 4\n    [3] => 3\n\
    \    [4] => 5\n)\n</pre>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfgflymt3.php:40\n\
    Stack trace:\n#0 /tmp/tmpfgflymt3.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpfgflymt3.php\
    \ on line 40\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($a) {\n    $bin = decbin($a);\n    $ones = substr_count($bin,\
    \ '1');\n    return [$a, $ones];\n  }, $arr);\n  usort($arr, function($a, $b)\
    \ {\n    if ($a[1] == $b[1]) {\n      return $a[0] - $b[0];\n    }\n    return\
    \ $a[1] - $b[1];\n  });\n  return array_map(function($a) {\n    return $a[0];\n\
    \  }, $arr);\n}\n\n/*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 29 in /tmp/tmpg9t9rcs5.php on
    line 29

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n\t$arr =\
    \ array_map(function($n) {\n\t\treturn [$n, decbin($n)];\n\t}, $arr);\n\tusort($arr,\
    \ function($a, $b) {\n\t\t$a = substr_count($a[1], '1');\n\t\t$b = substr_count($b[1],\
    \ '1');\n\t\tif ($a == $b) {\n\t\t\treturn $a[0] - $b[0];\n\t\t}\n\t\treturn $a\
    \ - $b;\n\t});\n\treturn array_map(function($n) {\n\t\treturn $n[0];\n\t}, $arr);\n\
    }\n\n/*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 29 in /tmp/tmp0d58cyv7.php on
    line 29

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n    $arr1\
    \ = [];\n    $arr2 = [];\n    foreach ($arr as $value) {\n        $arr1[] = decbin($value);\n\
    \    }\n    foreach ($arr1 as $key => $value) {\n        $arr2[$key] = substr_count($value,\
    \ '1');\n    }\n    array_multisort($arr2, SORT_ASC, $arr);\n    return $arr;\n\
    }\nprint_r(sort_array([1, 0, 2, 3, 4]));\nfunction candidate(...$args) {\n   \
    \ return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 0\n    [1] => 1\n    [2] => 2\n    [3] => 4\n    [4]\
    \ => 3\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1a1093y2.php:31\n\
    Stack trace:\n#0 /tmp/tmp1a1093y2.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1a1093y2.php\
    \ on line 31\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr_sort\
    \ = [];\n  foreach ($arr as $value) {\n    $arr_sort[$value] = decbin($value);\n\
    \  }\n  asort($arr_sort);\n  foreach ($arr_sort as $key => $value) {\n    $arr_sort[$key]\
    \ = substr_count($value, '1');\n  }\n  asort($arr_sort);\n  foreach ($arr_sort\
    \ as $key => $value) {\n    $arr_sort[$key] = $key;\n  }\n  return $arr_sort;\n\
    }\nprint_r(sort_array([1, 5, 2, 3, 4]));\nprint_r(sort_array([-2, -3, -4, -5,\
    \ -6]));\nprint_r(sort_array([1, 0, 2, 3, 4]));\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [1] => 1\n    [2] => 2\n    [4] => 4\n    [3] => 3\n    [5]\
    \ => 5\n)\nArray\n(\n    [-6] => -6\n    [-4] => -4\n    [-5] => -5\n    [-3]\
    \ => -3\n    [-2] => -2\n)\nArray\n(\n    [0] => 0\n    [1] => 1\n    [2] => 2\n\
    \    [4] => 4\n    [3] => 3\n)\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpxdbeejx5.php:35\nStack trace:\n#0 /tmp/tmpxdbeejx5.php(45): test()\n\
    #1 {main}\n  thrown in /tmp/tmpxdbeejx5.php on line 35\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($x) {\n    return [$x, decbin($x)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a1 = substr_count($a[1], '1');\n    $b1 = substr_count($b[1],\
    \ '1');\n    if ($a1 == $b1) {\n      return $a[0] - $b[0];\n    }\n    return\
    \ $a1 - $b1;\n  });\n  return array_map(function($x) {\n    return $x[0];\n  },\
    \ $arr);\n}\n\n/*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 29 in /tmp/tmplh0duo9d.php on
    line 29

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr1 =\
    \ [];\n  $arr2 = [];\n  foreach ($arr as $key => $value) {\n    $arr1[$key] =\
    \ decbin($value);\n    $arr2[$key] = $value;\n  }\n  array_multisort(array_map('strlen',\
    \ $arr1), SORT_ASC, $arr1, $arr2);\n  return $arr2;\n}\n\n/*\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 23 in /tmp/tmpvee786js.php on
    line 23

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n    $arr1\
    \ = [];\n    $arr2 = [];\n    $arr3 = [];\n    foreach ($arr as $value) {\n  \
    \      $arr1[] = decbin($value);\n    }\n    foreach ($arr1 as $key => $value)\
    \ {\n        $arr2[$key] = substr_count($value, '1');\n    }\n    asort($arr2);\n\
    \    foreach ($arr2 as $key => $value) {\n        $arr3[] = $arr[$key];\n    }\n\
    \    return $arr3;\n}\n\n/*\n    ----TESTE----\n*/\n\n$arr = [1, 5, 2, 3, 4];\n\
    print_r(sort_array($arr));\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 4\n    [3] => 5\n    [4]\
    \ => 3\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsvax9156.php:40\n\
    Stack trace:\n#0 /tmp/tmpsvax9156.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpsvax9156.php\
    \ on line 40\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n    $arr_ones\
    \ = [];\n    foreach ($arr as $value) {\n        $arr_ones[] = substr_count(decbin($value),\
    \ '1');\n    }\n    array_multisort($arr_ones, $arr);\n    return $arr;\n}\n\n\
    /*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 21 in /tmp/tmp2iksxret.php on
    line 21

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($x) {\n    return [$x, decbin($x)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a1 = substr_count($a[1], '1');\n    $b1 = substr_count($b[1],\
    \ '1');\n    if ($a1 == $b1) {\n      return $a[0] - $b[0];\n    }\n    return\
    \ $a1 - $b1;\n  });\n  return array_map(function($x) {\n    return $x[0];\n  },\
    \ $arr);\n}\n\n/*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 29 in /tmp/tmplh0duo9d.php on
    line 29

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr_ones\
    \ = [];\n  $arr_dec = [];\n  foreach ($arr as $key => $value) {\n    $arr_ones[$key]\
    \ = substr_count(decbin($value), '1');\n    $arr_dec[$key] = $value;\n  }\n  array_multisort($arr_ones,\
    \ SORT_ASC, $arr_dec, SORT_ASC, $arr);\n  return $arr;\n}\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1de_vtl5.php:28\n\
    Stack trace:\n#0 /tmp/tmp1de_vtl5.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp1de_vtl5.php\
    \ on line 28\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr2 =\
    \ [];\n  foreach ($arr as $key => $value) {\n    $arr2[$key] = decbin($value);\n\
    \  }\n  $arr3 = [];\n  foreach ($arr2 as $key => $value) {\n    $arr3[$key] =\
    \ substr_count($value, '1');\n  }\n  $arr4 = [];\n  foreach ($arr3 as $key =>\
    \ $value) {\n    $arr4[$key] = $value . $arr[$key];\n  }\n  sort($arr4);\n  $arr5\
    \ = [];\n  foreach ($arr4 as $key => $value) {\n    $arr5[$key] = substr($value,\
    \ 1);\n  }\n  return $arr5;\n}\n\n/*\nfunction candidate(...$args) {\n    return\
    \ sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 33 in /tmp/tmpy9cgs49w.php on
    line 33

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr_bin\
    \ = array();\n  $arr_dec = array();\n  foreach ($arr as $key => $value) {\n  \
    \  $arr_bin[$key] = decbin($value);\n    $arr_dec[$key] = $value;\n  }\n  array_multisort(array_map('strlen',\
    \ $arr_bin), SORT_ASC, $arr_bin, $arr_dec);\n  return $arr_dec;\n}\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqsbr7f74.php:27\n\
    Stack trace:\n#0 /tmp/tmpqsbr7f74.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpqsbr7f74.php\
    \ on line 27\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr2 =\
    \ [];\n  foreach ($arr as $key => $value) {\n    $arr2[$key] = decbin($value);\n\
    \  }\n  foreach ($arr2 as $key => $value) {\n    $arr2[$key] = substr_count($value,\
    \ \"1\");\n  }\n  asort($arr2);\n  foreach ($arr2 as $key => $value) {\n    $arr2[$key]\
    \ = $arr[$key];\n  }\n  return $arr2;\n}\nfunction candidate(...$args) {\n   \
    \ return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplhpcc2db.php:31\n\
    Stack trace:\n#0 /tmp/tmplhpcc2db.php(41): test()\n#1 {main}\n  thrown in /tmp/tmplhpcc2db.php\
    \ on line 31\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr2 =\
    \ [];\n  foreach ($arr as $key => $value) {\n    $arr2[$key] = decbin($value);\n\
    \  }\n  $arr3 = [];\n  foreach ($arr2 as $key => $value) {\n    $arr3[$key] =\
    \ substr_count($value, '1');\n  }\n  asort($arr3);\n  $arr4 = [];\n  foreach ($arr3\
    \ as $key => $value) {\n    $arr4[$key] = bindec($arr2[$key]);\n  }\n  return\
    \ $arr4;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpggytcwf6.php:33\n\
    Stack trace:\n#0 /tmp/tmpggytcwf6.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpggytcwf6.php\
    \ on line 33\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr_ones\
    \ = [];\n  $arr_dec = [];\n  foreach ($arr as $key => $value) {\n    $arr_ones[$key]\
    \ = substr_count(decbin($value), '1');\n    $arr_dec[$key] = $value;\n  }\n  array_multisort($arr_ones,\
    \ SORT_ASC, $arr_dec, SORT_ASC, $arr);\n  return $arr;\n}\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1de_vtl5.php:28\n\
    Stack trace:\n#0 /tmp/tmp1de_vtl5.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp1de_vtl5.php\
    \ on line 28\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr2 =\
    \ [];\n  foreach ($arr as $value) {\n    $arr2[] = decbin($value);\n  }\n  $arr3\
    \ = [];\n  foreach ($arr2 as $key => $value) {\n    $arr3[$key] = substr_count($value,\
    \ '1');\n  }\n  asort($arr3);\n  $arr4 = [];\n  foreach ($arr3 as $key => $value)\
    \ {\n    $arr4[] = $arr[$key];\n  }\n  return $arr4;\n}\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5tzho_wd.php:33\n\
    Stack trace:\n#0 /tmp/tmp5tzho_wd.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5tzho_wd.php\
    \ on line 33\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n    $arr_ones\
    \ = array();\n    foreach ($arr as $key => $value) {\n        $arr_ones[$key]\
    \ = substr_count(decbin($value), '1');\n    }\n    array_multisort($arr_ones,\
    \ SORT_ASC, $arr);\n    return $arr;\n}\n\n/*\nfunction candidate(...$args) {\n\
    \    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 21 in /tmp/tmpo7u96_ma.php on
    line 21

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr_ones\
    \ = [];\n  $arr_dec = [];\n  foreach ($arr as $key => $value) {\n    $arr_ones[$key]\
    \ = substr_count(decbin($value), '1');\n    $arr_dec[$key] = $value;\n  }\n  array_multisort($arr_ones,\
    \ SORT_ASC, $arr_dec, SORT_ASC, $arr);\n  return $arr;\n}\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1de_vtl5.php:28\n\
    Stack trace:\n#0 /tmp/tmp1de_vtl5.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp1de_vtl5.php\
    \ on line 28\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr2 =\
    \ [];\n  foreach ($arr as $key => $value) {\n    $arr2[$key] = decbin($value);\n\
    \  }\n  $arr2 = array_map(function($value) {\n    return substr_count($value,\
    \ '1');\n  }, $arr2);\n  array_multisort($arr2, $arr);\n  return $arr;\n}\n\n\
    /*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 24 in /tmp/tmp7z1d026k.php on
    line 24

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a = $a[1];\n    $b = $b[1];\n    $a = str_split($a);\n\
    \    $b = str_split($b);\n    $a = array_count_values($a);\n    $b = array_count_values($b);\n\
    \    if ($a['1'] == $b['1']) {\n      return $a[0] - $b[0];\n    }\n    return\
    \ $a['1'] - $b['1'];\n  });\n  return array_map(function($n) {\n    return $n[0];\n\
    \  }, $arr);\n}\n\n/*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 33 in /tmp/tmpf3wner_v.php on
    line 33

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr1 =\
    \ [];\n  $arr2 = [];\n  $arr3 = [];\n  foreach ($arr as $key => $value) {\n  \
    \  $arr1[$key] = decbin($value);\n    $arr2[$key] = substr_count($arr1[$key],\
    \ '1');\n    $arr3[$key] = $value;\n  }\n  array_multisort($arr2, SORT_ASC, $arr3,\
    \ SORT_ASC, $arr);\n  return $arr;\n}\nfunction candidate(...$args) {\n    return\
    \ sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8kv58dhj.php:30\n\
    Stack trace:\n#0 /tmp/tmp8kv58dhj.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp8kv58dhj.php\
    \ on line 30\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n    $arr\
    \ = array_map('decbin', $arr);\n    $arr = array_map('strlen', $arr);\n    $arr\
    \ = array_map('intval', $arr);\n    $arr = array_map('decbin', $arr);\n    $arr\
    \ = array_map('strlen', $arr);\n    $arr = array_map('intval', $arr);\n    $arr\
    \ = array_map('decbin', $arr);\n    $arr = array_map('strlen', $arr);\n    $arr\
    \ = array_map('intval', $arr);\n    $arr = array_map('decbin', $arr);\n    $arr\
    \ = array_map('strlen', $arr);\n    $arr = array_map('intval', $arr);\n    $arr\
    \ = array_map('decbin', $arr);\n    $arr = array_map('strlen', $arr);\n    $arr\
    \ = array_map('intval', $arr);\n    $arr = array_map('decbin', $arr);\n    $arr\
    \ = array_map('strlen', $arr);\n    $arr = array_map('intval', $arr);\n    $arr\
    \ = array_map('decbin', $arr);\n    $arr = array_map('strlen', $arr);\n    $arr\
    \ = array_map('intval', $arr);\n    $arr = array_map('decbin', $arr);\n    $arr\
    \ = array_map('strlen', $arr);\n    $arr = array_map('intval', $arr);\n    $arr\
    \ = array_map('decbin', $arr);\n    $arr = array_map('strlen', $arr);\n    $arr\
    \ = array_map('intval', $arr);\n    $arr = array_map('decbin', $arr);\n    $arr\
    \ = array_map('strlen', $arr);\n    $arr = array_map('intval', $arr);\n    $arr\
    \ = array_map('decbin', $arr);\n    $arr = array_map('strlen', $arr);\n    $arr\
    \ = array_map('intval', $arr);\n    $arr = array_map('decbin', $arr);\n   \nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 12 in /tmp/tmpkdww7vyv.php on line 63

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    return substr_count($a[1], '1') - substr_count($b[1],\
    \ '1') ?: $a[0] - $b[0];\n  });\n  return array_column($arr, 0);\n}\n\n/*\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 22 in /tmp/tmpbn1w46yv.php on
    line 22

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map('decbin', $arr);\n  $arr = array_map('strlen', $arr);\n  $arr = array_map('bindec',\
    \ $arr);\n  $arr = array_map('intval', $arr);\n  asort($arr);\n  return $arr;\n\
    }\n\n/*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 21 in /tmp/tmpzckpj85r.php on
    line 21

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a = $a[1];\n    $b = $b[1];\n    $a = substr_count($a,\
    \ '1');\n    $b = substr_count($b, '1');\n    if ($a == $b) {\n      return $a[0]\
    \ - $b[0];\n    }\n    return $a - $b;\n  });\n  return array_map(function($n)\
    \ {\n    return $n[0];\n  }, $arr);\n}\n\n/*\nfunction candidate(...$args) {\n\
    \    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 31 in /tmp/tmpu9hmlofq.php on
    line 31

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($a) {\n    $bin = decbin($a);\n    return [$a, substr_count($bin,\
    \ '1'), $bin];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    if ($a[1] ==\
    \ $b[1]) return $a[2] <=> $b[2];\n    return $a[1] <=> $b[1];\n  });\n  return\
    \ array_map(function($a) {\n    return $a[0];\n  }, $arr);\n}\n\n/*\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 26 in /tmp/tmp2ok3fdea.php on
    line 26

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr_ones\
    \ = [];\n  $arr_dec = [];\n  foreach ($arr as $key => $value) {\n    $arr_ones[$key]\
    \ = substr_count(decbin($value), '1');\n    $arr_dec[$key] = $value;\n  }\n  array_multisort($arr_ones,\
    \ SORT_ASC, $arr_dec, SORT_ASC, $arr);\n  return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq7i4vc7d.php:29\n\
    Stack trace:\n#0 /tmp/tmpq7i4vc7d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpq7i4vc7d.php\
    \ on line 29\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a = $a[1];\n    $b = $b[1];\n    $a = str_split($a);\n\
    \    $b = str_split($b);\n    $a = array_sum($a);\n    $b = array_sum($b);\n \
    \   if ($a === $b) {\n      return $a[0] - $b[0];\n    }\n    return $a - $b;\n\
    \  });\n  $arr = array_map(function($n) {\n    return $n[0];\n  }, $arr);\n  return\
    \ $arr;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmpo9hioko0.php\
    \ on line 24\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmpo9hioko0.php on line 24\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmpo9hioko0.php on line 24\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmpo9hioko0.php on line 24\n\nWarning:\
    \ Trying to access array offset on value of type int in /tmp/tmpo9hioko0.php on\
    \ line 24\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpo9hioko0.php\
    \ on line 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo9hioko0.php:39\n\
    Stack trace:\n#0 /tmp/tmpo9hioko0.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpo9hioko0.php\
    \ on line 39\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr1 =\
    \ [];\n  $arr2 = [];\n  foreach ($arr as $value) {\n    $arr1[] = decbin($value);\n\
    \  }\n  foreach ($arr1 as $key => $value) {\n    $arr2[$key] = substr_count($value,\
    \ '1');\n  }\n  array_multisort($arr2, SORT_ASC, $arr);\n  return $arr;\n}\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxvty6cp7.php:30\n\
    Stack trace:\n#0 /tmp/tmpxvty6cp7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpxvty6cp7.php\
    \ on line 30\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr1 =\
    \ [];\n  $arr2 = [];\n  foreach ($arr as $value) {\n    $arr1[] = decbin($value);\n\
    \  }\n  foreach ($arr1 as $key => $value) {\n    $arr2[$key] = substr_count($value,\
    \ '1');\n  }\n  array_multisort($arr2, SORT_ASC, $arr);\n  return $arr;\n}\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxvty6cp7.php:30\n\
    Stack trace:\n#0 /tmp/tmpxvty6cp7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpxvty6cp7.php\
    \ on line 30\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a = $a[1];\n    $b = $b[1];\n    $a = strlen($a) -\
    \ substr_count($a, '0');\n    $b = strlen($b) - substr_count($b, '0');\n    if\
    \ ($a === $b) {\n      return $a[0] - $b[0];\n    }\n    return $a - $b;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\n/*\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 31 in /tmp/tmplw21uwbs.php on
    line 31

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n    $arr\
    \ = array_map(function($n) {\n        return [$n, decbin($n)];\n    }, $arr);\n\
    \    usort($arr, function($a, $b) {\n        $a1 = substr_count($a[1], '1');\n\
    \        $b1 = substr_count($b[1], '1');\n        if ($a1 == $b1) {\n        \
    \    return $a[0] - $b[0];\n        }\n        return $a1 - $b1;\n    });\n  \
    \  return array_map(function($n) {\n        return $n[0];\n    }, $arr);\n}\n\n\
    /*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 29 in /tmp/tmpda_b1923.php on
    line 29

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr_ones\
    \ = [];\n  $arr_decimal = [];\n  foreach ($arr as $key => $value) {\n    $arr_ones[$key]\
    \ = substr_count(decbin($value), '1');\n    $arr_decimal[$key] = $value;\n  }\n\
    \  array_multisort($arr_ones, SORT_ASC, $arr_decimal, SORT_ASC, $arr);\n  return\
    \ $arr;\n}\n\n/*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 23 in /tmp/tmp38f4wnyx.php on
    line 23

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr1 =\
    \ [];\n  $arr2 = [];\n  foreach ($arr as $key => $value) {\n    $arr1[$key] =\
    \ decbin($value);\n    $arr2[$key] = $value;\n  }\n  array_multisort(array_map('strlen',\
    \ $arr1), SORT_ASC, $arr1, $arr2);\n  return $arr2;\n}\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkde6di90.php:27\n\
    Stack trace:\n#0 /tmp/tmpkde6di90.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpkde6di90.php\
    \ on line 27\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr_bin\
    \ = array();\n  foreach ($arr as $key => $val) {\n    $arr_bin[$key] = decbin($val);\n\
    \  }\n  $arr_bin_sort = array();\n  foreach ($arr_bin as $key => $val) {\n   \
    \ $arr_bin_sort[$key] = substr_count($val, '1');\n  }\n  asort($arr_bin_sort);\n\
    \  $arr_sort = array();\n  foreach ($arr_bin_sort as $key => $val) {\n    $arr_sort[$key]\
    \ = bindec($arr_bin[$key]);\n  }\n  return $arr_sort;\n}\nprint_r(sort_array(array(1,\
    \ 5, 2, 3, 4)));\nprint_r(sort_array(array(-2, -3, -4, -5, -6)));\nprint_r(sort_array(array(1,\
    \ 0, 2, 3, 4)));\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [2] => 2\n    [4] => 4\n    [1] => 5\n    [3]\
    \ => 3\n)\nArray\n(\n    [2] => 1.844674407371E+19\n    [4] => 1.844674407371E+19\n\
    \    [0] => 1.844674407371E+19\n    [1] => 1.844674407371E+19\n    [3] => 1.844674407371E+19\n\
    )\nArray\n(\n    [1] => 0\n    [0] => 1\n    [2] => 2\n    [4] => 4\n    [3] =>\
    \ 3\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp11i54jc4.php:36\n\
    Stack trace:\n#0 /tmp/tmp11i54jc4.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp11i54jc4.php\
    \ on line 36\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr1 =\
    \ [];\n  $arr2 = [];\n  foreach ($arr as $value) {\n    $arr1[] = decbin($value);\n\
    \  }\n  foreach ($arr1 as $key => $value) {\n    $arr2[$key] = substr_count($value,\
    \ '1');\n  }\n  array_multisort($arr2, SORT_ASC, $arr);\n  return $arr;\n}\n\n\
    /*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 25 in /tmp/tmprr3u9_n5.php on
    line 25

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a = $a[1];\n    $b = $b[1];\n    $a = str_replace('0',\
    \ '', $a);\n    $b = str_replace('0', '', $b);\n    if (strlen($a) == strlen($b))\
    \ {\n      return $a < $b ? -1 : 1;\n    }\n    return strlen($a) < strlen($b)\
    \ ? -1 : 1;\n  });\n  return array_map(function($n) {\n    return $n[0];\n  },\
    \ $arr);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw26ue9ah.php:36\n\
    Stack trace:\n#0 /tmp/tmpw26ue9ah.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpw26ue9ah.php\
    \ on line 36\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($n) {\n    $ones = substr_count(decbin($n), '1');\n    return\
    \ [$n, $ones];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    if ($a[1] ==\
    \ $b[1]) {\n      return $a[0] - $b[0];\n    }\n    return $a[1] - $b[1];\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa75g4029.php:33\n\
    Stack trace:\n#0 /tmp/tmpa75g4029.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpa75g4029.php\
    \ on line 33\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a = $a[1];\n    $b = $b[1];\n    $a = str_split($a);\n\
    \    $b = str_split($b);\n    $a = array_sum($a);\n    $b = array_sum($b);\n \
    \   if ($a === $b) {\n      return $a[0] - $b[0];\n    }\n    return $a - $b;\n\
    \  });\n  $arr = array_map(function($n) {\n    return $n[0];\n  }, $arr);\n  return\
    \ $arr;\n}\n\n/*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 34 in /tmp/tmp9dq2o14n.php on
    line 34

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a = substr_count($a[1], '1');\n    $b = substr_count($b[1],\
    \ '1');\n    if ($a == $b) {\n      return $a[0] - $b[0];\n    }\n    return $a\
    \ - $b;\n  });\n  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n\
    }\n\n/*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 29 in /tmp/tmpaosdklm7.php on
    line 29

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a = $a[1];\n    $b = $b[1];\n    $a = str_split($a);\n\
    \    $b = str_split($b);\n    $a = array_sum($a);\n    $b = array_sum($b);\n \
    \   if ($a === $b) {\n      return $a[0] - $b[0];\n    }\n    return $a - $b;\n\
    \  });\n  $arr = array_map(function($n) {\n    return $n[0];\n  }, $arr);\n  return\
    \ $arr;\n}\n\n/*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 34 in /tmp/tmp9dq2o14n.php on
    line 34

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr2 =\
    \ [];\n  foreach ($arr as $key => $value) {\n    $arr2[$key] = decbin($value);\n\
    \  }\n  foreach ($arr2 as $key => $value) {\n    $arr2[$key] = substr_count($value,\
    \ '1');\n  }\n  asort($arr2);\n  foreach ($arr2 as $key => $value) {\n    $arr2[$key]\
    \ = $arr[$key];\n  }\n  return $arr2;\n}\nfunction candidate(...$args) {\n   \
    \ return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpugkqgt6u.php:31\n\
    Stack trace:\n#0 /tmp/tmpugkqgt6u.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpugkqgt6u.php\
    \ on line 31\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n    $arr\
    \ = array_map(function($n) {\n        return [$n, decbin($n)];\n    }, $arr);\n\
    \    usort($arr, function($a, $b) {\n        $a_ones = substr_count($a[1], '1');\n\
    \        $b_ones = substr_count($b[1], '1');\n        if ($a_ones == $b_ones)\
    \ {\n            return $a[0] - $b[0];\n        }\n        return $a_ones - $b_ones;\n\
    \    });\n    return array_map(function($a) {\n        return $a[0];\n    }, $arr);\n\
    }\n\n/*\n    ----TESTE----\n*/\n\n$teste = sort_array([1, 5, 2, 3, 4]);\nprint_r($teste);\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 4\n    [3] => 3\n    [4]\
    \ => 5\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfbug1t3m.php:41\n\
    Stack trace:\n#0 /tmp/tmpfbug1t3m.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpfbug1t3m.php\
    \ on line 41\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map('decbin', $arr);\n  $arr = array_map('strlen', $arr);\n  $arr = array_combine(range(0,\
    \ count($arr) - 1), $arr);\n  asort($arr);\n  return array_keys($arr);\n}\n\n\
    /*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 20 in /tmp/tmp_lfpuw_d.php on
    line 20

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a = $a[1];\n    $b = $b[1];\n    $a = strlen($a) -\
    \ substr_count($a, '0');\n    $b = strlen($b) - substr_count($b, '0');\n    if\
    \ ($a == $b) {\n      return $a[0] - $b[0];\n    }\n    return $a - $b;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmp68hp3qja.php\
    \ on line 22\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmp68hp3qja.php on line 22\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmp68hp3qja.php on line 22\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmp68hp3qja.php on line 22\n\nWarning:\
    \ Trying to access array offset on value of type int in /tmp/tmp68hp3qja.php on\
    \ line 22\n\nWarning: Trying to access array offset on value of type int in /tmp/tmp68hp3qja.php\
    \ on line 22\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp68hp3qja.php:35\n\
    Stack trace:\n#0 /tmp/tmp68hp3qja.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp68hp3qja.php\
    \ on line 35\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a1 = substr_count($a[1], '1');\n    $b1 = substr_count($b[1],\
    \ '1');\n    if ($a1 == $b1) {\n      return $a[0] - $b[0];\n    }\n    return\
    \ $a1 - $b1;\n  });\n  return array_map(function($n) {\n    return $n[0];\n  },\
    \ $arr);\n}\n\n/*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 29 in /tmp/tmp6be1y4wi.php on
    line 29

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $sort =\
    \ array();\n  foreach ($arr as $key => $value) {\n    $sort[$key] = decbin($value);\n\
    \  }\n  array_multisort($sort, SORT_ASC, $arr);\n  return $arr;\n}\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl99cjbs8.php:25\n\
    Stack trace:\n#0 /tmp/tmpl99cjbs8.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpl99cjbs8.php\
    \ on line 25\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($x) {\n    return [$x, decbin($x)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a = $a[1];\n    $b = $b[1];\n    $a = substr_count($a,\
    \ '1');\n    $b = substr_count($b, '1');\n    if ($a == $b) {\n      return $a[0]\
    \ - $b[0];\n    }\n    return $a - $b;\n  });\n  return array_map(function($x)\
    \ {\n    return $x[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n   \
    \ return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmphqsckkqe.php\
    \ on line 22\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmphqsckkqe.php on line 22\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmphqsckkqe.php on line 22\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmphqsckkqe.php on line 22\n\nWarning:\
    \ Trying to access array offset on value of type int in /tmp/tmphqsckkqe.php on\
    \ line 22\n\nWarning: Trying to access array offset on value of type int in /tmp/tmphqsckkqe.php\
    \ on line 22\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphqsckkqe.php:36\n\
    Stack trace:\n#0 /tmp/tmphqsckkqe.php(46): test()\n#1 {main}\n  thrown in /tmp/tmphqsckkqe.php\
    \ on line 36\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr1 =\
    \ array();\n  $arr2 = array();\n  foreach ($arr as $key => $value) {\n    $arr1[$key]\
    \ = decbin($value);\n    $arr2[$key] = $value;\n  }\n  array_multisort(array_map('strlen',\
    \ $arr1), $arr1, $arr2);\n  return $arr2;\n}\n\n/*\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 23 in /tmp/tmprnnsd6dl.php on
    line 23

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr_bin\
    \ = [];\n  foreach ($arr as $key => $value) {\n    $arr_bin[$key] = decbin($value);\n\
    \  }\n  $arr_bin_sort = [];\n  foreach ($arr_bin as $key => $value) {\n    $arr_bin_sort[$key]\
    \ = substr_count($value, '1');\n  }\n  asort($arr_bin_sort);\n  $arr_sort = [];\n\
    \  foreach ($arr_bin_sort as $key => $value) {\n    $arr_sort[$key] = $arr[$key];\n\
    \  }\n  return $arr_sort;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx_v7hqy_.php:33\n\
    Stack trace:\n#0 /tmp/tmpx_v7hqy_.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpx_v7hqy_.php\
    \ on line 33\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n    $b_ones = substr_count($b[1],\
    \ '1');\n    if ($a_ones === $b_ones) {\n      return $a[0] - $b[0];\n    }\n\
    \    return $a_ones - $b_ones;\n  });\n  return array_map(function($n) {\n   \
    \ return $n[0];\n  }, $arr);\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpko9m3ljq.php:34\n\
    Stack trace:\n#0 /tmp/tmpko9m3ljq.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpko9m3ljq.php\
    \ on line 34\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr_ones\
    \ = [];\n  foreach ($arr as $key => $value) {\n    $arr_ones[$key] = substr_count(decbin($value),\
    \ '1');\n  }\n  array_multisort($arr_ones, SORT_ASC, $arr);\n  return $arr;\n\
    }\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmnrwgvh4.php:26\n\
    Stack trace:\n#0 /tmp/tmpmnrwgvh4.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpmnrwgvh4.php\
    \ on line 26\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr_ones\
    \ = [];\n  foreach ($arr as $key => $value) {\n    $arr_ones[$key] = substr_count(decbin($value),\
    \ '1');\n  }\n  array_multisort($arr_ones, SORT_ASC, $arr);\n  return $arr;\n\
    }\n\n/*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 21 in /tmp/tmp9f20fjry.php on
    line 21

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr_ones\
    \ = [];\n  $arr_dec = [];\n  foreach ($arr as $key => $value) {\n    $arr_ones[$key]\
    \ = substr_count(decbin($value), '1');\n    $arr_dec[$key] = $value;\n  }\n  array_multisort($arr_ones,\
    \ SORT_ASC, $arr_dec, SORT_ASC, $arr);\n  return $arr;\n}\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1de_vtl5.php:28\n\
    Stack trace:\n#0 /tmp/tmp1de_vtl5.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp1de_vtl5.php\
    \ on line 28\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $ones =\
    \ [];\n  $zeros = [];\n  foreach ($arr as $value) {\n    $binary = decbin($value);\n\
    \    $count = substr_count($binary, '1');\n    if ($count > 0) {\n      $ones[$count][]\
    \ = $value;\n    } else {\n      $zeros[] = $value;\n    }\n  }\n  ksort($ones);\n\
    \  $result = [];\n  foreach ($ones as $key => $value) {\n    sort($value);\n \
    \   $result = array_merge($result, $value);\n  }\n  sort($zeros);\n  $result =\
    \ array_merge($result, $zeros);\n  return $result;\n}\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9f4k43yb.php:40\n\
    Stack trace:\n#0 /tmp/tmp9f4k43yb.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp9f4k43yb.php\
    \ on line 40\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($v) {\n    return [$v, decbin($v)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n    $b_ones = substr_count($b[1],\
    \ '1');\n    if ($a_ones == $b_ones) {\n      return $a[0] - $b[0];\n    }\n \
    \   return $a_ones - $b_ones;\n  });\n  return array_map(function($v) {\n    return\
    \ $v[0];\n  }, $arr);\n}\n\nprint_r(sort_array([1, 5, 2, 3, 4]));\nprint_r(sort_array([-2,\
    \ -3, -4, -5, -6]));\nprint_r(sort_array([1, 0, 2, 3, 4]));\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 4\n    [3] => 3\n    [4]\
    \ => 5\n)\nArray\n(\n    [0] => -6\n    [1] => -4\n    [2] => -5\n    [3] => -3\n\
    \    [4] => -2\n)\nArray\n(\n    [0] => 0\n    [1] => 1\n    [2] => 2\n    [3]\
    \ => 4\n    [4] => 3\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprf6d2bbs.php:38\n\
    Stack trace:\n#0 /tmp/tmprf6d2bbs.php(47): test()\n#1 {main}\n  thrown in /tmp/tmprf6d2bbs.php\
    \ on line 38\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($a) {\n    return [$a, decbin($a)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a = $a[1];\n    $b = $b[1];\n    $a = str_split($a);\n\
    \    $b = str_split($b);\n    $a = array_sum($a);\n    $b = array_sum($b);\n \
    \   if ($a == $b) {\n      return $a[0] - $b[0];\n    }\n    return $a - $b;\n\
    \  });\n  $arr = array_map(function($a) {\n    return $a[0];\n  }, $arr);\n  return\
    \ $arr;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmpkfuu6ul4.php\
    \ on line 24\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmpkfuu6ul4.php on line 24\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmpkfuu6ul4.php on line 24\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmpkfuu6ul4.php on line 24\n\nWarning:\
    \ Trying to access array offset on value of type int in /tmp/tmpkfuu6ul4.php on\
    \ line 24\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpkfuu6ul4.php\
    \ on line 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkfuu6ul4.php:38\n\
    Stack trace:\n#0 /tmp/tmpkfuu6ul4.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpkfuu6ul4.php\
    \ on line 38\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a1 = substr_count($a[1], '1');\n    $b1 = substr_count($b[1],\
    \ '1');\n    if ($a1 == $b1) {\n      return $a[0] - $b[0];\n    }\n    return\
    \ $a1 - $b1;\n  });\n  return array_map(function($n) {\n    return $n[0];\n  },\
    \ $arr);\n}\n\n/*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 29 in /tmp/tmp6be1y4wi.php on
    line 29

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr1 =\
    \ [];\n  $arr2 = [];\n  foreach ($arr as $value) {\n    $arr1[] = decbin($value);\n\
    \  }\n  foreach ($arr1 as $key => $value) {\n    $arr2[$key] = substr_count($value,\
    \ '1');\n  }\n  array_multisort($arr2, SORT_ASC, $arr);\n  return $arr;\n}\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxvty6cp7.php:30\n\
    Stack trace:\n#0 /tmp/tmpxvty6cp7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpxvty6cp7.php\
    \ on line 30\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n    $b_ones = substr_count($b[1],\
    \ '1');\n    if ($a_ones == $b_ones) {\n      return $a[0] - $b[0];\n    }\n \
    \   return $a_ones - $b_ones;\n  });\n  return array_map(function($n) {\n    return\
    \ $n[0];\n  }, $arr);\n}\n\n/*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 29 in /tmp/tmp1mo3ptbk.php on
    line 29

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr1 =\
    \ [];\n  $arr2 = [];\n  $arr3 = [];\n  foreach ($arr as $key => $value) {\n  \
    \  $arr1[$key] = decbin($value);\n    $arr2[$key] = substr_count($arr1[$key],\
    \ '1');\n    $arr3[$key] = $value;\n  }\n  array_multisort($arr2, SORT_ASC, $arr3,\
    \ SORT_ASC, $arr);\n  return $arr;\n}\n\n/*\nfunction candidate(...$args) {\n\
    \    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 25 in /tmp/tmpgrsbyk4o.php on
    line 25

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n    $arr\
    \ = array_map(function($n) {\n        return [$n, decbin($n)];\n    }, $arr);\n\
    \    usort($arr, function($a, $b) {\n        $a_ones = substr_count($a[1], '1');\n\
    \        $b_ones = substr_count($b[1], '1');\n        if ($a_ones == $b_ones)\
    \ {\n            return $a[0] - $b[0];\n        }\n        return $a_ones - $b_ones;\n\
    \    });\n    return array_map(function($n) {\n        return $n[0];\n    }, $arr);\n\
    }\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp80x9zv3r.php:34\n\
    Stack trace:\n#0 /tmp/tmp80x9zv3r.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp80x9zv3r.php\
    \ on line 34\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n    $arr1\
    \ = [];\n    $arr2 = [];\n    foreach ($arr as $value) {\n        $arr1[] = decbin($value);\n\
    \    }\n    foreach ($arr1 as $value) {\n        $arr2[] = substr_count($value,\
    \ '1');\n    }\n    array_multisort($arr2, $arr);\n    return $arr;\n}\n\n/*\n\
    \    ----TESTE----\n*/\n\n$arr = [1, 0, 2, 3, 4];\necho \"<pre>\";\nprint_r(sort_array($arr));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 0\n    [1] => 1\n    [2] => 2\n    [3] => 4\n\
    \    [4] => 3\n)\n</pre>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnhu9gq36.php:39\n\
    Stack trace:\n#0 /tmp/tmpnhu9gq36.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpnhu9gq36.php\
    \ on line 39\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr2 =\
    \ array();\n  $arr3 = array();\n  $arr4 = array();\n  foreach ($arr as $key =>\
    \ $value) {\n    $arr2[$key] = decbin($value);\n    $arr3[$key] = substr_count($arr2[$key],\
    \ '1');\n  }\n  asort($arr3);\n  foreach ($arr3 as $key => $value) {\n    $arr4[$key]\
    \ = bindec($arr2[$key]);\n  }\n  return $arr4;\n}\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_066y5a7.php:31\n\
    Stack trace:\n#0 /tmp/tmp_066y5a7.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp_066y5a7.php\
    \ on line 31\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($x) {\n    return [$x, decbin($x)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a = $a[1];\n    $b = $b[1];\n    $a = str_split($a);\n\
    \    $b = str_split($b);\n    $a = array_count_values($a);\n    $b = array_count_values($b);\n\
    \    if ($a['1'] == $b['1']) {\n      return $a[0] - $b[0];\n    }\n    return\
    \ $a['1'] - $b['1'];\n  });\n  $arr = array_map(function($x) {\n    return $x[0];\n\
    \  }, $arr);\n  return $arr;\n}\n\n/*\nfunction candidate(...$args) {\n    return\
    \ sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 34 in /tmp/tmpvlp4c70g.php on
    line 34

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($n) {\n    $n = decbin($n);\n    return [$n, $n, $n];\n \
    \ }, $arr);\n  usort($arr, function($a, $b) {\n    if ($a[0] === $b[0]) {\n  \
    \    return $a[1] - $b[1];\n    }\n    return $a[0] - $b[0];\n  });\n  return\
    \ array_map(function($n) {\n    return bindec($n[2]);\n  }, $arr);\n}\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj_1i_thi.php:32\n\
    Stack trace:\n#0 /tmp/tmpj_1i_thi.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpj_1i_thi.php\
    \ on line 32\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($x) {\n    return [$x, decbin($x)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a = $a[1];\n    $b = $b[1];\n    $a = str_replace('0',\
    \ '', $a);\n    $b = str_replace('0', '', $b);\n    if (strlen($a) == strlen($b))\
    \ {\n      return $a < $b ? -1 : 1;\n    }\n    return strlen($a) < strlen($b)\
    \ ? -1 : 1;\n  });\n  return array_map(function($x) {\n    return $x[0];\n  },\
    \ $arr);\n}\n\n/*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 31 in /tmp/tmp363qt77q.php on
    line 31

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n    $arr\
    \ = array_map(function($n) {\n        return [$n, decbin($n)];\n    }, $arr);\n\
    \    usort($arr, function($a, $b) {\n        $a = $a[1];\n        $b = $b[1];\n\
    \        $a = str_replace('0', '', $a);\n        $b = str_replace('0', '', $b);\n\
    \        if (strlen($a) == strlen($b)) {\n            return $a[0] - $b[0];\n\
    \        }\n        return strlen($a) - strlen($b);\n    });\n    return array_map(function($n)\
    \ {\n        return $n[0];\n    }, $arr);\n}\n\n/*\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 31 in /tmp/tmpi__oy5vn.php on
    line 31

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr_bin\
    \ = [];\n  foreach ($arr as $key => $value) {\n    $arr_bin[$key] = decbin($value);\n\
    \  }\n  $arr_bin_sort = [];\n  foreach ($arr_bin as $key => $value) {\n    $arr_bin_sort[$key]\
    \ = substr_count($value, '1');\n  }\n  asort($arr_bin_sort);\n  $arr_sort = [];\n\
    \  foreach ($arr_bin_sort as $key => $value) {\n    $arr_sort[$key] = $arr[$key];\n\
    \  }\n  return $arr_sort;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx_v7hqy_.php:33\n\
    Stack trace:\n#0 /tmp/tmpx_v7hqy_.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpx_v7hqy_.php\
    \ on line 33\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n    $arr\
    \ = array_map(function($n) {\n        return [$n, decbin($n)];\n    }, $arr);\n\
    \    usort($arr, function($a, $b) {\n        $a_ones = substr_count($a[1], \"\
    1\");\n        $b_ones = substr_count($b[1], \"1\");\n        if ($a_ones == $b_ones)\
    \ {\n            return $a[0] - $b[0];\n        }\n        return $a_ones - $b_ones;\n\
    \    });\n    return array_map(function($n) {\n        return $n[0];\n    }, $arr);\n\
    }\n\n/*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 29 in /tmp/tmpc2bio81x.php on
    line 29

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a = substr_count($a[1], '1');\n    $b = substr_count($b[1],\
    \ '1');\n    if ($a == $b) {\n      return $a[0] - $b[0];\n    }\n    return $a\
    \ - $b;\n  });\n  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmpsb7uh0wp.php\
    \ on line 20\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmpsb7uh0wp.php on line 20\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmpsb7uh0wp.php on line 20\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmpsb7uh0wp.php on line 20\n\nWarning:\
    \ Trying to access array offset on value of type int in /tmp/tmpsb7uh0wp.php on\
    \ line 20\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpsb7uh0wp.php\
    \ on line 20\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsb7uh0wp.php:34\n\
    Stack trace:\n#0 /tmp/tmpsb7uh0wp.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpsb7uh0wp.php\
    \ on line 34\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a1 = substr_count($a[1], '1');\n    $b1 = substr_count($b[1],\
    \ '1');\n    if ($a1 == $b1) return $a[0] - $b[0];\n    return $a1 - $b1;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\n/*\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 27 in /tmp/tmprjt7ffp8.php on
    line 27

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr1 =\
    \ [];\n  foreach ($arr as $key => $value) {\n    $arr1[$key] = decbin($value);\n\
    \  }\n  foreach ($arr1 as $key => $value) {\n    $arr1[$key] = substr_count($value,\
    \ '1');\n  }\n  asort($arr1);\n  foreach ($arr1 as $key => $value) {\n    $arr1[$key]\
    \ = $arr[$key];\n  }\n  return $arr1;\n}\nprint_r(sort_array([1, 5, 2, 3, 4]));\n\
    print_r(sort_array([-2, -3, -4, -5, -6]));\nprint_r(sort_array([1, 0, 2, 3, 4]));\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [2] => 2\n    [4] => 4\n    [1] => 5\n    [3]\
    \ => 3\n)\nArray\n(\n    [2] => -4\n    [4] => -6\n    [0] => -2\n    [1] => -3\n\
    \    [3] => -5\n)\nArray\n(\n    [1] => 0\n    [0] => 1\n    [2] => 2\n    [4]\
    \ => 4\n    [3] => 3\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0oml5333.php:34\n\
    Stack trace:\n#0 /tmp/tmp0oml5333.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp0oml5333.php\
    \ on line 34\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a = $a[1];\n    $b = $b[1];\n    $a = str_split($a);\n\
    \    $b = str_split($b);\n    $a = array_sum($a);\n    $b = array_sum($b);\n \
    \   if ($a == $b) {\n      return $a[0] - $b[0];\n    }\n    return $a - $b;\n\
    \  });\n  $arr = array_map(function($n) {\n    return $n[0];\n  }, $arr);\n  return\
    \ $arr;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmphmugrl9o.php\
    \ on line 24\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmphmugrl9o.php on line 24\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmphmugrl9o.php on line 24\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmphmugrl9o.php on line 24\n\nWarning:\
    \ Trying to access array offset on value of type int in /tmp/tmphmugrl9o.php on\
    \ line 24\n\nWarning: Trying to access array offset on value of type int in /tmp/tmphmugrl9o.php\
    \ on line 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphmugrl9o.php:38\n\
    Stack trace:\n#0 /tmp/tmphmugrl9o.php(48): test()\n#1 {main}\n  thrown in /tmp/tmphmugrl9o.php\
    \ on line 38\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr1 =\
    \ [];\n  $arr2 = [];\n  $arr3 = [];\n  foreach ($arr as $value) {\n    $arr1[]\
    \ = decbin($value);\n  }\n  foreach ($arr1 as $key => $value) {\n    $arr2[$key]\
    \ = substr_count($value, '1');\n  }\n  asort($arr2);\n  foreach ($arr2 as $key\
    \ => $value) {\n    $arr3[] = $arr[$key];\n  }\n  return $arr3;\n}\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpapzmigs3.php:33\n\
    Stack trace:\n#0 /tmp/tmpapzmigs3.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpapzmigs3.php\
    \ on line 33\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr_bin\
    \ = array();\n  foreach ($arr as $key => $value) {\n    $arr_bin[$key] = decbin($value);\n\
    \  }\n  foreach ($arr_bin as $key => $value) {\n    $arr_bin[$key] = substr_count($value,\
    \ '1');\n  }\n  asort($arr_bin);\n  $arr_bin = array_flip($arr_bin);\n  foreach\
    \ ($arr_bin as $key => $value) {\n    $arr_bin[$key] = $arr[$value];\n  }\n  return\
    \ $arr_bin;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9edfonik.php:32\n\
    Stack trace:\n#0 /tmp/tmp9edfonik.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp9edfonik.php\
    \ on line 32\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($v) {\n    return [$v, decbin($v)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a = $a[1];\n    $b = $b[1];\n    $a = strlen($a) -\
    \ strlen($b);\n    if ($a == 0) {\n      $a = strcmp($a, $b);\n    }\n    return\
    \ $a;\n  });\n  $arr = array_map(function($v) {\n    return $v[0];\n  }, $arr);\n\
    \  return $arr;\n}\n\n/*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 31 in /tmp/tmpyysl8_d5.php on
    line 31

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr2 =\
    \ [];\n  foreach ($arr as $key => $value) {\n    $arr2[$key] = decbin($value);\n\
    \  }\n  $arr3 = [];\n  foreach ($arr2 as $key => $value) {\n    $arr3[$key] =\
    \ substr_count($value, '1');\n  }\n  asort($arr3);\n  $arr4 = [];\n  foreach ($arr3\
    \ as $key => $value) {\n    $arr4[$key] = bindec($arr2[$key]);\n  }\n  return\
    \ $arr4;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpggytcwf6.php:33\n\
    Stack trace:\n#0 /tmp/tmpggytcwf6.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpggytcwf6.php\
    \ on line 33\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr_bin\
    \ = array();\n  foreach ($arr as $value) {\n    $arr_bin[] = decbin($value);\n\
    \  }\n  $arr_bin_count = array();\n  foreach ($arr_bin as $value) {\n    $arr_bin_count[]\
    \ = substr_count($value, '1');\n  }\n  $arr_bin_count_sort = $arr_bin_count;\n\
    \  sort($arr_bin_count_sort);\n  $arr_sort = array();\n  foreach ($arr_bin_count_sort\
    \ as $value) {\n    $arr_sort[] = $arr[array_search($value, $arr_bin_count)];\n\
    \  }\n  return $arr_sort;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprn6_76nu.php:34\n\
    Stack trace:\n#0 /tmp/tmprn6_76nu.php(44): test()\n#1 {main}\n  thrown in /tmp/tmprn6_76nu.php\
    \ on line 34\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $ones =\
    \ [];\n  foreach ($arr as $num) {\n    $ones[] = substr_count(decbin($num), '1');\n\
    \  }\n  array_multisort($ones, $arr);\n  return $arr;\n}\n\n/*\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 21 in /tmp/tmpofukfzq8.php on
    line 21

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr_ones\
    \ = array();\n  $arr_dec = array();\n  foreach ($arr as $key => $value) {\n  \
    \  $arr_ones[$key] = substr_count(decbin($value), '1');\n    $arr_dec[$key] =\
    \ $value;\n  }\n  array_multisort($arr_ones, SORT_ASC, $arr_dec, SORT_ASC, $arr);\n\
    \  return $arr;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2fh4c1b9.php:28\n\
    Stack trace:\n#0 /tmp/tmp2fh4c1b9.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp2fh4c1b9.php\
    \ on line 28\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n    $arr\
    \ = array_map(function($n) {\n        return [$n, decbin($n)];\n    }, $arr);\n\
    \    usort($arr, function($a, $b) {\n        $a = $a[1];\n        $b = $b[1];\n\
    \        $a = str_split($a);\n        $b = str_split($b);\n        $a = array_sum($a);\n\
    \        $b = array_sum($b);\n        if ($a == $b) {\n            return $a[0]\
    \ - $b[0];\n        }\n        return $a - $b;\n    });\n    $arr = array_map(function($n)\
    \ {\n        return $n[0];\n    }, $arr);\n    return $arr;\n}\n\n/*\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 34 in /tmp/tmp5zy3jkcb.php on
    line 34

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr2 =\
    \ [];\n  foreach ($arr as $key => $value) {\n    $arr2[$key] = decbin($value);\n\
    \  }\n  $arr3 = [];\n  foreach ($arr2 as $key => $value) {\n    $arr3[$key] =\
    \ substr_count($value, '1');\n  }\n  asort($arr3);\n  $arr4 = [];\n  foreach ($arr3\
    \ as $key => $value) {\n    $arr4[$key] = bindec($arr2[$key]);\n  }\n  return\
    \ $arr4;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpggytcwf6.php:33\n\
    Stack trace:\n#0 /tmp/tmpggytcwf6.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpggytcwf6.php\
    \ on line 33\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr_ones\
    \ = [];\n  $arr_dec = [];\n  foreach ($arr as $key => $value) {\n    $arr_ones[$key]\
    \ = substr_count(decbin($value), '1');\n    $arr_dec[$key] = $value;\n  }\n  array_multisort($arr_ones,\
    \ SORT_ASC, $arr_dec, SORT_ASC, $arr);\n  return $arr;\n}\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1de_vtl5.php:28\n\
    Stack trace:\n#0 /tmp/tmp1de_vtl5.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp1de_vtl5.php\
    \ on line 28\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr_bin\
    \ = [];\n  foreach ($arr as $key => $value) {\n    $arr_bin[$key] = decbin($value);\n\
    \  }\n  $arr_bin_count = [];\n  foreach ($arr_bin as $key => $value) {\n    $arr_bin_count[$key]\
    \ = substr_count($value, '1');\n  }\n  $arr_bin_count_sort = $arr_bin_count;\n\
    \  sort($arr_bin_count_sort);\n  $arr_bin_count_sort_unique = array_unique($arr_bin_count_sort);\n\
    \  $arr_bin_count_sort_unique_key = [];\n  foreach ($arr_bin_count_sort_unique\
    \ as $key => $value) {\n    $arr_bin_count_sort_unique_key[$key] = array_search($value,\
    \ $arr_bin_count);\n  }\n  $arr_bin_count_sort_unique_key_sort = $arr_bin_count_sort_unique_key;\n\
    \  sort($arr_bin_count_sort_unique_key_sort);\n  $arr_bin_count_sort_unique_key_sort_unique\
    \ = array_unique($arr_bin_count_sort_unique_key_sort);\n  $arr_bin_count_sort_unique_key_sort_unique_key\
    \ = [];\n  foreach ($arr_bin_count_sort_unique_key_sort_unique as $key => $value)\
    \ {\n    $arr_bin_count_sort_unique_key_sort_unique_key[$key] = array_search($value,\
    \ $arr_bin_count_sort_unique_key);\n  }\n  $arr_bin_count_sort_unique_key_sort_unique_key_sort\
    \ = $arr_bin_count_sort_unique_key_sort_unique_key;\n  sort($arr_bin_count_sort_unique_key_sort_unique_key_sort);\n\
    \  $arr_bin_count_sort_unique_key_sort_unique_key_sort_unique = array_unique($arr_bin_count_sort_unique_key_sort_unique\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmp0il9fqbr.php
    on line 38

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($x) {\n    return [$x, decbin($x)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n    $b_ones = substr_count($b[1],\
    \ '1');\n    if ($a_ones == $b_ones) {\n      return $a[0] - $b[0];\n    }\n \
    \   return $a_ones - $b_ones;\n  });\n  return array_map(function($x) {\n    return\
    \ $x[0];\n  }, $arr);\n}\n\n/*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 29 in /tmp/tmpmo4apf9h.php on
    line 29

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map('decbin', $arr);\n  $arr = array_map('strlen', $arr);\n  $arr = array_flip($arr);\n\
    \  ksort($arr);\n  $arr = array_flip($arr);\n  $arr = array_map('bindec', $arr);\n\
    \  return $arr;\n}\n\n/*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 22 in /tmp/tmpmhpqacbb.php on
    line 22

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr_bin\
    \ = [];\n  foreach ($arr as $key => $value) {\n    $arr_bin[$key] = decbin($value);\n\
    \  }\n  $arr_bin = array_map(function($value) {\n    return substr_count($value,\
    \ '1');\n  }, $arr_bin);\n  $arr_bin = array_combine(array_keys($arr_bin), $arr_bin);\n\
    \  asort($arr_bin);\n  $arr_bin = array_combine(array_keys($arr_bin), $arr_bin);\n\
    \  $arr_bin = array_flip($arr_bin);\n  $arr_bin = array_map(function($value) use\
    \ ($arr) {\n    return $arr[$value];\n  }, $arr_bin);\n  return $arr_bin;\n}\n\
    \n/*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 30 in /tmp/tmp8k2_srpz.php on
    line 30

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr_ones\
    \ = array();\n  $arr_dec = array();\n  foreach ($arr as $key => $value) {\n  \
    \  $arr_ones[$key] = substr_count(decbin($value), '1');\n    $arr_dec[$key] =\
    \ $value;\n  }\n  array_multisort($arr_ones, SORT_ASC, $arr_dec, SORT_ASC, $arr);\n\
    \  return $arr;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2fh4c1b9.php:28\n\
    Stack trace:\n#0 /tmp/tmp2fh4c1b9.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp2fh4c1b9.php\
    \ on line 28\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n    $arr\
    \ = array_map(function($n) {\n        return [$n, decbin($n)];\n    }, $arr);\n\
    \    usort($arr, function($a, $b) {\n        $a = $a[1];\n        $b = $b[1];\n\
    \        $a = str_replace('0', '', $a);\n        $b = str_replace('0', '', $b);\n\
    \        if (strlen($a) == strlen($b)) {\n            return $a < $b ? -1 : 1;\n\
    \        }\n        return strlen($a) < strlen($b) ? -1 : 1;\n    });\n    return\
    \ array_map(function($n) {\n        return $n[0];\n    }, $arr);\n}\n\n/*\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 31 in /tmp/tmpsl6wyw1c.php on
    line 31

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($x) {\n    return [$x, decbin($x)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a = $a[1];\n    $b = $b[1];\n    $a = str_split($a);\n\
    \    $b = str_split($b);\n    $a = array_count_values($a);\n    $b = array_count_values($b);\n\
    \    $a = $a['1'];\n    $b = $b['1'];\n    if ($a == $b) {\n      return $a[0]\
    \ - $b[0];\n    }\n    return $a - $b;\n  });\n  $arr = array_map(function($x)\
    \ {\n    return $x[0];\n  }, $arr);\n  return $arr;\n}\n\n/*\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 36 in /tmp/tmp4cd8wlew.php on
    line 36

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n    $arr1\
    \ = [];\n    $arr2 = [];\n    $arr3 = [];\n    foreach ($arr as $value) {\n  \
    \      $arr1[] = decbin($value);\n    }\n    foreach ($arr1 as $key => $value)\
    \ {\n        $arr2[$key] = substr_count($value, '1');\n    }\n    asort($arr2);\n\
    \    foreach ($arr2 as $key => $value) {\n        $arr3[] = $arr[$key];\n    }\n\
    \    return $arr3;\n}\n\n/*\n    ----TESTE----\n*/\n\n$arr = [1, 5, 2, 3, 4];\n\
    echo '<pre>';\nprint_r(sort_array($arr));\necho '</pre>';\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 4\n    [3] => 5\n\
    \    [4] => 3\n)\n</pre>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2bdawy0l.php:42\n\
    Stack trace:\n#0 /tmp/tmp2bdawy0l.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp2bdawy0l.php\
    \ on line 42\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr1 =\
    \ array();\n  $arr2 = array();\n  foreach ($arr as $value) {\n    $arr1[] = decbin($value);\n\
    \  }\n  foreach ($arr1 as $key => $value) {\n    $arr2[$key] = substr_count($value,\
    \ '1');\n  }\n  array_multisort($arr2, SORT_ASC, $arr);\n  return $arr;\n}\n\n\
    /*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 25 in /tmp/tmpcz_chmr_.php on
    line 25

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($num) {\n    return [$num, decbin($num)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($num) {\n    return $num[0];\n  }, $arr);\n}\n\n/*\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 29 in /tmp/tmp4dj6q60o.php on
    line 29

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($x) {\n    return [$x, decbin($x)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a = substr_count($a[1], '1');\n    $b = substr_count($b[1],\
    \ '1');\n    if ($a == $b) {\n      return $a[0] - $b[0];\n    }\n    return $a\
    \ - $b;\n  });\n  return array_map(function($x) {\n    return $x[0];\n  }, $arr);\n\
    }\n\n$arr = array(1, 5, 2, 3, 4);\nprint_r(sort_array($arr));\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmpxo2g70v6.php\
    \ on line 20\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmpxo2g70v6.php on line 20\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmpxo2g70v6.php on line 20\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmpxo2g70v6.php on line 20\n\nWarning:\
    \ Trying to access array offset on value of type int in /tmp/tmpxo2g70v6.php on\
    \ line 20\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpxo2g70v6.php\
    \ on line 20\nArray\n(\n    [0] => 1\n    [1] => 2\n    [2] => 4\n    [3] => 5\n\
    \    [4] => 3\n)\n\nWarning: Trying to access array offset on value of type int\
    \ in /tmp/tmpxo2g70v6.php on line 20\n\nWarning: Trying to access array offset\
    \ on value of type int in /tmp/tmpxo2g70v6.php on line 20\n\nWarning: Trying to\
    \ access array offset on value of type int in /tmp/tmpxo2g70v6.php on line 20\n\
    \nWarning: Trying to access array offset on value of type int in /tmp/tmpxo2g70v6.php "
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n    $arr1\
    \ = [];\n    $arr2 = [];\n    $arr3 = [];\n    foreach ($arr as $key => $value)\
    \ {\n        $arr1[$key] = decbin($value);\n        $arr2[$key] = substr_count($arr1[$key],\
    \ '1');\n        $arr3[$key] = $value;\n    }\n    array_multisort($arr2, SORT_ASC,\
    \ $arr3, SORT_ASC, $arr);\n    return $arr;\n}\n\n/*\n    ----TESTE----\n*/\n\n\
    $arr = array(1, 5, 2, 3, 4);\nvar_dump(sort_array($arr));\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "array(5) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n  [2]=>\n  int(4)\n \
    \ [3]=>\n  int(3)\n  [4]=>\n  int(5)\n}\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp_lpympyv.php:37\nStack trace:\n#0 /tmp/tmp_lpympyv.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp_lpympyv.php on line 37\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($n) {\n    $ones = 0;\n    $n = abs($n);\n    while ($n >\
    \ 0) {\n      $ones += $n % 2;\n      $n = (int)($n / 2);\n    }\n    return [$ones,\
    \ $n];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    if ($a[0] == $b[0])\
    \ {\n      return $a[1] - $b[1];\n    }\n    return $a[0] - $b[0];\n  });\n  return\
    \ array_map(function($n) {\n    return $n[1];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpftedbckh.php:38\n\
    Stack trace:\n#0 /tmp/tmpftedbckh.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpftedbckh.php\
    \ on line 38\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr1 =\
    \ [];\n  $arr2 = [];\n  foreach ($arr as $value) {\n    $arr1[] = $value;\n  \
    \  $arr2[] = decbin($value);\n  }\n  $arr3 = [];\n  foreach ($arr2 as $value)\
    \ {\n    $arr3[] = substr_count($value, '1');\n  }\n  array_multisort($arr3, $arr1);\n\
    \  return $arr1;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3450fk57.php:32\n\
    Stack trace:\n#0 /tmp/tmp3450fk57.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp3450fk57.php\
    \ on line 32\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n    $b_ones = substr_count($b[1],\
    \ '1');\n    if ($a_ones == $b_ones) {\n      return $a[0] - $b[0];\n    }\n \
    \   return $a_ones - $b_ones;\n  });\n  return array_map(function($n) {\n    return\
    \ $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgcbew6da.php:35\n\
    Stack trace:\n#0 /tmp/tmpgcbew6da.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpgcbew6da.php\
    \ on line 35\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a = $a[1];\n    $b = $b[1];\n    $a = str_split($a);\n\
    \    $b = str_split($b);\n    $a = array_count_values($a);\n    $b = array_count_values($b);\n\
    \    $a = $a['1'] ?? 0;\n    $b = $b['1'] ?? 0;\n    if ($a === $b) {\n      return\
    \ $a[0] <=> $b[0];\n    }\n    return $a <=> $b;\n  });\n  $arr = array_map(function($n)\
    \ {\n    return $n[0];\n  }, $arr);\n  return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmpxuje7noe.php\
    \ on line 26\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmpxuje7noe.php on line 26\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmpxuje7noe.php on line 26\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmpxuje7noe.php on line 26\n\nWarning:\
    \ Trying to access array offset on value of type int in /tmp/tmpxuje7noe.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpxuje7noe.php\
    \ on line 26\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxuje7noe.php:41\n\
    Stack trace:\n#0 /tmp/tmpxuje7noe.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpxuje7noe.php\
    \ on line 41\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a = $a[1];\n    $b = $b[1];\n    $a = str_split($a);\n\
    \    $b = str_split($b);\n    $a = array_count_values($a);\n    $b = array_count_values($b);\n\
    \    if ($a['1'] == $b['1']) {\n      return $a[0] - $b[0];\n    }\n    return\
    \ $a['1'] - $b['1'];\n  });\n  $arr = array_map(function($n) {\n    return $n[0];\n\
    \  }, $arr);\n  return $arr;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmp7voladwe.php on line 24\n\n\
    Warning: Undefined array key 0 in /tmp/tmp7voladwe.php on line 24\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmp7voladwe.php:39\nStack trace:\n\
    #0 /tmp/tmp7voladwe.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp7voladwe.php\
    \ on line 39\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr2 =\
    \ [];\n  foreach ($arr as $key => $value) {\n    $arr2[$key] = decbin($value);\n\
    \  }\n  $arr3 = [];\n  foreach ($arr2 as $key => $value) {\n    $arr3[$key] =\
    \ substr_count($value, '1');\n  }\n  asort($arr3);\n  $arr4 = [];\n  foreach ($arr3\
    \ as $key => $value) {\n    $arr4[$key] = bindec($arr2[$key]);\n  }\n  return\
    \ $arr4;\n}\n\nprint_r(sort_array([1, 0, 2, 3, 4]));\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [1] => 0\n    [0] => 1\n    [2] => 2\n    [4] => 4\n    [3]\
    \ => 3\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl_ydw0as.php:35\n\
    Stack trace:\n#0 /tmp/tmpl_ydw0as.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpl_ydw0as.php\
    \ on line 35\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($x) {\n    return [$x, decbin($x)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a = substr_count($a[1], '1');\n    $b = substr_count($b[1],\
    \ '1');\n    if ($a == $b) {\n      return $a[0] - $b[0];\n    }\n    return $a\
    \ - $b;\n  });\n  return array_map(function($x) {\n    return $x[0];\n  }, $arr);\n\
    }\n\n/*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 29 in /tmp/tmpqrmn1y0p.php on
    line 29

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr2 =\
    \ [];\n  foreach ($arr as $key => $value) {\n    $arr2[$key] = decbin($value);\n\
    \  }\n  $arr3 = [];\n  foreach ($arr2 as $key => $value) {\n    $arr3[$key] =\
    \ substr_count($value, '1');\n  }\n  asort($arr3);\n  $arr4 = [];\n  foreach ($arr3\
    \ as $key => $value) {\n    $arr4[$key] = bindec($arr2[$key]);\n  }\n  return\
    \ $arr4;\n}\n\n/*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 29 in /tmp/tmpf9w4zvo4.php on
    line 29

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr_bin\
    \ = [];\n  $arr_dec = [];\n  foreach ($arr as $key => $value) {\n    $arr_bin[$key]\
    \ = decbin($value);\n    $arr_dec[$key] = $value;\n  }\n  array_multisort(array_map('strlen',\
    \ $arr_bin), SORT_ASC, $arr_bin, $arr_dec);\n  return $arr_dec;\n}\n\nprint_r(sort_array([1,\
    \ 5, 2, 3, 4]));\nprint_r(sort_array([-2, -3, -4, -5, -6]));\nprint_r(sort_array([1,\
    \ 0, 2, 3, 4]));\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n)\nArray\n(\n    [0] => -6\n    [1] => -5\n    [2] => -4\n    [3] => -3\n\
    \    [4] => -2\n)\nArray\n(\n    [0] => 0\n    [1] => 1\n    [2] => 2\n    [3]\
    \ => 3\n    [4] => 4\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4cf4gmu1.php:31\n\
    Stack trace:\n#0 /tmp/tmp4cf4gmu1.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp4cf4gmu1.php\
    \ on line 31\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr1 =\
    \ [];\n  $arr2 = [];\n  $arr3 = [];\n  foreach ($arr as $value) {\n    $arr1[]\
    \ = $value;\n    $arr2[] = decbin($value);\n    $arr3[] = substr_count($arr2[count($arr2)\
    \ - 1], '1');\n  }\n  array_multisort($arr3, $arr1);\n  return $arr1;\n}\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwtw7et63.php:30\n\
    Stack trace:\n#0 /tmp/tmpwtw7et63.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpwtw7et63.php\
    \ on line 30\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map('decbin', $arr);\n  $arr = array_map('strlen', $arr);\n  $arr = array_flip($arr);\n\
    \  ksort($arr);\n  $arr = array_flip($arr);\n  $arr = array_map('bindec', $arr);\n\
    \  return $arr;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Invalid characters passed for attempted conversion, these\
    \ have been ignored in /tmp/tmp42ga4bg8.php on line 18\n\nDeprecated: Invalid\
    \ characters passed for attempted conversion, these have been ignored in /tmp/tmp42ga4bg8.php\
    \ on line 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp42ga4bg8.php:26\n\
    Stack trace:\n#0 /tmp/tmp42ga4bg8.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp42ga4bg8.php\
    \ on line 26\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n    $b_ones = substr_count($b[1],\
    \ '1');\n    if ($a_ones == $b_ones) {\n      return $a[0] - $b[0];\n    }\n \
    \   return $a_ones - $b_ones;\n  });\n  return array_map(function($n) {\n    return\
    \ $n[0];\n  }, $arr);\n}\n\n/*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 29 in /tmp/tmp1mo3ptbk.php on
    line 29

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($x) {\n    $bin = decbin($x);\n    return [$x, substr_count($bin,\
    \ '1'), $bin];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    if ($a[1] ==\
    \ $b[1]) {\n      return $a[2] <=> $b[2];\n    }\n    return $a[1] <=> $b[1];\n\
    \  });\n  return array_map(function($x) {\n    return $x[0];\n  }, $arr);\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbaogq44e.php:34\n\
    Stack trace:\n#0 /tmp/tmpbaogq44e.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpbaogq44e.php\
    \ on line 34\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n    $arr_ones\
    \ = [];\n    $arr_dec = [];\n    foreach ($arr as $value) {\n        $arr_ones[]\
    \ = substr_count(decbin($value), '1');\n        $arr_dec[] = $value;\n    }\n\
    \    array_multisort($arr_ones, SORT_ASC, $arr_dec, SORT_ASC, $arr);\n    return\
    \ $arr;\n}\n\nprint_r(sort_array([1, 5, 2, 3, 4]));\nprint_r(sort_array([-2, -3,\
    \ -4, -5, -6]));\nprint_r(sort_array([1, 0, 2, 3, 4]));\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 4\n    [3] => 3\n    [4]\
    \ => 5\n)\nArray\n(\n    [0] => -6\n    [1] => -4\n    [2] => -5\n    [3] => -3\n\
    \    [4] => -2\n)\nArray\n(\n    [0] => 0\n    [1] => 1\n    [2] => 2\n    [3]\
    \ => 4\n    [4] => 3\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph3ky2rnd.php:32\n\
    Stack trace:\n#0 /tmp/tmph3ky2rnd.php(41): test()\n#1 {main}\n  thrown in /tmp/tmph3ky2rnd.php\
    \ on line 32\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr1 =\
    \ [];\n  $arr2 = [];\n  foreach ($arr as $key => $value) {\n    $arr1[$key] =\
    \ decbin($value);\n    $arr2[$key] = $value;\n  }\n  array_multisort(array_map('strlen',\
    \ $arr1), SORT_ASC, $arr1, $arr2);\n  return $arr2;\n}\n\n/*\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 23 in /tmp/tmpvee786js.php on
    line 23

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a1 = substr_count($a[1], '1');\n    $b1 = substr_count($b[1],\
    \ '1');\n    if ($a1 == $b1) {\n      return $a[0] - $b[0];\n    }\n    return\
    \ $a1 - $b1;\n  });\n  return array_map(function($n) {\n    return $n[0];\n  },\
    \ $arr);\n}\n\n/*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 29 in /tmp/tmp6be1y4wi.php on
    line 29

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr_ones\
    \ = array();\n  $arr_dec = array();\n  foreach ($arr as $key => $value) {\n  \
    \  $arr_ones[$key] = substr_count(decbin($value), '1');\n    $arr_dec[$key] =\
    \ $value;\n  }\n  array_multisort($arr_ones, SORT_ASC, $arr_dec, SORT_ASC, $arr);\n\
    \  return $arr;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2fh4c1b9.php:28\n\
    Stack trace:\n#0 /tmp/tmp2fh4c1b9.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp2fh4c1b9.php\
    \ on line 28\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($v) {\n    return [\n      'dec' => $v,\n      'bin' => decbin($v)\n\
    \    ];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a1 = substr_count($a['bin'],\
    \ '1');\n    $b1 = substr_count($b['bin'], '1');\n    if ($a1 == $b1) {\n    \
    \  return $a['dec'] - $b['dec'];\n    }\n    return $a1 - $b1;\n  });\n  return\
    \ array_map(function($v) {\n    return $v['dec'];\n  }, $arr);\n}\n\n/*\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 32 in /tmp/tmp5e7cmp7t.php on
    line 32

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr2 =\
    \ [];\n  foreach ($arr as $value) {\n    $arr2[] = decbin($value);\n  }\n  $arr3\
    \ = [];\n  foreach ($arr2 as $value) {\n    $arr3[] = substr_count($value, '1');\n\
    \  }\n  $arr4 = [];\n  foreach ($arr as $key => $value) {\n    $arr4[$key] = $value;\n\
    \  }\n  array_multisort($arr3, SORT_ASC, $arr4);\n  return $arr4;\n}\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwp1r24aw.php:34\n\
    Stack trace:\n#0 /tmp/tmpwp1r24aw.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpwp1r24aw.php\
    \ on line 34\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n    $ones\
    \ = [];\n    $zeros = [];\n    foreach ($arr as $value) {\n        $binary = decbin($value);\n\
    \        $count = substr_count($binary, '1');\n        if ($count == 0) {\n  \
    \          $zeros[] = $value;\n        } else {\n            $ones[$count][] =\
    \ $value;\n        }\n    }\n    ksort($ones);\n    $result = [];\n    foreach\
    \ ($ones as $key => $value) {\n        sort($value);\n        foreach ($value\
    \ as $val) {\n            $result[] = $val;\n        }\n    }\n    sort($zeros);\n\
    \    foreach ($zeros as $value) {\n        $result[] = $value;\n    }\n    return\
    \ $result;\n}\n\n/*\n    ----TESTE----\n*/\n\n$arr = [1, 5, 2, 3, 4];\necho '<pre>';\n\
    var_dump(sort_array($arr));\necho '</pre>';\nfunction candidate(...$args) {\n\
    \    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>array(5) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n  [2]=>\n  int(4)\n\
    \  [3]=>\n  int(3)\n  [4]=>\n  int(5)\n}\n</pre>\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpw2s9_0wj.php:53\nStack trace:\n#0 /tmp/tmpw2s9_0wj.php(62):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpw2s9_0wj.php on line 53\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($x) {\n    return [$x, decbin($x)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n    $b_ones = substr_count($b[1],\
    \ '1');\n    if ($a_ones == $b_ones) {\n      return $a[0] - $b[0];\n    }\n \
    \   return $a_ones - $b_ones;\n  });\n  return array_map(function($x) {\n    return\
    \ $x[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplum5ur9b.php:35\n\
    Stack trace:\n#0 /tmp/tmplum5ur9b.php(44): test()\n#1 {main}\n  thrown in /tmp/tmplum5ur9b.php\
    \ on line 35\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($x) {\n    return [$x, decbin($x)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a = $a[1];\n    $b = $b[1];\n    $a = str_split($a);\n\
    \    $b = str_split($b);\n    $a = array_count_values($a);\n    $b = array_count_values($b);\n\
    \    if ($a['1'] == $b['1']) {\n      return $a[0] - $b[0];\n    }\n    return\
    \ $a['1'] - $b['1'];\n  });\n  $arr = array_map(function($x) {\n    return $x[0];\n\
    \  }, $arr);\n  return $arr;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key 0 in /tmp/tmpxjxryn15.php on line 24\n\n\
    Warning: Undefined array key 0 in /tmp/tmpxjxryn15.php on line 24\n\nFatal error:\
    \ Uncaught Exception: Test failed! in /tmp/tmpxjxryn15.php:39\nStack trace:\n\
    #0 /tmp/tmpxjxryn15.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpxjxryn15.php\
    \ on line 39\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n    $b_ones = substr_count($b[1],\
    \ '1');\n    if ($a_ones == $b_ones) {\n      return $a[0] - $b[0];\n    }\n \
    \   return $a_ones - $b_ones;\n  });\n  return array_map(function($n) {\n    return\
    \ $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgcbew6da.php:35\n\
    Stack trace:\n#0 /tmp/tmpgcbew6da.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpgcbew6da.php\
    \ on line 35\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr_ones\
    \ = [];\n  $arr_dec = [];\n  foreach ($arr as $key => $value) {\n    $arr_ones[$key]\
    \ = substr_count(decbin($value), '1');\n    $arr_dec[$key] = $value;\n  }\n  array_multisort($arr_ones,\
    \ SORT_ASC, $arr_dec, SORT_ASC, $arr);\n  return $arr;\n}\n\n/*\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 23 in /tmp/tmpiiivcb8z.php on
    line 23

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n    $b_ones = substr_count($b[1],\
    \ '1');\n    if ($a_ones == $b_ones) {\n      return $a[0] - $b[0];\n    }\n \
    \   return $a_ones - $b_ones;\n  });\n  return array_map(function($n) {\n    return\
    \ $n[0];\n  }, $arr);\n}\n\nprint_r(sort_array([1, 5, 2, 3, 4]));\nprint_r(sort_array([-2,\
    \ -3, -4, -5, -6]));\nprint_r(sort_array([1, 0, 2, 3, 4]));\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 4\n    [3] => 3\n    [4]\
    \ => 5\n)\nArray\n(\n    [0] => -6\n    [1] => -4\n    [2] => -5\n    [3] => -3\n\
    \    [4] => -2\n)\nArray\n(\n    [0] => 0\n    [1] => 1\n    [2] => 2\n    [3]\
    \ => 4\n    [4] => 3\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxweyog99.php:38\n\
    Stack trace:\n#0 /tmp/tmpxweyog99.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpxweyog99.php\
    \ on line 38\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr_ones\
    \ = [];\n  $arr_zeros = [];\n  foreach ($arr as $value) {\n    $binary = decbin($value);\n\
    \    $ones = substr_count($binary, '1');\n    if ($ones == 0) {\n      $arr_zeros[]\
    \ = $value;\n    } else {\n      $arr_ones[$ones][] = $value;\n    }\n  }\n  ksort($arr_ones);\n\
    \  $result = [];\n  foreach ($arr_ones as $key => $value) {\n    sort($value);\n\
    \    foreach ($value as $val) {\n      $result[] = $val;\n    }\n  }\n  sort($arr_zeros);\n\
    \  foreach ($arr_zeros as $val) {\n    $result[] = $val;\n  }\n  return $result;\n\
    }\n\n/*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 39 in /tmp/tmpm419ylch.php on
    line 39

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr1 =\
    \ [];\n  foreach ($arr as $key => $value) {\n    $arr1[$key] = decbin($value);\n\
    \  }\n  foreach ($arr1 as $key => $value) {\n    $arr1[$key] = substr_count($value,\
    \ '1');\n  }\n  asort($arr1);\n  $arr2 = [];\n  foreach ($arr1 as $key => $value)\
    \ {\n    $arr2[$key] = bindec($value);\n  }\n  return $arr2;\n}\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Invalid characters passed for attempted conversion, these\
    \ have been ignored in /tmp/tmplrdwp64q.php on line 23\n\nDeprecated: Invalid\
    \ characters passed for attempted conversion, these have been ignored in /tmp/tmplrdwp64q.php\
    \ on line 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplrdwp64q.php:32\n\
    Stack trace:\n#0 /tmp/tmplrdwp64q.php(42): test()\n#1 {main}\n  thrown in /tmp/tmplrdwp64q.php\
    \ on line 32\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n    $b_ones = substr_count($b[1],\
    \ '1');\n    if ($a_ones == $b_ones) {\n      return $a[0] - $b[0];\n    }\n \
    \   return $a_ones - $b_ones;\n  });\n  return array_map(function($n) {\n    return\
    \ $n[0];\n  }, $arr);\n}\n\n/*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 29 in /tmp/tmp1mo3ptbk.php on
    line 29

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr1 =\
    \ [];\n  $arr2 = [];\n  $arr3 = [];\n  foreach ($arr as $key => $value) {\n  \
    \  $arr1[$key] = decbin($value);\n    $arr2[$key] = substr_count($arr1[$key],\
    \ '1');\n    $arr3[$key] = $value;\n  }\n  array_multisort($arr2, SORT_ASC, $arr3,\
    \ SORT_ASC, $arr);\n  return $arr;\n}\n\n/*\nfunction candidate(...$args) {\n\
    \    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 25 in /tmp/tmpgrsbyk4o.php on
    line 25

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr_ones\
    \ = [];\n  $arr_dec = [];\n  foreach ($arr as $key => $value) {\n    $arr_ones[$key]\
    \ = substr_count(decbin($value), '1');\n    $arr_dec[$key] = $value;\n  }\n  array_multisort($arr_ones,\
    \ SORT_ASC, $arr_dec, SORT_ASC, $arr);\n  return $arr;\n}\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1de_vtl5.php:28\n\
    Stack trace:\n#0 /tmp/tmp1de_vtl5.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp1de_vtl5.php\
    \ on line 28\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr1 =\
    \ [];\n  $arr2 = [];\n  $arr3 = [];\n  foreach ($arr as $value) {\n    $arr1[]\
    \ = decbin($value);\n  }\n  foreach ($arr1 as $key => $value) {\n    $arr2[$key]\
    \ = substr_count($value, '1');\n  }\n  asort($arr2);\n  foreach ($arr2 as $key\
    \ => $value) {\n    $arr3[] = $arr[$key];\n  }\n  return $arr3;\n}\nprint_r(sort_array([1,\
    \ 5, 2, 3, 4]));\nprint_r(sort_array([-2, -3, -4, -5, -6]));\nprint_r(sort_array([1,\
    \ 0, 2, 3, 4]));\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 4\n    [3] => 5\n    [4]\
    \ => 3\n)\nArray\n(\n    [0] => -4\n    [1] => -6\n    [2] => -2\n    [3] => -3\n\
    \    [4] => -5\n)\nArray\n(\n    [0] => 0\n    [1] => 1\n    [2] => 2\n    [3]\
    \ => 4\n    [4] => 3\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ie_49xn.php:36\n\
    Stack trace:\n#0 /tmp/tmp8ie_49xn.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp8ie_49xn.php\
    \ on line 36\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr1 =\
    \ [];\n  foreach ($arr as $key => $value) {\n    $arr1[$key] = decbin($value);\n\
    \  }\n  foreach ($arr1 as $key => $value) {\n    $arr1[$key] = substr_count($value,\
    \ 1);\n  }\n  array_multisort($arr1, $arr);\n  return $arr;\n}\n\n/*\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 24 in /tmp/tmp4f9t8at3.php on
    line 24

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr1 =\
    \ array();\n  $arr2 = array();\n  foreach ($arr as $key => $value) {\n    $arr1[$key]\
    \ = decbin($value);\n    $arr2[$key] = $value;\n  }\n  array_multisort(array_map('strlen',\
    \ $arr1), SORT_ASC, $arr1, $arr2);\n  return $arr2;\n}\nprint_r(sort_array(array(1,\
    \ 5, 2, 3, 4)));\nprint_r(sort_array(array(-2, -3, -4, -5, -6)));\nprint_r(sort_array(array(1,\
    \ 0, 2, 3, 4)));\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n    [4]\
    \ => 5\n)\nArray\n(\n    [0] => -6\n    [1] => -5\n    [2] => -4\n    [3] => -3\n\
    \    [4] => -2\n)\nArray\n(\n    [0] => 0\n    [1] => 1\n    [2] => 2\n    [3]\
    \ => 3\n    [4] => 4\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgltwj9gu.php:30\n\
    Stack trace:\n#0 /tmp/tmpgltwj9gu.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpgltwj9gu.php\
    \ on line 30\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($n) {\n    $ones = substr_count(decbin($n), '1');\n    return\
    \ [$n, $ones];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    if ($a[1] ==\
    \ $b[1]) {\n      return $a[0] - $b[0];\n    }\n    return $a[1] - $b[1];\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\n/*\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 28 in /tmp/tmpkn1yp_11.php on
    line 28

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n    $arr_ones\
    \ = [];\n    $arr_decimal = [];\n    foreach ($arr as $value) {\n        $arr_ones[]\
    \ = substr_count(decbin($value), '1');\n        $arr_decimal[] = $value;\n   \
    \ }\n    array_multisort($arr_ones, SORT_ASC, $arr_decimal, SORT_ASC, $arr);\n\
    \    return $arr;\n}\n\n/*\n    ----TESTE----\n*/\n\n$arr = [1, 5, 2, 3, 4];\n\
    echo '<pre>';\nprint_r(sort_array($arr));\necho '</pre>';\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 4\n    [3] => 3\n\
    \    [4] => 5\n)\n</pre>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdpks8rbs.php:37\n\
    Stack trace:\n#0 /tmp/tmpdpks8rbs.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpdpks8rbs.php\
    \ on line 37\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a = $a[1];\n    $b = $b[1];\n    $a = str_split($a);\n\
    \    $b = str_split($b);\n    $a = array_count_values($a);\n    $b = array_count_values($b);\n\
    \    $a = $a['1'] ?? 0;\n    $b = $b['1'] ?? 0;\n    if ($a === $b) {\n      return\
    \ $a[0] <=> $b[0];\n    }\n    return $a <=> $b;\n  });\n  $arr = array_map(function($n)\
    \ {\n    return $n[0];\n  }, $arr);\n  return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmpxuje7noe.php\
    \ on line 26\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmpxuje7noe.php on line 26\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmpxuje7noe.php on line 26\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmpxuje7noe.php on line 26\n\nWarning:\
    \ Trying to access array offset on value of type int in /tmp/tmpxuje7noe.php on\
    \ line 26\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpxuje7noe.php\
    \ on line 26\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxuje7noe.php:41\n\
    Stack trace:\n#0 /tmp/tmpxuje7noe.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpxuje7noe.php\
    \ on line 41\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n    $b_ones = substr_count($b[1],\
    \ '1');\n    if ($a_ones == $b_ones) {\n      return $a[0] - $b[0];\n    }\n \
    \   return $a_ones - $b_ones;\n  });\n  return array_map(function($n) {\n    return\
    \ $n[0];\n  }, $arr);\n}\n\n/*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 29 in /tmp/tmp1mo3ptbk.php on
    line 29

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr_bin\
    \ = [];\n  $arr_dec = [];\n  foreach ($arr as $key => $value) {\n    $arr_bin[$key]\
    \ = decbin($value);\n    $arr_dec[$key] = $value;\n  }\n  array_multisort(array_map('substr_count',\
    \ $arr_bin, array_fill(0, count($arr_bin), '1')), SORT_ASC, $arr_dec);\n  return\
    \ $arr_dec;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgx1axcrv.php:29\n\
    Stack trace:\n#0 /tmp/tmpgx1axcrv.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpgx1axcrv.php\
    \ on line 29\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr2 =\
    \ [];\n  foreach ($arr as $key => $value) {\n    $arr2[$key] = decbin($value);\n\
    \  }\n  $arr3 = [];\n  foreach ($arr2 as $key => $value) {\n    $arr3[$key] =\
    \ substr_count($value, '1');\n  }\n  asort($arr3);\n  $arr4 = [];\n  foreach ($arr3\
    \ as $key => $value) {\n    $arr4[$key] = bindec($arr2[$key]);\n  }\n  return\
    \ $arr4;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpggytcwf6.php:33\n\
    Stack trace:\n#0 /tmp/tmpggytcwf6.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpggytcwf6.php\
    \ on line 33\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a = str_split($a[1]);\n    $b = str_split($b[1]);\n\
    \    $a = array_count_values($a);\n    $b = array_count_values($b);\n    if ($a[1]\
    \ == $b[1]) {\n      return $a[0] - $b[0];\n    }\n    return $a[1] - $b[1];\n\
    \  });\n  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\
    \n/*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 31 in /tmp/tmpy1z64fk5.php on
    line 31

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n    $arr\
    \ = array_map(function($n) {\n        return [$n, decbin($n)];\n    }, $arr);\n\
    \    usort($arr, function($a, $b) {\n        $a1 = substr_count($a[1], '1');\n\
    \        $b1 = substr_count($b[1], '1');\n        if ($a1 == $b1) {\n        \
    \    return $a[0] - $b[0];\n        }\n        return $a1 - $b1;\n    });\n  \
    \  return array_map(function($n) {\n        return $n[0];\n    }, $arr);\n}\n\n\
    /*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 29 in /tmp/tmpda_b1923.php on
    line 29

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map('decbin', $arr);\n  $arr = array_map('strlen', $arr);\n  $arr = array_flip($arr);\n\
    \  $arr = array_map('array_keys', $arr);\n  $arr = array_map('array_map', array_fill(0,\
    \ count($arr), 'decbin'), $arr);\n  $arr = array_map('array_map', array_fill(0,\
    \ count($arr), 'bindec'), $arr);\n  $arr = array_map('array_values', $arr);\n\
    \  $arr = array_map('array_map', array_fill(0, count($arr), 'intval'), $arr);\n\
    \  $arr = array_map('array_values', $arr);\n  $arr = array_map('array_merge',\
    \ $arr);\n  $arr = array_map('array_unique', $arr);\n  $arr = array_map('array_values',\
    \ $arr);\n  $arr = array_map('array_merge', $arr);\n  $arr = array_map('array_unique',\
    \ $arr);\n  $arr = array_map('array_values', $arr);\n  $arr = array_map('array_merge',\
    \ $arr);\n  $arr = array_map('array_unique', $arr);\n  $arr = array_map('array_values',\
    \ $arr);\n  $arr = array_map('array_merge', $arr);\n  $arr = array_map('array_unique',\
    \ $arr);\n  $arr = array_map('array_values', $arr);\n  $arr = array_map('array_merge',\
    \ $arr);\n  $arr = array_map('array_unique', $arr);\n  $arr = array_map('array_values',\
    \ $arr);\n  $arr = array_map('array_merge', $arr);\n  $arr = array_map('array_unique',\
    \ $arr);\n  $arr = array_map('array_values', $arr);\n  $arr = array_map('array_merge',\
    \ $arr);\n  $arr = array_map('array_unique', $arr);\n  $arr =\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmp8hfzpn_q.php on line 43

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n    $arr\
    \ = array_map(function($n) {\n        return [$n, decbin($n)];\n    }, $arr);\n\
    \    usort($arr, function($a, $b) {\n        $a_ones = substr_count($a[1], '1');\n\
    \        $b_ones = substr_count($b[1], '1');\n        if ($a_ones == $b_ones)\
    \ {\n            return $a[0] - $b[0];\n        }\n        return $a_ones - $b_ones;\n\
    \    });\n    return array_map(function($n) {\n        return $n[0];\n    }, $arr);\n\
    }\n\n/*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 29 in /tmp/tmpr7bk__zy.php on
    line 29

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($x) {\n    $bin = decbin($x);\n    $ones = substr_count($bin,\
    \ '1');\n    return [$x, $ones];\n  }, $arr);\n  usort($arr, function($a, $b)\
    \ {\n    if ($a[1] == $b[1]) {\n      return $a[0] - $b[0];\n    }\n    return\
    \ $a[1] - $b[1];\n  });\n  return array_map(function($x) {\n    return $x[0];\n\
    \  }, $arr);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3koxliod.php:35\n\
    Stack trace:\n#0 /tmp/tmp3koxliod.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp3koxliod.php\
    \ on line 35\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr2 =\
    \ array();\n  foreach ($arr as $key => $value) {\n    $arr2[$key] = decbin($value);\n\
    \  }\n  foreach ($arr2 as $key => $value) {\n    $arr2[$key] = substr_count($value,\
    \ '1');\n  }\n  asort($arr2);\n  foreach ($arr2 as $key => $value) {\n    $arr2[$key]\
    \ = $arr[$key];\n  }\n  return $arr2;\n}\nfunction candidate(...$args) {\n   \
    \ return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpom4xbsz_.php:31\n\
    Stack trace:\n#0 /tmp/tmpom4xbsz_.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpom4xbsz_.php\
    \ on line 31\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($x) {\n    return [$x, decbin($x)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n    $b_ones = substr_count($b[1],\
    \ '1');\n    if ($a_ones == $b_ones) {\n      return $a[0] - $b[0];\n    }\n \
    \   return $a_ones - $b_ones;\n  });\n  return array_map(function($x) {\n    return\
    \ $x[0];\n  }, $arr);\n}\n\n/*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 29 in /tmp/tmpmo4apf9h.php on
    line 29

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a1 = substr_count($a[1], '1');\n    $b1 = substr_count($b[1],\
    \ '1');\n    if ($a1 == $b1) {\n      return $a[0] - $b[0];\n    }\n    return\
    \ $a1 - $b1;\n  });\n  return array_map(function($n) {\n    return $n[0];\n  },\
    \ $arr);\n}\n\n/*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 29 in /tmp/tmp6be1y4wi.php on
    line 29

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n    $arr1\
    \ = [];\n    $arr2 = [];\n    foreach ($arr as $value) {\n        $arr1[] = decbin($value);\n\
    \    }\n    foreach ($arr1 as $key => $value) {\n        $arr2[$key] = substr_count($value,\
    \ '1');\n    }\n    array_multisort($arr2, SORT_ASC, $arr);\n    return $arr;\n\
    }\n\n/*\n    ----TESTE----\n*/\n\n$arr = [1, 0, 2, 3, 4];\nprint_r(sort_array($arr));\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 0\n    [1] => 1\n    [2] => 2\n    [3] => 4\n    [4]\
    \ => 3\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps654k7mk.php:37\n\
    Stack trace:\n#0 /tmp/tmps654k7mk.php(46): test()\n#1 {main}\n  thrown in /tmp/tmps654k7mk.php\
    \ on line 37\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr1 =\
    \ [];\n  $arr2 = [];\n  foreach ($arr as $key => $value) {\n    $arr1[$key] =\
    \ decbin($value);\n    $arr2[$key] = $value;\n  }\n  array_multisort(array_map('strlen',\
    \ $arr1), SORT_ASC, $arr1, $arr2);\n  return $arr2;\n}\n\n/*\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 23 in /tmp/tmpvee786js.php on
    line 23

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr_bin\
    \ = [];\n  $arr_dec = [];\n  foreach ($arr as $key => $value) {\n    $arr_bin[$key]\
    \ = decbin($value);\n    $arr_dec[$key] = $value;\n  }\n  array_multisort(array_map('strlen',\
    \ $arr_bin), SORT_ASC, $arr_bin, $arr_dec);\n  return $arr_dec;\n}\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2nxvw5mr.php:27\n\
    Stack trace:\n#0 /tmp/tmp2nxvw5mr.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp2nxvw5mr.php\
    \ on line 27\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr_ones\
    \ = [];\n  $arr_dec = [];\n  foreach ($arr as $key => $value) {\n    $arr_ones[$key]\
    \ = substr_count(decbin($value), '1');\n    $arr_dec[$key] = $value;\n  }\n  array_multisort($arr_ones,\
    \ SORT_ASC, $arr_dec, SORT_ASC, $arr);\n  return $arr;\n}\n\n/*\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 23 in /tmp/tmpiiivcb8z.php on
    line 23

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n    $arr_bin\
    \ = [];\n    $arr_dec = [];\n    foreach ($arr as $value) {\n        $arr_bin[]\
    \ = decbin($value);\n        $arr_dec[] = $value;\n    }\n    array_multisort(array_map('strlen',\
    \ $arr_bin), SORT_ASC, $arr_bin, $arr_dec);\n    return $arr_dec;\n}\n\n/*\n \
    \   ----TESTE----\n*/\n\n$arr = array(1, 5, 2, 3, 4);\necho '<pre>';\nvar_dump(sort_array($arr));\n\
    echo '</pre>';\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "<pre>array(5) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n  [2]=>\n  int(3)\n\
    \  [3]=>\n  int(4)\n  [4]=>\n  int(5)\n}\n</pre>\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmp9hs13sda.php:36\nStack trace:\n#0 /tmp/tmp9hs13sda.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp9hs13sda.php on line 36\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr1 =\
    \ [];\n  $arr2 = [];\n  foreach ($arr as $value) {\n    $arr1[] = decbin($value);\n\
    \  }\n  foreach ($arr1 as $key => $value) {\n    $arr2[$key] = substr_count($value,\
    \ '1');\n  }\n  array_multisort($arr2, SORT_ASC, $arr);\n  return $arr;\n}\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxvty6cp7.php:30\n\
    Stack trace:\n#0 /tmp/tmpxvty6cp7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpxvty6cp7.php\
    \ on line 30\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a = $a[1];\n    $b = $b[1];\n    $a = strlen($a) -\
    \ substr_count($a, '0');\n    $b = strlen($b) - substr_count($b, '0');\n    if\
    \ ($a == $b) {\n      return $a[0] - $b[0];\n    }\n    return $a - $b;\n  });\n\
    \  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\n/*\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 31 in /tmp/tmprj8_mfpk.php on
    line 31

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr_ones\
    \ = [];\n  $arr_dec = [];\n  foreach ($arr as $key => $value) {\n    $arr_ones[$key]\
    \ = substr_count(decbin($value), '1');\n    $arr_dec[$key] = $value;\n  }\n  array_multisort($arr_ones,\
    \ SORT_ASC, $arr_dec, SORT_ASC, $arr);\n  return $arr;\n}\n\n/*\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 23 in /tmp/tmpiiivcb8z.php on
    line 23

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n    $b_ones = substr_count($b[1],\
    \ '1');\n    if ($a_ones == $b_ones) {\n      return $a[0] - $b[0];\n    }\n \
    \   return $a_ones - $b_ones;\n  });\n  return array_map(function($n) {\n    return\
    \ $n[0];\n  }, $arr);\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptb1tlmya.php:34\n\
    Stack trace:\n#0 /tmp/tmptb1tlmya.php(43): test()\n#1 {main}\n  thrown in /tmp/tmptb1tlmya.php\
    \ on line 34\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a1 = substr_count($a[1], '1');\n    $b1 = substr_count($b[1],\
    \ '1');\n    if ($a1 == $b1) {\n      return $a[0] - $b[0];\n    }\n    return\
    \ $a1 - $b1;\n  });\n  return array_map(function($n) {\n    return $n[0];\n  },\
    \ $arr);\n}\n\n/*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 29 in /tmp/tmp6be1y4wi.php on
    line 29

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr_bin\
    \ = array();\n  $arr_dec = array();\n  foreach ($arr as $value) {\n    $arr_bin[]\
    \ = decbin($value);\n    $arr_dec[] = $value;\n  }\n  array_multisort(array_map('strlen',\
    \ $arr_bin), SORT_ASC, $arr_bin, $arr_dec);\n  return $arr_dec;\n}\n\n/*\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 23 in /tmp/tmpjfkrddpq.php on
    line 23

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr_ones\
    \ = [];\n  foreach ($arr as $value) {\n    $arr_ones[] = substr_count(decbin($value),\
    \ '1');\n  }\n  array_multisort($arr_ones, $arr);\n  return $arr;\n}\n\n/*\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 21 in /tmp/tmpygzgvqel.php on
    line 21

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n    $b_ones = substr_count($b[1],\
    \ '1');\n    if ($a_ones == $b_ones) {\n      return $a[0] - $b[0];\n    }\n \
    \   return $a_ones - $b_ones;\n  });\n  return array_map(function($n) {\n    return\
    \ $n[0];\n  }, $arr);\n}\n\n/*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 29 in /tmp/tmp1mo3ptbk.php on
    line 29

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a = $a[1];\n    $b = $b[1];\n    $a = strlen($a) -\
    \ strlen($b);\n    if ($a === 0) {\n      $a = substr_count($a, '1') - substr_count($b,\
    \ '1');\n      if ($a === 0) {\n        $a = $a[0] - $b[0];\n      }\n    }\n\
    \    return $a;\n  });\n  return array_map(function($n) {\n    return $n[0];\n\
    \  }, $arr);\n}\n\n/*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 33 in /tmp/tmpms13_q1d.php on
    line 33

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($x) {\n    $ones = substr_count(decbin($x), '1');\n    return\
    \ [$x, $ones];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    if ($a[1] ==\
    \ $b[1]) {\n      return $a[0] - $b[0];\n    }\n    return $a[1] - $b[1];\n  });\n\
    \  return array_map(function($x) {\n    return $x[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc_fmggba.php:34\n\
    Stack trace:\n#0 /tmp/tmpc_fmggba.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpc_fmggba.php\
    \ on line 34\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n    $arr_ones\
    \ = [];\n    $arr_dec = [];\n    foreach ($arr as $value) {\n        $arr_ones[]\
    \ = substr_count(decbin($value), '1');\n        $arr_dec[] = $value;\n    }\n\
    \    array_multisort($arr_ones, SORT_ASC, $arr_dec, SORT_ASC, $arr);\n    return\
    \ $arr;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6g43y9ss.php:28\n\
    Stack trace:\n#0 /tmp/tmp6g43y9ss.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp6g43y9ss.php\
    \ on line 28\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map('decbin', $arr);\n  $arr = array_map('strlen', $arr);\n  $arr = array_combine(range(0,\
    \ count($arr) - 1), $arr);\n  asort($arr);\n  $arr = array_keys($arr);\n  return\
    \ $arr;\n}\n\n/*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 21 in /tmp/tmpg28a1294.php on
    line 21

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n    $arr2\
    \ = [];\n    foreach ($arr as $key => $value) {\n        $arr2[$key] = decbin($value);\n\
    \    }\n    $arr3 = [];\n    foreach ($arr2 as $key => $value) {\n        $arr3[$key]\
    \ = substr_count($value, '1');\n    }\n    asort($arr3);\n    $arr4 = [];\n  \
    \  foreach ($arr3 as $key => $value) {\n        $arr4[$key] = bindec($arr2[$key]);\n\
    \    }\n    return $arr4;\n}\n\n/*\n    ----TESTE----\n*/\n\n$arr = array(1, 5,\
    \ 2, 3, 4);\necho \"<pre>\";\nprint_r(sort_array($arr));\necho \"</pre>\";\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "<pre>Array\n(\n    [0] => 1\n    [2] => 2\n    [4] => 4\n    [1] => 5\n\
    \    [3] => 3\n)\n</pre>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8bxaea6l.php:42\n\
    Stack trace:\n#0 /tmp/tmp8bxaea6l.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp8bxaea6l.php\
    \ on line 42\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr_bin\
    \ = [];\n  foreach ($arr as $key => $value) {\n    $arr_bin[$key] = decbin($value);\n\
    \  }\n  $arr_bin_count = [];\n  foreach ($arr_bin as $key => $value) {\n    $arr_bin_count[$key]\
    \ = substr_count($value, '1');\n  }\n  asort($arr_bin_count);\n  $arr_bin_count_keys\
    \ = array_keys($arr_bin_count);\n  $arr_bin_count_values = array_values($arr_bin_count);\n\
    \  $arr_bin_count_keys_values = array_combine($arr_bin_count_keys, $arr_bin_count_values);\n\
    \  $arr_bin_count_keys_values_keys = array_keys($arr_bin_count_keys_values);\n\
    \  $arr_bin_count_keys_values_values = array_values($arr_bin_count_keys_values);\n\
    \  $arr_bin_count_keys_values_keys_values = array_combine($arr_bin_count_keys_values_keys,\
    \ $arr_bin_count_keys_values_values);\n  $arr_bin_count_keys_values_keys_values_keys\
    \ = array_keys($arr_bin_count_keys_values_keys_values);\n  $arr_bin_count_keys_values_keys_values_values\
    \ = array_values($arr_bin_count_keys_values_keys_values);\n  $arr_bin_count_keys_values_keys_values_keys_values\
    \ = array_combine($arr_bin_count_keys_values_keys_values_keys, $arr_bin_count_keys_values_keys_values_values);\n\
    \  $arr_bin_count_keys_values_keys_values_keys_values_keys = array_keys($arr_bin_count_keys_values_keys_values_keys_values);\n\
    \  $arr_bin_count_keys_values_keys_values_keys_values_values = array_values($arr_bin_count_keys_values_keys_values_keys_values);\n\
    \  $arr\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmp8wmpku3w.php
    on line 34

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $ones =\
    \ [];\n  foreach ($arr as $key => $value) {\n    $ones[$key] = substr_count(decbin($value),\
    \ '1');\n  }\n  array_multisort($ones, SORT_ASC, $arr);\n  return $arr;\n}\n\n\
    /*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 21 in /tmp/tmp0h__8udx.php on
    line 21

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n    $arr\
    \ = array_map(function($num) {\n        return [$num, decbin($num)];\n    }, $arr);\n\
    \    usort($arr, function($a, $b) {\n        $a = $a[1];\n        $b = $b[1];\n\
    \        $a = str_split($a);\n        $b = str_split($b);\n        $a = array_count_values($a);\n\
    \        $b = array_count_values($b);\n        if(isset($a['1']) && isset($b['1']))\
    \ {\n            if($a['1'] == $b['1']) {\n                return $a[0] - $b[0];\n\
    \            }\n            return $a['1'] - $b['1'];\n        }\n        if(isset($a['1']))\
    \ {\n            return -1;\n        }\n        if(isset($b['1'])) {\n       \
    \     return 1;\n        }\n        return $a[0] - $b[0];\n    });\n    $arr =\
    \ array_map(function($num) {\n        return $num[0];\n    }, $arr);\n    return\
    \ $arr;\n}\n\n/*\n    ----TESTE----\n*/\n\n$teste = [1, 5, 2, 3, 4];\n$teste2\
    \ = [-2, -3, -4, -5, -6];\n$teste3 = [1, 0, 2, 3, 4];\n\necho \"<pre>\";\nvar_dump(sort_array($teste));\n\
    echo \"</pre>\";\n\necho \"<pre>\";\nvar_dump(sort_array($teste2));\necho \"</pre>\"\
    ;\n\necho \"<pre>\";\nvar_dump(sort_array($teste3));\necho \"</pre>\";\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "<pre>\nWarning: Undefined array key 0 in /tmp/tmpykgh7tf5.php on line 25\n\
    \nWarning: Undefined array key 0 in /tmp/tmpykgh7tf5.php on line 25\narray(5)\
    \ {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n  [2]=>\n  int(4)\n  [3]=>\n  int(3)\n\
    \  [4]=>\n  int(5)\n}\n</pre><pre>array(5) {\n  [0]=>\n  int(-4)\n  [1]=>\n  int(-6)\n\
    \  [2]=>\n  int(-2)\n  [3]=>\n  int(-3)\n  [4]=>\n  int(-5)\n}\n</pre><pre>\n\
    Warning: Undefined array key 0 in /tmp/tmpykgh7tf5.php on line 25\narray(5) {\n\
    \  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n  [2]=>\n  int(4)\n  [3]=>\n  int(3)\n\
    \  [4]=>\n  int(0)\n}\n</pre>\nWarning: Undefined array key 0 in /tmp/tmpykgh7tf5.php\
    \ on line 25\n\nWarning: Undefined array key 0 in /tmp/tmpykgh7tf5.php on line\
    \ 25\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpykgh7tf5.php:68\n\
    Stack trace:\n#0 /tmp/tmpykgh7tf5.php(77): test()\n#1 {main}\n  thrown in /tmp/tmpykgh7tf5.php\
    \ on line 68\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($x) {\n    return [$x, decbin($x)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a = substr_count($a[1], '1');\n    $b = substr_count($b[1],\
    \ '1');\n    if ($a == $b) {\n      return $a[0] - $b[0];\n    }\n    return $a\
    \ - $b;\n  });\n  return array_map(function($x) {\n    return $x[0];\n  }, $arr);\n\
    }\n\n/*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 29 in /tmp/tmpqrmn1y0p.php on
    line 29

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr_bin\
    \ = [];\n  $arr_dec = [];\n  foreach ($arr as $key => $value) {\n    $arr_bin[$key]\
    \ = decbin($value);\n    $arr_dec[$key] = $value;\n  }\n  array_multisort(array_map('strlen',\
    \ $arr_bin), SORT_ASC, $arr_bin, $arr_dec);\n  return $arr_dec;\n}\n\n/*\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 23 in /tmp/tmp95nkjo7v.php on
    line 23

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a = $a[1];\n    $b = $b[1];\n    $a = str_split($a);\n\
    \    $b = str_split($b);\n    $a = array_sum($a);\n    $b = array_sum($b);\n \
    \   if ($a == $b) {\n      return $a[0] - $b[0];\n    }\n    return $a - $b;\n\
    \  });\n  $arr = array_map(function($n) {\n    return $n[0];\n  }, $arr);\n  return\
    \ $arr;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Trying to access array offset on value of type int in /tmp/tmpbd3slm8x.php\
    \ on line 24\n\nWarning: Trying to access array offset on value of type int in\
    \ /tmp/tmpbd3slm8x.php on line 24\n\nWarning: Trying to access array offset on\
    \ value of type int in /tmp/tmpbd3slm8x.php on line 24\n\nWarning: Trying to access\
    \ array offset on value of type int in /tmp/tmpbd3slm8x.php on line 24\n\nWarning:\
    \ Trying to access array offset on value of type int in /tmp/tmpbd3slm8x.php on\
    \ line 24\n\nWarning: Trying to access array offset on value of type int in /tmp/tmpbd3slm8x.php\
    \ on line 24\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbd3slm8x.php:39\n\
    Stack trace:\n#0 /tmp/tmpbd3slm8x.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpbd3slm8x.php\
    \ on line 39\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    return substr_count($a[1], '1') == substr_count($b[1],\
    \ '1') ?\n      $a[0] - $b[0] : substr_count($a[1], '1') - substr_count($b[1],\
    \ '1');\n  });\n  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n\
    }\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa2tf6m9p.php:30\n\
    Stack trace:\n#0 /tmp/tmpa2tf6m9p.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpa2tf6m9p.php\
    \ on line 30\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr2 =\
    \ [];\n  foreach ($arr as $value) {\n    $arr2[] = decbin($value);\n  }\n  $arr3\
    \ = [];\n  foreach ($arr2 as $value) {\n    $arr3[] = substr_count($value, '1');\n\
    \  }\n  array_multisort($arr3, $arr);\n  return $arr;\n}\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqvay4vbn.php:30\n\
    Stack trace:\n#0 /tmp/tmpqvay4vbn.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpqvay4vbn.php\
    \ on line 30\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr2 =\
    \ array();\n  foreach ($arr as $value) {\n    $arr2[] = decbin($value);\n  }\n\
    \  $arr3 = array();\n  foreach ($arr2 as $value) {\n    $arr3[] = substr_count($value,\
    \ '1');\n  }\n  $arr4 = array();\n  foreach ($arr3 as $key => $value) {\n    $arr4[$value][]\
    \ = $arr[$key];\n  }\n  ksort($arr4);\n  $arr5 = array();\n  foreach ($arr4 as\
    \ $value) {\n    foreach ($value as $value2) {\n      $arr5[] = $value2;\n   \
    \ }\n  }\n  return $arr5;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_1vs4jkp.php:39\n\
    Stack trace:\n#0 /tmp/tmp_1vs4jkp.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp_1vs4jkp.php\
    \ on line 39\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr2 =\
    \ [];\n  foreach ($arr as $value) {\n    $arr2[] = decbin($value);\n  }\n  $arr3\
    \ = [];\n  foreach ($arr2 as $value) {\n    $arr3[] = substr_count($value, '1');\n\
    \  }\n  $arr4 = [];\n  foreach ($arr3 as $value) {\n    $arr4[] = $value;\n  }\n\
    \  $arr5 = [];\n  foreach ($arr as $value) {\n    $arr5[] = $value;\n  }\n  $arr6\
    \ = [];\n  foreach ($arr4 as $key => $value) {\n    $arr6[$value][] = $arr5[$key];\n\
    \  }\n  ksort($arr6);\n  $arr7 = [];\n  foreach ($arr6 as $value) {\n    foreach\
    \ ($value as $value2) {\n      $arr7[] = $value2;\n    }\n  }\n  return $arr7;\n\
    }\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm_oupxfw.php:47\n\
    Stack trace:\n#0 /tmp/tmpm_oupxfw.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpm_oupxfw.php\
    \ on line 47\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($x) {\n    $bin = decbin($x);\n    $bin = str_pad($bin, 32,\
    \ '0', STR_PAD_LEFT);\n    return [$x, substr_count($bin, '1')];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    if ($a[1] == $b[1]) {\n      return $a[0]\
    \ - $b[0];\n    }\n    return $a[1] - $b[1];\n  });\n  return array_map(function($x)\
    \ {\n    return $x[0];\n  }, $arr);\n}\n\n/*\nfunction candidate(...$args) {\n\
    \    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 29 in /tmp/tmps_dj7onr.php on
    line 29

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr_ones\
    \ = [];\n  $arr_dec = [];\n  foreach ($arr as $key => $value) {\n    $arr_ones[$key]\
    \ = substr_count(decbin($value), '1');\n    $arr_dec[$key] = $value;\n  }\n  array_multisort($arr_ones,\
    \ SORT_ASC, $arr_dec, SORT_ASC, $arr);\n  return $arr;\n}\n\n/*\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 23 in /tmp/tmpiiivcb8z.php on
    line 23

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr2 =\
    \ array();\n  $arr3 = array();\n  foreach ($arr as $key => $value) {\n    $arr2[$key]\
    \ = decbin($value);\n    $arr3[$key] = substr_count($arr2[$key], '1');\n  }\n\
    \  array_multisort($arr3, SORT_ASC, $arr);\n  return $arr;\n}\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppyuh0wh_.php:28\n\
    Stack trace:\n#0 /tmp/tmppyuh0wh_.php(37): test()\n#1 {main}\n  thrown in /tmp/tmppyuh0wh_.php\
    \ on line 28\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr1 =\
    \ [];\n  $arr2 = [];\n  foreach ($arr as $value) {\n    $arr1[] = decbin($value);\n\
    \  }\n  foreach ($arr1 as $key => $value) {\n    $arr2[$key] = substr_count($value,\
    \ '1');\n  }\n  array_multisort($arr2, SORT_ASC, $arr);\n  return $arr;\n}\n\n\
    /*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 25 in /tmp/tmprr3u9_n5.php on
    line 25

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a1 = substr_count($a[1], '1');\n    $b1 = substr_count($b[1],\
    \ '1');\n    if ($a1 == $b1) {\n      return $a[0] - $b[0];\n    }\n    return\
    \ $a1 - $b1;\n  });\n  return array_map(function($n) {\n    return $n[0];\n  },\
    \ $arr);\n}\n\n/*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 29 in /tmp/tmp6be1y4wi.php on
    line 29

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr2 =\
    \ [];\n  foreach ($arr as $key => $value) {\n    $arr2[$key] = decbin($value);\n\
    \  }\n  foreach ($arr2 as $key => $value) {\n    $arr2[$key] = substr_count($value,\
    \ '1');\n  }\n  asort($arr2);\n  foreach ($arr2 as $key => $value) {\n    $arr2[$key]\
    \ = $arr[$key];\n  }\n  return $arr2;\n}\nprint_r(sort_array([1, 5, 2, 3, 4]));\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "Array\n(\n    [0] => 1\n    [2] => 2\n    [4] => 4\n    [1] => 5\n    [3]\
    \ => 3\n)\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpad0fsoc2.php:32\n\
    Stack trace:\n#0 /tmp/tmpad0fsoc2.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpad0fsoc2.php\
    \ on line 32\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr1 =\
    \ [];\n  $arr2 = [];\n  foreach ($arr as $key => $value) {\n    $arr1[$key] =\
    \ decbin($value);\n    $arr2[$key] = $value;\n  }\n  array_multisort(array_map('strlen',\
    \ $arr1), SORT_ASC, $arr1, $arr2);\n  return $arr2;\n}\n\n/*\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 23 in /tmp/tmpvee786js.php on
    line 23

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n    $bin\
    \ = [];\n    foreach ($arr as $key => $value) {\n        $bin[$key] = decbin($value);\n\
    \    }\n    $count = [];\n    foreach ($bin as $key => $value) {\n        $count[$key]\
    \ = substr_count($value, '1');\n    }\n    array_multisort($count, SORT_ASC, $arr);\n\
    \    return $arr;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc6_ah4vm.php:30\n\
    Stack trace:\n#0 /tmp/tmpc6_ah4vm.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpc6_ah4vm.php\
    \ on line 30\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n    $arr\
    \ = array_map(function($n) {\n        return [$n, decbin($n)];\n    }, $arr);\n\
    \    usort($arr, function($a, $b) {\n        $a_ones = substr_count($a[1], '1');\n\
    \        $b_ones = substr_count($b[1], '1');\n        if ($a_ones == $b_ones)\
    \ {\n            return $a[0] - $b[0];\n        }\n        return $a_ones - $b_ones;\n\
    \    });\n    return array_map(function($n) {\n        return $n[0];\n    }, $arr);\n\
    }\n\n/*\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 29 in /tmp/tmpr7bk__zy.php on
    line 29

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr =\
    \ array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    $a = $a[1];\n    $b = $b[1];\n    $a = substr_count($a,\
    \ '1');\n    $b = substr_count($b, '1');\n    if ($a == $b) {\n      return $a[0]\
    \ - $b[0];\n    }\n    return $a - $b;\n  });\n  return array_map(function($n)\
    \ {\n    return $n[0];\n  }, $arr);\n}\n\n/*\nfunction candidate(...$args) {\n\
    \    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 31 in /tmp/tmpu9hmlofq.php on
    line 31

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* In this Kata, you have to sort an array of non-negative integers\
    \ according to\nnumber of ones in their binary representation in ascending order.\n\
    For similar number of ones, sort based on decimal value.\nIt must be implemented\
    \ like this:\n>>> sort_array(array(1, 5, 2, 3, 4))\narray(1, 2, 3, 4, 5)\n>>>\
    \ sort_array(array(-2, -3, -4, -5, -6))\narray(-6, -5, -4, -3, -2)\n>>> sort_array(array(1,\
    \ 0, 2, 3, 4))\narray(0, 1, 2, 3, 4)*/\nfunction sort_array($arr) {\n  $arr1 =\
    \ [];\n  $arr2 = [];\n  $arr3 = [];\n  foreach ($arr as $value) {\n    $arr1[]\
    \ = decbin($value);\n  }\n  foreach ($arr1 as $key => $value) {\n    $arr2[$key]\
    \ = substr_count($value, '1');\n  }\n  asort($arr2);\n  foreach ($arr2 as $key\
    \ => $value) {\n    $arr3[] = $arr[$key];\n  }\n  return $arr3;\n}\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpapzmigs3.php:33\n\
    Stack trace:\n#0 /tmp/tmpapzmigs3.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpapzmigs3.php\
    \ on line 33\n"
  timestamp: 1660220655

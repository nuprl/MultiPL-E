language: php
name: HumanEval_22_filter_integers
results:
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n\t$result = array();\n\tforeach ($values as $value) {\n\t\tif (is_int($value))\
    \ {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\n/* Filter\
    \ given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/*\n>>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)\n*/\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for floats\n>>> filter_floats(array(\"\
    a\", 3.14, 5))\narray(3.14)\n>>> filter_floats(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray()*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n\t$result = array();\n\tforeach ($values as $value) {\n\t\tif (is_int($value))\
    \ {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\n/* Filter\
    \ given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/*\n>>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)\n*/\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $filtered_values = array();\n    foreach ($values as $value) {\n    \
    \    if (is_int($value)) {\n            $filtered_values[] = $value;\n       \
    \ }\n    }\n    return $filtered_values;\n}\n\n/* Filter given array of any phpthon\
    \ values only for strings\n>>> filter_strings(array(\"a\", 3.14, 5))\narray(\"\
    a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(), array()))\narray(\"\
    abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for floats\n>>> filter_floats(array(\"\
    a\", 3.14, 5))\narray(3.14)\n>>> filter_floats(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray()*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n\t$result = array();\n\tforeach ($values as $value) {\n\t\tif (is_int($value))\
    \ {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\n/* Filter\
    \ given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $integers = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $integers[] = $value;\n        }\n    }\n    return $integers;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n\t$result = array();\n\tforeach ($values as $value) {\n\t\tif (is_int($value))\
    \ {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\n/* Filter\
    \ given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for integers\n>>> filter_integers(array(\"\
    a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(1, 2, 3)*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/*\n>>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)\n*/\n\n/*\n>>> filter_integers(array(\"\
    a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(1, 2, 3)\n*/\n\n/*\n>>> filter_integers(array(\"a\", 3.14,\
    \ 5))\narray(5)\n>>> filter_integers(array(1, 2, 3, \"abc\", array(), array()))\n\
    array(1, 2, 3)\n*/\n\n/*\n>>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n\
    >>> filter_integers(array(1, 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)\n\
    */\n\n/*\n>>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)\n*/\n\n/*\n>>> filter_integers(array(\"\
    a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(1, 2, 3)\n*/\n\n/*\n>>> filter_integers(array(\"a\", 3.14,\
    \ 5))\narray(5)\n>>> filter_integers(array(1, 2, 3, \"abc\", array(), array()))\n\
    array(1, 2, 3)\n*/\n\n/*\n>>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n\
    >>> filter_integers(array(1, 2, 3, \"abc\", array(), array()\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 66 in /tmp/tmpjj4ochi_.php on
    line 66

    '
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/*\n>>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)\n*/\n\n/*\n>>> filter_integers(array(\"\
    a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(1, 2, 3)\n*/\n\n/*\n>>> filter_integers(array(\"a\", 3.14,\
    \ 5))\narray(5)\n>>> filter_integers(array(1, 2, 3, \"abc\", array(), array()))\n\
    array(1, 2, 3)\n*/\n\n/*\n>>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n\
    >>> filter_integers(array(1, 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)\n\
    */\n\n/*\n>>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)\n*/\n\n/*\n>>> filter_integers(array(\"\
    a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(1, 2, 3)\n*/\n\n/*\n>>> filter_integers(array(\"a\", 3.14,\
    \ 5))\narray(5)\n>>> filter_integers(array(1, 2, 3, \"abc\", array(), array()))\n\
    array(1, 2, 3)\n*/\n\n/*\n>>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n\
    >>> filter_integers(array(1, 2, 3, \"abc\", array(), array()\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 66 in /tmp/tmpjj4ochi_.php on
    line 66

    '
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n\t$result = array();\n\tforeach ($values as $value) {\n\t\tif (is_int($value))\
    \ {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\n/* Filter\
    \ given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n\t$result = array();\n\tforeach ($values as $value) {\n\t\tif (is_int($value))\
    \ {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\n/* Filter\
    \ given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n\t$result = array();\n\tforeach ($values as $value) {\n\t\tif (is_int($value))\
    \ {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\n/* Filter\
    \ given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/*\n>>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)\n*/\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\n/* Filter given array of any phpthon values only for strings\n\
    >>> filter_strings(array(\"a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(\"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdgl33hpn.php:24\n\
    Stack trace:\n#0 /tmp/tmpdgl33hpn.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpdgl33hpn.php\
    \ on line 24\n"
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $filtered = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $filtered[] = $value;\n        }\n    }\n    return $filtered;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for floats\n>>> filter_floats(array(\"\
    a\", 3.14, 5))\narray(3.14)\n>>> filter_floats(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray()*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n\t$result = array();\n\tforeach ($values as $value) {\n\t\tif (is_int($value))\
    \ {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\n/* Filter\
    \ given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n\t$result = array();\n\tforeach ($values as $value) {\n\t\tif (is_int($value))\
    \ {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\n/* Filter\
    \ given array of any phpthon values only for floats\n>>> filter_floats(array(\"\
    a\", 3.14, 5))\narray(3.14)\n>>> filter_floats(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray()*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/*\n>>> filter_integers_2(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers_2(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)\n*/\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n\t$result = array();\n\tforeach ($values as $value) {\n\t\tif (is_int($value))\
    \ {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\n/* Filter\
    \ given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\n/* Filter given array of any phpthon values only for strings\n\
    >>> filter_strings(array(\"a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(\"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdgl33hpn.php:24\n\
    Stack trace:\n#0 /tmp/tmpdgl33hpn.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpdgl33hpn.php\
    \ on line 24\n"
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n\t$result = array();\n\tforeach ($values as $value) {\n\t\tif (is_int($value))\
    \ {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\n/* Filter\
    \ given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n\t$result = array();\n\tforeach ($values as $value) {\n\t\tif (is_int($value))\
    \ {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\n/* Filter\
    \ given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for floats\n>>> filter_floats(array(\"\
    a\", 3.14, 5))\narray(3.14)\n>>> filter_floats(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray()*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $arr = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $arr[] = $value;\n        }\n    }\n    return $arr;\n}\n\n/*\
    \ Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for floats\n>>> filter_floats(array(\"\
    a\", 3.14, 5))\narray(3.14)\n>>> filter_floats(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray()*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/*\n>>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)\n*/\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n\t$result = array();\n\tforeach ($values as $value) {\n\t\tif (is_int($value))\
    \ {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\n/* Filter\
    \ given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/*\n>>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)\n*/\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\n/* Filter given array of any phpthon values only for strings\n\
    >>> filter_strings(array(\"a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(\"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdgl33hpn.php:24\n\
    Stack trace:\n#0 /tmp/tmpdgl33hpn.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpdgl33hpn.php\
    \ on line 24\n"
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for floats\n>>> filter_floats(array(\"\
    a\", 3.14, 5))\narray(3.14)\n>>> filter_floats(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray()*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Return a string of given array of integers\n>>> array_to_string(array(1,\
    \ 2, 3))\n\"1, 2, 3\"\n>>> array_to_string(array())\n\"\"*/\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n\t$result = array();\n\tforeach ($values as $value) {\n\t\tif (is_int($value))\
    \ {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\n/* Filter\
    \ given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n\t$result = array();\n\tforeach ($values as $value) {\n\t\tif (is_int($value))\
    \ {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\n/* Filter\
    \ given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n\t$result = array();\n\tforeach ($values as $value) {\n\t\tif (is_int($value))\
    \ {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\n/* Filter\
    \ given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/*\n>>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)\n*/\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n\t$result = array();\n\tforeach ($values as $value) {\n\t\tif (is_int($value))\
    \ {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\n/* Filter\
    \ given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for arrays\n>>> filter_arrays(array(\"\
    a\", 3.14, 5))\narray()\n>>> filter_arrays(array(1, 2, 3, \"abc\", array(), array()))\n\
    array(array(), array())*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\n/* Filter given array of any phpthon values only for strings\n\
    >>> filter_strings(array(\"a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(\"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdgl33hpn.php:24\n\
    Stack trace:\n#0 /tmp/tmpdgl33hpn.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpdgl33hpn.php\
    \ on line 24\n"
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n\t$result = array();\n\tforeach ($values as $value) {\n\t\tif (is_int($value))\
    \ {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\n/* Filter\
    \ given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9b_x5ujr.php:24\n\
    Stack trace:\n#0 /tmp/tmp9b_x5ujr.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp9b_x5ujr.php\
    \ on line 24\n"
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for floats\n>>> filter_floats(array(\"\
    a\", 3.14, 5))\narray(3.14)\n>>> filter_floats(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray()*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n\t$result = array();\n\tforeach ($values as $value) {\n\t\tif (is_int($value))\
    \ {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\n/* Filter\
    \ given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n\t$result = array();\n\tforeach ($values as $value) {\n\t\tif (is_int($value))\
    \ {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\n/* Filter\
    \ given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/*\n>>> filter_integers_2(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers_2(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)\n*/\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n\t$result = array();\n\tforeach ($values as $value) {\n\t\tif (is_int($value))\
    \ {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\n/* Filter\
    \ given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for floats\n>>> filter_floats(array(\"\
    a\", 3.14, 5))\narray(3.14)\n>>> filter_floats(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray()*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\n/* Filter given array of any phpthon values only for strings\n\
    >>> filter_strings(array(\"a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(\"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdgl33hpn.php:24\n\
    Stack trace:\n#0 /tmp/tmpdgl33hpn.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpdgl33hpn.php\
    \ on line 24\n"
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for floats\n>>> filter_floats(array(\"\
    a\", 3.14, 5))\narray(3.14)\n>>> filter_floats(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray()*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n\t$result = array();\n\tforeach ($values as $value) {\n\t\tif (is_int($value))\
    \ {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\n/* Filter\
    \ given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/*\n>>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)\n*/\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n\t$result = array();\n\tforeach ($values as $value) {\n\t\tif (is_int($value))\
    \ {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\n/* Filter\
    \ given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 255
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    return array_filter($values, function($value) {\n        return is_int($value);\n\
    \    });\n}\n\n/* Filter given array of any phpthon values only for strings\n\
    >>> filter_strings(array(\"a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(\"abc\")*/\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdgl33hpn.php:24\n\
    Stack trace:\n#0 /tmp/tmpdgl33hpn.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpdgl33hpn.php\
    \ on line 24\n"
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n\t$result = array();\n\tforeach ($values as $value) {\n\t\tif (is_int($value))\
    \ {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\n/* Filter\
    \ given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/*\n>>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)\n*/\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n\t$result = array();\n\tforeach ($values as $value) {\n\t\tif (is_int($value))\
    \ {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\n/* Filter\
    \ given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/*\n>>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)\n*/\n\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for floats\n>>> filter_floats(array(\"\
    a\", 3.14, 5))\narray(3.14)\n>>> filter_floats(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray()*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/*\n>>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)\n*/\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n\t$result = array();\n\tforeach ($values as $value) {\n\t\tif (is_int($value))\
    \ {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\n/* Filter\
    \ given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_integer($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/*\n>>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)\n*/\nfunction candidate(...$args)\
    \ {\n    return filter_integers(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(4, array(), array(), 23.2, 9, \"adasd\")) !== array(4,\
    \ 9)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, \"\
    c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n\t$result = array();\n\tforeach ($values as $value) {\n\t\tif (is_int($value))\
    \ {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\n/* Filter\
    \ given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n\t$result = array();\n\tforeach ($values as $value) {\n\t\tif (is_int($value))\
    \ {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\n/* Filter\
    \ given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n\t$result = array();\n\tforeach ($values as $value) {\n\t\tif (is_int($value))\
    \ {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\n/* Filter\
    \ given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n\t$result = array();\n\tforeach ($values as $value) {\n\t\tif (is_int($value))\
    \ {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\n/*\n>>> filter_integers_2(array(\"\
    a\", 3.14, 5))\narray(5)\n>>> filter_integers_2(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(1, 2, 3)\n*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for floats\n>>> filter_floats(array(\"\
    a\", 3.14, 5))\narray(3.14)\n>>> filter_floats(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray()*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n\t$result = array();\n\tforeach ($values as $value) {\n\t\tif (is_int($value))\
    \ {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\n/* Filter\
    \ given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718
- exit_code: 0
  program: "<?php\n/* Filter given array of any phpthon values only for integers\n\
    >>> filter_integers(array(\"a\", 3.14, 5))\narray(5)\n>>> filter_integers(array(1,\
    \ 2, 3, \"abc\", array(), array()))\narray(1, 2, 3)*/\nfunction filter_integers($values)\
    \ {\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value))\
    \ {\n            $result[] = $value;\n        }\n    }\n    return $result;\n\
    }\n\n/* Filter given array of any phpthon values only for strings\n>>> filter_strings(array(\"\
    a\", 3.14, 5))\narray(\"a\")\n>>> filter_strings(array(1, 2, 3, \"abc\", array(),\
    \ array()))\narray(\"abc\")*/\nfunction candidate(...$args) {\n    return filter_integers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(4, array(), array(),\
    \ 23.2, 9, \"adasd\")) !== array(4, 9)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(3, \"c\", 3, 3, \"a\", \"b\")) !== array(3, 3, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220718

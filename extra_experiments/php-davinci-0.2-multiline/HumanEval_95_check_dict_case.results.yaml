language: php
name: HumanEval_95_check_dict_case
results:
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$lower = array_keys($dict);\n\t$upper = array_keys($dict);\n\tforeach ($lower\
    \ as $key => $value) {\n\t\t$lower[$key] = strtolower($value);\n\t}\n\tforeach\
    \ ($upper as $key => $value) {\n\t\t$upper[$key] = strtoupper($value);\n\t}\n\t\
    if ($lower == array_keys($dict) || $upper == array_keys($dict)) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/* Given an array of integers,\
    \ return the sum of all the integers that have an even index, multiplied by the\
    \ integer at the last index. If the array is empty, return 0.\nExamples:\n>>>\
    \ sum_even_indexed_multiplied_by_last([1, 2, 3, 4, 5])\n40\n>>> sum_even_indexed_multiplied_by_last([1,\
    \ 2, 3, 4, 5, 6])\n48\n>>> sum_even_indexed_multiplied_by_last([])\n0\n>>> sum_even_indexed_multiplied_by_last([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10])\n180*/\nfunction candidate(...$args) {\n    return\
    \ check_dict_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"b\" => \"banana\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"\
    banana\", \"B\" => \"banana\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"p\" => \"pineapple\", \"5\" => \"banana\", \"\
    a\" => \"apple\")) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\")) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"fruit\" => \"Orange\", \"taste\" =>\
    \ \"Sweet\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp49r5v9fw.php:49\n\
    Stack trace:\n#0 /tmp/tmp49r5v9fw.php(56): test()\n#1 {main}\n  thrown in /tmp/tmp49r5v9fw.php\
    \ on line 49\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n    $lower = true;\n    $upper = true;\n    foreach ($dict as $key => $value)\
    \ {\n        if (is_string($key)) {\n            if (ctype_lower($key)) {\n  \
    \              $upper = false;\n            } else {\n                $lower =\
    \ false;\n            }\n        } else {\n            return false;\n       \
    \ }\n    }\n    return $lower || $upper;\n}\n\n/* Given an array, return true\
    \ if all keys are strings in lower \ncase or all keys are strings in upper case,\
    \ else return false.\nThe function should return false is the given array is empty.\n\
    Examples:\n>>> check_dict_case(array(\"a\" => \"apple\", \"b\" => \"banana\"))\n\
    true\n>>> check_dict_case(array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\"\
    \ => \"banana\"))\nfalse\n>>> check_dict_case(array(\"a\" => \"apple\", 8 => \"\
    banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"Name\" => \"\
    John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxlxacmb1.php:55\n\
    Stack trace:\n#0 /tmp/tmpxlxacmb1.php(61): test()\n#1 {main}\n  thrown in /tmp/tmpxlxacmb1.php\
    \ on line 55\n"
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$lower_case = true;\n\t\
    $upper_case = true;\n\tforeach ($dict as $key => $value) {\n\t\tif (!ctype_lower($key))\
    \ {\n\t\t\t$lower_case = false;\n\t\t}\n\t\tif (!ctype_upper($key)) {\n\t\t\t\
    $upper_case = false;\n\t\t}\n\t}\n\treturn $lower_case || $upper_case;\n}\n\n\
    /* Given an array of integers, return true if the array contains \nat least one\
    \ number that is a multiple of 3 or 5, else return false.\nExamples:\n>>> check_multiple_of_3_or_5(array(3,\
    \ 5, 8, 9, 12))\ntrue\n>>> check_multiple_of_3_or_5(array(3, 5, 8, 9, 13))\nfalse\n\
    >>> check_multiple_of_3_or_5(array(3, 5, 8, 9, 12, 15))\ntrue\n>>> check_multiple_of_3_or_5(array(3,\
    \ 5, 8, 9, 12, 16))\nfalse\n>>> check_multiple_of_3_or_5(array(3, 5, 8, 9, 12,\
    \ 15, 18))\ntrue\n>>> check_multiple_of_3_or_5(array(3, 5, 8, 9, 12, 15, 19))\n\
    false*/\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\",\
    \ \"b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Deprecated: ctype_lower(): Argument of type int will be interpreted as string
    in the future in /tmp/tmprwucl4j8.php on line 23


    Deprecated: ctype_upper(): Argument of type int will be interpreted as string
    in the future in /tmp/tmprwucl4j8.php on line 26

    '
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$lower_keys = array_map('strtolower', $keys);\n\t$upper_keys = array_map('strtoupper',\
    \ $keys);\n\tif ($keys == $lower_keys || $keys == $upper_keys) {\n\t\treturn true;\n\
    \t}\n\treturn false;\n}\n\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\",\
    \ \"b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp507jftet.php:36\n\
    Stack trace:\n#0 /tmp/tmp507jftet.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp507jftet.php\
    \ on line 36\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\tif ($keys == $lower || $keys == $upper) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n\n/* Given an array, return true if the array contains a string\
    \ in lower case, \nelse return false. The function should return false is the\
    \ given array is empty.\nExamples:\n>>> check_lower_case(array(\"a\" => \"apple\"\
    , \"b\" => \"banana\"))\ntrue\n>>> check_lower_case(array(\"a\" => \"apple\",\
    \ \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_lower_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_lower_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_lower_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\nfalse*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpequ4ll56.php:49\n\
    Stack trace:\n#0 /tmp/tmpequ4ll56.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpequ4ll56.php\
    \ on line 49\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$lower = array_keys($dict);\n\
    \t$upper = array_keys($dict);\n\t$lower = array_map('strtolower', $lower);\n\t\
    $upper = array_map('strtoupper', $upper);\n\tif ($lower == array_keys($dict) ||\
    \ $upper == array_keys($dict)) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n\
    $dict = array(\"a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict);\n\
    echo \"\\n\";\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\");\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict);\n\
    echo \"\\n\";\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\"\
    \ => \"Houston\");\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict);\necho\
    \ \"\\n\";\n$dict = array();\necho check_dict_case($dict);\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return check_dict_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"\
    banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"\
    pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n1\n\n1\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnu570880.php:55\n\
    Stack trace:\n#0 /tmp/tmpnu570880.php(62): test()\n#1 {main}\n  thrown in /tmp/tmpnu570880.php\
    \ on line 55\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$lower = array_change_key_case($dict, CASE_LOWER);\n\t$upper = array_change_key_case($dict,\
    \ CASE_UPPER);\n\tif ($lower == $dict || $upper == $dict) {\n\t\treturn true;\n\
    \t}\n\treturn false;\n}\n\n/* Given an array, return true if all values are strings,\
    \ else return false.\nThe function should return false is the given array is empty.\n\
    Examples:\n>>> check_dict_string(array(\"a\" => \"apple\", \"b\" => \"banana\"\
    ))\ntrue\n>>> check_dict_string(array(\"a\" => \"apple\", \"b\" => \"banana\"\
    , \"c\" => 8))\nfalse\n>>> check_dict_string(array(\"a\" => \"apple\", \"b\" =>\
    \ \"banana\", \"c\" => \"8\"))\ntrue\n>>> check_dict_string(array(\"a\" => \"\
    apple\", \"b\" => \"banana\", \"c\" => \"8\", \"d\" => 8))\nfalse\n>>> check_dict_string(array(\"\
    a\" => \"apple\", \"b\" => \"banana\", \"c\" => \"8\", \"d\" => \"8\"))\ntrue\n\
    >>> check_dict_string(array(\"a\" => \"apple\", \"b\" => \"banana\", \"c\" =>\
    \ \"8\", \"d\" => \"8\", \"e\" => 8))\nfalse\n>>> check_dict_string(array(\"a\"\
    \ => \"apple\", \"b\" => \"banana\", \"c\" => \"8\", \"d\" => \"8\", \"e\" =>\
    \ \"8\"))\ntrue\n>>> check_dict_string(array(\"a\" => \"apple\", \"b\" => \"banana\"\
    , \"c\" => \"8\", \"d\" => \"8\", \"e\" => \"8\", \"f\" => 8))\nfalse\n>>> check_dict_string(array(\"\
    a\" => \"apple\", \"b\" => \"banana\", \"c\" => \"8\", \"d\" => \"8\", \"e\" =>\
    \ \"8\", \"f\" => \"8\"))\ntrue\n>>> check_dict_string(array(\"a\" => \"apple\"\
    , \"b\" => \"banana\", \"c\" => \"8\", \"d\" =>\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 25 in /tmp/tmp6_srh_k_.php on
    line 25

    '
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$upper = array_map('strtoupper', $keys);\n\t$lower = array_map('strtolower',\
    \ $keys);\n\tif ($keys == $upper || $keys == $lower) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n\n/* Given an array, return true if all keys are strings in\
    \ lower \ncase or all keys are strings in upper case, else return false.\nThe\
    \ function should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkmtqb7h6.php:50\n\
    Stack trace:\n#0 /tmp/tmpkmtqb7h6.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpkmtqb7h6.php\
    \ on line 50\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$lower = true;\n\t$upper = true;\n\tforeach ($dict as $key => $value) {\n\
    \t\tif (ctype_lower($key)) {\n\t\t\t$upper = false;\n\t\t} else {\n\t\t\t$lower\
    \ = false;\n\t\t}\n\t}\n\tif ($lower || $upper) {\n\t\treturn true;\n\t} else\
    \ {\n\t\treturn false;\n\t}\n}\n\n/* Given an array of integers, return true if\
    \ the array contains \na 5 immediately followed by a 7.\nExamples:\n>>> check_5_7(array(1,\
    \ 2, 3, 4, 5, 6, 7))\nfalse\n>>> check_5_7(array(1, 2, 3, 4, 5, 7))\ntrue\n>>>\
    \ check_5_7(array(5, 7, 1, 2, 3, 4))\ntrue\n>>> check_5_7(array(5, 7, 1, 2, 3,\
    \ 4, 5, 7))\ntrue\n>>> check_5_7(array(5, 7, 1, 2, 3, 4, 5, 7, 5, 7))\ntrue\n\
    >>> check_5_7(array(5, 7, 1, 2, 3, 4, 5, 7, 5, 7, 5, 7))\ntrue\n>>> check_5_7(array(5,\
    \ 7, 1, 2, 3, 4, 5, 7, 5, 7, 5, 7, 5, 7))\ntrue\n>>> check_5_7(array(5, 7, 1,\
    \ 2, 3, 4, 5, 7, 5, 7, 5, 7, 5, 7, 5, 7))\ntrue\n>>> check_5_7(array(5, 7, 1,\
    \ 2, 3, 4, 5, 7, 5, 7, 5, 7, 5, 7, 5, 7, 5, 7))\ntrue\n>>> check_5_7(array(5,\
    \ 7, 1, 2, 3, 4, 5, 7, 5, 7, 5, 7, 5, 7, 5, 7, 5, 7, 5, 7))\ntrue\n>>> check_5_7(array(5,\
    \ 7, 1, 2, 3, 4, 5, 7,\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\",\
    \ \"b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 33 in /tmp/tmpgq03do5d.php on
    line 33

    '
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$lower = true;\n\t$upper\
    \ = true;\n\tforeach ($dict as $key => $value) {\n\t\tif (!ctype_lower($key))\
    \ {\n\t\t\t$lower = false;\n\t\t}\n\t\tif (!ctype_upper($key)) {\n\t\t\t$upper\
    \ = false;\n\t\t}\n\t}\n\tif ($lower || $upper) {\n\t\treturn true;\n\t}\n\treturn\
    \ false;\n}\n\n/* Given an array of integers, return true if the array contains\
    \ \na 3 next to a 3 somewhere.\nExamples:\n>>> has_33(array(1, 3, 3))\ntrue\n\
    >>> has_33(array(1, 3, 1, 3))\nfalse\n>>> has_33(array(3, 1, 3))\nfalse\n>>> has_33(array(3,\
    \ 3, 1, 3))\ntrue\n>>> has_33(array(3, 1, 3, 3))\ntrue\n>>> has_33(array(1, 3,\
    \ 1, 3, 3, 1, 3))\ntrue\n>>> has_33(array(1, 3, 1, 3, 1, 3))\nfalse\n>>> has_33(array(1,\
    \ 3, 3, 1, 3))\ntrue\n>>> has_33(array(1, 3, 1, 3, 1, 3, 3, 3, 3))\ntrue\n>>>\
    \ has_33(array(1, 3, 3, 1, 3, 1, 3))\ntrue\n>>> has_33(array(1, 3, 1, 3, 1, 3,\
    \ 1, 3))\nfalse\n>>> has_33(array(3, 3))\ntrue\n>>> has_33(array(3, 1, 3))\nfalse\n\
    >>> has_33(array(3))\nfalse\n>>> has_33(array(1))\nfalse\n>>> has_33(array())\n\
    false*/\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\",\
    \ \"b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Deprecated: ctype_lower(): Argument of type int will be interpreted as string
    in the future in /tmp/tmpgywpkke1.php on line 23


    Deprecated: ctype_upper(): Argument of type int will be interpreted as string
    in the future in /tmp/tmpgywpkke1.php on line 26

    '
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$keys = array_keys($dict);\n\t$lower = array_map('strtolower', $keys);\n\
    \t$upper = array_map('strtoupper', $keys);\n\tif ($keys == $lower || $keys ==\
    \ $upper) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\")) . PHP_EOL;\necho check_dict_case(array(\"\
    a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\")) . PHP_EOL;\necho\
    \ check_dict_case(array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"\
    )) . PHP_EOL;\necho check_dict_case(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) . PHP_EOL;\necho check_dict_case(array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\")) . PHP_EOL;\nfunction candidate(...$args) {\n\
    \    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"b\" => \"banana\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"\
    banana\", \"B\" => \"banana\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"p\" => \"pineapple\", \"5\" => \"banana\", \"\
    a\" => \"apple\")) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\")) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"fruit\" => \"Orange\", \"taste\" =>\
    \ \"Sweet\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n1\n\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbqr0wig7.php:38\n\
    Stack trace:\n#0 /tmp/tmpbqr0wig7.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpbqr0wig7.php\
    \ on line 38\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$keys = array_keys($dict);\n\t$lower = array_map('strtolower', $keys);\n\
    \t$upper = array_map('strtoupper', $keys);\n\tif ($keys == $lower || $keys ==\
    \ $upper) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/* Given\
    \ an array, return true if all keys are strings in lower \ncase or all keys are\
    \ strings in upper case, else return false.\nThe function should return false\
    \ is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"a\" =>\
    \ \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\" => \"\
    apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7kk1wsuy.php:48\n\
    Stack trace:\n#0 /tmp/tmp7kk1wsuy.php(55): test()\n#1 {main}\n  thrown in /tmp/tmp7kk1wsuy.php\
    \ on line 48\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$lower = [];\n\t$upper =\
    \ [];\n\tforeach ($dict as $key => $value) {\n\t\tif (ctype_lower($key)) {\n\t\
    \t\t$lower[] = $key;\n\t\t} else {\n\t\t\t$upper[] = $key;\n\t\t}\n\t}\n\tif (count($lower)\
    \ == count($dict) || count($upper) == count($dict)) {\n\t\treturn true;\n\t} else\
    \ {\n\t\treturn false;\n\t}\n}\n\n$dict = array(\"a\" => \"apple\", \"b\" => \"\
    banana\");\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"a\" =>\
    \ \"apple\", \"A\" => \"banana\", \"B\" => \"banana\");\necho check_dict_case($dict);\n\
    echo \"\\n\";\n$dict = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"\
    apple\");\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"Name\"\
    \ => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\");\necho check_dict_case($dict);\n\
    echo \"\\n\";\n$dict = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\necho\
    \ check_dict_case($dict);\necho \"\\n\";\nfunction candidate(...$args) {\n   \
    \ return check_dict_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"b\" => \"banana\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"\
    banana\", \"B\" => \"banana\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"p\" => \"pineapple\", \"5\" => \"banana\", \"\
    a\" => \"apple\")) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\")) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"fruit\" => \"Orange\", \"taste\" =>\
    \ \"Sweet\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n\nDeprecated: ctype_lower(): Argument of type int will be interpreted\
    \ as string in the future in /tmp/tmpb0a13utd.php on line 23\n\n1\n1\n\nDeprecated:\
    \ ctype_lower(): Argument of type int will be interpreted as string in the future\
    \ in /tmp/tmpb0a13utd.php on line 23\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpb0a13utd.php:59\nStack trace:\n#0 /tmp/tmpb0a13utd.php(65):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpb0a13utd.php on line 59\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\tif ($keys == $lower || $keys == $upper) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n\n/* Given an array, return true if all keys are strings in\
    \ lower \ncase or all keys are strings in upper case, else return false.\nThe\
    \ function should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj_ims3wr.php:50\n\
    Stack trace:\n#0 /tmp/tmpj_ims3wr.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpj_ims3wr.php\
    \ on line 50\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$lower = true;\n\t$upper = true;\n\tforeach ($dict as $key => $value) {\n\
    \t\tif (strtolower($key) != $key) {\n\t\t\t$lower = false;\n\t\t}\n\t\tif (strtoupper($key)\
    \ != $key) {\n\t\t\t$upper = false;\n\t\t}\n\t}\n\treturn $lower || $upper;\n\
    }\n\n/* Given an array of integers, return true if the array contains \na number\
    \ that is a multiple of 7.\nExamples:\n>>> check_seven(array(1, 2, 3, 4, 5, 6,\
    \ 7))\ntrue\n>>> check_seven(array(1, 2, 3, 4, 5, 6, 8))\nfalse\n>>> check_seven(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10))\ntrue\n>>> check_seven(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20))\ntrue\n>>> check_seven(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21))\nfalse*/\n\
    function candidate(...$args) {\n    return check_dict_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"\
    banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"\
    pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbrphvqra.php:50\n\
    Stack trace:\n#0 /tmp/tmpbrphvqra.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpbrphvqra.php\
    \ on line 50\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$keys = array_keys($dict);\n\t$first_key = $keys[0];\n\t$first_key_case\
    \ = ctype_upper($first_key) ? 'upper' : 'lower';\n\tforeach ($keys as $key) {\n\
    \t\t$key_case = ctype_upper($key) ? 'upper' : 'lower';\n\t\tif ($key_case != $first_key_case)\
    \ {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n/* Given an array,\
    \ return true if all keys are strings in lower \ncase or all keys are strings\
    \ in upper case, else return false.\nThe function should return false is the given\
    \ array is empty.\nExamples:\n>>> check_dict_case(array(\"a\" => \"apple\", \"\
    b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\" => \"apple\", \"A\"\
    \ => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: ctype_upper(): Argument of type int will be interpreted as\
    \ string in the future in /tmp/tmpbewvnhv8.php on line 21\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpbewvnhv8.php:50\nStack trace:\n#0 /tmp/tmpbewvnhv8.php(57):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpbewvnhv8.php on line 50\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif(empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$first_key = $keys[0];\n\t$is_lower = ctype_lower($first_key);\n\t$is_upper\
    \ = ctype_upper($first_key);\n\tforeach($keys as $key) {\n\t\tif($is_lower &&\
    \ !ctype_lower($key)) {\n\t\t\treturn false;\n\t\t}\n\t\tif($is_upper && !ctype_upper($key))\
    \ {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n/* Given an array of\
    \ integers, return the sum of all the integers that have an even index, \nmultiplied\
    \ by the last odd integer in the array. If the array is empty, return 0.\nExamples:\n\
    >>> sum_even_indexed_odd_last(array(1, 2, 3, 4, 5))\n30\n>>> sum_even_indexed_odd_last(array(1,\
    \ 2, 3, 4, 5, 6))\n48\n>>> sum_even_indexed_odd_last(array(1, 2, 3, 4, 5, 6, 7))\n\
    56\n>>> sum_even_indexed_odd_last(array(1, 2, 3, 4, 5, 6, 7, 8))\n64\n>>> sum_even_indexed_odd_last(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9))\n90\n>>> sum_even_indexed_odd_last(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10))\n110\n>>> sum_even_indexed_odd_last(array(1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11))\n132\n>>> sum_even_indexed_odd_last(array(1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12))\n156\n>>> sum_even_indexed_odd_last(array(1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))\nfunction candidate(...$args) {\n    return\
    \ check_dict_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"b\" => \"banana\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"\
    banana\", \"B\" => \"banana\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"p\" => \"pineapple\", \"5\" => \"banana\", \"\
    a\" => \"apple\")) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\")) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"fruit\" => \"Orange\", \"taste\" =>\
    \ \"Sweet\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 35 in /tmp/tmpw3sooia6.php on
    line 35

    '
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$lower = true;\n\t$upper = true;\n\tforeach ($dict as $key => $value) {\n\
    \t\tif (ctype_lower($key)) {\n\t\t\t$upper = false;\n\t\t} else {\n\t\t\t$lower\
    \ = false;\n\t\t}\n\t}\n\treturn $lower || $upper;\n}\n\n$dict = array(\"a\" =>\
    \ \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict) . \"\\n\";\n$dict\
    \ = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\");\necho\
    \ check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" => \"apple\", 8 => \"\
    banana\", \"a\" => \"apple\");\necho check_dict_case($dict) . \"\\n\";\n$dict\
    \ = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\");\n\
    echo check_dict_case($dict) . \"\\n\";\n$dict = array(\"STATE\" => \"NC\", \"\
    ZIP\" => \"12345\");\necho check_dict_case($dict) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n\nDeprecated: ctype_lower(): Argument of type int will be interpreted\
    \ as string in the future in /tmp/tmpnat266rj.php on line 20\n\n1\n1\n\nDeprecated:\
    \ ctype_lower(): Argument of type int will be interpreted as string in the future\
    \ in /tmp/tmpnat266rj.php on line 20\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpnat266rj.php:47\nStack trace:\n#0 /tmp/tmpnat266rj.php(53):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpnat266rj.php on line 47\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$lower = true;\n\t$upper = true;\n\tforeach ($dict as $key => $value) {\n\
    \t\tif (strtolower($key) != $key) {\n\t\t\t$lower = false;\n\t\t}\n\t\tif (strtoupper($key)\
    \ != $key) {\n\t\t\t$upper = false;\n\t\t}\n\t}\n\treturn $lower || $upper;\n\
    }\n\n/* Given an array, return true if all keys are strings in lower \ncase or\
    \ all keys are strings in upper case, else return false.\nThe function should\
    \ return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7vreqlys.php:51\n\
    Stack trace:\n#0 /tmp/tmp7vreqlys.php(58): test()\n#1 {main}\n  thrown in /tmp/tmp7vreqlys.php\
    \ on line 51\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$lower = array_change_key_case($dict, CASE_LOWER);\n\t$upper = array_change_key_case($dict,\
    \ CASE_UPPER);\n\tif ($lower == $dict) {\n\t\treturn true;\n\t} elseif ($upper\
    \ == $dict) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/* Given\
    \ an array of integers, return the sum of all the integers \nthat have an even\
    \ index, multiplied by the integer at the last index.\nIf the array is empty,\
    \ you should return 0.\nExamples:\n>>> sum_even_indexed_multiplied_by_last([1,\
    \ 2, 3, 4, 5])\n30\n>>> sum_even_indexed_multiplied_by_last([1, 2, 3, 4, 5, 6])\n\
    48\n>>> sum_even_indexed_multiplied_by_last([])\n0*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbktu_odx.php:45\n\
    Stack trace:\n#0 /tmp/tmpbktu_odx.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpbktu_odx.php\
    \ on line 45\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$keys = array_keys($dict);\n\t$upper = array_map('strtoupper', $keys);\n\
    \t$lower = array_map('strtolower', $keys);\n\tif ($keys == $upper || $keys ==\
    \ $lower) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/* Given an array, return\
    \ true if all keys are strings in lower \ncase or all keys are strings in upper\
    \ case, else return false.\nThe function should return false is the given array\
    \ is empty.\nExamples:\n>>> check_dict_case(array(\"a\" => \"apple\", \"b\" =>\
    \ \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\" => \"apple\", \"A\" => \"\
    banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"a\" => \"\
    apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfjt9bafr.php:47\n\
    Stack trace:\n#0 /tmp/tmpfjt9bafr.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpfjt9bafr.php\
    \ on line 47\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$lower = true;\n\t$upper = true;\n\tforeach ($dict as $key => $value) {\n\
    \t\tif (!ctype_lower($key)) {\n\t\t\t$lower = false;\n\t\t}\n\t\tif (!ctype_upper($key))\
    \ {\n\t\t\t$upper = false;\n\t\t}\n\t}\n\treturn $lower || $upper;\n}\n\n$dict\
    \ = array(\"a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" =>\
    \ \"apple\", 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\"\
    \ => \"Houston\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict) . \"\\n\";\n\
    function candidate(...$args) {\n    return check_dict_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"\
    banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"\
    pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n\nDeprecated: ctype_lower(): Argument of type int will be interpreted\
    \ as string in the future in /tmp/tmpjv657se4.php on line 20\n\nDeprecated: ctype_upper():\
    \ Argument of type int will be interpreted as string in the future in /tmp/tmpjv657se4.php\
    \ on line 23\n\n\n1\n\nDeprecated: ctype_lower(): Argument of type int will be\
    \ interpreted as string in the future in /tmp/tmpjv657se4.php on line 20\n\nDeprecated:\
    \ ctype_upper(): Argument of type int will be interpreted as string in the future\
    \ in /tmp/tmpjv657se4.php on line 23\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpjv657se4.php:51\nStack trace:\n#0 /tmp/tmpjv657se4.php(54):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpjv657se4.php on line 51\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$keys = array_keys($dict);\n\t$upper = array_map('strtoupper', $keys);\n\
    \t$lower = array_map('strtolower', $keys);\n\tif ($keys == $upper || $keys ==\
    \ $lower) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n$dict = array(\"a\"\
    \ => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict) . PHP_EOL;\n\
    $dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\");\n\
    echo check_dict_case($dict) . PHP_EOL;\n$dict = array(\"a\" => \"apple\", 8 =>\
    \ \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict) . PHP_EOL;\n$dict\
    \ = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\");\n\
    echo check_dict_case($dict) . PHP_EOL;\n$dict = array(\"STATE\" => \"NC\", \"\
    ZIP\" => \"12345\");\necho check_dict_case($dict) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n1\n\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp98fsd3xf.php:43\n\
    Stack trace:\n#0 /tmp/tmp98fsd3xf.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp98fsd3xf.php\
    \ on line 43\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif(empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\tif($keys == $lower || $keys == $upper) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n\n$dict = array(\"a\" => \"apple\", \"b\" => \"banana\");\n\
    $dict1 = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\");\n\
    $dict2 = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\");\n$dict3\
    \ = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\");\n\
    $dict4 = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\n$dict5 = array();\n\
    \necho check_dict_case($dict) . \"\\n\";\necho check_dict_case($dict1) . \"\\\
    n\";\necho check_dict_case($dict2) . \"\\n\";\necho check_dict_case($dict3) .\
    \ \"\\n\";\necho check_dict_case($dict4) . \"\\n\";\necho check_dict_case($dict5)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\",\
    \ \"b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n1\n\n1\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5q6nav3t.php:49\n\
    Stack trace:\n#0 /tmp/tmp5q6nav3t.php(56): test()\n#1 {main}\n  thrown in /tmp/tmp5q6nav3t.php\
    \ on line 49\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$upper = array_keys($dict);\n\
    \t$lower = array_keys($dict);\n\t$upper = array_map('strtoupper', $upper);\n\t\
    $lower = array_map('strtolower', $lower);\n\tif ($upper == array_keys($dict) ||\
    \ $lower == array_keys($dict)) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n\
    $dict = array(\"a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict)\
    \ . PHP_EOL;\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\");\necho check_dict_case($dict) . PHP_EOL;\n$dict = array(\"a\" =>\
    \ \"apple\", 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict)\
    \ . PHP_EOL;\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\"\
    \ => \"Houston\");\necho check_dict_case($dict) . PHP_EOL;\n$dict = array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict) . PHP_EOL;\n\
    function candidate(...$args) {\n    return check_dict_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"\
    banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"\
    pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n1\n\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb8ti3fu5.php:47\n\
    Stack trace:\n#0 /tmp/tmpb8ti3fu5.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpb8ti3fu5.php\
    \ on line 47\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\tif ($keys == $lower || $keys == $upper) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n\n/* Given an array of integers, return true if the array\
    \ contains \na number that is a multiple of 7, else return false.\nExamples:\n\
    >>> check_seven(array(1, 2, 3, 4, 5, 6, 7))\ntrue\n>>> check_seven(array(1, 2,\
    \ 3, 4, 5, 6, 8))\nfalse\n>>> check_seven(array(1, 2, 3, 4, 5, 6, 0))\ntrue\n\
    >>> check_seven(array(1, 2, 3, 4, 5, 6, -7))\ntrue\n>>> check_seven(array(1, 2,\
    \ 3, 4, 5, 6, -8))\nfalse\n>>> check_seven(array(1, 2, 3, 4, 5, 6, -1))\nfalse\n\
    >>> check_seven(array(1, 2, 3, 4, 5, 6, -14))\ntrue\n>>> check_seven(array(1,\
    \ 2, 3, 4, 5, 6, -21))\nfalse\n>>> check_seven(array(1, 2, 3, 4, 5, 6, -28))\n\
    true\n>>> check_seven(array(1, 2, 3, 4, 5, 6, -35))\nfalse\n>>> check_seven(array(1,\
    \ 2, 3, 4, 5, 6, -42))\ntrue\n>>> check_seven(array(1, 2, 3, 4, 5, 6, -49))\n\
    false\n>>> check_seven(array(1, 2, 3, 4, 5, 6, -56))\ntrue\n>>> check_seven(array(1,\
    \ 2, 3, 4, 5, 6, -63))\nfalse\n>>> check_seven(array(1, 2, 3, 4, 5, 6, -70))\n\
    true\n>>> check_seven(array(1, 2,\nfunction candidate(...$args) {\n    return\
    \ check_dict_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"b\" => \"banana\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"\
    banana\", \"B\" => \"banana\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"p\" => \"pineapple\", \"5\" => \"banana\", \"\
    a\" => \"apple\")) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\")) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"fruit\" => \"Orange\", \"taste\" =>\
    \ \"Sweet\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 29 in /tmp/tmp9xge6cj5.php on
    line 29

    '
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n    if (empty($dict)) {\n        return false;\n    }\n    $lower = true;\n\
    \    $upper = true;\n    foreach ($dict as $key => $value) {\n        if (ctype_lower($key))\
    \ {\n            $upper = false;\n        } else {\n            $lower = false;\n\
    \        }\n    }\n    return $lower || $upper;\n}\n\n/* Given an array, return\
    \ true if all keys are strings in lower \ncase or all keys are strings in upper\
    \ case, else return false.\nThe function should return false is the given array\
    \ is empty.\nExamples:\n>>> check_dict_case(array(\"a\" => \"apple\", \"b\" =>\
    \ \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\" => \"apple\", \"A\" => \"\
    banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"a\" => \"\
    apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: ctype_lower(): Argument of type int will be interpreted as\
    \ string in the future in /tmp/tmp_swexxl0.php on line 23\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp_swexxl0.php:54\nStack trace:\n#0 /tmp/tmp_swexxl0.php(60):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp_swexxl0.php on line 54\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$lower = true;\n\t$upper = true;\n\tforeach ($dict as $key => $value) {\n\
    \t\tif (ctype_lower($key)) {\n\t\t\t$upper = false;\n\t\t} else {\n\t\t\t$lower\
    \ = false;\n\t\t}\n\t}\n\treturn ($lower || $upper);\n}\n\n$dict = array(\"a\"\
    \ => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict) . \"\\n\";\n\
    $dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\");\n\
    echo check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" => \"apple\", 8 =>\
    \ \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict) . \"\\n\";\n$dict\
    \ = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\");\n\
    echo check_dict_case($dict) . \"\\n\";\n$dict = array(\"STATE\" => \"NC\", \"\
    ZIP\" => \"12345\");\necho check_dict_case($dict) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n\nDeprecated: ctype_lower(): Argument of type int will be interpreted\
    \ as string in the future in /tmp/tmpab5n6r_o.php on line 20\n\n1\n1\n\nDeprecated:\
    \ ctype_lower(): Argument of type int will be interpreted as string in the future\
    \ in /tmp/tmpab5n6r_o.php on line 20\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpab5n6r_o.php:47\nStack trace:\n#0 /tmp/tmpab5n6r_o.php(53):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpab5n6r_o.php on line 47\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$lower = array_keys($dict);\n\
    \t$upper = array_map('strtoupper', $lower);\n\tif ($lower == $upper) {\n\t\treturn\
    \ true;\n\t}\n\t$upper = array_map('strtolower', $lower);\n\tif ($lower == $upper)\
    \ {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n$dict = array(\"a\" => \"apple\"\
    , \"b\" => \"banana\");\necho check_dict_case($dict);\necho \"\\n\";\n$dict =\
    \ array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\");\necho check_dict_case($dict);\n\
    echo \"\\n\";\n$dict = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"\
    apple\");\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"Name\"\
    \ => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\");\necho check_dict_case($dict);\n\
    echo \"\\n\";\n$dict = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\necho\
    \ check_dict_case($dict);\necho \"\\n\";\nfunction candidate(...$args) {\n   \
    \ return check_dict_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"b\" => \"banana\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"\
    banana\", \"B\" => \"banana\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"p\" => \"pineapple\", \"5\" => \"banana\", \"\
    a\" => \"apple\")) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\")) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"fruit\" => \"Orange\", \"taste\" =>\
    \ \"Sweet\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n1\n\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxql0r5o7.php:54\n\
    Stack trace:\n#0 /tmp/tmpxql0r5o7.php(61): test()\n#1 {main}\n  thrown in /tmp/tmpxql0r5o7.php\
    \ on line 54\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$upper = true;\n\t$lower = true;\n\tforeach ($dict as $key => $value) {\n\
    \t\tif (strtoupper($key) != $key) {\n\t\t\t$upper = false;\n\t\t}\n\t\tif (strtolower($key)\
    \ != $key) {\n\t\t\t$lower = false;\n\t\t}\n\t}\n\treturn ($upper || $lower);\n\
    }\n\n/* Given an array, return true if all keys are strings in lower \ncase or\
    \ all keys are strings in upper case, else return false.\nThe function should\
    \ return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnyvt7vmh.php:51\n\
    Stack trace:\n#0 /tmp/tmpnyvt7vmh.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpnyvt7vmh.php\
    \ on line 51\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$keys = array_keys($dict);\n\t$first_key = $keys[0];\n\t$first_key_case\
    \ = ctype_upper($first_key) ? \"upper\" : \"lower\";\n\tforeach ($keys as $key)\
    \ {\n\t\tif ($first_key_case == \"upper\") {\n\t\t\tif (!ctype_upper($key)) {\n\
    \t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\tif (!ctype_lower($key)) {\n\
    \t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: ctype_lower(): Argument of type int will be interpreted as\
    \ string in the future in /tmp/tmp3casbiw8.php on line 26\n\nWarning: Undefined\
    \ array key 0 in /tmp/tmp3casbiw8.php on line 18\n\nDeprecated: ctype_upper():\
    \ Argument of type null will be interpreted as string in the future in /tmp/tmp3casbiw8.php\
    \ on line 19\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3casbiw8.php:45\n\
    Stack trace:\n#0 /tmp/tmp3casbiw8.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp3casbiw8.php\
    \ on line 45\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif(empty($dict)) {\n\t\treturn false;\n\t}\n\t$lower = array_keys($dict);\n\
    \t$upper = array_keys($dict);\n\t$lower = array_map('strtolower', $lower);\n\t\
    $upper = array_map('strtoupper', $upper);\n\tif($lower == array_keys($dict) ||\
    \ $upper == array_keys($dict)) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n\
    /* Given an array of strings, return the number of strings that \nstart with the\
    \ letter \u2018a\u2019 (either upper or lower case).\nExamples:\n>>> count_a(array(\"\
    apple\", \"banana\", \"orange\"))\n1\n>>> count_a(array(\"Apple\", \"Banana\"\
    , \"Orange\"))\n1\n>>> count_a(array(\"Apple\", \"Banana\", \"Orange\", \"Apricot\"\
    ))\n2\n>>> count_a(array(\"Apple\", \"Banana\", \"Orange\", \"Apricot\", \"Avocado\"\
    ))\n3\n>>> count_a(array(\"Apple\", \"Banana\", \"Orange\", \"Apricot\", \"Avocado\"\
    , \"aardvark\"))\n4*/\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\",\
    \ \"b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpizjqmgwr.php:50\n\
    Stack trace:\n#0 /tmp/tmpizjqmgwr.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpizjqmgwr.php\
    \ on line 50\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\tif ($keys == $lower || $keys == $upper) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n\n/* Given an array, return true if all keys are strings in\
    \ lower \ncase or all keys are strings in upper case, else return false.\nThe\
    \ function should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj_ims3wr.php:50\n\
    Stack trace:\n#0 /tmp/tmpj_ims3wr.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpj_ims3wr.php\
    \ on line 50\n"
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n    if (empty($dict)) {\n        return false;\n    }\n    $keys = array_keys($dict);\n\
    \    $lower = true;\n    $upper = true;\n    foreach ($keys as $key) {\n     \
    \   if (!ctype_lower($key)) {\n            $lower = false;\n        }\n      \
    \  if (!ctype_upper($key)) {\n            $upper = false;\n        }\n    }\n\
    \    return $lower || $upper;\n}\n\n$dict = array(\"a\" => \"apple\", \"b\" =>\
    \ \"banana\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" =>\
    \ \"apple\", \"A\" => \"banana\", \"B\" => \"banana\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"\
    );\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\");\necho check_dict_case($dict) .\
    \ \"\\n\";\n$dict = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array();\necho check_dict_case($dict) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return check_dict_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"\
    banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"\
    pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    Deprecated: ctype_lower(): Argument of type int will be interpreted as string
    in the future in /tmp/tmpgre2ag3u.php on line 24


    Deprecated: ctype_upper(): Argument of type int will be interpreted as string
    in the future in /tmp/tmpgre2ag3u.php on line 27



    1



    Deprecated: ctype_lower(): Argument of type int will be interpreted as string
    in the future in /tmp/tmpgre2ag3u.php on line 24


    Deprecated: ctype_upper(): Argument of type int will be interpreted as string
    in the future in /tmp/tmpgre2ag3u.php on line 27

    '
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif(empty($dict)) {\n\t\treturn false;\n\t}\n\t$lower = array_keys($dict);\n\
    \t$upper = array_keys($dict);\n\t$lower = array_map('strtolower', $lower);\n\t\
    $upper = array_map('strtoupper', $upper);\n\tif($lower == array_keys($dict) ||\
    \ $upper == array_keys($dict)) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\
    echo check_dict_case(array(\"a\" => \"apple\", \"b\" => \"banana\")) . \"\\n\"\
    ;\necho check_dict_case(array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) . \"\\n\";\necho check_dict_case(array(\"a\" => \"apple\", 8 =>\
    \ \"banana\", \"a\" => \"apple\")) . \"\\n\";\necho check_dict_case(array(\"Name\"\
    \ => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\")) . \"\\n\";\necho check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\")) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n1\n\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppo98z6b_.php:41\n\
    Stack trace:\n#0 /tmp/tmppo98z6b_.php(48): test()\n#1 {main}\n  thrown in /tmp/tmppo98z6b_.php\
    \ on line 41\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$first_key = $keys[0];\n\t$first_key_case = strtoupper($first_key) == $first_key\
    \ ? 'upper' : 'lower';\n\tforeach ($keys as $key) {\n\t\t$key_case = strtoupper($key)\
    \ == $key ? 'upper' : 'lower';\n\t\tif ($key_case != $first_key_case) {\n\t\t\t\
    return false;\n\t\t}\n\t}\n\treturn true;\n}\n\n$dict = array(\"a\" => \"apple\"\
    , \"b\" => \"banana\");\nvar_dump(check_dict_case($dict));\n$dict = array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\");\nvar_dump(check_dict_case($dict));\n\
    $dict = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\");\nvar_dump(check_dict_case($dict));\n\
    $dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"\
    );\nvar_dump(check_dict_case($dict));\n$dict = array(\"STATE\" => \"NC\", \"ZIP\"\
    \ => \"12345\");\nvar_dump(check_dict_case($dict));\n$dict = array();\nvar_dump(check_dict_case($dict));\n\
    function candidate(...$args) {\n    return check_dict_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"\
    banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"\
    pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "bool(true)\nbool(false)\nbool(false)\nbool(true)\nbool(true)\nbool(false)\n\
    \nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj71h232m.php:52\nStack\
    \ trace:\n#0 /tmp/tmpj71h232m.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpj71h232m.php\
    \ on line 52\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\tif ($keys == $lower || $keys == $upper) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n\n/* Given an array, return true if the array is sorted in\
    \ ascending order, else return false.\nThe function should return false is the\
    \ given array is empty.\nExamples:\n>>> check_sorted(array(1, 2, 3, 4, 5))\ntrue\n\
    >>> check_sorted(array(1, 2, 3, 4, 5, 6))\ntrue\n>>> check_sorted(array(1, 2,\
    \ 3, 4, 5, 6, 7))\ntrue\n>>> check_sorted(array(1, 2, 3, 4, 5, 6, 7, 8))\ntrue\n\
    >>> check_sorted(array(1, 2, 3, 4, 5, 6, 7, 8, 9))\ntrue\n>>> check_sorted(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10))\ntrue\n>>> check_sorted(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11))\ntrue\n>>> check_sorted(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12))\ntrue\n>>> check_sorted(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13))\ntrue\n>>> check_sorted(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\
    \ 14))\ntrue\n>>> check_sorted(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\
    \ 14, 15))\ntrue\n>>> check_sorted(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13, 14, 15\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\",\
    \ \"b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 29 in /tmp/tmpauqmgemf.php on
    line 29

    '
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$lower = array_map('strtolower', array_keys($dict));\n\t$upper = array_map('strtoupper',\
    \ array_keys($dict));\n\tif ($lower == array_keys($dict) || $upper == array_keys($dict))\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/* Given an array,\
    \ return true if all keys are strings in lower \ncase or all keys are strings\
    \ in upper case, else return false.\nThe function should return false is the given\
    \ array is empty.\nExamples:\n>>> check_dict_case(array(\"a\" => \"apple\", \"\
    b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\" => \"apple\", \"A\"\
    \ => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0uma87a6.php:47\n\
    Stack trace:\n#0 /tmp/tmp0uma87a6.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp0uma87a6.php\
    \ on line 47\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$lower = array_keys($dict);\n\t$upper = array_keys($dict);\n\tforeach ($lower\
    \ as $key => $value) {\n\t\t$lower[$key] = strtolower($value);\n\t}\n\tforeach\
    \ ($upper as $key => $value) {\n\t\t$upper[$key] = strtoupper($value);\n\t}\n\t\
    if ($lower == array_keys($dict) || $upper == array_keys($dict)) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/* Given an array of strings,\
    \ return a new array containing the first N strings. \nIf N is greater than or\
    \ equal to the length of the array, then return the original array.\nExamples:\n\
    >>> first_n(array(\"a\", \"b\", \"c\", \"d\"), 2)\narray(\"a\", \"b\")\n>>> first_n(array(\"\
    a\", \"b\", \"c\", \"d\"), 4)\narray(\"a\", \"b\", \"c\", \"d\")\n>>> first_n(array(\"\
    a\", \"b\", \"c\", \"d\"), 5)\narray(\"a\", \"b\", \"c\", \"d\")\n>>> first_n(array(\"\
    a\", \"b\", \"c\", \"d\"), 0)\narray()*/\nfunction candidate(...$args) {\n   \
    \ return check_dict_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"b\" => \"banana\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"\
    banana\", \"B\" => \"banana\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"p\" => \"pineapple\", \"5\" => \"banana\", \"\
    a\" => \"apple\")) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\")) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"fruit\" => \"Orange\", \"taste\" =>\
    \ \"Sweet\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi8im2bgs.php:50\n\
    Stack trace:\n#0 /tmp/tmpi8im2bgs.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpi8im2bgs.php\
    \ on line 50\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$lower = array_change_key_case($dict,\
    \ CASE_LOWER);\n\t$upper = array_change_key_case($dict, CASE_UPPER);\n\tif ($lower\
    \ == $dict || $upper == $dict) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n\
    /* Given an array, return true if all keys are strings in lower \ncase or all\
    \ keys are strings in upper case, else return false.\nThe function should return\
    \ false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwubts8mx.php:49\n\
    Stack trace:\n#0 /tmp/tmpwubts8mx.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpwubts8mx.php\
    \ on line 49\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\tif ($keys == $lower || $keys == $upper) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n\n/* Given an array of integers, return the sum of all the\
    \ integers that have an even index, \nmultiplied by the last odd integer in the\
    \ array. If the array is empty, return 0.\nExamples:\n>>> sum_even_indexed_odd_last(array(1,\
    \ 2, 3, 4, 5))\n30\n>>> sum_even_indexed_odd_last(array(1, 2, 3, 4, 5, 6))\n48\n\
    >>> sum_even_indexed_odd_last(array(1, 2, 3, 4, 5, 6, 7))\n56\n>>> sum_even_indexed_odd_last(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8))\n64\n>>> sum_even_indexed_odd_last(array(1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9))\n90\n>>> sum_even_indexed_odd_last(array(1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10))\n110\n>>> sum_even_indexed_odd_last(array(1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11))\n132\n>>> sum_even_indexed_odd_last(array(1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11, 12))\n156\n>>> sum_even_indexed_odd_last(array(1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13))\n182\n>>> sum_even_indexed_odd_last(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))\n210\n>>> sum_even_indexed_odd\nfunction\
    \ candidate(...$args) {\n    return check_dict_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"\
    banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"\
    pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 29 in /tmp/tmpdqu745lt.php on
    line 29

    '
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif(empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\tif($keys == $lower || $keys == $upper) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n\n/* Given an array of integers, return the sum of all integers\
    \ that have an even index.\nExamples:\n>>> sum_even_indexed(array(1, 2, 3, 4,\
    \ 5, 6))\n12\n>>> sum_even_indexed(array(1, 3, 5))\n0\n>>> sum_even_indexed(array(0,\
    \ 2, 4, 6))\n12\n>>> sum_even_indexed(array(1, 2, 1, 0, 1, 2, 1, 0, 1, 2))\n6\n\
    >>> sum_even_indexed(array(1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1))\n7\n>>> sum_even_indexed(array(10,\
    \ -10, 10, -10, 10))\n30*/\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\",\
    \ \"b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpds7rmnc4.php:50\n\
    Stack trace:\n#0 /tmp/tmpds7rmnc4.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpds7rmnc4.php\
    \ on line 50\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$lower = true;\n\t$upper = true;\n\tforeach ($dict as $key => $value) {\n\
    \t\tif (ctype_lower($key)) {\n\t\t\t$upper = false;\n\t\t} else {\n\t\t\t$lower\
    \ = false;\n\t\t}\n\t}\n\treturn $lower || $upper;\n}\n\n/* Given an array, return\
    \ true if the array contains a dictionary \nwith all keys in lower case or all\
    \ keys in upper case, else return false.\nThe function should return false is\
    \ the given array is empty.\nExamples:\n>>> check_dict_case_in_array(array(array(\"\
    a\" => \"apple\", \"b\" => \"banana\")))\ntrue\n>>> check_dict_case_in_array(array(array(\"\
    a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\")))\nfalse\n>>> check_dict_case_in_array(array(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\")))\nfalse\n>>> check_dict_case_in_array(array(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\")))\nfalse\n>>>\
    \ check_dict_case_in_array(array(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\"\
    )))\ntrue\n>>> check_dict_case_in_array(array(array(\"a\" => \"apple\", \"b\"\
    \ => \"banana\"), array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")))\ntrue\n>>>\
    \ check_dict_case_in_array(array(array(\"a\" => \"apple\", \"b\" => \"banana\"\
    ), array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\"), array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")))\nfalse*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: ctype_lower(): Argument of type int will be interpreted as\
    \ string in the future in /tmp/tmpkk1ygoo5.php on line 20\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpkk1ygoo5.php:55\nStack trace:\n#0 /tmp/tmpkk1ygoo5.php(61):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpkk1ygoo5.php on line 55\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$lower = array_change_key_case($dict,\
    \ CASE_LOWER);\n\t$upper = array_change_key_case($dict, CASE_UPPER);\n\tif ($lower\
    \ == $dict || $upper == $dict) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n\
    $dict = array(\"a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" =>\
    \ \"apple\", 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\"\
    \ => \"Houston\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict) . \"\\n\";\n\
    function candidate(...$args) {\n    return check_dict_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"\
    banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"\
    pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n1\n\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy7lqprtj.php:45\n\
    Stack trace:\n#0 /tmp/tmpy7lqprtj.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpy7lqprtj.php\
    \ on line 45\n"
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif(empty($dict)) {\n\t\treturn false;\n\t}\n\t$lower = true;\n\t$upper\
    \ = true;\n\tforeach($dict as $key => $value) {\n\t\tif(!ctype_lower($key)) {\n\
    \t\t\t$lower = false;\n\t\t}\n\t\tif(!ctype_upper($key)) {\n\t\t\t$upper = false;\n\
    \t\t}\n\t}\n\tif($lower || $upper) {\n\t\treturn true;\n\t}\n\treturn false;\n\
    }\n\n/* Given an array, return true if all keys are strings in lower \ncase or\
    \ all keys are strings in upper case, else return false.\nThe function should\
    \ return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Deprecated: ctype_lower(): Argument of type int will be interpreted as string
    in the future in /tmp/tmpcwyiq273.php on line 23


    Deprecated: ctype_upper(): Argument of type int will be interpreted as string
    in the future in /tmp/tmpcwyiq273.php on line 26

    '
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$lower = true;\n\t$upper = true;\n\tforeach ($dict as $key => $value) {\n\
    \t\tif (ctype_lower($key)) {\n\t\t\t$upper = false;\n\t\t} else {\n\t\t\t$lower\
    \ = false;\n\t\t}\n\t}\n\treturn $lower || $upper;\n}\n\n/* Given an array, return\
    \ true if all keys are strings in lower \ncase or all keys are strings in upper\
    \ case, else return false.\nThe function should return false is the given array\
    \ is empty.\nExamples:\n>>> check_dict_case(array(\"a\" => \"apple\", \"b\" =>\
    \ \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\" => \"apple\", \"A\" => \"\
    banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"a\" => \"\
    apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: ctype_lower(): Argument of type int will be interpreted as\
    \ string in the future in /tmp/tmprzk6el8v.php on line 20\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmprzk6el8v.php:51\nStack trace:\n#0 /tmp/tmprzk6el8v.php(57):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmprzk6el8v.php on line 51\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$is_lower = ctype_lower($keys[0]);\n\t$is_upper = ctype_upper($keys[0]);\n\t\
    foreach ($keys as $key) {\n\t\tif ($is_lower && !ctype_lower($key)) {\n\t\t\t\
    return false;\n\t\t}\n\t\tif ($is_upper && !ctype_upper($key)) {\n\t\t\treturn\
    \ false;\n\t\t}\n\t}\n\treturn true;\n}\n\n/* Given a string, return the number\
    \ of words in the string.\nExamples:\n>>> count_words(\"I am a boy\")\n4\n>>>\
    \ count_words(\"I am a boy.\")\n4\n>>> count_words(\"I am a boy. I am a student.\"\
    )\n7\n>>> count_words(\"I am a boy. I am a student. I am a teacher.\")\n9\n>>>\
    \ count_words(\"I am a boy. I am a student. I am a teacher. I am a programmer.\"\
    )\n11*/\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\",\
    \ \"b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: ctype_lower(): Argument of type int will be interpreted as\
    \ string in the future in /tmp/tmp1h7n0i6_.php on line 24\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp1h7n0i6_.php:54\nStack trace:\n#0 /tmp/tmp1h7n0i6_.php(60):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp1h7n0i6_.php on line 54\n"
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n    if (empty($dict)) {\n        return false;\n    }\n    $keys = array_keys($dict);\n\
    \    $first_key = $keys[0];\n    if (ctype_lower($first_key)) {\n        foreach\
    \ ($keys as $key) {\n            if (!ctype_lower($key)) {\n                return\
    \ false;\n            }\n        }\n    } elseif (ctype_upper($first_key)) {\n\
    \        foreach ($keys as $key) {\n            if (!ctype_upper($key)) {\n  \
    \              return false;\n            }\n        }\n    } else {\n       \
    \ return false;\n    }\n    return true;\n}\n\n$dict = array(\"a\" => \"apple\"\
    , \"b\" => \"banana\");\n$dict2 = array(\"a\" => \"apple\", \"A\" => \"banana\"\
    , \"B\" => \"banana\");\n$dict3 = array(\"a\" => \"apple\", 8 => \"banana\", \"\
    a\" => \"apple\");\n$dict4 = array(\"Name\" => \"John\", \"Age\" => \"36\", \"\
    City\" => \"Houston\");\n$dict5 = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\"\
    );\n$dict6 = array();\n\necho check_dict_case($dict) . PHP_EOL;\necho check_dict_case($dict2)\
    \ . PHP_EOL;\necho check_dict_case($dict3) . PHP_EOL;\necho check_dict_case($dict4)\
    \ . PHP_EOL;\necho check_dict_case($dict5) . PHP_EOL;\necho check_dict_case($dict6)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\",\
    \ \"b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    Deprecated: ctype_lower(): Argument of type int will be interpreted as string
    in the future in /tmp/tmpa0rl79az.php on line 24



    1



    Deprecated: ctype_lower(): Argument of type int will be interpreted as string
    in the future in /tmp/tmpa0rl79az.php on line 24

    '
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$keys = array_keys($dict);\n\t$lower = true;\n\t$upper = true;\n\tforeach\
    \ ($keys as $key) {\n\t\tif (strtolower($key) != $key) {\n\t\t\t$lower = false;\n\
    \t\t}\n\t\tif (strtoupper($key) != $key) {\n\t\t\t$upper = false;\n\t\t}\n\t}\n\
    \treturn $lower || $upper;\n}\n\n/* Given an array, return true if all keys are\
    \ strings in lower \ncase or all keys are strings in upper case, else return false.\n\
    The function should return false is the given array is empty.\nExamples:\n>>>\
    \ check_dict_case(array(\"a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppdc1t89f.php:52\n\
    Stack trace:\n#0 /tmp/tmppdc1t89f.php(59): test()\n#1 {main}\n  thrown in /tmp/tmppdc1t89f.php\
    \ on line 52\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n    $lower = true;\n    $upper = true;\n    foreach ($dict as $key => $value)\
    \ {\n        if (strtolower($key) != $key) {\n            $lower = false;\n  \
    \      }\n        if (strtoupper($key) != $key) {\n            $upper = false;\n\
    \        }\n    }\n    return $lower || $upper;\n}\n\n/* Given an array, return\
    \ true if all keys are strings in lower \ncase or all keys are strings in upper\
    \ case, else return false.\nThe function should return false is the given array\
    \ is empty.\nExamples:\n>>> check_dict_case(array(\"a\" => \"apple\", \"b\" =>\
    \ \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\" => \"apple\", \"A\" => \"\
    banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"a\" => \"\
    apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3j7jhonf.php:51\n\
    Stack trace:\n#0 /tmp/tmp3j7jhonf.php(58): test()\n#1 {main}\n  thrown in /tmp/tmp3j7jhonf.php\
    \ on line 51\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$keys = array_keys($dict);\n\t$upper = array_map('strtoupper', $keys);\n\
    \t$lower = array_map('strtolower', $keys);\n\tif ($keys == $upper || $keys ==\
    \ $lower) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/* Given\
    \ an array of integers, return the sum of the integers.\nExamples:\n>>> sum_array(array(1,\
    \ 2, 3))\n6\n>>> sum_array(array(1, 2, 3, 4, 5))\n15\n>>> sum_array(array(1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10))\n55\n>>> sum_array(array(1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20))\n210*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpehxp8fp7.php:44\n\
    Stack trace:\n#0 /tmp/tmpehxp8fp7.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpehxp8fp7.php\
    \ on line 44\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (count($dict) == 0) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$first_key = $keys[0];\n\t$is_lower = ctype_lower($first_key);\n\tforeach ($keys\
    \ as $key) {\n\t\tif ($is_lower != ctype_lower($key)) {\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\treturn true;\n}\n\n$dict = array(\"a\" => \"apple\", \"b\" => \"\
    banana\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" => \"\
    apple\", \"A\" => \"banana\", \"B\" => \"banana\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"\
    );\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\");\necho check_dict_case($dict) .\
    \ \"\\n\";\n$dict = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array();\necho check_dict_case($dict) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return check_dict_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"\
    banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"\
    pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n\nDeprecated: ctype_lower(): Argument of type int will be interpreted\
    \ as string in the future in /tmp/tmph6wckujp.php on line 24\n\n1\n1\n\n\nDeprecated:\
    \ ctype_lower(): Argument of type int will be interpreted as string in the future\
    \ in /tmp/tmph6wckujp.php on line 24\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmph6wckujp.php:51\nStack trace:\n#0 /tmp/tmph6wckujp.php(57):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmph6wckujp.php on line 51\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$lower = array_map('strtolower',\
    \ array_keys($dict));\n\t$upper = array_map('strtoupper', array_keys($dict));\n\
    \tif ($lower == array_keys($dict) || $upper == array_keys($dict)) {\n\t\treturn\
    \ true;\n\t}\n\treturn false;\n}\n\n$dict = array(\"a\" => \"apple\", \"b\" =>\
    \ \"banana\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" =>\
    \ \"apple\", \"A\" => \"banana\", \"B\" => \"banana\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"\
    );\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\");\necho check_dict_case($dict) .\
    \ \"\\n\";\n$dict = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\",\
    \ \"b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n1\n\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpapi7hum9.php:45\n\
    Stack trace:\n#0 /tmp/tmpapi7hum9.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpapi7hum9.php\
    \ on line 45\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$first_key = $keys[0];\n\t$first_key_type = gettype($first_key);\n\tif ($first_key_type\
    \ != \"string\") {\n\t\treturn false;\n\t}\n\t$first_key_case = strtoupper($first_key)\
    \ == $first_key ? \"upper\" : \"lower\";\n\tforeach ($keys as $key) {\n\t\tif\
    \ (gettype($key) != $first_key_type) {\n\t\t\treturn false;\n\t\t}\n\t\t$key_case\
    \ = strtoupper($key) == $key ? \"upper\" : \"lower\";\n\t\tif ($key_case != $first_key_case)\
    \ {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n$dict = array(\"a\"\
    \ => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict) . \"\\n\";\n\
    $dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\");\n\
    echo check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" => \"apple\", 8 =>\
    \ \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict) . \"\\n\";\n$dict\
    \ = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\");\n\
    echo check_dict_case($dict) . \"\\n\";\n$dict = array(\"STATE\" => \"NC\", \"\
    ZIP\" => \"12345\");\necho check_dict_case($dict) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n\n1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph5fiwdzc.php:57\n\
    Stack trace:\n#0 /tmp/tmph5fiwdzc.php(63): test()\n#1 {main}\n  thrown in /tmp/tmph5fiwdzc.php\
    \ on line 57\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$lower = true;\n\t$upper = true;\n\tforeach ($dict as $key => $value) {\n\
    \t\tif (ctype_lower($key)) {\n\t\t\t$upper = false;\n\t\t} else {\n\t\t\t$lower\
    \ = false;\n\t\t}\n\t}\n\treturn $lower || $upper;\n}\n\n/* Given an array, return\
    \ true if all keys are strings in lower \ncase or all keys are strings in upper\
    \ case, else return false.\nThe function should return false is the given array\
    \ is empty.\nExamples:\n>>> check_dict_case(array(\"a\" => \"apple\", \"b\" =>\
    \ \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\" => \"apple\", \"A\" => \"\
    banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"a\" => \"\
    apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: ctype_lower(): Argument of type int will be interpreted as\
    \ string in the future in /tmp/tmprzk6el8v.php on line 20\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmprzk6el8v.php:51\nStack trace:\n#0 /tmp/tmprzk6el8v.php(57):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmprzk6el8v.php on line 51\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\tif ($keys == $lower || $keys == $upper) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n\n$dict = array(\"a\" => \"apple\", \"b\" => \"banana\");\n\
    echo check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"a\" => \"apple\"\
    , \"A\" => \"banana\", \"B\" => \"banana\");\necho check_dict_case($dict);\necho\
    \ \"\\n\";\n$dict = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"\
    );\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"Name\" => \"\
    John\", \"Age\" => \"36\", \"City\" => \"Houston\");\necho check_dict_case($dict);\n\
    echo \"\\n\";\n$dict = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\necho\
    \ check_dict_case($dict);\necho \"\\n\";\nfunction candidate(...$args) {\n   \
    \ return check_dict_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"b\" => \"banana\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"\
    banana\", \"B\" => \"banana\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"p\" => \"pineapple\", \"5\" => \"banana\", \"\
    a\" => \"apple\")) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\")) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"fruit\" => \"Orange\", \"taste\" =>\
    \ \"Sweet\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n1\n\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa52pw_gy.php:51\n\
    Stack trace:\n#0 /tmp/tmpa52pw_gy.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpa52pw_gy.php\
    \ on line 51\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$keys = array_keys($dict);\n\t$lower = array_map('strtolower', $keys);\n\
    \t$upper = array_map('strtoupper', $keys);\n\tif ($keys == $lower || $keys ==\
    \ $upper) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/* Given\
    \ an array, return true if all keys are strings in lower \ncase or all keys are\
    \ strings in upper case, else return false.\nThe function should return false\
    \ is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"a\" =>\
    \ \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\" => \"\
    apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7kk1wsuy.php:48\n\
    Stack trace:\n#0 /tmp/tmp7kk1wsuy.php(55): test()\n#1 {main}\n  thrown in /tmp/tmp7kk1wsuy.php\
    \ on line 48\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$first_key = $keys[0];\n\t$is_lower = ctype_lower($first_key);\n\t$is_upper\
    \ = ctype_upper($first_key);\n\tforeach ($keys as $key) {\n\t\tif ($is_lower &&\
    \ !ctype_lower($key)) {\n\t\t\treturn false;\n\t\t}\n\t\tif ($is_upper && !ctype_upper($key))\
    \ {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n$dict = array(\"a\"\
    \ => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict) . \"\\n\";\n\
    $dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\");\n\
    echo check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" => \"apple\", 8 =>\
    \ \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict) . \"\\n\";\n$dict\
    \ = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\");\n\
    echo check_dict_case($dict) . \"\\n\";\n$dict = array(\"STATE\" => \"NC\", \"\
    ZIP\" => \"12345\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array();\n\
    echo check_dict_case($dict) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ check_dict_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"b\" => \"banana\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"\
    banana\", \"B\" => \"banana\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"p\" => \"pineapple\", \"5\" => \"banana\", \"\
    a\" => \"apple\")) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\")) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"fruit\" => \"Orange\", \"taste\" =>\
    \ \"Sweet\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n\nDeprecated: ctype_lower(): Argument of type int will be interpreted\
    \ as string in the future in /tmp/tmpx36vpv0v.php on line 25\n\n1\n1\n\n\nDeprecated:\
    \ ctype_lower(): Argument of type int will be interpreted as string in the future\
    \ in /tmp/tmpx36vpv0v.php on line 25\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpx36vpv0v.php:55\nStack trace:\n#0 /tmp/tmpx36vpv0v.php(61):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpx36vpv0v.php on line 55\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$lower = true;\n\t$upper\
    \ = true;\n\tforeach ($dict as $key => $value) {\n\t\tif (ctype_lower($key)) {\n\
    \t\t\t$upper = false;\n\t\t} else {\n\t\t\t$lower = false;\n\t\t}\n\t}\n\treturn\
    \ $lower || $upper;\n}\n\n/*Given an array of integers, return the sum of all\
    \ the integers that have an even index, multiplied by their index.\nIf the array\
    \ is empty, you should return 0.\nExamples:\n>>> sum_even_indexed(array(1, 2,\
    \ 3, 4, 5, 6))\n12\n>>> sum_even_indexed(array(1, 3, 5))\n0\n>>> sum_even_indexed(array(0,\
    \ 0, 0, 0, 0))\n0\n>>> sum_even_indexed(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))\n\
    90*/\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\",\
    \ \"b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: ctype_lower(): Argument of type int will be interpreted as\
    \ string in the future in /tmp/tmp7jk3x6zr.php on line 23\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp7jk3x6zr.php:51\nStack trace:\n#0 /tmp/tmp7jk3x6zr.php(57):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp7jk3x6zr.php on line 51\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$first_key = $keys[0];\n\t$is_lower = ctype_lower($first_key);\n\t$is_upper\
    \ = ctype_upper($first_key);\n\tforeach ($keys as $key) {\n\t\tif ($is_lower &&\
    \ !ctype_lower($key)) {\n\t\t\treturn false;\n\t\t}\n\t\tif ($is_upper && !ctype_upper($key))\
    \ {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n$dict = array(\"a\"\
    \ => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict) . PHP_EOL;\n\
    $dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\");\n\
    echo check_dict_case($dict) . PHP_EOL;\n$dict = array(\"a\" => \"apple\", 8 =>\
    \ \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict) . PHP_EOL;\n$dict\
    \ = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\");\n\
    echo check_dict_case($dict) . PHP_EOL;\n$dict = array(\"STATE\" => \"NC\", \"\
    ZIP\" => \"12345\");\necho check_dict_case($dict) . PHP_EOL;\n$dict = array();\n\
    echo check_dict_case($dict) . PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ check_dict_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"b\" => \"banana\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"\
    banana\", \"B\" => \"banana\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"p\" => \"pineapple\", \"5\" => \"banana\", \"\
    a\" => \"apple\")) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\")) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"fruit\" => \"Orange\", \"taste\" =>\
    \ \"Sweet\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n\nDeprecated: ctype_lower(): Argument of type int will be interpreted\
    \ as string in the future in /tmp/tmp0nux9vt5.php on line 25\n\n1\n1\n\n\nDeprecated:\
    \ ctype_lower(): Argument of type int will be interpreted as string in the future\
    \ in /tmp/tmp0nux9vt5.php on line 25\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp0nux9vt5.php:55\nStack trace:\n#0 /tmp/tmp0nux9vt5.php(61):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp0nux9vt5.php on line 55\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$lower = array_change_key_case($dict,\
    \ CASE_LOWER);\n\t$upper = array_change_key_case($dict, CASE_UPPER);\n\treturn\
    \ ($dict == $lower || $dict == $upper);\n}\n\n/* Given an array, return true if\
    \ all keys are strings in lower \ncase or all keys are strings in upper case,\
    \ else return false.\nThe function should return false is the given array is empty.\n\
    Examples:\n>>> check_dict_case(array(\"a\" => \"apple\", \"b\" => \"banana\"))\n\
    true\n>>> check_dict_case(array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\"\
    \ => \"banana\"))\nfalse\n>>> check_dict_case(array(\"a\" => \"apple\", 8 => \"\
    banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"Name\" => \"\
    John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1opebauh.php:46\n\
    Stack trace:\n#0 /tmp/tmp1opebauh.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp1opebauh.php\
    \ on line 46\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$lower = array_change_key_case($dict,\
    \ CASE_LOWER);\n\t$upper = array_change_key_case($dict, CASE_UPPER);\n\tif ($lower\
    \ == $dict || $upper == $dict) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n\
    echo check_dict_case(array(\"a\" => \"apple\", \"b\" => \"banana\")) . \"\\n\"\
    ;\necho check_dict_case(array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) . \"\\n\";\necho check_dict_case(array(\"a\" => \"apple\", 8 =>\
    \ \"banana\", \"a\" => \"apple\")) . \"\\n\";\necho check_dict_case(array(\"Name\"\
    \ => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\")) . \"\\n\";\necho check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\")) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n1\n\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaxc31_if.php:40\n\
    Stack trace:\n#0 /tmp/tmpaxc31_if.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpaxc31_if.php\
    \ on line 40\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$lower = true;\n\t$upper = true;\n\tforeach ($dict as $key => $value) {\n\
    \t\tif (!ctype_lower($key)) {\n\t\t\t$lower = false;\n\t\t}\n\t\tif (!ctype_upper($key))\
    \ {\n\t\t\t$upper = false;\n\t\t}\n\t}\n\tif ($lower || $upper) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/* Given an array of strings,\
    \ return a new array containing the \nfirst N strings. N will be passed as a parameter.\n\
    Examples:\n>>> first_n(array(\"a\", \"b\", \"c\", \"d\", \"e\"), 3)\narray(\"\
    a\", \"b\", \"c\")\n>>> first_n(array(\"a\", \"b\", \"c\", \"d\", \"e\"), 2)\n\
    array(\"a\", \"b\")\n>>> first_n(array(\"a\", \"b\", \"c\", \"d\", \"e\"), 5)\n\
    array(\"a\", \"b\", \"c\", \"d\", \"e\")\n>>> first_n(array(\"a\", \"b\", \"c\"\
    , \"d\", \"e\"), 0)\narray()*/\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\",\
    \ \"b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: ctype_lower(): Argument of type int will be interpreted as\
    \ string in the future in /tmp/tmpxwetwsjx.php on line 20\n\nDeprecated: ctype_upper():\
    \ Argument of type int will be interpreted as string in the future in /tmp/tmpxwetwsjx.php\
    \ on line 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxwetwsjx.php:56\n\
    Stack trace:\n#0 /tmp/tmpxwetwsjx.php(59): test()\n#1 {main}\n  thrown in /tmp/tmpxwetwsjx.php\
    \ on line 56\n"
  timestamp: 1660220839
- exit_code: 0
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$is_lower = ctype_lower($keys[0]);\n\tforeach ($keys as $key) {\n\t\tif ($is_lower\
    \ && !ctype_lower($key)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!$is_lower &&\
    \ !ctype_upper($key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\
    function candidate(...$args) {\n    return check_dict_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"\
    banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"\
    pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Deprecated: ctype_lower(): Argument of type int will be interpreted as string
    in the future in /tmp/tmpwh8pbps8.php on line 23

    '
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$keys = array_keys($dict);\n\t$first_key = $keys[0];\n\t$is_lower = ctype_lower($first_key);\n\
    \t$is_upper = ctype_upper($first_key);\n\tforeach ($keys as $key) {\n\t\tif ($is_lower\
    \ && !ctype_lower($key)) {\n\t\t\treturn false;\n\t\t}\n\t\tif ($is_upper && !ctype_upper($key))\
    \ {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n$dict = array(\"a\"\
    \ => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict) . \"\\n\";\n\
    $dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\");\n\
    echo check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" => \"apple\", 8 =>\
    \ \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict) . \"\\n\";\n$dict\
    \ = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\");\n\
    echo check_dict_case($dict) . \"\\n\";\n$dict = array(\"STATE\" => \"NC\", \"\
    ZIP\" => \"12345\");\necho check_dict_case($dict) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n\nDeprecated: ctype_lower(): Argument of type int will be interpreted\
    \ as string in the future in /tmp/tmp0r96l_n2.php on line 22\n\n1\n1\n\nDeprecated:\
    \ ctype_lower(): Argument of type int will be interpreted as string in the future\
    \ in /tmp/tmp0r96l_n2.php on line 22\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp0r96l_n2.php:50\nStack trace:\n#0 /tmp/tmp0r96l_n2.php(56):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp0r96l_n2.php on line 50\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif(empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\tif($keys == $lower || $keys == $upper) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n\n$dict = array(\"a\" => \"apple\", \"b\" => \"banana\");\n\
    echo check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"a\" => \"apple\"\
    , \"A\" => \"banana\", \"B\" => \"banana\");\necho check_dict_case($dict);\necho\
    \ \"\\n\";\n$dict = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"\
    );\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"Name\" => \"\
    John\", \"Age\" => \"36\", \"City\" => \"Houston\");\necho check_dict_case($dict);\n\
    echo \"\\n\";\n$dict = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\necho\
    \ check_dict_case($dict);\necho \"\\n\";\nfunction candidate(...$args) {\n   \
    \ return check_dict_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"b\" => \"banana\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"\
    banana\", \"B\" => \"banana\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"p\" => \"pineapple\", \"5\" => \"banana\", \"\
    a\" => \"apple\")) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\")) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"fruit\" => \"Orange\", \"taste\" =>\
    \ \"Sweet\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n1\n\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaa2ifmc8.php:51\n\
    Stack trace:\n#0 /tmp/tmpaa2ifmc8.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpaa2ifmc8.php\
    \ on line 51\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$lower = true;\n\t$upper = true;\n\tforeach ($dict as $key => $value) {\n\
    \t\tif (!ctype_lower($key)) {\n\t\t\t$lower = false;\n\t\t}\n\t\tif (!ctype_upper($key))\
    \ {\n\t\t\t$upper = false;\n\t\t}\n\t}\n\tif ($lower || $upper) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/* Given an array of integers,\
    \ return true if the array contains \ntwo numbers that add up to a given number.\n\
    Examples:\n>>> check_sum_exists(array(1, 2, 3, 4, 5), 9)\ntrue\n>>> check_sum_exists(array(1,\
    \ 2, 3, 4, 5), 8)\nfalse\n>>> check_sum_exists(array(1, 2, 3, 4, 5), 7)\ntrue\n\
    >>> check_sum_exists(array(1, 2, 3, 4, 5), 6)\ntrue\n>>> check_sum_exists(array(1,\
    \ 2, 3, 4, 5), 5)\nfalse*/\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\",\
    \ \"b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: ctype_lower(): Argument of type int will be interpreted as\
    \ string in the future in /tmp/tmpm6e5amc6.php on line 20\n\nDeprecated: ctype_upper():\
    \ Argument of type int will be interpreted as string in the future in /tmp/tmpm6e5amc6.php\
    \ on line 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm6e5amc6.php:58\n\
    Stack trace:\n#0 /tmp/tmpm6e5amc6.php(61): test()\n#1 {main}\n  thrown in /tmp/tmpm6e5amc6.php\
    \ on line 58\n"
  timestamp: 1660220839
- exit_code: 0
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n    if (empty($dict)) {\n        return false;\n    }\n    $keys = array_keys($dict);\n\
    \    $first_key = $keys[0];\n    $is_lower = ctype_lower($first_key);\n    $is_upper\
    \ = ctype_upper($first_key);\n    if ($is_lower || $is_upper) {\n        foreach\
    \ ($keys as $key) {\n            if ($is_lower && !ctype_lower($key)) {\n    \
    \            return false;\n            }\n            if ($is_upper && !ctype_upper($key))\
    \ {\n                return false;\n            }\n        }\n        return true;\n\
    \    }\n    return false;\n}\n\n$dict = array(\"a\" => \"apple\", \"b\" => \"\
    banana\");\nvar_dump(check_dict_case($dict));\n$dict = array(\"a\" => \"apple\"\
    , \"A\" => \"banana\", \"B\" => \"banana\");\nvar_dump(check_dict_case($dict));\n\
    $dict = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\");\nvar_dump(check_dict_case($dict));\n\
    $dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"\
    );\nvar_dump(check_dict_case($dict));\n$dict = array(\"STATE\" => \"NC\", \"ZIP\"\
    \ => \"12345\");\nvar_dump(check_dict_case($dict));\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'bool(true)

    bool(false)


    Deprecated: ctype_lower(): Argument of type int will be interpreted as string
    in the future in /tmp/tmpvs_mjn1t.php on line 26

    bool(false)

    bool(false)

    bool(true)


    Deprecated: ctype_lower(): Argument of type int will be interpreted as string
    in the future in /tmp/tmpvs_mjn1t.php on line 26

    '
  timestamp: 1660220839
- exit_code: 0
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$first_key = $keys[0];\n\t$is_lower = ctype_lower($first_key);\n\tforeach ($keys\
    \ as $key) {\n\t\tif ($is_lower && !ctype_lower($key)) {\n\t\t\treturn false;\n\
    \t\t}\n\t\tif (!$is_lower && !ctype_upper($key)) {\n\t\t\treturn false;\n\t\t\
    }\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\",\
    \ \"b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Deprecated: ctype_lower(): Argument of type int will be interpreted as string
    in the future in /tmp/tmp4187fdp4.php on line 24

    '
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\treturn ($keys == $lower || $keys == $upper);\n}\n\n/* Given an array,\
    \ return true if all keys are strings in lower \ncase or all keys are strings\
    \ in upper case, else return false.\nThe function should return false is the given\
    \ array is empty.\nExamples:\n>>> check_dict_case(array(\"a\" => \"apple\", \"\
    b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\" => \"apple\", \"A\"\
    \ => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqnjid_01.php:47\n\
    Stack trace:\n#0 /tmp/tmpqnjid_01.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpqnjid_01.php\
    \ on line 47\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif(empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$first_key = $keys[0];\n\t$is_upper = strtoupper($first_key) == $first_key;\n\
    \tforeach($keys as $key) {\n\t\tif($is_upper) {\n\t\t\tif(strtoupper($key) !=\
    \ $key) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\tif(strtolower($key)\
    \ != $key) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\n\
    /* Given an array of integers, return true if the array contains \na 3 next to\
    \ a 3 somewhere.\nExamples:\n>>> has_33(array(1, 3, 3))\ntrue\n>>> has_33(array(1,\
    \ 3, 1, 3))\nfalse\n>>> has_33(array(3, 1, 3))\nfalse\n>>> has_33(array(3, 1,\
    \ 3, 3))\ntrue\n>>> has_33(array(3, 4, 5, 3, 3))\ntrue\n>>> has_33(array(3, 4,\
    \ 5, 6, 7))\nfalse*/\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\",\
    \ \"b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpith9la6i.php:59\n\
    Stack trace:\n#0 /tmp/tmpith9la6i.php(66): test()\n#1 {main}\n  thrown in /tmp/tmpith9la6i.php\
    \ on line 59\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\treturn ($keys == $lower || $keys == $upper);\n}\necho check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\")) ? \"true\" : \"false\";\necho \"\\n\"\
    ;\necho check_dict_case(array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) ? \"true\" : \"false\";\necho \"\\n\";\necho check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\")) ? \"true\" : \"false\"\
    ;\necho \"\\n\";\necho check_dict_case(array(\"Name\" => \"John\", \"Age\" =>\
    \ \"36\", \"City\" => \"Houston\")) ? \"true\" : \"false\";\necho \"\\n\";\necho\
    \ check_dict_case(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) ? \"true\"\
    \ : \"false\";\necho \"\\n\";\necho check_dict_case(array()) ? \"true\" : \"false\"\
    ;\necho \"\\n\";\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\",\
    \ \"b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "true\nfalse\ntrue\nfalse\ntrue\nfalse\n\nFatal error: Uncaught Exception:\
    \ Test failed! in /tmp/tmpf_dwfsc2.php:44\nStack trace:\n#0 /tmp/tmpf_dwfsc2.php(51):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpf_dwfsc2.php on line 44\n"
  timestamp: 1660220839
- exit_code: 0
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$first_key = $keys[0];\n\t$first_key_is_upper = ctype_upper($first_key);\n\t\
    foreach ($keys as $key) {\n\t\tif ($first_key_is_upper) {\n\t\t\tif (!ctype_upper($key))\
    \ {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\tif (!ctype_lower($key))\
    \ {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\n$dict =\
    \ array(\"a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" =>\
    \ \"apple\", 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\"\
    \ => \"Houston\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict) . \"\\n\";\n\
    $dict = array();\necho check_dict_case($dict) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    Deprecated: ctype_lower(): Argument of type int will be interpreted as string
    in the future in /tmp/tmpph0_d05m.php on line 29



    1



    Deprecated: ctype_lower(): Argument of type int will be interpreted as string
    in the future in /tmp/tmpph0_d05m.php on line 29

    '
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$is_lower = true;\n\t$is_upper = true;\n\tforeach ($dict as $key => $value)\
    \ {\n\t\tif (ctype_lower($key)) {\n\t\t\t$is_upper = false;\n\t\t} else {\n\t\t\
    \t$is_lower = false;\n\t\t}\n\t}\n\treturn $is_lower || $is_upper;\n}\n\n$dict\
    \ = array(\"a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict);\n\
    echo \"\\n\";\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\");\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict);\n\
    echo \"\\n\";\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\"\
    \ => \"Houston\");\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict);\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\",\
    \ \"b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n\nDeprecated: ctype_lower(): Argument of type int will be interpreted\
    \ as string in the future in /tmp/tmpp1c0xqrg.php on line 20\n\n1\n1\n\nDeprecated:\
    \ ctype_lower(): Argument of type int will be interpreted as string in the future\
    \ in /tmp/tmpp1c0xqrg.php on line 20\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpp1c0xqrg.php:52\nStack trace:\n#0 /tmp/tmpp1c0xqrg.php(58):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpp1c0xqrg.php on line 52\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$first_key = $keys[0];\n\tif (is_string($first_key)) {\n\t\t$case = strtoupper($first_key)\
    \ == $first_key ? 'upper' : 'lower';\n\t\tforeach ($keys as $key) {\n\t\t\tif\
    \ (is_string($key)) {\n\t\t\t\tif (strtoupper($key) == $key && $case == 'lower')\
    \ {\n\t\t\t\t\treturn false;\n\t\t\t\t} else if (strtolower($key) == $key && $case\
    \ == 'upper') {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t\
    return false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\n\n$dict = array(\"a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" =>\
    \ \"apple\", 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\"\
    \ => \"Houston\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict) . \"\\n\";\n\
    function candidate(...$args) {\n    return check_dict_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"\
    banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"\
    pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n\n1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5_fa550f.php:59\n\
    Stack trace:\n#0 /tmp/tmp5_fa550f.php(65): test()\n#1 {main}\n  thrown in /tmp/tmp5_fa550f.php\
    \ on line 59\n"
  timestamp: 1660220839
- exit_code: 0
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$is_lower = ctype_lower($keys[0]);\n\tforeach ($keys as $key) {\n\t\tif ($is_lower\
    \ && !ctype_lower($key)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!$is_lower &&\
    \ !ctype_upper($key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\
    $dict = array(\"a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict);\n\
    echo \"\\n\";\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\");\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict);\n\
    echo \"\\n\";\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\"\
    \ => \"Houston\");\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict);\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\",\
    \ \"b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    Deprecated: ctype_lower(): Argument of type int will be interpreted as string
    in the future in /tmp/tmp6375rp6s.php on line 23



    1


    Deprecated: ctype_lower(): Argument of type int will be interpreted as string
    in the future in /tmp/tmp6375rp6s.php on line 23

    '
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$is_lower = true;\n\t$is_upper = true;\n\tforeach ($dict as $key => $value)\
    \ {\n\t\tif (is_string($key)) {\n\t\t\tif (ctype_lower($key)) {\n\t\t\t\t$is_upper\
    \ = false;\n\t\t\t} else {\n\t\t\t\t$is_lower = false;\n\t\t\t}\n\t\t} else {\n\
    \t\t\treturn false;\n\t\t}\n\t}\n\treturn $is_lower || $is_upper;\n}\n\n$dict\
    \ = array(\"a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" =>\
    \ \"apple\", 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\"\
    \ => \"Houston\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict) . \"\\n\";\n\
    function candidate(...$args) {\n    return check_dict_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"\
    banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"\
    pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n\n1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc7vtdst1.php:51\n\
    Stack trace:\n#0 /tmp/tmpc7vtdst1.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpc7vtdst1.php\
    \ on line 51\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$lower = true;\n\t$upper = true;\n\tforeach ($dict as $key => $value) {\n\
    \t\tif (ctype_lower($key)) {\n\t\t\t$upper = false;\n\t\t} else {\n\t\t\t$lower\
    \ = false;\n\t\t}\n\t}\n\treturn $lower || $upper;\n}\n\n$dict = array(\"a\" =>\
    \ \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict);\necho \"\\n\"\
    ;\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"\
    );\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"a\" => \"apple\"\
    , 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict);\necho \"\
    \\n\";\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\");\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict);\necho \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(\"p\" => \"pineapple\", \"b\"\
    \ => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\"\
    )) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n\nDeprecated: ctype_lower(): Argument of type int will be interpreted\
    \ as string in the future in /tmp/tmplu5gs12g.php on line 20\n\n1\n1\n\nDeprecated:\
    \ ctype_lower(): Argument of type int will be interpreted as string in the future\
    \ in /tmp/tmplu5gs12g.php on line 20\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmplu5gs12g.php:52\nStack trace:\n#0 /tmp/tmplu5gs12g.php(58):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmplu5gs12g.php on line 52\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\tif ($keys == $lower || $keys == $upper) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n\n/* Given an array, return a new array with the elements\
    \ in reverse order.\nExamples:\n>>> reverse_array(array(1, 2, 3, 4, 5))\narray(5,\
    \ 4, 3, 2, 1)\n>>> reverse_array(array(\"a\", \"b\", \"c\", \"d\", \"e\"))\narray(\"\
    e\", \"d\", \"c\", \"b\", \"a\")\n>>> reverse_array(array(\"a\", \"b\", \"c\"\
    , \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\"\
    , \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\"\
    , \"z\"))\narray(\"z\", \"y\", \"x\", \"w\", \"v\", \"u\", \"t\", \"s\", \"r\"\
    , \"q\", \"p\", \"o\", \"n\", \"m\", \"l\", \"k\", \"j\", \"i\", \"h\", \"g\"\
    , \"f\", \"e\", \"d\", \"c\", \"b\", \"a\")\n>>> reverse_array(array(\"a\", \"\
    b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"\
    m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"\
    x\", \"y\", \"z\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"\
    I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"\
    T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"\nfunction candidate(...$args) {\n \
    \   return check_dict_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"b\" => \"banana\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"\
    banana\", \"B\" => \"banana\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"p\" => \"pineapple\", \"5\" => \"banana\", \"\
    a\" => \"apple\")) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\")) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"fruit\" => \"Orange\", \"taste\" =>\
    \ \"Sweet\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 29 in /tmp/tmpa0juda76.php on
    line 29

    '
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$keys = array_keys($dict);\n\t$first_key = $keys[0];\n\t$is_upper = ctype_upper($first_key);\n\
    \tforeach ($keys as $key) {\n\t\tif ($is_upper && !ctype_upper($key)) {\n\t\t\t\
    return false;\n\t\t} else if (!$is_upper && !ctype_lower($key)) {\n\t\t\treturn\
    \ false;\n\t\t}\n\t}\n\treturn true;\n}\n\n$dict = array(\"a\" => \"apple\", \"\
    b\" => \"banana\");\n$dict2 = array(\"a\" => \"apple\", \"A\" => \"banana\", \"\
    B\" => \"banana\");\n$dict3 = array(\"a\" => \"apple\", 8 => \"banana\", \"a\"\
    \ => \"apple\");\n$dict4 = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\"\
    \ => \"Houston\");\n$dict5 = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\n\
    \necho check_dict_case($dict) . \"\\n\";\necho check_dict_case($dict2) . \"\\\
    n\";\necho check_dict_case($dict3) . \"\\n\";\necho check_dict_case($dict4) .\
    \ \"\\n\";\necho check_dict_case($dict5) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n\nDeprecated: ctype_lower(): Argument of type int will be interpreted\
    \ as string in the future in /tmp/tmp5fywiomk.php on line 23\n\n\n1\n\nDeprecated:\
    \ ctype_lower(): Argument of type int will be interpreted as string in the future\
    \ in /tmp/tmp5fywiomk.php on line 23\n\nWarning: Undefined array key 0 in /tmp/tmp5fywiomk.php\
    \ on line 18\n\nDeprecated: ctype_upper(): Argument of type null will be interpreted\
    \ as string in the future in /tmp/tmp5fywiomk.php on line 19\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp5fywiomk.php:52\nStack trace:\n#0 /tmp/tmp5fywiomk.php(55):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp5fywiomk.php on line 52\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n    $keys = array_keys($dict);\n    $first = $keys[0];\n    $is_upper = ctype_upper($first);\n\
    \    $is_lower = ctype_lower($first);\n    foreach ($keys as $key) {\n       \
    \ if ($is_upper && !ctype_upper($key)) {\n            return false;\n        }\n\
    \        if ($is_lower && !ctype_lower($key)) {\n            return false;\n \
    \       }\n    }\n    return true;\n}\n\n$dict = array(\"a\" => \"apple\", \"\
    b\" => \"banana\");\n$dict2 = array(\"a\" => \"apple\", \"A\" => \"banana\", \"\
    B\" => \"banana\");\n$dict3 = array(\"a\" => \"apple\", 8 => \"banana\", \"a\"\
    \ => \"apple\");\n$dict4 = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\"\
    \ => \"Houston\");\n$dict5 = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\n\
    \necho check_dict_case($dict) . \"\\n\";\necho check_dict_case($dict2) . \"\\\
    n\";\necho check_dict_case($dict3) . \"\\n\";\necho check_dict_case($dict4) .\
    \ \"\\n\";\necho check_dict_case($dict5) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n\nDeprecated: ctype_lower(): Argument of type int will be interpreted\
    \ as string in the future in /tmp/tmpd055fg3u.php on line 25\n\n1\n1\n\nDeprecated:\
    \ ctype_lower(): Argument of type int will be interpreted as string in the future\
    \ in /tmp/tmpd055fg3u.php on line 25\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpd055fg3u.php:51\nStack trace:\n#0 /tmp/tmpd055fg3u.php(57):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpd055fg3u.php on line 51\n"
  timestamp: 1660220839
- exit_code: 0
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif(empty($dict)) return false;\n\t$keys = array_keys($dict);\n\t$keys_lower\
    \ = array_map('strtolower', $keys);\n\t$keys_upper = array_map('strtoupper', $keys);\n\
    \tif($keys === $keys_lower || $keys === $keys_upper) return true;\n\treturn false;\n\
    }\n\n$dict = array(\"a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict)\
    \ ? \"true\" : \"false\";\necho \"\\n\";\n$dict = array(\"a\" => \"apple\", \"\
    A\" => \"banana\", \"B\" => \"banana\");\necho check_dict_case($dict) ? \"true\"\
    \ : \"false\";\necho \"\\n\";\n$dict = array(\"a\" => \"apple\", 8 => \"banana\"\
    , \"a\" => \"apple\");\necho check_dict_case($dict) ? \"true\" : \"false\";\n\
    echo \"\\n\";\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\"\
    \ => \"Houston\");\necho check_dict_case($dict) ? \"true\" : \"false\";\necho\
    \ \"\\n\";\n$dict = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict)\
    \ ? \"true\" : \"false\";\necho \"\\n\";\nfunction candidate(...$args) {\n   \
    \ return check_dict_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"b\" => \"banana\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"\
    banana\", \"B\" => \"banana\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"p\" => \"pineapple\", \"5\" => \"banana\", \"\
    a\" => \"apple\")) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\")) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"fruit\" => \"Orange\", \"taste\" =>\
    \ \"Sweet\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    false

    false

    false

    true

    '
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$upper = array_map('strtoupper', $keys);\n\t$lower = array_map('strtolower',\
    \ $keys);\n\tif ($keys == $upper || $keys == $lower) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n\n/* Given an array of integers, return the sum of all the\
    \ integers \nthat have an even index, multiplied by the integer at the last index.\n\
    If the array is empty, return 0.\nExamples:\n>>> sum_even_indexed($array)\n0\n\
    >>> sum_even_indexed(array(1, 2, 3, 4, 5))\n30\n>>> sum_even_indexed(array(1,\
    \ 2, 3, 4, 5, 6))\n48\n>>> sum_even_indexed(array(1, 2, 3, 4, 5, 6, 7))\n56\n\
    >>> sum_even_indexed(array(1, 2, 3, 4, 5, 6, 7, 8))\n64\n>>> sum_even_indexed(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9))\n72\n>>> sum_even_indexed(array(1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10))\n80*/\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\",\
    \ \"b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3jfgs5_t.php:54\n\
    Stack trace:\n#0 /tmp/tmp3jfgs5_t.php(61): test()\n#1 {main}\n  thrown in /tmp/tmp3jfgs5_t.php\
    \ on line 54\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\tif ($keys == $lower || $keys == $upper) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n\n$dict = array(\"a\" => \"apple\", \"b\" => \"banana\");\n\
    echo check_dict_case($dict) . PHP_EOL;\n$dict = array(\"a\" => \"apple\", \"A\"\
    \ => \"banana\", \"B\" => \"banana\");\necho check_dict_case($dict) . PHP_EOL;\n\
    $dict = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\");\necho\
    \ check_dict_case($dict) . PHP_EOL;\n$dict = array(\"Name\" => \"John\", \"Age\"\
    \ => \"36\", \"City\" => \"Houston\");\necho check_dict_case($dict) . PHP_EOL;\n\
    $dict = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\",\
    \ \"b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n1\n\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpptt_rnmd.php:46\n\
    Stack trace:\n#0 /tmp/tmpptt_rnmd.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpptt_rnmd.php\
    \ on line 46\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$keys = array_keys($dict);\n\t$count = count($keys);\n\t$lower = 0;\n\t\
    $upper = 0;\n\tfor ($i = 0; $i < $count; $i++) {\n\t\tif (ctype_lower($keys[$i]))\
    \ {\n\t\t\t$lower++;\n\t\t} elseif (ctype_upper($keys[$i])) {\n\t\t\t$upper++;\n\
    \t\t}\n\t}\n\tif ($lower == $count || $upper == $count) {\n\t\treturn true;\n\t\
    } else {\n\t\treturn false;\n\t}\n}\n$dict = array(\"a\" => \"apple\", \"b\" =>\
    \ \"banana\");\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"\
    a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\");\necho check_dict_case($dict);\n\
    echo \"\\n\";\n$dict = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"\
    apple\");\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"Name\"\
    \ => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\");\necho check_dict_case($dict);\n\
    echo \"\\n\";\n$dict = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\necho\
    \ check_dict_case($dict);\necho \"\\n\";\nfunction candidate(...$args) {\n   \
    \ return check_dict_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"b\" => \"banana\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"\
    banana\", \"B\" => \"banana\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"p\" => \"pineapple\", \"5\" => \"banana\", \"\
    a\" => \"apple\")) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\")) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"fruit\" => \"Orange\", \"taste\" =>\
    \ \"Sweet\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n\nDeprecated: ctype_lower(): Argument of type int will be interpreted\
    \ as string in the future in /tmp/tmpu6zvx9j9.php on line 22\n\nDeprecated: ctype_upper():\
    \ Argument of type int will be interpreted as string in the future in /tmp/tmpu6zvx9j9.php\
    \ on line 24\n\n\n1\n\nDeprecated: ctype_lower(): Argument of type int will be\
    \ interpreted as string in the future in /tmp/tmpu6zvx9j9.php on line 22\n\nDeprecated:\
    \ ctype_upper(): Argument of type int will be interpreted as string in the future\
    \ in /tmp/tmpu6zvx9j9.php on line 24\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpu6zvx9j9.php:60\nStack trace:\n#0 /tmp/tmpu6zvx9j9.php(63):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpu6zvx9j9.php on line 60\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$keys = array_keys($dict);\n\t$values = array_values($dict);\n\t$upper\
    \ = array_map('strtoupper', $keys);\n\t$lower = array_map('strtolower', $keys);\n\
    \tif ($keys == $upper || $keys == $lower) {\n\t\treturn true;\n\t} else {\n\t\t\
    return false;\n\t}\n}\n\n/* Given an array, return true if all keys are strings\
    \ in lower \ncase or all keys are strings in upper case, else return false.\n\
    The function should return false is the given array is empty.\nExamples:\n>>>\
    \ check_dict_case(array(\"a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphyaz5h05.php:49\n\
    Stack trace:\n#0 /tmp/tmphyaz5h05.php(56): test()\n#1 {main}\n  thrown in /tmp/tmphyaz5h05.php\
    \ on line 49\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$keys = array_keys($dict);\n\t$lower = array_map('strtolower', $keys);\n\
    \t$upper = array_map('strtoupper', $keys);\n\tif ($keys === $lower || $keys ===\
    \ $upper) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/* Given\
    \ an array, return true if all values are strings, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_values(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_values(array(\"\
    a\" => \"apple\", \"b\" => \"banana\", \"c\" => \"banana\"))\ntrue\n>>> check_dict_values(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_values(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\ntrue\n>>> check_dict_values(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb4s6p0xn.php:51\n\
    Stack trace:\n#0 /tmp/tmpb4s6p0xn.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpb4s6p0xn.php\
    \ on line 51\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif(empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\tif($keys == $lower || $keys == $upper) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n\n$dict = array(\"a\" => \"apple\", \"b\" => \"banana\");\n\
    echo check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"a\" => \"apple\"\
    , \"A\" => \"banana\", \"B\" => \"banana\");\necho check_dict_case($dict);\necho\
    \ \"\\n\";\n$dict = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"\
    );\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"Name\" => \"\
    John\", \"Age\" => \"36\", \"City\" => \"Houston\");\necho check_dict_case($dict);\n\
    echo \"\\n\";\n$dict = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\necho\
    \ check_dict_case($dict);\necho \"\\n\";\nfunction candidate(...$args) {\n   \
    \ return check_dict_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"b\" => \"banana\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"\
    banana\", \"B\" => \"banana\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"p\" => \"pineapple\", \"5\" => \"banana\", \"\
    a\" => \"apple\")) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\")) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"fruit\" => \"Orange\", \"taste\" =>\
    \ \"Sweet\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n1\n\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaa2ifmc8.php:51\n\
    Stack trace:\n#0 /tmp/tmpaa2ifmc8.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpaa2ifmc8.php\
    \ on line 51\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$keys = array_keys($dict);\n\t$lower = array_map('strtolower', $keys);\n\
    \t$upper = array_map('strtoupper', $keys);\n\tif ($keys == $lower || $keys ==\
    \ $upper) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/* Given\
    \ an array of integers, return the sum of all the integers that have an even index,\
    \ multiplied by the integer at the last index.\nIf the array is empty, return\
    \ 0.\nExamples:\n>>> sum_of_evens_times_last([1, 2, 3, 4, 5])\n30\n>>> sum_of_evens_times_last([3,\
    \ 3, 4, 5, 6])\n48\n>>> sum_of_evens_times_last([2, 2, 2])\n6\n>>> sum_of_evens_times_last([1,\
    \ 1, 1, 1, 1])\n0\n>>> sum_of_evens_times_last([])\n0*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8kzhpq6z.php:47\n\
    Stack trace:\n#0 /tmp/tmp8kzhpq6z.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp8kzhpq6z.php\
    \ on line 47\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$upper = array_map('strtoupper', $keys);\n\t$lower = array_map('strtolower',\
    \ $keys);\n\tif ($keys == $upper || $keys == $lower) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n\n/* Given an array, return true if all keys are strings in\
    \ lower \ncase or all keys are strings in upper case, else return false.\nThe\
    \ function should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkmtqb7h6.php:50\n\
    Stack trace:\n#0 /tmp/tmpkmtqb7h6.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpkmtqb7h6.php\
    \ on line 50\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$keys = array_keys($dict);\n\t$lower = array_map('strtolower', $keys);\n\
    \t$upper = array_map('strtoupper', $keys);\n\tif ($keys == $lower || $keys ==\
    \ $upper) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/* Given\
    \ an array of integers, return the sum of all the integers that have an even index,\
    \ \nmultiplied by the last odd integer in the array. If the array is empty, you\
    \ should return 0.\nExamples:\n>>> sum_even_indexed_odd_last([1, 2, 3, 4, 5])\n\
    30\n>>> sum_even_indexed_odd_last([1, 2, 3, 4, 5, 6])\n48\n>>> sum_even_indexed_odd_last([1,\
    \ 2, 3, 4, 5, 6, 7])\n56\n>>> sum_even_indexed_odd_last([1, 2, 3, 4, 5, 6, 7,\
    \ 8])\n64\n>>> sum_even_indexed_odd_last([1, 2, 3, 4, 5, 6, 7, 8, 9])\n72\n>>>\
    \ sum_even_indexed_odd_last([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n90\n>>> sum_even_indexed_odd_last([])\n\
    0*/\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\", \"\
    b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" => \"\
    banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2sn4vvts.php:51\n\
    Stack trace:\n#0 /tmp/tmp2sn4vvts.php(58): test()\n#1 {main}\n  thrown in /tmp/tmp2sn4vvts.php\
    \ on line 51\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\tif ($keys == $lower || $keys == $upper) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n\n/* Given a string, return true if the string is a palindrome,\
    \ \nelse return false. The function should return false if the \ngiven string\
    \ is empty.\nExamples:\n>>> is_palindrome(\"madam\")\ntrue\n>>> is_palindrome(\"\
    racecar\")\ntrue\n>>> is_palindrome(\"hello\")\nfalse\n>>> is_palindrome(\"\"\
    )\nfalse*/\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\",\
    \ \"b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwzdcgruw.php:48\n\
    Stack trace:\n#0 /tmp/tmpwzdcgruw.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpwzdcgruw.php\
    \ on line 48\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$lower = true;\n\t$upper\
    \ = true;\n\tforeach ($dict as $key => $value) {\n\t\tif (ctype_lower($key)) {\n\
    \t\t\t$upper = false;\n\t\t} else {\n\t\t\t$lower = false;\n\t\t}\n\t}\n\treturn\
    \ $lower || $upper;\n}\n\n$dict = array(\"a\" => \"apple\", \"b\" => \"banana\"\
    );\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" => \"apple\",\
    \ \"A\" => \"banana\", \"B\" => \"banana\");\necho check_dict_case($dict) . \"\
    \\n\";\n$dict = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"\
    );\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\");\necho check_dict_case($dict) .\
    \ \"\\n\";\n$dict = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\",\
    \ \"b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n\nDeprecated: ctype_lower(): Argument of type int will be interpreted\
    \ as string in the future in /tmp/tmplfqsdgcb.php on line 23\n\n1\n1\n\nDeprecated:\
    \ ctype_lower(): Argument of type int will be interpreted as string in the future\
    \ in /tmp/tmplfqsdgcb.php on line 23\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmplfqsdgcb.php:50\nStack trace:\n#0 /tmp/tmplfqsdgcb.php(56):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmplfqsdgcb.php on line 50\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$lower_keys = array_map('strtolower', $keys);\n\t$upper_keys = array_map('strtoupper',\
    \ $keys);\n\tif ($keys == $lower_keys || $keys == $upper_keys) {\n\t\treturn true;\n\
    \t}\n\treturn false;\n}\n\n/* Given an array of integers, return true if the array\
    \ contains \na number that is a multiple of 7 or 11, else return false.\nExamples:\n\
    >>> check_multiples(array(7, 11, 21, 27, 35, 49))\ntrue\n>>> check_multiples(array(7,\
    \ 11, 21, 27, 35, 49, 56))\ntrue\n>>> check_multiples(array(7, 11, 21, 27, 35,\
    \ 49, 56, 63))\nfalse\n>>> check_multiples(array(7, 11, 21, 27, 35, 49, 56, 63,\
    \ 70))\ntrue\n>>> check_multiples(array(7, 11, 21, 27, 35, 49, 56, 63, 70, 77))\n\
    true\n>>> check_multiples(array(7, 11, 21, 27, 35, 49, 56, 63, 70, 77, 84))\n\
    false\n>>> check_multiples(array(7, 11, 21, 27, 35, 49, 56, 63, 70, 77, 84, 91))\n\
    true\n>>> check_multiples(array(7, 11, 21, 27, 35, 49, 56, 63, 70, 77, 84, 91,\
    \ 98))\ntrue\n>>> check_multiples(array(7, 11, 21, 27, 35, 49, 56, 63, 70, 77,\
    \ 84, 91, 98, 105))\nfalse\n>>> check_multiples(array(7, 11, 21, 27, 35, 49, 56,\
    \ 63, 70, 77, 84, 91, 98, 105, 112))\ntrue\n>>> check_multiples(array(7, 11, 21,\
    \ 27, 35, 49, 56, 63, 70, 77, 84, 91, 98, 105, 112, 119))\ntrue\n>>> check_multiples(array(7,\n\
    function candidate(...$args) {\n    return check_dict_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"\
    banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"\
    pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 29 in /tmp/tmpwho5_en8.php on
    line 29

    '
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$lower = array_keys($dict);\n\t$upper = array_keys($dict);\n\t$lower =\
    \ array_map('strtolower', $lower);\n\t$upper = array_map('strtoupper', $upper);\n\
    \tif ($lower == array_keys($dict) || $upper == array_keys($dict)) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\necho check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\")) . \"\\n\";\necho check_dict_case(array(\"\
    a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\")) . \"\\n\";\necho\
    \ check_dict_case(array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"\
    )) . \"\\n\";\necho check_dict_case(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) . \"\\n\";\necho check_dict_case(array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\")) . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"b\" => \"banana\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"\
    banana\", \"B\" => \"banana\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"p\" => \"pineapple\", \"5\" => \"banana\", \"\
    a\" => \"apple\")) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\")) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"fruit\" => \"Orange\", \"taste\" =>\
    \ \"Sweet\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n1\n\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp__1jnye4.php:39\n\
    Stack trace:\n#0 /tmp/tmp__1jnye4.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp__1jnye4.php\
    \ on line 39\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n    $keys = array_keys($dict);\n    $is_upper = ctype_upper($keys[0]);\n\
    \    foreach ($keys as $key) {\n        if ($is_upper != ctype_upper($key)) {\n\
    \            return false;\n        }\n    }\n    return true;\n}\n\n/* Given\
    \ an array, return true if all keys are strings in lower \ncase or all keys are\
    \ strings in upper case, else return false.\nThe function should return false\
    \ is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"a\" =>\
    \ \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\" => \"\
    apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: ctype_upper(): Argument of type int will be interpreted as\
    \ string in the future in /tmp/tmp8f9loa6z.php on line 20\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp8f9loa6z.php:48\nStack trace:\n#0 /tmp/tmp8f9loa6z.php(55):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp8f9loa6z.php on line 48\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$lower = true;\n\t$upper\
    \ = true;\n\tforeach ($dict as $key => $value) {\n\t\tif (strtolower($key) !=\
    \ $key) {\n\t\t\t$lower = false;\n\t\t}\n\t\tif (strtoupper($key) != $key) {\n\
    \t\t\t$upper = false;\n\t\t}\n\t}\n\treturn $lower || $upper;\n}\n\necho check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\")) . \"\\n\";\necho check_dict_case(array(\"\
    a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\")) . \"\\n\";\necho\
    \ check_dict_case(array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"\
    )) . \"\\n\";\necho check_dict_case(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) . \"\\n\";\necho check_dict_case(array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\")) . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"b\" => \"banana\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"\
    banana\", \"B\" => \"banana\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"p\" => \"pineapple\", \"5\" => \"banana\", \"\
    a\" => \"apple\")) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\")) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"fruit\" => \"Orange\", \"taste\" =>\
    \ \"Sweet\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n1\n\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw7d6voca.php:45\n\
    Stack trace:\n#0 /tmp/tmpw7d6voca.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpw7d6voca.php\
    \ on line 45\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$is_lower = ctype_lower($keys[0]);\n\tforeach ($keys as $key) {\n\t\tif ($is_lower\
    \ != ctype_lower($key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\
    \necho check_dict_case(array(\"a\" => \"apple\", \"b\" => \"banana\")) . \"\\\
    n\";\necho check_dict_case(array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\"\
    \ => \"banana\")) . \"\\n\";\necho check_dict_case(array(\"a\" => \"apple\", 8\
    \ => \"banana\", \"a\" => \"apple\")) . \"\\n\";\necho check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\")) . \"\\n\";\n\
    echo check_dict_case(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) . \"\\\
    n\";\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\",\
    \ \"b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n\nDeprecated: ctype_lower(): Argument of type int will be interpreted\
    \ as string in the future in /tmp/tmpr8zv7g2_.php on line 23\n\n1\n1\n\nDeprecated:\
    \ ctype_lower(): Argument of type int will be interpreted as string in the future\
    \ in /tmp/tmpr8zv7g2_.php on line 23\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpr8zv7g2_.php:43\nStack trace:\n#0 /tmp/tmpr8zv7g2_.php(49):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpr8zv7g2_.php on line 43\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\tif ($keys == $lower || $keys == $upper) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n\necho check_dict_case(array(\"a\" => \"apple\", \"b\" =>\
    \ \"banana\")) . \"\\n\";\necho check_dict_case(array(\"a\" => \"apple\", \"A\"\
    \ => \"banana\", \"B\" => \"banana\")) . \"\\n\";\necho check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\")) . \"\\n\";\necho check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\")) . \"\\n\";\n\
    echo check_dict_case(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) . \"\\\
    n\";\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\",\
    \ \"b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n1\n\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqk00lwbj.php:41\n\
    Stack trace:\n#0 /tmp/tmpqk00lwbj.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpqk00lwbj.php\
    \ on line 41\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$lower = array_change_key_case($dict,\
    \ CASE_LOWER);\n\t$upper = array_change_key_case($dict, CASE_UPPER);\n\tif ($lower\
    \ == $dict || $upper == $dict) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n\
    /* Given an array, return true if all values are strings, else return false.\n\
    The function should return false is the given array is empty.\nExamples:\n>>>\
    \ check_dict_string(array(\"a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>>\
    \ check_dict_string(array(\"a\" => \"apple\", \"b\" => \"banana\", \"c\" => \"\
    carrot\"))\ntrue\n>>> check_dict_string(array(\"a\" => \"apple\", \"b\" => \"\
    banana\", \"c\" => \"carrot\", \"d\" => 1))\nfalse\n>>> check_dict_string(array(\"\
    a\" => \"apple\", \"b\" => \"banana\", \"c\" => \"carrot\", \"d\" => \"1\"))\n\
    true\n>>> check_dict_string(array(\"a\" => \"apple\", \"b\" => \"banana\", \"\
    c\" => \"carrot\", \"d\" => \"1\", \"e\" => 1))\nfalse\n>>> check_dict_string(array(\"\
    a\" => \"apple\", \"b\" => \"banana\", \"c\" => \"carrot\", \"d\" => \"1\", \"\
    e\" => \"1\"))\ntrue\n>>> check_dict_string(array(\"a\" => \"apple\", \"b\" =>\
    \ \"banana\", \"c\" => \"carrot\", \"d\" => \"1\", \"e\" => \"1\", \"f\" => 1))\n\
    false\n>>> check_dict_string(array(\"a\" => \"apple\", \"b\" => \"banana\", \"\
    c\" => \"carrot\", \"d\" => \"1\", \"e\" => \"1\", \"f\" => \"1\"))\ntrue\n>>>\
    \ check_dict_string(array(\"a\" => \"apple\", \"b\" => \"banana\", \"c\" => \"\
    carrot\", \"d\" => \"1\", \"e\"\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\",\
    \ \"b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 28 in /tmp/tmp4u_s4h78.php on
    line 28

    '
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n    $keys = array_keys($dict);\n    $first_key = $keys[0];\n    if (is_string($first_key))\
    \ {\n        $is_lower = ctype_lower($first_key);\n        $is_upper = ctype_upper($first_key);\n\
    \        foreach ($keys as $key) {\n            if ($is_lower && !ctype_lower($key))\
    \ {\n                return false;\n            }\n            if ($is_upper &&\
    \ !ctype_upper($key)) {\n                return false;\n            }\n      \
    \  }\n        return true;\n    }\n    return false;\n}\n\n/* Given an array,\
    \ return true if all values are strings in lower \ncase or all values are strings\
    \ in upper case, else return false.\nThe function should return false is the given\
    \ array is empty.\nExamples:\n>>> check_dict_case(array(\"a\" => \"apple\", \"\
    b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\" => \"apple\", \"A\"\
    \ => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: ctype_lower(): Argument of type int will be interpreted as\
    \ string in the future in /tmp/tmpcqnmadk9.php on line 23\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpcqnmadk9.php:57\nStack trace:\n#0 /tmp/tmpcqnmadk9.php(63):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpcqnmadk9.php on line 57\n"
  timestamp: 1660220839
- exit_code: 0
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n    if (empty($dict)) {\n        return false;\n    }\n    $keys = array_keys($dict);\n\
    \    $first_key = $keys[0];\n    $is_upper = ctype_upper($first_key);\n    foreach\
    \ ($keys as $key) {\n        if ($is_upper && !ctype_upper($key)) {\n        \
    \    return false;\n        }\n        if (!$is_upper && !ctype_lower($key)) {\n\
    \            return false;\n        }\n    }\n    return true;\n}\n\n/* Given\
    \ a string, return true if the string is a palindrome, \nelse return false. The\
    \ function should return false if the \ngiven string is empty.\nExamples:\n>>>\
    \ is_palindrome(\"abba\")\ntrue\n>>> is_palindrome(\"abcba\")\ntrue\n>>> is_palindrome(\"\
    abccba\")\ntrue\n>>> is_palindrome(\"abc\")\nfalse\n>>> is_palindrome(\"\")\n\
    false*/\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\",\
    \ \"b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Deprecated: ctype_lower(): Argument of type int will be interpreted as string
    in the future in /tmp/tmp4fbta_7p.php on line 27

    '
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\tif ($keys == $lower || $keys == $upper) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n\n/* Given an array, return true if all keys are strings in\
    \ lower \ncase or all keys are strings in upper case, else return false.\nThe\
    \ function should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj_ims3wr.php:50\n\
    Stack trace:\n#0 /tmp/tmpj_ims3wr.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpj_ims3wr.php\
    \ on line 50\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$lower = array_keys($dict);\n\
    \t$upper = array_keys($dict);\n\tforeach ($lower as $key => $value) {\n\t\t$lower[$key]\
    \ = strtolower($value);\n\t}\n\tforeach ($upper as $key => $value) {\n\t\t$upper[$key]\
    \ = strtoupper($value);\n\t}\n\tif ($lower == array_keys($dict) || $upper == array_keys($dict))\
    \ {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/* Given an array of integers,\
    \ return the sum of the integers \nwith an even index (0, 2, 4, etc.).\nExamples:\n\
    >>> sum_even_indexed(array(1, 2, 3, 4, 5, 6))\n12\n>>> sum_even_indexed(array(1,\
    \ 2, 3, 4, 5, 6, 7))\n20\n>>> sum_even_indexed(array(1, 2, 3, 4, 5, 6, 7, 8))\n\
    28\n>>> sum_even_indexed(array(1, 2, 3, 4, 5, 6, 7, 8, 9))\n36\n>>> sum_even_indexed(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10))\n45*/\nfunction candidate(...$args) {\n    return\
    \ check_dict_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"b\" => \"banana\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"\
    banana\", \"B\" => \"banana\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"p\" => \"pineapple\", \"5\" => \"banana\", \"\
    a\" => \"apple\")) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\")) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"fruit\" => \"Orange\", \"taste\" =>\
    \ \"Sweet\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_bywmbpt.php:54\n\
    Stack trace:\n#0 /tmp/tmp_bywmbpt.php(61): test()\n#1 {main}\n  thrown in /tmp/tmp_bywmbpt.php\
    \ on line 54\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$first_key = $keys[0];\n\t$is_lower = ctype_lower($first_key);\n\t$is_upper\
    \ = ctype_upper($first_key);\n\tforeach ($keys as $key) {\n\t\tif ($is_lower &&\
    \ !ctype_lower($key)) {\n\t\t\treturn false;\n\t\t}\n\t\tif ($is_upper && !ctype_upper($key))\
    \ {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n$dict = array(\"a\"\
    \ => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict) . \"\\n\";\n\
    $dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\");\n\
    echo check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" => \"apple\", 8 =>\
    \ \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict) . \"\\n\";\n$dict\
    \ = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\");\n\
    echo check_dict_case($dict) . \"\\n\";\n$dict = array(\"STATE\" => \"NC\", \"\
    ZIP\" => \"12345\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array();\n\
    echo check_dict_case($dict) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ check_dict_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"b\" => \"banana\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"\
    banana\", \"B\" => \"banana\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"p\" => \"pineapple\", \"5\" => \"banana\", \"\
    a\" => \"apple\")) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\")) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"fruit\" => \"Orange\", \"taste\" =>\
    \ \"Sweet\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n\nDeprecated: ctype_lower(): Argument of type int will be interpreted\
    \ as string in the future in /tmp/tmpx36vpv0v.php on line 25\n\n1\n1\n\n\nDeprecated:\
    \ ctype_lower(): Argument of type int will be interpreted as string in the future\
    \ in /tmp/tmpx36vpv0v.php on line 25\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpx36vpv0v.php:55\nStack trace:\n#0 /tmp/tmpx36vpv0v.php(61):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpx36vpv0v.php on line 55\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$lower = true;\n\t$upper = true;\n\tforeach ($dict as $key => $value) {\n\
    \t\tif (ctype_lower($key)) {\n\t\t\t$upper = false;\n\t\t} else {\n\t\t\t$lower\
    \ = false;\n\t\t}\n\t}\n\treturn $lower || $upper;\n}\n\n/* Given an array of\
    \ integers, return the sum of all the integers that have an even index, multiplied\
    \ by the integer at the last index.\nIf the array is empty, return 0.\nExamples:\n\
    >>> sum_even_index_multiplied_by_last([1, 2, 3, 4, 5])\n30\n>>> sum_even_index_multiplied_by_last([])\n\
    0\n>>> sum_even_index_multiplied_by_last([-3, -2, -1, 0, 1, 2, 3])\n0\n>>> sum_even_index_multiplied_by_last([-3,\
    \ -2, -1, 0, 1, 2, 3, 4])\n8\n>>> sum_even_index_multiplied_by_last([-3, -2, -1,\
    \ 0, 1, 2, 3, 4, 5])\n30\n>>> sum_even_index_multiplied_by_last([-3, -2, -1, 0,\
    \ 1, 2, 3, 4, 5, 6])\n42\n>>> sum_even_index_multiplied_by_last([-3, -2, -1, 0,\
    \ 1, 2, 3, 4, 5, 6, 7])\n56*/\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\",\
    \ \"b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$lower = array_change_key_case($dict,\
    \ CASE_LOWER);\n\t$upper = array_change_key_case($dict, CASE_UPPER);\n\tif ($lower\
    \ == $dict) {\n\t\treturn true;\n\t} elseif ($upper == $dict) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\n\n/* Given an array, return true if all\
    \ keys are strings in lower \ncase or all keys are strings in upper case, else\
    \ return false.\nThe function should return false is the given array is empty.\n\
    Examples:\n>>> check_dict_case(array(\"a\" => \"apple\", \"b\" => \"banana\"))\n\
    true\n>>> check_dict_case(array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\"\
    \ => \"banana\"))\nfalse\n>>> check_dict_case(array(\"a\" => \"apple\", 8 => \"\
    banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"Name\" => \"\
    John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9gkc9odp.php:52\n\
    Stack trace:\n#0 /tmp/tmp9gkc9odp.php(59): test()\n#1 {main}\n  thrown in /tmp/tmp9gkc9odp.php\
    \ on line 52\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$lower = array_change_key_case($dict, CASE_LOWER);\n\t$upper = array_change_key_case($dict,\
    \ CASE_UPPER);\n\tif ($lower == $dict) {\n\t\treturn true;\n\t} elseif ($upper\
    \ == $dict) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/* Given\
    \ an array, return the number of times the value \"apple\" appears in the array.\n\
    Examples:\n>>> count_apple(array(\"apple\", \"banana\", \"apple\", \"apple\",\
    \ \"orange\"))\n3\n>>> count_apple(array(\"apple\", \"banana\", \"apple\", \"\
    apple\", \"orange\", \"apple\"))\n4\n>>> count_apple(array(\"apple\", \"banana\"\
    , \"apple\", \"apple\", \"orange\", \"apple\", \"apple\"))\n5\n>>> count_apple(array(\"\
    apple\", \"banana\", \"apple\", \"apple\", \"orange\", \"apple\", \"apple\", \"\
    apple\"))\n6\n>>> count_apple(array(\"apple\", \"banana\", \"apple\", \"apple\"\
    , \"orange\", \"apple\", \"apple\", \"apple\", \"apple\"))\n7\n>>> count_apple(array(\"\
    apple\", \"banana\", \"apple\", \"apple\", \"orange\", \"apple\", \"apple\", \"\
    apple\", \"apple\", \"apple\"))\n8\n>>> count_apple(array(\"apple\", \"banana\"\
    , \"apple\", \"apple\", \"orange\", \"apple\", \"apple\", \"apple\", \"apple\"\
    , \"apple\", \"apple\"))\n9\n>>> count_apple(array(\"apple\", \"banana\", \"apple\"\
    , \"apple\", \"orange\", \"apple\", \"apple\", \"apple\", \"apple\", \"apple\"\
    , \"apple\", \"apple\"))\n10\n>>> count_apple(array(\"apple\", \"banana\", \"\
    apple\", \"apple\", \"orange\", \"apple\", \"apple\", \"apple\", \"apple\", \"\
    apple\", \"apple\", \"apple\", \"apple\"))\n11\n>>> count_apple(array(\"apple\"\
    , \"banana\", \"apple\", \"apple\", \"orange\", \"apple\", \"apple\", \"apple\"\
    , \"apple\", \"apple\", \"apple\", \"apple\", \"apple\", \"apple\"))\n12\n>>>\
    \ count_apple(array(\"apple\", \"ban\nfunction candidate(...$args) {\n    return\
    \ check_dict_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"b\" => \"banana\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"\
    banana\", \"B\" => \"banana\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"p\" => \"pineapple\", \"5\" => \"banana\", \"\
    a\" => \"apple\")) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\")) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"fruit\" => \"Orange\", \"taste\" =>\
    \ \"Sweet\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660220839
- exit_code: 0
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$is_lower = ctype_lower($keys[0]);\n\tforeach ($keys as $key) {\n\t\tif ($is_lower\
    \ && !ctype_lower($key)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!$is_lower &&\
    \ !ctype_upper($key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\
    $dict = array(\"a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict)\
    \ ? \"true\" : \"false\";\necho \"\\n\";\n$dict = array(\"a\" => \"apple\", \"\
    A\" => \"banana\", \"B\" => \"banana\");\necho check_dict_case($dict) ? \"true\"\
    \ : \"false\";\necho \"\\n\";\n$dict = array(\"a\" => \"apple\", 8 => \"banana\"\
    , \"a\" => \"apple\");\necho check_dict_case($dict) ? \"true\" : \"false\";\n\
    echo \"\\n\";\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\"\
    \ => \"Houston\");\necho check_dict_case($dict) ? \"true\" : \"false\";\necho\
    \ \"\\n\";\n$dict = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict)\
    \ ? \"true\" : \"false\";\necho \"\\n\";\nfunction candidate(...$args) {\n   \
    \ return check_dict_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"b\" => \"banana\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"\
    banana\", \"B\" => \"banana\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"p\" => \"pineapple\", \"5\" => \"banana\", \"\
    a\" => \"apple\")) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\")) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"fruit\" => \"Orange\", \"taste\" =>\
    \ \"Sweet\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$is_lower = true;\n\t$is_upper\
    \ = true;\n\tforeach ($dict as $key => $value) {\n\t\tif (ctype_lower($key)) {\n\
    \t\t\t$is_upper = false;\n\t\t} else {\n\t\t\t$is_lower = false;\n\t\t}\n\t}\n\
    \treturn $is_lower || $is_upper;\n}\n\nfunction candidate(...$args) {\n    return\
    \ check_dict_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"b\" => \"banana\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"\
    banana\", \"B\" => \"banana\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"p\" => \"pineapple\", \"5\" => \"banana\", \"\
    a\" => \"apple\")) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\")) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"fruit\" => \"Orange\", \"taste\" =>\
    \ \"Sweet\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: ctype_lower(): Argument of type int will be interpreted as\
    \ string in the future in /tmp/tmpbha4zg76.php on line 23\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpbha4zg76.php:40\nStack trace:\n#0 /tmp/tmpbha4zg76.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpbha4zg76.php on line 40\n"
  timestamp: 1660220839
- exit_code: 0
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$lower = true;\n\t$upper\
    \ = true;\n\tforeach ($dict as $key => $value) {\n\t\tif (!ctype_lower($key))\
    \ {\n\t\t\t$lower = false;\n\t\t}\n\t\tif (!ctype_upper($key)) {\n\t\t\t$upper\
    \ = false;\n\t\t}\n\t}\n\tif ($lower || $upper) {\n\t\treturn true;\n\t}\n\treturn\
    \ false;\n}\n\n/* Given an array, return true if all values are strings in lower\
    \ \ncase or all values are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Deprecated: ctype_lower(): Argument of type int will be interpreted as string
    in the future in /tmp/tmpc9spy0eo.php on line 23


    Deprecated: ctype_upper(): Argument of type int will be interpreted as string
    in the future in /tmp/tmpc9spy0eo.php on line 26

    '
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\tif ($keys == $lower || $keys == $upper) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n\n/* Given an array, return true if all keys are strings in\
    \ lower \ncase or all keys are strings in upper case, else return false.\nThe\
    \ function should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj_ims3wr.php:50\n\
    Stack trace:\n#0 /tmp/tmpj_ims3wr.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpj_ims3wr.php\
    \ on line 50\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$lower = array_keys($dict);\n\
    \t$upper = array_keys($dict);\n\t$lower = array_map('strtolower', $lower);\n\t\
    $upper = array_map('strtoupper', $upper);\n\tif ($lower == array_keys($dict) ||\
    \ $upper == array_keys($dict)) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n\
    /* Given an array of strings, return an array of strings with all \nduplicates\
    \ removed.\nExamples:\n>>> remove_duplicates(array(\"a\", \"b\", \"a\", \"c\"\
    , \"b\", \"a\"))\narray(\"a\", \"b\", \"c\")\n>>> remove_duplicates(array(\"a\"\
    , \"a\", \"a\", \"a\", \"a\", \"a\"))\narray(\"a\")\n>>> remove_duplicates(array(\"\
    a\", \"b\", \"c\", \"d\", \"e\", \"f\"))\narray(\"a\", \"b\", \"c\", \"d\", \"\
    e\", \"f\")\n>>> remove_duplicates(array(\"a\", \"b\", \"c\", \"d\", \"e\", \"\
    f\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\"))\narray(\"a\", \"b\", \"c\", \"\
    d\", \"e\", \"f\")\n>>> remove_duplicates(array(\"a\", \"b\", \"c\", \"d\", \"\
    e\", \"f\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"a\", \"b\", \"c\", \"\
    d\", \"e\", \"f\"))\narray(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\")*/\nfunction\
    \ candidate(...$args) {\n    return check_dict_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"\
    banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"\
    pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7yjcmgqi.php:50\n\
    Stack trace:\n#0 /tmp/tmp7yjcmgqi.php(57): test()\n#1 {main}\n  thrown in /tmp/tmp7yjcmgqi.php\
    \ on line 50\n"
  timestamp: 1660220839
- exit_code: 0
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n    if (empty($dict)) {\n        return false;\n    }\n    $keys = array_keys($dict);\n\
    \    $first_key = $keys[0];\n    $is_lower = ctype_lower($first_key);\n    $is_upper\
    \ = ctype_upper($first_key);\n    if ($is_lower || $is_upper) {\n        foreach\
    \ ($keys as $key) {\n            if ($is_lower && !ctype_lower($key)) {\n    \
    \            return false;\n            }\n            if ($is_upper && !ctype_upper($key))\
    \ {\n                return false;\n            }\n        }\n        return true;\n\
    \    }\n    return false;\n}\n\n$dict = array(\"a\" => \"apple\", \"b\" => \"\
    banana\");\n$dict1 = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"\
    banana\");\n$dict2 = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"\
    );\n$dict3 = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"\
    );\n$dict4 = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\n$dict5 = array();\n\
    \necho check_dict_case($dict) . \"\\n\";\necho check_dict_case($dict1) . \"\\\
    n\";\necho check_dict_case($dict2) . \"\\n\";\necho check_dict_case($dict3) .\
    \ \"\\n\";\necho check_dict_case($dict4) . \"\\n\";\necho check_dict_case($dict5)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\",\
    \ \"b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    Deprecated: ctype_lower(): Argument of type int will be interpreted as string
    in the future in /tmp/tmpz6l01p3d.php on line 26



    1



    Deprecated: ctype_lower(): Argument of type int will be interpreted as string
    in the future in /tmp/tmpz6l01p3d.php on line 26

    '
  timestamp: 1660220839
- exit_code: 0
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$keys = array_keys($dict);\n\t$count = count($keys);\n\tif ($count == 0)\
    \ {\n\t\treturn false;\n\t}\n\t$lower = 0;\n\t$upper = 0;\n\tfor ($i = 0; $i <\
    \ $count; $i++) {\n\t\tif (ctype_lower($keys[$i])) {\n\t\t\t$lower++;\n\t\t} elseif\
    \ (ctype_upper($keys[$i])) {\n\t\t\t$upper++;\n\t\t}\n\t}\n\tif ($lower == $count\
    \ || $upper == $count) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t\
    }\n}\n\necho check_dict_case(array(\"a\" => \"apple\", \"b\" => \"banana\")) .\
    \ \"\\n\";\necho check_dict_case(array(\"a\" => \"apple\", \"A\" => \"banana\"\
    , \"B\" => \"banana\")) . \"\\n\";\necho check_dict_case(array(\"a\" => \"apple\"\
    , 8 => \"banana\", \"a\" => \"apple\")) . \"\\n\";\necho check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\")) . \"\\n\";\n\
    echo check_dict_case(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) . \"\\\
    n\";\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\",\
    \ \"b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    Deprecated: ctype_lower(): Argument of type int will be interpreted as string
    in the future in /tmp/tmpytfo2spl.php on line 25


    Deprecated: ctype_upper(): Argument of type int will be interpreted as string
    in the future in /tmp/tmpytfo2spl.php on line 27



    1


    Deprecated: ctype_lower(): Argument of type int will be interpreted as string
    in the future in /tmp/tmpytfo2spl.php on line 25


    Deprecated: ctype_upper(): Argument of type int will be interpreted as string
    in the future in /tmp/tmpytfo2spl.php on line 27

    '
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$lower = array_change_key_case($dict,\
    \ CASE_LOWER);\n\t$upper = array_change_key_case($dict, CASE_UPPER);\n\tif ($lower\
    \ == $dict || $upper == $dict) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n\
    /* Given an array, return true if the array contains a string \nwith the value\
    \ \"red\" or \"blue\" in it, else return false.\nExamples:\n>>> check_red_blue(array(\"\
    red\", \"blue\", \"green\"))\ntrue\n>>> check_red_blue(array(\"red\", \"blue\"\
    , \"green\", \"red\"))\ntrue\n>>> check_red_blue(array(\"red\", \"blue\", \"green\"\
    , \"yellow\"))\nfalse\n>>> check_red_blue(array(\"red\", \"blue\", \"green\",\
    \ \"yellow\", \"red\"))\ntrue\n>>> check_red_blue(array(\"red\", \"blue\", \"\
    green\", \"yellow\", \"red\", \"blue\"))\ntrue\n>>> check_red_blue(array(\"red\"\
    , \"blue\", \"green\", \"yellow\", \"red\", \"blue\", \"green\"))\ntrue\n>>> check_red_blue(array(\"\
    red\", \"blue\", \"green\", \"yellow\", \"red\", \"blue\", \"green\", \"red\"\
    ))\ntrue\n>>> check_red_blue(array(\"red\", \"blue\", \"green\", \"yellow\", \"\
    red\", \"blue\", \"green\", \"red\", \"blue\"))\ntrue\n>>> check_red_blue(array(\"\
    red\", \"blue\", \"green\", \"yellow\", \"red\", \"blue\", \"green\", \"red\"\
    , \"blue\", \"green\"))\ntrue\n>>> check_red_blue(array(\"red\", \"blue\", \"\
    green\", \"yellow\", \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\"\
    , \"red\"))\ntrue\n>>> check_red_blue(array(\"red\", \"blue\", \"green\", \"yellow\"\
    , \"red\", \"blue\", \"green\", \"red\", \"blue\", \"green\", \"red\", \"blue\"\
    ))\ntrue\n>>> check_red_blue(array(\"red\", \"blue\", \"green\", \"yellow\", \"\
    red\", \"blue\",\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\",\
    \ \"b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 28 in /tmp/tmpp_fiydpy.php on
    line 28

    '
  timestamp: 1660220839
- exit_code: 0
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n    if (empty($dict)) {\n        return false;\n    }\n    $keys = array_keys($dict);\n\
    \    $first_key = $keys[0];\n    $first_key_is_upper = ctype_upper($first_key);\n\
    \    foreach ($keys as $key) {\n        if ($first_key_is_upper) {\n         \
    \   if (!ctype_upper($key)) {\n                return false;\n            }\n\
    \        } else {\n            if (!ctype_lower($key)) {\n                return\
    \ false;\n            }\n        }\n    }\n    return true;\n}\n\n$dict = array(\"\
    a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict) . \"\\n\"\
    ;\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"\
    );\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" => \"apple\",\
    \ 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict) . \"\\n\"\
    ;\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"\
    );\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"STATE\" => \"NC\"\
    , \"ZIP\" => \"12345\");\necho check_dict_case($dict) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    Deprecated: ctype_lower(): Argument of type int will be interpreted as string
    in the future in /tmp/tmpc5k74_e3.php on line 29



    1


    Deprecated: ctype_lower(): Argument of type int will be interpreted as string
    in the future in /tmp/tmpc5k74_e3.php on line 29

    '
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$upper = array_map('strtoupper', $keys);\n\t$lower = array_map('strtolower',\
    \ $keys);\n\tif ($keys == $upper || $keys == $lower) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n\n/* Given an array, return true if all keys are strings in\
    \ lower \ncase or all keys are strings in upper case, else return false.\nThe\
    \ function should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkmtqb7h6.php:50\n\
    Stack trace:\n#0 /tmp/tmpkmtqb7h6.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpkmtqb7h6.php\
    \ on line 50\n"
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$is_lower = true;\n\t$is_upper\
    \ = true;\n\tforeach ($dict as $key => $value) {\n\t\tif (!ctype_lower($key))\
    \ {\n\t\t\t$is_lower = false;\n\t\t}\n\t\tif (!ctype_upper($key)) {\n\t\t\t$is_upper\
    \ = false;\n\t\t}\n\t}\n\treturn $is_lower || $is_upper;\n}\necho check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\")) . \"\\n\";\necho check_dict_case(array(\"\
    a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\")) . \"\\n\";\necho\
    \ check_dict_case(array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"\
    )) . \"\\n\";\necho check_dict_case(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) . \"\\n\";\necho check_dict_case(array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\")) . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"b\" => \"banana\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"\
    banana\", \"B\" => \"banana\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"p\" => \"pineapple\", \"5\" => \"banana\", \"\
    a\" => \"apple\")) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\")) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"fruit\" => \"Orange\", \"taste\" =>\
    \ \"Sweet\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    Deprecated: ctype_lower(): Argument of type int will be interpreted as string
    in the future in /tmp/tmp633q24up.php on line 23


    Deprecated: ctype_upper(): Argument of type int will be interpreted as string
    in the future in /tmp/tmp633q24up.php on line 26



    1


    Deprecated: ctype_lower(): Argument of type int will be interpreted as string
    in the future in /tmp/tmp633q24up.php on line 23


    Deprecated: ctype_upper(): Argument of type int will be interpreted as string
    in the future in /tmp/tmp633q24up.php on line 26

    '
  timestamp: 1660220839
- exit_code: 0
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$first_key = $keys[0];\n\t$first_key_is_upper = ctype_upper($first_key);\n\t\
    foreach ($keys as $key) {\n\t\tif ($first_key_is_upper) {\n\t\t\tif (!ctype_upper($key))\
    \ {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\tif (!ctype_lower($key))\
    \ {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\n$dict =\
    \ array(\"a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" =>\
    \ \"apple\", 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\"\
    \ => \"Houston\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict) . \"\\n\";\n\
    $dict = array();\necho check_dict_case($dict) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    Deprecated: ctype_lower(): Argument of type int will be interpreted as string
    in the future in /tmp/tmpph0_d05m.php on line 29



    1



    Deprecated: ctype_lower(): Argument of type int will be interpreted as string
    in the future in /tmp/tmpph0_d05m.php on line 29

    '
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$keys = array_keys($dict);\n\t$lower = array_map('strtolower', $keys);\n\
    \t$upper = array_map('strtoupper', $keys);\n\tif ($keys == $lower || $keys ==\
    \ $upper) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/* Given\
    \ an array, return true if all keys are strings in lower \ncase or all keys are\
    \ strings in upper case, else return false.\nThe function should return false\
    \ is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"a\" =>\
    \ \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\" => \"\
    apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7kk1wsuy.php:48\n\
    Stack trace:\n#0 /tmp/tmp7kk1wsuy.php(55): test()\n#1 {main}\n  thrown in /tmp/tmp7kk1wsuy.php\
    \ on line 48\n"
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$first_key = $keys[0];\n\t$is_lower = ctype_lower($first_key);\n\t$is_upper\
    \ = ctype_upper($first_key);\n\tif (!$is_lower && !$is_upper) {\n\t\treturn false;\n\
    \t}\n\tforeach ($keys as $key) {\n\t\tif ($is_lower && !ctype_lower($key)) {\n\
    \t\t\treturn false;\n\t\t}\n\t\tif ($is_upper && !ctype_upper($key)) {\n\t\t\t\
    return false;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args) {\n\
    \    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"b\" => \"banana\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"\
    banana\", \"B\" => \"banana\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"p\" => \"pineapple\", \"5\" => \"banana\", \"\
    a\" => \"apple\")) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\")) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"fruit\" => \"Orange\", \"taste\" =>\
    \ \"Sweet\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Deprecated: ctype_lower(): Argument of type int will be interpreted as string
    in the future in /tmp/tmp0uoh_1_8.php on line 28

    '
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$keys = array_keys($dict);\n\t$lower = array_map('strtolower', $keys);\n\
    \t$upper = array_map('strtoupper', $keys);\n\tif ($keys == $lower || $keys ==\
    \ $upper) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\necho check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\")) . \"\\n\";\necho check_dict_case(array(\"\
    a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\")) . \"\\n\";\necho\
    \ check_dict_case(array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"\
    )) . \"\\n\";\necho check_dict_case(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) . \"\\n\";\necho check_dict_case(array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\")) . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"b\" => \"banana\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"\
    banana\", \"B\" => \"banana\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"p\" => \"pineapple\", \"5\" => \"banana\", \"\
    a\" => \"apple\")) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\")) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"fruit\" => \"Orange\", \"taste\" =>\
    \ \"Sweet\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n1\n\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpadijw_zu.php:38\n\
    Stack trace:\n#0 /tmp/tmpadijw_zu.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpadijw_zu.php\
    \ on line 38\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\tif ($keys == $lower || $keys == $upper) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n\n/* Given a string, return true if it is a palindrome, else\
    \ return false.\nExamples:\n>>> is_palindrome(\"abba\")\ntrue\n>>> is_palindrome(\"\
    abcba\")\ntrue\n>>> is_palindrome(\"abccba\")\ntrue\n>>> is_palindrome(\"abcdef\"\
    )\nfalse\n>>> is_palindrome(\"abcdefg\")\nfalse\n>>> is_palindrome(\"abcdefgh\"\
    )\nfalse\n>>> is_palindrome(\"abcdefghi\")\nfalse\n>>> is_palindrome(\"abcdefghij\"\
    )\nfalse\n>>> is_palindrome(\"abcdefghijk\")\nfalse\n>>> is_palindrome(\"abcdefghijkl\"\
    )\nfalse\n>>> is_palindrome(\"abcdefghijklm\")\nfalse\n>>> is_palindrome(\"abcdefghijklmn\"\
    )\nfalse\n>>> is_palindrome(\"abcdefghijklmno\")\nfalse\n>>> is_palindrome(\"\
    abcdefghijklmnop\")\nfalse\n>>> is_palindrome(\"abcdefghijklmnopq\")\nfalse\n\
    >>> is_palindrome(\"abcdefghijklmnopqr\")\nfalse\n>>> is_palindrome(\"abcdefghijklmnopqrs\"\
    )\nfalse\n>>> is_palindrome(\"abcdefghijklmnopqrst\")\nfalse\n>>> is_palindrome(\"\
    abcdefghijklmnopqrstu\")\nfalse\n>>> is_palindrome(\"abcdefghijklmnopqrstuv\"\
    )\nfalse\n>>> is_palindrome(\"abcdefghijklmnopqrstuvw\")\nfalse\n>>> is_palindrome(\"\
    abcdefghijklmnopqrstuvwx\")\nfalse\n>>> is_palindrome(\"abcdefghij\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 29 in /tmp/tmp7mqhnzoo.php on
    line 29

    '
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\tif ($keys == $lower || $keys == $upper) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n\n/* Given a string, return true if the string is a palindrome,\
    \ \nelse return false. The function should return false is the given \nstring\
    \ is empty.\nExamples:\n>>> is_palindrome(\"racecar\")\ntrue\n>>> is_palindrome(\"\
    apple\")\nfalse\n>>> is_palindrome(\"\")\nfalse\n>>> is_palindrome(\"a\")\ntrue\n\
    >>> is_palindrome(\"aa\")\ntrue\n>>> is_palindrome(\"ab\")\nfalse\n>>> is_palindrome(\"\
    aba\")\ntrue\n>>> is_palindrome(\"abba\")\ntrue\n>>> is_palindrome(\"abcba\")\n\
    true\n>>> is_palindrome(\"abccba\")\ntrue\n>>> is_palindrome(\"abcdcba\")\ntrue\n\
    >>> is_palindrome(\"abcdcbab\")\nfalse*/\nfunction candidate(...$args) {\n   \
    \ return check_dict_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"b\" => \"banana\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"\
    banana\", \"B\" => \"banana\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"p\" => \"pineapple\", \"5\" => \"banana\", \"\
    a\" => \"apple\")) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\")) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"fruit\" => \"Orange\", \"taste\" =>\
    \ \"Sweet\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4wrd02sa.php:64\n\
    Stack trace:\n#0 /tmp/tmp4wrd02sa.php(71): test()\n#1 {main}\n  thrown in /tmp/tmp4wrd02sa.php\
    \ on line 64\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\tif ($keys == $lower || $keys == $upper) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n\n/* Given an array of strings, return a new array containing\
    \ the first N strings. \nIf N is greater than or equal to the length of the array,\
    \ then return the original array.\nExamples:\n>>> first_n(array(\"a\", \"b\",\
    \ \"c\", \"d\"), 2)\narray(\"a\", \"b\")\n>>> first_n(array(\"a\", \"b\", \"c\"\
    , \"d\"), 4)\narray(\"a\", \"b\", \"c\", \"d\")\n>>> first_n(array(\"a\", \"b\"\
    , \"c\", \"d\"), 5)\narray(\"a\", \"b\", \"c\", \"d\")\n>>> first_n(array(\"a\"\
    , \"b\", \"c\", \"d\"), 0)\narray()*/\nfunction candidate(...$args) {\n    return\
    \ check_dict_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"b\" => \"banana\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"\
    banana\", \"B\" => \"banana\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"p\" => \"pineapple\", \"5\" => \"banana\", \"\
    a\" => \"apple\")) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\")) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"fruit\" => \"Orange\", \"taste\" =>\
    \ \"Sweet\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps7jy5931.php:47\n\
    Stack trace:\n#0 /tmp/tmps7jy5931.php(54): test()\n#1 {main}\n  thrown in /tmp/tmps7jy5931.php\
    \ on line 47\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$keys = array_keys($dict);\n\t$is_upper = ctype_upper($keys[0]);\n\tforeach\
    \ ($keys as $key) {\n\t\tif ($is_upper) {\n\t\t\tif (!ctype_upper($key)) {\n\t\
    \t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\tif (!ctype_lower($key)) {\n\t\
    \t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\n/* Given an array\
    \ of strings, return a new array with the strings \nin sorted order, except group\
    \ all the strings that begin with 'x' first.\ne.g. ['mix', 'xyz', 'apple', 'xanadu',\
    \ 'aardvark'] yields\n['xanadu', 'xyz', 'aardvark', 'apple', 'mix']\nHint: this\
    \ can be done by making 2 lists and sorting each of them \nbefore combining them.\n\
    >>> front_x(['bbb', 'ccc', 'axx', 'xzz', 'xaa'])\n['xaa', 'xzz', 'axx', 'bbb',\
    \ 'ccc']\n>>> front_x(['ccc', 'bbb', 'aaa', 'xcc', 'xaa'])\n['xaa', 'xcc', 'aaa',\
    \ 'bbb', 'ccc']\n>>> front_x(['mix', 'xyz', 'apple', 'xanadu', 'aardvark'])\n\
    ['xanadu', 'xyz', 'aardvark', 'apple', 'mix']*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: ctype_lower(): Argument of type int will be interpreted as\
    \ string in the future in /tmp/tmp5sq35jte.php on line 25\n\nWarning: Undefined\
    \ array key 0 in /tmp/tmp5sq35jte.php on line 18\n\nDeprecated: ctype_upper():\
    \ Argument of type null will be interpreted as string in the future in /tmp/tmp5sq35jte.php\
    \ on line 18\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5sq35jte.php:56\n\
    Stack trace:\n#0 /tmp/tmp5sq35jte.php(59): test()\n#1 {main}\n  thrown in /tmp/tmp5sq35jte.php\
    \ on line 56\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif(count($dict) == 0) {\n\t\treturn false;\n\t}\n\t$lower = array_map('strtolower',\
    \ array_keys($dict));\n\t$upper = array_map('strtoupper', array_keys($dict));\n\
    \tif($lower == array_keys($dict) || $upper == array_keys($dict)) {\n\t\treturn\
    \ true;\n\t}\n\treturn false;\n}\n\n/* Given an array, return true if all values\
    \ are strings, else return false.\nThe function should return false is the given\
    \ array is empty.\nExamples:\n>>> check_dict_values(array(\"a\" => \"apple\",\
    \ \"b\" => \"banana\"))\ntrue\n>>> check_dict_values(array(\"a\" => \"apple\"\
    , \"b\" => \"banana\", \"c\" => \"carrot\"))\ntrue\n>>> check_dict_values(array(\"\
    a\" => \"apple\", \"b\" => \"banana\", \"c\" => \"carrot\", \"d\" => 1))\nfalse\n\
    >>> check_dict_values(array(\"a\" => \"apple\", \"b\" => \"banana\", \"c\" =>\
    \ \"carrot\", \"d\" => \"1\"))\ntrue\n>>> check_dict_values(array(\"a\" => \"\
    apple\", \"b\" => \"banana\", \"c\" => \"carrot\", \"d\" => \"1\", \"e\" => 1))\n\
    false\n>>> check_dict_values(array(\"a\" => \"apple\", \"b\" => \"banana\", \"\
    c\" => \"carrot\", \"d\" => \"1\", \"e\" => \"1\"))\ntrue\n>>> check_dict_values(array(\"\
    a\" => \"apple\", \"b\" => \"banana\", \"c\" => \"carrot\", \"d\" => \"1\", \"\
    e\" => \"1\", \"f\" => 1))\nfalse\n>>> check_dict_values(array(\"a\" => \"apple\"\
    , \"b\" => \"banana\", \"c\" => \"carrot\", \"d\" => \"1\", \"e\" => \"1\", \"\
    f\" => \"1\"))\ntrue\n>>> check_dict_values(array(\"a\" => \"apple\", \"b\" =>\
    \ \"banana\", \"c\" => \"carrot\",\nfunction candidate(...$args) {\n    return\
    \ check_dict_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"b\" => \"banana\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"\
    banana\", \"B\" => \"banana\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"p\" => \"pineapple\", \"5\" => \"banana\", \"\
    a\" => \"apple\")) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\")) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"fruit\" => \"Orange\", \"taste\" =>\
    \ \"Sweet\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660220839
- exit_code: 0
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (count($dict) == 0) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$first_key = $keys[0];\n\t$is_lower = ctype_lower($first_key);\n\t$is_upper\
    \ = ctype_upper($first_key);\n\tif (!$is_lower && !$is_upper) {\n\t\treturn false;\n\
    \t}\n\tforeach ($keys as $key) {\n\t\tif ($is_lower && !ctype_lower($key)) {\n\
    \t\t\treturn false;\n\t\t}\n\t\tif ($is_upper && !ctype_upper($key)) {\n\t\t\t\
    return false;\n\t\t}\n\t}\n\treturn true;\n}\n\n$dict = array(\"a\" => \"apple\"\
    , \"b\" => \"banana\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"\
    a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"\
    );\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\");\necho check_dict_case($dict) .\
    \ \"\\n\";\n$dict = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\",\
    \ \"b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    Deprecated: ctype_lower(): Argument of type int will be interpreted as string
    in the future in /tmp/tmp5ed7_lu3.php on line 28



    1


    Deprecated: ctype_lower(): Argument of type int will be interpreted as string
    in the future in /tmp/tmp5ed7_lu3.php on line 28

    '
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif(empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\tif($keys == $lower || $keys == $upper) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n\n$dict = array(\"a\" => \"apple\", \"b\" => \"banana\");\n\
    echo check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"a\" => \"apple\"\
    , \"A\" => \"banana\", \"B\" => \"banana\");\necho check_dict_case($dict);\necho\
    \ \"\\n\";\n$dict = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"\
    );\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"Name\" => \"\
    John\", \"Age\" => \"36\", \"City\" => \"Houston\");\necho check_dict_case($dict);\n\
    echo \"\\n\";\n$dict = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\necho\
    \ check_dict_case($dict);\necho \"\\n\";\nfunction candidate(...$args) {\n   \
    \ return check_dict_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"b\" => \"banana\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"\
    banana\", \"B\" => \"banana\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"p\" => \"pineapple\", \"5\" => \"banana\", \"\
    a\" => \"apple\")) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\")) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"fruit\" => \"Orange\", \"taste\" =>\
    \ \"Sweet\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n1\n\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaa2ifmc8.php:51\n\
    Stack trace:\n#0 /tmp/tmpaa2ifmc8.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpaa2ifmc8.php\
    \ on line 51\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n    $lower = true;\n    $upper = true;\n    foreach ($dict as $key => $value)\
    \ {\n        if (!ctype_lower($key)) {\n            $lower = false;\n        }\n\
    \        if (!ctype_upper($key)) {\n            $upper = false;\n        }\n \
    \   }\n    return ($lower || $upper);\n}\nfunction candidate(...$args) {\n   \
    \ return check_dict_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"b\" => \"banana\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"\
    banana\", \"B\" => \"banana\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"p\" => \"pineapple\", \"5\" => \"banana\", \"\
    a\" => \"apple\")) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\")) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"fruit\" => \"Orange\", \"taste\" =>\
    \ \"Sweet\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: ctype_lower(): Argument of type int will be interpreted as\
    \ string in the future in /tmp/tmpco5nk871.php on line 20\n\nDeprecated: ctype_upper():\
    \ Argument of type int will be interpreted as string in the future in /tmp/tmpco5nk871.php\
    \ on line 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpco5nk871.php:40\n\
    Stack trace:\n#0 /tmp/tmpco5nk871.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpco5nk871.php\
    \ on line 40\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$lower = array_keys($dict);\n\t$upper = array_keys($dict);\n\t$lower =\
    \ array_map('strtolower', $lower);\n\t$upper = array_map('strtoupper', $upper);\n\
    \tif ($lower == array_keys($dict) || $upper == array_keys($dict)) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/* Given an array of integers,\
    \ return the sum of all integers in the array.\nExamples:\n>>> sum_array(array(1,\
    \ 2, 3, 4, 5))\n15\n>>> sum_array(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))\n55\n\
    >>> sum_array(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))\n120\n\
    >>> sum_array(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,\
    \ 18, 19, 20))\n210*/\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\",\
    \ \"b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4yuctwg9.php:45\n\
    Stack trace:\n#0 /tmp/tmp4yuctwg9.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp4yuctwg9.php\
    \ on line 45\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif(empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$first_key = $keys[0];\n\t$first_key_is_upper = ctype_upper($first_key);\n\t\
    foreach($keys as $key) {\n\t\tif(ctype_upper($key) != $first_key_is_upper) {\n\
    \t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: ctype_upper(): Argument of type int will be interpreted as\
    \ string in the future in /tmp/tmp1sgxzo0a.php on line 24\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmp1sgxzo0a.php:38\nStack trace:\n#0 /tmp/tmp1sgxzo0a.php(45):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp1sgxzo0a.php on line 38\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\tif ($keys == $lower || $keys == $upper) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n\n/* Given an array, return true if all values are strings,\
    \ else return false.\nThe function should return false is the given array is empty.\n\
    Examples:\n>>> check_dict_values(array(\"a\" => \"apple\", \"b\" => \"banana\"\
    ))\ntrue\n>>> check_dict_values(array(\"a\" => \"apple\", \"b\" => \"banana\"\
    , \"c\" => \"banana\"))\ntrue\n>>> check_dict_values(array(\"a\" => \"apple\"\
    , \"b\" => \"banana\", \"c\" => \"banana\", \"d\" => 1))\nfalse\n>>> check_dict_values(array(\"\
    a\" => \"apple\", \"b\" => \"banana\", \"c\" => \"banana\", \"d\" => 1, \"e\"\
    \ => \"apple\"))\nfalse\n>>> check_dict_values(array(\"a\" => \"apple\", \"b\"\
    \ => \"banana\", \"c\" => \"banana\", \"d\" => 1, \"e\" => \"apple\", \"f\" =>\
    \ \"banana\"))\nfalse\n>>> check_dict_values(array(\"a\" => \"apple\", \"b\" =>\
    \ \"banana\", \"c\" => \"banana\", \"d\" => 1, \"e\" => \"apple\", \"f\" => \"\
    banana\", \"g\" => \"banana\"))\nfalse\n>>> check_dict_values(array(\"Name\" =>\
    \ \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\ntrue\n>>> check_dict_values(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdaxku721.php:55\n\
    Stack trace:\n#0 /tmp/tmpdaxku721.php(62): test()\n#1 {main}\n  thrown in /tmp/tmpdaxku721.php\
    \ on line 55\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$lower = true;\n\t$upper = true;\n\tforeach ($dict as $key => $value) {\n\
    \t\tif (ctype_lower($key)) {\n\t\t\t$upper = false;\n\t\t} else {\n\t\t\t$lower\
    \ = false;\n\t\t}\n\t}\n\treturn ($lower || $upper);\n}\n\n/* Given an array,\
    \ return true if all keys are strings in lower \ncase or all keys are strings\
    \ in upper case, else return false.\nThe function should return false is the given\
    \ array is empty.\nExamples:\n>>> check_dict_case(array(\"a\" => \"apple\", \"\
    b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\" => \"apple\", \"A\"\
    \ => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: ctype_lower(): Argument of type int will be interpreted as\
    \ string in the future in /tmp/tmpfwf2acld.php on line 20\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpfwf2acld.php:51\nStack trace:\n#0 /tmp/tmpfwf2acld.php(57):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpfwf2acld.php on line 51\n"
  timestamp: 1660220839
- exit_code: 0
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$lower = true;\n\t$upper\
    \ = true;\n\tforeach ($dict as $key => $value) {\n\t\tif (!ctype_lower($key))\
    \ {\n\t\t\t$lower = false;\n\t\t}\n\t\tif (!ctype_upper($key)) {\n\t\t\t$upper\
    \ = false;\n\t\t}\n\t}\n\tif ($lower || $upper) {\n\t\treturn true;\n\t}\n\treturn\
    \ false;\n}\n\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Deprecated: ctype_lower(): Argument of type int will be interpreted as string
    in the future in /tmp/tmpoyu09v9x.php on line 23


    Deprecated: ctype_upper(): Argument of type int will be interpreted as string
    in the future in /tmp/tmpoyu09v9x.php on line 26

    '
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n    if (count($dict) == 0) {\n        return false;\n    }\n    $lower =\
    \ true;\n    $upper = true;\n    foreach ($dict as $key => $value) {\n       \
    \ if (strtolower($key) != $key) {\n            $lower = false;\n        }\n  \
    \      if (strtoupper($key) != $key) {\n            $upper = false;\n        }\n\
    \    }\n    return $lower || $upper;\n}\n\n/* Given an array, return true if the\
    \ array contains a string \nwith the value \"red\" or \"blue\" or \"green\", else\
    \ return false.\nExamples:\n>>> check_color(array(\"red\", \"blue\", \"green\"\
    ))\ntrue\n>>> check_color(array(\"red\", \"blue\", \"yellow\"))\ntrue\n>>> check_color(array(\"\
    red\", \"blue\", \"yellow\", \"black\"))\nfalse\n>>> check_color(array(\"red\"\
    , \"blue\", \"yellow\", \"black\", \"green\"))\ntrue\n>>> check_color(array(\"\
    red\", \"blue\", \"yellow\", \"black\", \"green\", \"orange\"))\nfalse*/\nfunction\
    \ candidate(...$args) {\n    return check_dict_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"\
    banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"\
    pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqrc4ple7.php:53\n\
    Stack trace:\n#0 /tmp/tmpqrc4ple7.php(60): test()\n#1 {main}\n  thrown in /tmp/tmpqrc4ple7.php\
    \ on line 53\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n    if (empty($dict)) {\n        return false;\n    }\n    $keys = array_keys($dict);\n\
    \    $first_key = $keys[0];\n    $first_key_type = gettype($first_key);\n    if\
    \ ($first_key_type != \"string\") {\n        return false;\n    }\n    $is_upper\
    \ = ctype_upper($first_key);\n    foreach ($keys as $key) {\n        if (gettype($key)\
    \ != $first_key_type) {\n            return false;\n        }\n        if (ctype_upper($key)\
    \ != $is_upper) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\n$dict = array(\"a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" =>\
    \ \"apple\", 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\"\
    \ => \"Houston\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict) . \"\\n\";\n\
    function candidate(...$args) {\n    return check_dict_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"\
    banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"\
    pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n\n1\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeelkzxdt.php:56\n\
    Stack trace:\n#0 /tmp/tmpeelkzxdt.php(62): test()\n#1 {main}\n  thrown in /tmp/tmpeelkzxdt.php\
    \ on line 56\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$lower = 0;\n\t$upper = 0;\n\tforeach ($dict as $key => $value) {\n\t\t\
    if (ctype_lower($key)) {\n\t\t\t$lower++;\n\t\t} elseif (ctype_upper($key)) {\n\
    \t\t\t$upper++;\n\t\t}\n\t}\n\tif ($lower == count($dict) || $upper == count($dict))\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/* Given an array,\
    \ return true if all values are strings in lower \ncase or all values are strings\
    \ in upper case, else return false.\nThe function should return false is the given\
    \ array is empty.\nExamples:\n>>> check_dict_case(array(\"a\" => \"apple\", \"\
    b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\" => \"apple\", \"A\"\
    \ => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: ctype_lower(): Argument of type int will be interpreted as\
    \ string in the future in /tmp/tmptkfh78yz.php on line 20\n\nDeprecated: ctype_upper():\
    \ Argument of type int will be interpreted as string in the future in /tmp/tmptkfh78yz.php\
    \ on line 22\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptkfh78yz.php:58\n\
    Stack trace:\n#0 /tmp/tmptkfh78yz.php(61): test()\n#1 {main}\n  thrown in /tmp/tmptkfh78yz.php\
    \ on line 58\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$lower = array_map('strtolower',\
    \ array_keys($dict));\n\t$upper = array_map('strtoupper', array_keys($dict));\n\
    \tif ($lower == array_keys($dict) || $upper == array_keys($dict)) {\n\t\treturn\
    \ true;\n\t}\n\treturn false;\n}\n\necho check_dict_case(array(\"a\" => \"apple\"\
    , \"b\" => \"banana\")) . \"\\n\";\necho check_dict_case(array(\"a\" => \"apple\"\
    , \"A\" => \"banana\", \"B\" => \"banana\")) . \"\\n\";\necho check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\")) . \"\\n\";\necho check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\")) . \"\\n\";\n\
    echo check_dict_case(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) . \"\\\
    n\";\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\",\
    \ \"b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n1\n\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1lu3agi4.php:40\n\
    Stack trace:\n#0 /tmp/tmp1lu3agi4.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp1lu3agi4.php\
    \ on line 40\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif(empty($dict)) {\n\t\treturn false;\n\t}\n\t$upper = array_map('strtoupper',\
    \ array_keys($dict));\n\t$lower = array_map('strtolower', array_keys($dict));\n\
    \treturn $upper == array_keys($dict) || $lower == array_keys($dict);\n}\n\n/*\
    \ Given an array, return true if all keys are strings in lower \ncase or all keys\
    \ are strings in upper case, else return false.\nThe function should return false\
    \ is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"a\" =>\
    \ \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\" => \"\
    apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbytjuzdp.php:46\n\
    Stack trace:\n#0 /tmp/tmpbytjuzdp.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpbytjuzdp.php\
    \ on line 46\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$lower = array_change_key_case($dict, CASE_LOWER);\n\t$upper = array_change_key_case($dict,\
    \ CASE_UPPER);\n\tif ($lower == $dict || $upper == $dict) {\n\t\treturn true;\n\
    \t}\n\treturn false;\n}\n\n/* Given an array, return true if all keys are strings\
    \ in lower \ncase or all keys are strings in upper case, else return false.\n\
    The function should return false is the given array is empty.\nExamples:\n>>>\
    \ check_dict_case(array(\"a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_l8c99hr.php:46\n\
    Stack trace:\n#0 /tmp/tmp_l8c99hr.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp_l8c99hr.php\
    \ on line 46\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$lower = true;\n\t$upper = true;\n\tforeach ($dict as $key => $value) {\n\
    \t\tif (ctype_lower($key)) {\n\t\t\t$upper = false;\n\t\t} else {\n\t\t\t$lower\
    \ = false;\n\t\t}\n\t}\n\treturn $lower || $upper;\n}\n\n$dict = array(\"a\" =>\
    \ \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict) . \"\\n\";\n$dict\
    \ = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\");\necho\
    \ check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" => \"apple\", 8 => \"\
    banana\", \"a\" => \"apple\");\necho check_dict_case($dict) . \"\\n\";\n$dict\
    \ = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\");\n\
    echo check_dict_case($dict) . \"\\n\";\n$dict = array(\"STATE\" => \"NC\", \"\
    ZIP\" => \"12345\");\necho check_dict_case($dict) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n\nDeprecated: ctype_lower(): Argument of type int will be interpreted\
    \ as string in the future in /tmp/tmpnat266rj.php on line 20\n\n1\n1\n\nDeprecated:\
    \ ctype_lower(): Argument of type int will be interpreted as string in the future\
    \ in /tmp/tmpnat266rj.php on line 20\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpnat266rj.php:47\nStack trace:\n#0 /tmp/tmpnat266rj.php(53):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpnat266rj.php on line 47\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$keys = array_keys($dict);\n\t$lower = array_map('strtolower', $keys);\n\
    \t$upper = array_map('strtoupper', $keys);\n\tif ($keys == $lower || $keys ==\
    \ $upper) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/* Given\
    \ an array, return the sum of all the elements in the array.\nExamples:\n>>> sum_array(array(1,\
    \ 2, 3))\n6\n>>> sum_array(array(1, 2, 3, 4, 5))\n15\n>>> sum_array(array(1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10))\n55\n>>> sum_array(array(1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11, 12, 13, 14, 15))\n120\n>>> sum_array(array(1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20))\n210*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcoytf96s.php:46\n\
    Stack trace:\n#0 /tmp/tmpcoytf96s.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpcoytf96s.php\
    \ on line 46\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\tif ($keys == $lower || $keys == $upper) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n\n/* Given an array, return true if the array is sorted in\
    \ ascending order, else return false.\nThe function should return false is the\
    \ given array is empty.\nExamples:\n>>> check_sorted(array(1, 2, 3, 4, 5))\ntrue\n\
    >>> check_sorted(array(1, 2, 3, 4, 5, 6))\ntrue\n>>> check_sorted(array(1, 2,\
    \ 3, 4, 5, 6, 7))\ntrue\n>>> check_sorted(array(1, 2, 3, 4, 5, 6, 7, 8))\ntrue\n\
    >>> check_sorted(array(1, 2, 3, 4, 5, 6, 7, 8, 9))\ntrue\n>>> check_sorted(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10))\ntrue\n>>> check_sorted(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11))\ntrue\n>>> check_sorted(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12))\ntrue\n>>> check_sorted(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13))\ntrue\n>>> check_sorted(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\
    \ 14))\ntrue\n>>> check_sorted(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\
    \ 14, 15))\ntrue\n>>> check_sorted(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\
    \ 13, 14, 15\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\",\
    \ \"b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 29 in /tmp/tmpauqmgemf.php on
    line 29

    '
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$upper = array_map('strtoupper',\
    \ array_keys($dict));\n\t$lower = array_map('strtolower', array_keys($dict));\n\
    \tif ($upper == array_keys($dict) || $lower == array_keys($dict)) {\n\t\treturn\
    \ true;\n\t}\n\treturn false;\n}\n\n$dict = array(\"a\" => \"apple\", \"b\" =>\
    \ \"banana\");\necho check_dict_case($dict) . PHP_EOL;\n$dict = array(\"a\" =>\
    \ \"apple\", \"A\" => \"banana\", \"B\" => \"banana\");\necho check_dict_case($dict)\
    \ . PHP_EOL;\n$dict = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"\
    );\necho check_dict_case($dict) . PHP_EOL;\n$dict = array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\");\necho check_dict_case($dict) .\
    \ PHP_EOL;\n$dict = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict)\
    \ . PHP_EOL;\n$dict = array();\necho check_dict_case($dict) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return check_dict_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"\
    banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"\
    pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n1\n\n1\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqt7s03dt.php:47\n\
    Stack trace:\n#0 /tmp/tmpqt7s03dt.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpqt7s03dt.php\
    \ on line 47\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$upper = 0;\n\t$lower =\
    \ 0;\n\tforeach ($dict as $key => $value) {\n\t\tif (ctype_upper($key)) {\n\t\t\
    \t$upper++;\n\t\t} else {\n\t\t\t$lower++;\n\t\t}\n\t}\n\tif ($upper == 0 || $lower\
    \ == 0) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n$dict =\
    \ array(\"a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict);\n\
    echo \"\\n\";\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\");\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict);\n\
    echo \"\\n\";\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\"\
    \ => \"Houston\");\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict);\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\",\
    \ \"b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n\nDeprecated: ctype_upper(): Argument of type int will be interpreted\
    \ as string in the future in /tmp/tmp6g40smvk.php on line 23\n1\n1\n1\n\nDeprecated:\
    \ ctype_upper(): Argument of type int will be interpreted as string in the future\
    \ in /tmp/tmp6g40smvk.php on line 23\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp6g40smvk.php:58\nStack trace:\n#0 /tmp/tmp6g40smvk.php(65):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp6g40smvk.php on line 58\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$first_key = $keys[0];\n\t$is_upper = ctype_upper($first_key);\n\t$is_lower\
    \ = ctype_lower($first_key);\n\tforeach ($keys as $key) {\n\t\tif ($is_upper &&\
    \ !ctype_upper($key)) {\n\t\t\treturn false;\n\t\t}\n\t\tif ($is_lower && !ctype_lower($key))\
    \ {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n$dict = array(\"a\"\
    \ => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict) . \"\\n\";\n\
    $dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\");\n\
    echo check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" => \"apple\", 8 =>\
    \ \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict) . \"\\n\";\n$dict\
    \ = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\");\n\
    echo check_dict_case($dict) . \"\\n\";\n$dict = array(\"STATE\" => \"NC\", \"\
    ZIP\" => \"12345\");\necho check_dict_case($dict) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n\nDeprecated: ctype_lower(): Argument of type int will be interpreted\
    \ as string in the future in /tmp/tmpkxlv43jw.php on line 28\n\n1\n1\n\nDeprecated:\
    \ ctype_lower(): Argument of type int will be interpreted as string in the future\
    \ in /tmp/tmpkxlv43jw.php on line 28\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpkxlv43jw.php:53\nStack trace:\n#0 /tmp/tmpkxlv43jw.php(59):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpkxlv43jw.php on line 53\n"
  timestamp: 1660220839
- exit_code: 0
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n    $keys = array_keys($dict);\n    $first_key = $keys[0];\n    $first_key_type\
    \ = gettype($first_key);\n    if ($first_key_type == \"string\") {\n        $first_key_case\
    \ = ctype_lower($first_key) ? \"lower\" : \"upper\";\n        foreach ($keys as\
    \ $key) {\n            if (gettype($key) != $first_key_type) {\n             \
    \   return false;\n            }\n            if ($first_key_case == \"lower\"\
    \ && !ctype_lower($key)) {\n                return false;\n            }\n   \
    \         if ($first_key_case == \"upper\" && !ctype_upper($key)) {\n        \
    \        return false;\n            }\n        }\n        return true;\n    }\n\
    \    return false;\n}\n\n$dict = array(\"a\" => \"apple\", \"b\" => \"banana\"\
    );\nvar_dump(check_dict_case($dict));\n$dict = array(\"a\" => \"apple\", \"A\"\
    \ => \"banana\", \"B\" => \"banana\");\nvar_dump(check_dict_case($dict));\n$dict\
    \ = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\");\nvar_dump(check_dict_case($dict));\n\
    $dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"\
    );\nvar_dump(check_dict_case($dict));\n$dict = array(\"STATE\" => \"NC\", \"ZIP\"\
    \ => \"12345\");\nvar_dump(check_dict_case($dict));\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'bool(true)

    bool(false)

    bool(false)

    bool(false)

    bool(true)


    Warning: Undefined array key 0 in /tmp/tmp_tb150k1.php on line 18

    '
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\tif ($keys == $lower || $keys == $upper) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n\n/* Given an array of integers, return the sum of all the\
    \ integers that have an even index, multiplied by the integer at the last index.\n\
    If the array is empty, return 0.\nExamples:\n>>> sum_even_indexed_and_last(array(1,\
    \ 2, 3, 4))\n14\n>>> sum_even_indexed_and_last(array(1, 2, 3))\n3\n>>> sum_even_indexed_and_last(array(1,\
    \ 2, 3, 4, 5))\n30\n>>> sum_even_indexed_and_last(array())\n0*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmf88ofzc.php:47\n\
    Stack trace:\n#0 /tmp/tmpmf88ofzc.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpmf88ofzc.php\
    \ on line 47\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$lower = 0;\n\t$upper = 0;\n\tforeach ($dict as $key => $value) {\n\t\t\
    if (ctype_lower($key)) {\n\t\t\t$lower++;\n\t\t} elseif (ctype_upper($key)) {\n\
    \t\t\t$upper++;\n\t\t}\n\t}\n\tif ($lower == count($dict) || $upper == count($dict))\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n$dict = array(\"\
    a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict) . \"\\n\"\
    ;\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"\
    );\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" => \"apple\",\
    \ 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict) . \"\\n\"\
    ;\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"\
    );\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"STATE\" => \"NC\"\
    , \"ZIP\" => \"12345\");\necho check_dict_case($dict) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n\nDeprecated: ctype_lower(): Argument of type int will be interpreted\
    \ as string in the future in /tmp/tmp2kvyte2g.php on line 20\n\nDeprecated: ctype_upper():\
    \ Argument of type int will be interpreted as string in the future in /tmp/tmp2kvyte2g.php\
    \ on line 22\n\n\n1\n\nDeprecated: ctype_lower(): Argument of type int will be\
    \ interpreted as string in the future in /tmp/tmp2kvyte2g.php on line 20\n\nDeprecated:\
    \ ctype_upper(): Argument of type int will be interpreted as string in the future\
    \ in /tmp/tmp2kvyte2g.php on line 22\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp2kvyte2g.php:54\nStack trace:\n#0 /tmp/tmp2kvyte2g.php(57):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp2kvyte2g.php on line 54\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$lower = true;\n\t$upper = true;\n\tforeach ($dict as $key => $value) {\n\
    \t\tif (!ctype_lower($key)) {\n\t\t\t$lower = false;\n\t\t}\n\t\tif (!ctype_upper($key))\
    \ {\n\t\t\t$upper = false;\n\t\t}\n\t}\n\tif ($lower || $upper) {\n\t\treturn\
    \ true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/* Given an array of integers,\
    \ return true if the array contains \na number that is a multiple of 7, else return\
    \ false.\nExamples:\n>>> check_for_7(array(1, 2, 3, 4, 5, 6, 7))\ntrue\n>>> check_for_7(array(1,\
    \ 2, 3, 4, 5, 6, 8))\nfalse\n>>> check_for_7(array(1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10))\ntrue\n>>> check_for_7(array(1, 2, 3, 4, 5, 6, 8, 9, 10))\nfalse\n>>> check_for_7(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20))\ntrue\n\
    >>> check_for_7(array(1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,\
    \ 18, 19, 20))\nfalse*/\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\",\
    \ \"b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: ctype_lower(): Argument of type int will be interpreted as\
    \ string in the future in /tmp/tmpcp8hu_4c.php on line 20\n\nDeprecated: ctype_upper():\
    \ Argument of type int will be interpreted as string in the future in /tmp/tmpcp8hu_4c.php\
    \ on line 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcp8hu_4c.php:60\n\
    Stack trace:\n#0 /tmp/tmpcp8hu_4c.php(63): test()\n#1 {main}\n  thrown in /tmp/tmpcp8hu_4c.php\
    \ on line 60\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$lower = true;\n\t$upper = true;\n\tforeach ($dict as $key => $value) {\n\
    \t\tif (ctype_lower($key)) {\n\t\t\t$upper = false;\n\t\t} else {\n\t\t\t$lower\
    \ = false;\n\t\t}\n\t}\n\treturn $lower || $upper;\n}\n\n/* Given an array, return\
    \ true if all keys are strings in lower \ncase or all keys are strings in upper\
    \ case, else return false.\nThe function should return false is the given array\
    \ is empty.\nExamples:\n>>> check_dict_case(array(\"a\" => \"apple\", \"b\" =>\
    \ \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\" => \"apple\", \"A\" => \"\
    banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"a\" => \"\
    apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: ctype_lower(): Argument of type int will be interpreted as\
    \ string in the future in /tmp/tmprzk6el8v.php on line 20\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmprzk6el8v.php:51\nStack trace:\n#0 /tmp/tmprzk6el8v.php(57):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmprzk6el8v.php on line 51\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$lower = true;\n\t$upper = true;\n\tforeach ($dict as $key => $value) {\n\
    \t\tif (!ctype_lower($key)) {\n\t\t\t$lower = false;\n\t\t}\n\t\tif (!ctype_upper($key))\
    \ {\n\t\t\t$upper = false;\n\t\t}\n\t}\n\treturn $lower || $upper;\n}\n\nfunction\
    \ candidate(...$args) {\n    return check_dict_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"\
    banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"\
    pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: ctype_lower(): Argument of type int will be interpreted as\
    \ string in the future in /tmp/tmpcwfpl72_.php on line 20\n\nDeprecated: ctype_upper():\
    \ Argument of type int will be interpreted as string in the future in /tmp/tmpcwfpl72_.php\
    \ on line 23\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcwfpl72_.php:41\n\
    Stack trace:\n#0 /tmp/tmpcwfpl72_.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpcwfpl72_.php\
    \ on line 41\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\tif ($keys == $lower || $keys == $upper) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n\n/* Given an array, return true if all keys are strings in\
    \ lower \ncase or all keys are strings in upper case, else return false.\nThe\
    \ function should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj_ims3wr.php:50\n\
    Stack trace:\n#0 /tmp/tmpj_ims3wr.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpj_ims3wr.php\
    \ on line 50\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif(empty($dict)) return false;\n\t$keys = array_keys($dict);\n\t$upper\
    \ = array_map('strtoupper', $keys);\n\t$lower = array_map('strtolower', $keys);\n\
    \tif($keys == $upper || $keys == $lower) return true;\n\treturn false;\n}\n\n\
    /* Given an array, return true if all keys are strings in lower \ncase or all\
    \ keys are strings in upper case, else return false.\nThe function should return\
    \ false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjgao3_28.php:46\n\
    Stack trace:\n#0 /tmp/tmpjgao3_28.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpjgao3_28.php\
    \ on line 46\n"
  timestamp: 1660220839
- exit_code: 0
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif(empty($dict)) {\n\t\treturn false;\n\t}\n\t$lower = true;\n\t$upper\
    \ = true;\n\tforeach($dict as $key => $value) {\n\t\tif(!ctype_lower($key)) {\n\
    \t\t\t$lower = false;\n\t\t}\n\t\tif(!ctype_upper($key)) {\n\t\t\t$upper = false;\n\
    \t\t}\n\t}\n\tif($lower || $upper) {\n\t\treturn true;\n\t}\n\treturn false;\n\
    }\n\n$dict = array(\"a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" =>\
    \ \"apple\", 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\"\
    \ => \"Houston\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict) . \"\\n\";\n\
    function candidate(...$args) {\n    return check_dict_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"\
    banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"\
    pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    Deprecated: ctype_lower(): Argument of type int will be interpreted as string
    in the future in /tmp/tmpenh_h0s9.php on line 23


    Deprecated: ctype_upper(): Argument of type int will be interpreted as string
    in the future in /tmp/tmpenh_h0s9.php on line 26



    1


    Deprecated: ctype_lower(): Argument of type int will be interpreted as string
    in the future in /tmp/tmpenh_h0s9.php on line 23


    Deprecated: ctype_upper(): Argument of type int will be interpreted as string
    in the future in /tmp/tmpenh_h0s9.php on line 26

    '
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\tif ($keys == $lower || $keys == $upper) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n\n/* Given an array of integers, return true if the array\
    \ contains \na number that is a multiple of 7, else return false.\nExamples:\n\
    >>> check_multiples_of_7(array(14, 21, 49, 0, -7))\ntrue\n>>> check_multiples_of_7(array(14,\
    \ 21, 49, 0, -6))\nfalse\n>>> check_multiples_of_7(array(14, 21, 49, 0, -8))\n\
    false\n>>> check_multiples_of_7(array(14, 21, 49, 0, -14))\ntrue\n>>> check_multiples_of_7(array(14,\
    \ 21, 49, 0, -21))\ntrue\n>>> check_multiples_of_7(array(14, 21, 49, 0, -28))\n\
    true\n>>> check_multiples_of_7(array(14, 21, 49, 0, -35))\ntrue\n>>> check_multiples_of_7(array(14,\
    \ 21, 49, 0, -42))\ntrue\n>>> check_multiples_of_7(array(14, 21, 49, 0, -49))\n\
    true\n>>> check_multiples_of_7(array(14, 21, 49, 0, -56))\ntrue\n>>> check_multiples_of_7(array(14,\
    \ 21, 49, 0, -63))\ntrue\n>>> check_multiples_of_7(array(14, 21, 49, 0, -70))\n\
    true\n>>> check_multiples_of_7(array(14, 21, 49, 0, -77))\ntrue\n>>> check_multiples_of_7(array(14,\
    \ 21, 49, 0, -84))\ntrue\n>>> check_multiples_of_7(array(14, 21, 49, 0\nfunction\
    \ candidate(...$args) {\n    return check_dict_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"\
    banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"\
    pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 29 in /tmp/tmpo5yotyfl.php on
    line 29

    '
  timestamp: 1660220839
- exit_code: 0
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$keys = array_keys($dict);\n\t$first_key = $keys[0];\n\t$first_key_is_lower\
    \ = ctype_lower($first_key);\n\t$first_key_is_upper = ctype_upper($first_key);\n\
    \tif ($first_key_is_lower || $first_key_is_upper) {\n\t\tforeach ($keys as $key)\
    \ {\n\t\t\tif ($first_key_is_lower && !ctype_lower($key)) {\n\t\t\t\treturn false;\n\
    \t\t\t}\n\t\t\tif ($first_key_is_upper && !ctype_upper($key)) {\n\t\t\t\treturn\
    \ false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n$dict =\
    \ array(\"a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" =>\
    \ \"apple\", 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\"\
    \ => \"Houston\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict) . \"\\n\";\n\
    function candidate(...$args) {\n    return check_dict_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"\
    banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"\
    pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    Deprecated: ctype_lower(): Argument of type int will be interpreted as string
    in the future in /tmp/tmp8arpbr4y.php on line 23



    1


    Deprecated: ctype_lower(): Argument of type int will be interpreted as string
    in the future in /tmp/tmp8arpbr4y.php on line 23


    Warning: Undefined array key 0 in /tmp/tmp8arpbr4y.php on line 18


    Deprecated: ctype_lower(): Argument of type null will be interpreted as string
    in the future in /tmp/tmp8arpbr4y.php on line 19


    Deprecated: ctype_upper(): Argument of type null will be interpreted as string
    in the future in /tmp/tmp8arpbr4y.php on line 20

    '
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$lower = array_change_key_case($dict,\
    \ CASE_LOWER);\n\t$upper = array_change_key_case($dict, CASE_UPPER);\n\tif ($lower\
    \ == $dict || $upper == $dict) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n\
    /* Given an array, return true if all keys are strings in lower \ncase or all\
    \ keys are strings in upper case, else return false.\nThe function should return\
    \ false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwubts8mx.php:49\n\
    Stack trace:\n#0 /tmp/tmpwubts8mx.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpwubts8mx.php\
    \ on line 49\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\tif ($keys == $lower || $keys == $upper) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n\necho check_dict_case(array(\"a\" => \"apple\", \"b\" =>\
    \ \"banana\")) . \"\\n\";\necho check_dict_case(array(\"a\" => \"apple\", \"A\"\
    \ => \"banana\", \"B\" => \"banana\")) . \"\\n\";\necho check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\")) . \"\\n\";\necho check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\")) . \"\\n\";\n\
    echo check_dict_case(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) . \"\\\
    n\";\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\",\
    \ \"b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n1\n\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqk00lwbj.php:41\n\
    Stack trace:\n#0 /tmp/tmpqk00lwbj.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpqk00lwbj.php\
    \ on line 41\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\tif ($keys == $lower || $keys == $upper) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n\n$dict = array(\"a\" => \"apple\", \"b\" => \"banana\");\n\
    echo check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"a\" => \"apple\"\
    , \"A\" => \"banana\", \"B\" => \"banana\");\necho check_dict_case($dict);\necho\
    \ \"\\n\";\n$dict = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"\
    );\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"Name\" => \"\
    John\", \"Age\" => \"36\", \"City\" => \"Houston\");\necho check_dict_case($dict);\n\
    echo \"\\n\";\n$dict = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\necho\
    \ check_dict_case($dict);\necho \"\\n\";\nfunction candidate(...$args) {\n   \
    \ return check_dict_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"b\" => \"banana\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"\
    banana\", \"B\" => \"banana\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"p\" => \"pineapple\", \"5\" => \"banana\", \"\
    a\" => \"apple\")) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\")) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"fruit\" => \"Orange\", \"taste\" =>\
    \ \"Sweet\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n1\n\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa52pw_gy.php:51\n\
    Stack trace:\n#0 /tmp/tmpa52pw_gy.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpa52pw_gy.php\
    \ on line 51\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$lower = true;\n\t$upper\
    \ = true;\n\tforeach ($dict as $key => $value) {\n\t\tif (ctype_lower($key)) {\n\
    \t\t\t$upper = false;\n\t\t} else {\n\t\t\t$lower = false;\n\t\t}\n\t}\n\treturn\
    \ $lower || $upper;\n}\n\necho check_dict_case(array(\"a\" => \"apple\", \"b\"\
    \ => \"banana\")) . \"\\n\";\necho check_dict_case(array(\"a\" => \"apple\", \"\
    A\" => \"banana\", \"B\" => \"banana\")) . \"\\n\";\necho check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\")) . \"\\n\";\necho check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\")) . \"\\n\";\n\
    echo check_dict_case(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) . \"\\\
    n\";\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\",\
    \ \"b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n\nDeprecated: ctype_lower(): Argument of type int will be interpreted\
    \ as string in the future in /tmp/tmp2afwzqgy.php on line 23\n\n1\n1\n\nDeprecated:\
    \ ctype_lower(): Argument of type int will be interpreted as string in the future\
    \ in /tmp/tmp2afwzqgy.php on line 23\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp2afwzqgy.php:45\nStack trace:\n#0 /tmp/tmp2afwzqgy.php(51):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp2afwzqgy.php on line 45\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$lower = true;\n\t$upper = true;\n\tforeach ($dict as $key => $value) {\n\
    \t\tif (ctype_lower($key)) {\n\t\t\t$upper = false;\n\t\t} else {\n\t\t\t$lower\
    \ = false;\n\t\t}\n\t}\n\treturn $lower || $upper;\n}\n\n/* Given an array, return\
    \ true if all keys are strings in lower \ncase or all keys are strings in upper\
    \ case, else return false.\nThe function should return false is the given array\
    \ is empty.\nExamples:\n>>> check_dict_case(array(\"a\" => \"apple\", \"b\" =>\
    \ \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\" => \"apple\", \"A\" => \"\
    banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"a\" => \"\
    apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: ctype_lower(): Argument of type int will be interpreted as\
    \ string in the future in /tmp/tmprzk6el8v.php on line 20\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmprzk6el8v.php:51\nStack trace:\n#0 /tmp/tmprzk6el8v.php(57):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmprzk6el8v.php on line 51\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$keys = array_keys($dict);\n\t$is_upper = ctype_upper($keys[0]);\n\t$is_lower\
    \ = ctype_lower($keys[0]);\n\tforeach ($keys as $key) {\n\t\tif ($is_upper &&\
    \ !ctype_upper($key)) {\n\t\t\treturn false;\n\t\t}\n\t\tif ($is_lower && !ctype_lower($key))\
    \ {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n/* Given an array,\
    \ return true if all values are strings in lower \ncase or all values are strings\
    \ in upper case, else return false.\nThe function should return false is the given\
    \ array is empty.\nExamples:\n>>> check_dict_case(array(\"a\" => \"apple\", \"\
    b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\" => \"apple\", \"A\"\
    \ => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n    if (empty($dict)) {\n        return false;\n    }\n    $keys = array_keys($dict);\n\
    \    $first_key = $keys[0];\n    $first_key_case = strtolower($first_key) ===\
    \ $first_key ? \"lower\" : \"upper\";\n    foreach ($keys as $key) {\n       \
    \ $key_case = strtolower($key) === $key ? \"lower\" : \"upper\";\n        if ($key_case\
    \ !== $first_key_case) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\n/* Given an array of integers, return true if the array contains\
    \ \na duplicate number, else return false.\nExamples:\n>>> check_duplicate(array(1,\
    \ 2, 3, 4, 5))\nfalse\n>>> check_duplicate(array(1, 2, 3, 4, 5, 1))\ntrue\n>>>\
    \ check_duplicate(array(1, 2, 3, 4, 5, 5))\ntrue\n>>> check_duplicate(array(1,\
    \ 2, 3, 4, 5, 5, 5))\ntrue\n>>> check_duplicate(array(1, 2, 3, 4, 5, 5, 5, 5))\n\
    true\n>>> check_duplicate(array(1, 2, 3, 4, 5, 5, 5, 5, 5))\ntrue\n>>> check_duplicate(array(1,\
    \ 2, 3, 4, 5, 5, 5, 5, 5, 5))\ntrue\n>>> check_duplicate(array(1, 2, 3, 4, 5,\
    \ 5, 5, 5, 5, 5, 5))\ntrue\n>>> check_duplicate(array(1, 2, 3, 4, 5, 5, 5, 5,\
    \ 5, 5, 5, 5))\ntrue\n>>> check_duplicate(array(1, 2, 3, 4, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5))\ntrue\n>>> check_duplicate(array(1, 2, 3, 4, 5, 5, 5, 5, 5, 5, 5,\
    \ 5, 5, 5))\ntrue\n>>> check_duplicate(\nfunction candidate(...$args) {\n    return\
    \ check_dict_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"b\" => \"banana\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"\
    banana\", \"B\" => \"banana\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"p\" => \"pineapple\", \"5\" => \"banana\", \"\
    a\" => \"apple\")) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\")) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"fruit\" => \"Orange\", \"taste\" =>\
    \ \"Sweet\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 32 in /tmp/tmpvtfbeidu.php on
    line 32

    '
  timestamp: 1660220839
- exit_code: 0
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (count($dict) == 0) {\n\t\treturn false;\n\t}\n\t$lower = true;\n\t\
    $upper = true;\n\tforeach ($dict as $key => $value) {\n\t\tif (!ctype_lower($key))\
    \ {\n\t\t\t$lower = false;\n\t\t}\n\t\tif (!ctype_upper($key)) {\n\t\t\t$upper\
    \ = false;\n\t\t}\n\t}\n\treturn $lower || $upper;\n}\n\n$dict = array(\"a\" =>\
    \ \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict);\necho \"\\n\"\
    ;\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"\
    );\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"a\" => \"apple\"\
    , 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict);\necho \"\
    \\n\";\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\");\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict);\necho \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(\"p\" => \"pineapple\", \"b\"\
    \ => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\"\
    )) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    Deprecated: ctype_lower(): Argument of type int will be interpreted as string
    in the future in /tmp/tmpv0_l2xxa.php on line 23


    Deprecated: ctype_upper(): Argument of type int will be interpreted as string
    in the future in /tmp/tmpv0_l2xxa.php on line 26



    1


    Deprecated: ctype_lower(): Argument of type int will be interpreted as string
    in the future in /tmp/tmpv0_l2xxa.php on line 23


    Deprecated: ctype_upper(): Argument of type int will be interpreted as string
    in the future in /tmp/tmpv0_l2xxa.php on line 26

    '
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$upper = array_map('strtoupper', $keys);\n\t$lower = array_map('strtolower',\
    \ $keys);\n\tif ($keys == $upper || $keys == $lower) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n\n/* Given an array, return true if all keys are strings in\
    \ lower \ncase or all keys are strings in upper case, else return false.\nThe\
    \ function should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkmtqb7h6.php:50\n\
    Stack trace:\n#0 /tmp/tmpkmtqb7h6.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpkmtqb7h6.php\
    \ on line 50\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$lower = true;\n\t$upper = true;\n\tforeach ($dict as $key => $value) {\n\
    \t\tif (ctype_lower($key)) {\n\t\t\t$upper = false;\n\t\t} else {\n\t\t\t$lower\
    \ = false;\n\t\t}\n\t}\n\treturn $lower || $upper;\n}\n\n$dict = array(\"a\" =>\
    \ \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict) . \"\\n\";\n$dict\
    \ = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\");\necho\
    \ check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" => \"apple\", 8 => \"\
    banana\", \"a\" => \"apple\");\necho check_dict_case($dict) . \"\\n\";\n$dict\
    \ = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\");\n\
    echo check_dict_case($dict) . \"\\n\";\n$dict = array(\"STATE\" => \"NC\", \"\
    ZIP\" => \"12345\");\necho check_dict_case($dict) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n\nDeprecated: ctype_lower(): Argument of type int will be interpreted\
    \ as string in the future in /tmp/tmpnat266rj.php on line 20\n\n1\n1\n\nDeprecated:\
    \ ctype_lower(): Argument of type int will be interpreted as string in the future\
    \ in /tmp/tmpnat266rj.php on line 20\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpnat266rj.php:47\nStack trace:\n#0 /tmp/tmpnat266rj.php(53):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpnat266rj.php on line 47\n"
  timestamp: 1660220838
- exit_code: 0
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif(empty($dict)) return false;\n\t$keys = array_keys($dict);\n\t$first_key\
    \ = $keys[0];\n\t$is_upper = ctype_upper($first_key);\n\tforeach($keys as $key)\
    \ {\n\t\tif($is_upper) {\n\t\t\tif(!ctype_upper($key)) return false;\n\t\t} else\
    \ {\n\t\t\tif(!ctype_lower($key)) return false;\n\t\t}\n\t}\n\treturn true;\n\
    }\n\n$dict = array(\"a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" =>\
    \ \"apple\", 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\"\
    \ => \"Houston\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict) . \"\\n\";\n\
    function candidate(...$args) {\n    return check_dict_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"\
    banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"\
    pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    Deprecated: ctype_lower(): Argument of type int will be interpreted as string
    in the future in /tmp/tmpej5srxpo.php on line 25



    1


    Deprecated: ctype_lower(): Argument of type int will be interpreted as string
    in the future in /tmp/tmpej5srxpo.php on line 25

    '
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$keys = array_keys($dict);\n\t$lower = array_map('strtolower', $keys);\n\
    \t$upper = array_map('strtoupper', $keys);\n\tif ($keys == $lower || $keys ==\
    \ $upper) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/* Given\
    \ an array, return true if all values are strings, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_values(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_values(array(\"\
    a\" => \"apple\", \"b\" => \"banana\", \"c\" => 1))\nfalse\n>>> check_dict_values(array(\"\
    a\" => \"apple\", \"b\" => \"banana\", \"c\" => \"1\"))\ntrue\n>>> check_dict_values(array(\"\
    a\" => \"apple\", \"b\" => \"banana\", \"c\" => \"1\", \"d\" => 1))\nfalse\n>>>\
    \ check_dict_values(array(\"a\" => \"apple\", \"b\" => \"banana\", \"c\" => \"\
    1\", \"d\" => \"1\"))\ntrue\n>>> check_dict_values(array(\"a\" => \"apple\", \"\
    b\" => \"banana\", \"c\" => \"1\", \"d\" => \"1\", \"e\" => 1))\nfalse*/\nfunction\
    \ candidate(...$args) {\n    return check_dict_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"\
    banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"\
    pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv_1scsb6.php:49\n\
    Stack trace:\n#0 /tmp/tmpv_1scsb6.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpv_1scsb6.php\
    \ on line 49\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$upper = 0;\n\t$lower = 0;\n\tforeach ($dict as $key => $value) {\n\t\t\
    if (ctype_upper($key)) {\n\t\t\t$upper++;\n\t\t} elseif (ctype_lower($key)) {\n\
    \t\t\t$lower++;\n\t\t}\n\t}\n\tif ($upper == count($dict) || $lower == count($dict))\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/* Given an array\
    \ of strings, return a new array containing the first N strings. \nIf N is greater\
    \ than or equal to the length of the array, then return the original array.\n\
    Examples:\n>>> first_n(array(\"a\", \"b\", \"c\", \"d\"), 2)\narray(\"a\", \"\
    b\")\n>>> first_n(array(\"a\", \"b\", \"c\", \"d\"), 4)\narray(\"a\", \"b\", \"\
    c\", \"d\")\n>>> first_n(array(\"a\", \"b\", \"c\", \"d\"), 10)\narray(\"a\",\
    \ \"b\", \"c\", \"d\")\n>>> first_n(array(\"a\", \"b\", \"c\", \"d\"), 0)\narray()*/\n\
    function candidate(...$args) {\n    return check_dict_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"\
    banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"\
    pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: ctype_upper(): Argument of type int will be interpreted as\
    \ string in the future in /tmp/tmpt7_4s2qs.php on line 20\n\nDeprecated: ctype_lower():\
    \ Argument of type int will be interpreted as string in the future in /tmp/tmpt7_4s2qs.php\
    \ on line 22\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt7_4s2qs.php:55\n\
    Stack trace:\n#0 /tmp/tmpt7_4s2qs.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpt7_4s2qs.php\
    \ on line 55\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$lower = array_change_key_case($dict, CASE_LOWER);\n\t$upper = array_change_key_case($dict,\
    \ CASE_UPPER);\n\tif ($lower == $dict || $upper == $dict) {\n\t\treturn true;\n\
    \t}\n\treturn false;\n}\n$dict = array(\"a\" => \"apple\", \"b\" => \"banana\"\
    );\necho check_dict_case($dict);\necho \"<br>\";\n$dict = array(\"a\" => \"apple\"\
    , \"A\" => \"banana\", \"B\" => \"banana\");\necho check_dict_case($dict);\necho\
    \ \"<br>\";\n$dict = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"\
    );\necho check_dict_case($dict);\necho \"<br>\";\n$dict = array(\"Name\" => \"\
    John\", \"Age\" => \"36\", \"City\" => \"Houston\");\necho check_dict_case($dict);\n\
    echo \"<br>\";\n$dict = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\necho\
    \ check_dict_case($dict);\necho \"<br>\";\nfunction candidate(...$args) {\n  \
    \  return check_dict_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"b\" => \"banana\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"\
    banana\", \"B\" => \"banana\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"p\" => \"pineapple\", \"5\" => \"banana\", \"\
    a\" => \"apple\")) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\")) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"fruit\" => \"Orange\", \"taste\" =>\
    \ \"Sweet\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1<br><br>1<br><br>1<br>\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmphyzrrmhn.php:46\nStack trace:\n#0 /tmp/tmphyzrrmhn.php(53): test()\n\
    #1 {main}\n  thrown in /tmp/tmphyzrrmhn.php on line 46\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$lower = true;\n\t$upper = true;\n\tforeach ($dict as $key => $value) {\n\
    \t\tif (strtolower($key) != $key) {\n\t\t\t$lower = false;\n\t\t}\n\t\tif (strtoupper($key)\
    \ != $key) {\n\t\t\t$upper = false;\n\t\t}\n\t}\n\tif ($lower || $upper) {\n\t\
    \treturn true;\n\t}\n\treturn false;\n}\n\n/* Given an array, return true if all\
    \ keys are strings in lower \ncase or all keys are strings in upper case, else\
    \ return false.\nThe function should return false is the given array is empty.\n\
    Examples:\n>>> check_dict_case(array(\"a\" => \"apple\", \"b\" => \"banana\"))\n\
    true\n>>> check_dict_case(array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\"\
    \ => \"banana\"))\nfalse\n>>> check_dict_case(array(\"a\" => \"apple\", 8 => \"\
    banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"Name\" => \"\
    John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0uohro85.php:54\n\
    Stack trace:\n#0 /tmp/tmp0uohro85.php(61): test()\n#1 {main}\n  thrown in /tmp/tmp0uohro85.php\
    \ on line 54\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$keys = array_keys($dict);\n\t$first = $keys[0];\n\t$type = gettype($first);\n\
    \tif ($type == \"string\") {\n\t\tif (ctype_lower($first)) {\n\t\t\tforeach ($keys\
    \ as $key) {\n\t\t\t\tif (!ctype_lower($key)) {\n\t\t\t\t\treturn false;\n\t\t\
    \t\t}\n\t\t\t}\n\t\t} else if (ctype_upper($first)) {\n\t\t\tforeach ($keys as\
    \ $key) {\n\t\t\t\tif (!ctype_upper($key)) {\n\t\t\t\t\treturn false;\n\t\t\t\t\
    }\n\t\t\t}\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\treturn false;\n\
    \t}\n\treturn true;\n}\n\n/* Given an array, return the number of elements that\
    \ are \nequal to the given value.\nExamples:\n>>> count_value(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10), 5)\n1\n>>> count_value(array(1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10), 10)\n1\n>>> count_value(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 11)\n0\n\
    >>> count_value(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 1)\n1\n>>> count_value(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10), 2)\n1\n>>> count_value(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10), 3)\n1\n>>> count_value(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 4)\n\
    1\n>>> count_value(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10), 6)\n1\n>>> count_value(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10),\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\",\
    \ \"b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 42 in /tmp/tmpbvd0fy6s.php on
    line 42

    '
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$upper = array_map('strtoupper', $keys);\n\t$lower = array_map('strtolower',\
    \ $keys);\n\tif ($keys == $upper || $keys == $lower) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n\n$dict = array(\"a\" => \"apple\", \"b\" => \"banana\");\n\
    echo check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" => \"apple\", \"A\"\
    \ => \"banana\", \"B\" => \"banana\");\necho check_dict_case($dict) . \"\\n\"\
    ;\n$dict = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\");\necho\
    \ check_dict_case($dict) . \"\\n\";\n$dict = array(\"Name\" => \"John\", \"Age\"\
    \ => \"36\", \"City\" => \"Houston\");\necho check_dict_case($dict) . \"\\n\"\
    ;\n$dict = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\",\
    \ \"b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n1\n\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprqitkmpe.php:46\n\
    Stack trace:\n#0 /tmp/tmprqitkmpe.php(53): test()\n#1 {main}\n  thrown in /tmp/tmprqitkmpe.php\
    \ on line 46\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$lower = array_keys($dict);\n\
    \t$upper = array_keys($dict);\n\tforeach ($lower as $key => $value) {\n\t\t$lower[$key]\
    \ = strtolower($value);\n\t}\n\tforeach ($upper as $key => $value) {\n\t\t$upper[$key]\
    \ = strtoupper($value);\n\t}\n\tif ($lower == array_keys($dict) || $upper == array_keys($dict))\
    \ {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/* Given an array, return true\
    \ if all values are strings, else return false.\nThe function should return false\
    \ is the given array is empty.\nExamples:\n>>> check_dict_values(array(\"a\" =>\
    \ \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_values(array(\"a\" =>\
    \ \"apple\", \"b\" => \"banana\", \"c\" => 8))\nfalse\n>>> check_dict_values(array(\"\
    a\" => \"apple\", \"b\" => \"banana\", \"c\" => \"8\"))\ntrue\n>>> check_dict_values(array(\"\
    a\" => \"apple\", \"b\" => \"banana\", \"c\" => \"8\", \"d\" => 8))\nfalse\n>>>\
    \ check_dict_values(array(\"a\" => \"apple\", \"b\" => \"banana\", \"c\" => \"\
    8\", \"d\" => \"8\"))\ntrue\n>>> check_dict_values(array(\"a\" => \"apple\", \"\
    b\" => \"banana\", \"c\" => \"8\", \"d\" => \"8\", \"e\" => 8))\nfalse\n>>> check_dict_values(array(\"\
    a\" => \"apple\", \"b\" => \"banana\", \"c\" => \"8\", \"d\" => \"8\", \"e\" =>\
    \ \"8\"))\ntrue\n>>> check_dict_values(array(\"a\" => \"apple\", \"b\" => \"banana\"\
    , \"c\" => \"8\", \"d\" => \"8\", \"e\" => \"8\", \"f\" => 8))\nfalse\n>>> check_dict_values(array(\"\
    a\" => \"\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\",\
    \ \"b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 34 in /tmp/tmpjmwego_r.php on
    line 34

    '
  timestamp: 1660220839
- exit_code: 0
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$keys = array_keys($dict);\n\t$first_key = $keys[0];\n\tif (is_string($first_key))\
    \ {\n\t\t$is_lower = ctype_lower($first_key);\n\t\tforeach ($keys as $key) {\n\
    \t\t\tif (is_string($key)) {\n\t\t\t\tif ($is_lower && !ctype_lower($key)) {\n\
    \t\t\t\t\treturn false;\n\t\t\t\t} else if (!$is_lower && !ctype_upper($key))\
    \ {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn false;\n\
    \t\t\t}\n\t\t}\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n$dict\
    \ = array(\"a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" =>\
    \ \"apple\", 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict)\
    \ . \"\\n\";\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\"\
    \ => \"Houston\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array(\"STATE\"\
    \ => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict) . \"\\n\";\n\
    function candidate(...$args) {\n    return check_dict_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"\
    banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"\
    pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1




    1


    Warning: Undefined array key 0 in /tmp/tmpmc583uaf.php on line 18

    '
  timestamp: 1660220839
- exit_code: 0
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\tif ($keys === $lower || $keys === $upper) {\n\t\treturn true;\n\t\
    }\n\treturn false;\n}\n\n/* Given an array of integers, return true if the array\
    \ contains \na 5 immediately followed by a 7.\nExamples:\n>>> check_57(array(1,\
    \ 2, 3, 4, 5, 6, 7))\nfalse\n>>> check_57(array(1, 2, 3, 4, 5, 7))\ntrue\n>>>\
    \ check_57(array(1, 2, 3, 4, 5, 6, 7, 8, 9))\nfalse\n>>> check_57(array(1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 5, 7))\ntrue\n>>> check_57(array(1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 5, 7, 9))\nfalse\n>>> check_57(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 5, 7, 9,\
    \ 5, 7))\ntrue*/\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\",\
    \ \"b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n    if (empty($dict)) {\n        return false;\n    }\n    $lower = array_keys($dict);\n\
    \    $upper = array_keys($dict);\n    $lower = array_map('strtolower', $lower);\n\
    \    $upper = array_map('strtoupper', $upper);\n    if ($lower == array_keys($dict)\
    \ || $upper == array_keys($dict)) {\n        return true;\n    }\n    return false;\n\
    }\n\n/* Given an array, return true if all keys are strings in lower \ncase or\
    \ all keys are strings in upper case, else return false.\nThe function should\
    \ return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmpzx9uc5.php:51\n\
    Stack trace:\n#0 /tmp/tmpmpzx9uc5.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpmpzx9uc5.php\
    \ on line 51\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$lower = array_change_key_case($dict,\
    \ CASE_LOWER);\n\t$upper = array_change_key_case($dict, CASE_UPPER);\n\tif ($lower\
    \ == $dict || $upper == $dict) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n\
    $dict = array(\"a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($dict);\n\
    echo \"\\n\";\n$dict = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\");\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\");\necho check_dict_case($dict);\n\
    echo \"\\n\";\n$dict = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\"\
    \ => \"Houston\");\necho check_dict_case($dict);\necho \"\\n\";\n$dict = array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\");\necho check_dict_case($dict);\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\",\
    \ \"b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n1\n\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbu13zgwy.php:50\n\
    Stack trace:\n#0 /tmp/tmpbu13zgwy.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpbu13zgwy.php\
    \ on line 50\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n    if (empty($dict)) {\n        return false;\n    }\n    $keys = array_keys($dict);\n\
    \    $first_key = $keys[0];\n    if (is_string($first_key)) {\n        $is_lower\
    \ = ctype_lower($first_key);\n        $is_upper = ctype_upper($first_key);\n \
    \       foreach ($keys as $key) {\n            if (is_string($key)) {\n      \
    \          if ($is_lower && !ctype_lower($key)) {\n                    return\
    \ false;\n                }\n                if ($is_upper && !ctype_upper($key))\
    \ {\n                    return false;\n                }\n            } else\
    \ {\n                return false;\n            }\n        }\n        return true;\n\
    \    } else {\n        return false;\n    }\n}\n\n/* Given an array, return true\
    \ if all values are strings in lower \ncase or all values are strings in upper\
    \ case, else return false.\nThe function should return false is the given array\
    \ is empty.\nExamples:\n>>> check_dict_case(array(\"a\" => \"apple\", \"b\" =>\
    \ \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\" => \"apple\", \"A\" => \"\
    banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"a\" => \"\
    apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8sboeeq9.php:65\n\
    Stack trace:\n#0 /tmp/tmp8sboeeq9.php(71): test()\n#1 {main}\n  thrown in /tmp/tmp8sboeeq9.php\
    \ on line 65\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\treturn ($keys == $lower || $keys == $upper);\n}\n\n/* Given an array\
    \ of strings, return an array of strings with all \nthe strings in the array that\
    \ are anagrams of each other.\nExamples:\n>>> find_anagrams(array(\"cat\", \"\
    dog\", \"tac\", \"god\", \"act\"))\narray(\"cat\", \"tac\", \"act\")\n>>> find_anagrams(array(\"\
    cat\", \"dog\", \"tac\", \"god\", \"act\", \"mouse\"))\narray(\"cat\", \"tac\"\
    , \"act\")\n>>> find_anagrams(array(\"cat\", \"dog\", \"tac\", \"god\", \"act\"\
    , \"mouse\", \"act\"))\narray(\"cat\", \"tac\", \"act\", \"act\")\n>>> find_anagrams(array(\"\
    cat\", \"dog\", \"tac\", \"god\", \"act\", \"mouse\", \"act\", \"act\"))\narray(\"\
    cat\", \"tac\", \"act\", \"act\", \"act\")*/\nfunction candidate(...$args) {\n\
    \    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"b\" => \"banana\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"\
    banana\", \"B\" => \"banana\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"p\" => \"pineapple\", \"5\" => \"banana\", \"\
    a\" => \"apple\")) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\")) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"fruit\" => \"Orange\", \"taste\" =>\
    \ \"Sweet\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa4s8h3ea.php:44\n\
    Stack trace:\n#0 /tmp/tmpa4s8h3ea.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpa4s8h3ea.php\
    \ on line 44\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$lower = array_map('strtolower', $keys);\n\t$upper = array_map('strtoupper',\
    \ $keys);\n\tif ($keys == $lower || $keys == $upper) {\n\t\treturn true;\n\t}\n\
    \treturn false;\n}\n\n/* Given an array, return true if all keys are strings in\
    \ lower \ncase or all keys are strings in upper case, else return false.\nThe\
    \ function should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj_ims3wr.php:50\n\
    Stack trace:\n#0 /tmp/tmpj_ims3wr.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpj_ims3wr.php\
    \ on line 50\n"
  timestamp: 1660220838
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$lower_keys = array_keys(array_change_key_case($dict,\
    \ CASE_LOWER));\n\t$upper_keys = array_keys(array_change_key_case($dict, CASE_UPPER));\n\
    \tif ($lower_keys == array_keys($dict) || $upper_keys == array_keys($dict)) {\n\
    \t\treturn true;\n\t}\n\treturn false;\n}\n\n/* Given an array of strings, return\
    \ an array of strings with the first \nletter of each string capitalized.\nExamples:\n\
    >>> capitalize_first_letter(array(\"apple\", \"banana\", \"orange\"))\narray(\"\
    Apple\", \"Banana\", \"Orange\")\n>>> capitalize_first_letter(array(\"APPLE\"\
    , \"BANANA\", \"ORANGE\"))\narray(\"Apple\", \"Banana\", \"Orange\")\n>>> capitalize_first_letter(array(\"\
    aPPLE\", \"bANANA\", \"oRANGE\"))\narray(\"Apple\", \"Banana\", \"Orange\")\n\
    >>> capitalize_first_letter(array(\"apple\", \"banana\", \"orange\", \"APPLE\"\
    , \"BANANA\", \"ORANGE\"))\narray(\"Apple\", \"Banana\", \"Orange\", \"Apple\"\
    , \"Banana\", \"Orange\")\n>>> capitalize_first_letter(array(\"APPLE\", \"BANANA\"\
    , \"ORANGE\", \"apple\", \"banana\", \"orange\"))\narray(\"Apple\", \"Banana\"\
    , \"Orange\", \"Apple\", \"Banana\", \"Orange\")\n>>> capitalize_first_letter(array(\"\
    aPPLE\", \"bANANA\", \"oRANGE\", \"apple\", \"banana\", \"orange\"))\narray(\"\
    Apple\", \"Banana\", \"Orange\", \"Apple\", \"Banana\", \"Orange\")*/\nfunction\
    \ candidate(...$args) {\n    return check_dict_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"\
    banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"\
    pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxq6b7m8o.php:50\n\
    Stack trace:\n#0 /tmp/tmpxq6b7m8o.php(57): test()\n#1 {main}\n  thrown in /tmp/tmpxq6b7m8o.php\
    \ on line 50\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif(empty($dict)) {\n\t\treturn false;\n\t}\n\t$lower = array_keys($dict);\n\
    \t$upper = array_keys($dict);\n\tforeach($lower as $key => $value) {\n\t\t$lower[$key]\
    \ = strtolower($value);\n\t}\n\tforeach($upper as $key => $value) {\n\t\t$upper[$key]\
    \ = strtoupper($value);\n\t}\n\tif($lower == array_keys($dict) || $upper == array_keys($dict))\
    \ {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/* Given an array, return true\
    \ if all keys are strings in lower \ncase or all keys are strings in upper case,\
    \ else return false.\nThe function should return false is the given array is empty.\n\
    Examples:\n>>> check_dict_case(array(\"a\" => \"apple\", \"b\" => \"banana\"))\n\
    true\n>>> check_dict_case(array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\"\
    \ => \"banana\"))\nfalse\n>>> check_dict_case(array(\"a\" => \"apple\", 8 => \"\
    banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"Name\" => \"\
    John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr7vonmo5.php:55\n\
    Stack trace:\n#0 /tmp/tmpr7vonmo5.php(62): test()\n#1 {main}\n  thrown in /tmp/tmpr7vonmo5.php\
    \ on line 55\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$lower = [];\n\t$upper = [];\n\tforeach ($dict as $key => $value) {\n\t\
    \tif (is_string($key)) {\n\t\t\tif (strtolower($key) == $key) {\n\t\t\t\t$lower[]\
    \ = $key;\n\t\t\t} elseif (strtoupper($key) == $key) {\n\t\t\t\t$upper[] = $key;\n\
    \t\t\t}\n\t\t}\n\t}\n\tif (count($lower) == count($dict) || count($upper) == count($dict))\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/* Given an array\
    \ of integers, return true if all the integers are \neven or all the integers\
    \ are odd, else return false.\nExamples:\n>>> check_even_odd(array(2, 4, 6, 8))\n\
    true\n>>> check_even_odd(array(2, 4, 6, 7))\nfalse\n>>> check_even_odd(array(2,\
    \ 4, 6, 8, 7))\nfalse\n>>> check_even_odd(array(1, 3, 5, 7))\ntrue\n>>> check_even_odd(array(1,\
    \ 3, 5, 7, 9))\ntrue\n>>> check_even_odd(array(1, 3, 5, 7, 8))\nfalse*/\nfunction\
    \ candidate(...$args) {\n    return check_dict_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"\
    banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"\
    pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3payf7sj.php:61\n\
    Stack trace:\n#0 /tmp/tmp3payf7sj.php(64): test()\n#1 {main}\n  thrown in /tmp/tmp3payf7sj.php\
    \ on line 61\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n    if (empty($dict)) {\n        return false;\n    }\n    $lower = array_change_key_case($dict,\
    \ CASE_LOWER);\n    $upper = array_change_key_case($dict, CASE_UPPER);\n    if\
    \ ($lower == $dict || $upper == $dict) {\n        return true;\n    }\n    return\
    \ false;\n}\n\n$dict1 = array(\"a\" => \"apple\", \"b\" => \"banana\");\n$dict2\
    \ = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\");\n$dict3\
    \ = array(\"a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\");\n$dict4 =\
    \ array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\");\n$dict5\
    \ = array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\");\n\necho check_dict_case($dict1)\
    \ . \"\\n\";\necho check_dict_case($dict2) . \"\\n\";\necho check_dict_case($dict3)\
    \ . \"\\n\";\necho check_dict_case($dict4) . \"\\n\";\necho check_dict_case($dict5)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\",\
    \ \"b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n1\n\n1\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm7f7gu48.php:46\n\
    Stack trace:\n#0 /tmp/tmpm7f7gu48.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpm7f7gu48.php\
    \ on line 46\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$lower = array_map('strtolower', array_keys($dict));\n\t$upper = array_map('strtoupper',\
    \ array_keys($dict));\n\tif ($lower == array_keys($dict) || $upper == array_keys($dict))\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/* Given an array,\
    \ return the number of elements that are \nstrings in lower case or strings in\
    \ upper case.\nExamples:\n>>> count_dict_case(array(\"a\" => \"apple\", \"b\"\
    \ => \"banana\"))\n2\n>>> count_dict_case(array(\"a\" => \"apple\", \"A\" => \"\
    banana\", \"B\" => \"banana\"))\n0\n>>> count_dict_case(array(\"a\" => \"apple\"\
    , 8 => \"banana\", \"a\" => \"apple\"))\n1\n>>> count_dict_case(array(\"Name\"\
    \ => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\n1\n>>> count_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\n2*/\nfunction candidate(...$args) {\n\
    \    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"b\" => \"banana\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"\
    banana\", \"B\" => \"banana\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"p\" => \"pineapple\", \"5\" => \"banana\", \"\
    a\" => \"apple\")) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\")) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"fruit\" => \"Orange\", \"taste\" =>\
    \ \"Sweet\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0xdfnif5.php:46\n\
    Stack trace:\n#0 /tmp/tmp0xdfnif5.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp0xdfnif5.php\
    \ on line 46\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$lower = 0;\n\t$upper = 0;\n\tforeach ($dict as $key => $value) {\n\t\t\
    if (ctype_lower($key)) {\n\t\t\t$lower++;\n\t\t} elseif (ctype_upper($key)) {\n\
    \t\t\t$upper++;\n\t\t}\n\t}\n\tif ($lower == count($dict) || $upper == count($dict))\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/* Given an array,\
    \ return true if all keys are strings in lower \ncase or all keys are strings\
    \ in upper case, else return false.\nThe function should return false is the given\
    \ array is empty.\nExamples:\n>>> check_dict_case(array(\"a\" => \"apple\", \"\
    b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\" => \"apple\", \"A\"\
    \ => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: ctype_lower(): Argument of type int will be interpreted as\
    \ string in the future in /tmp/tmpqy_kkl_6.php on line 20\n\nDeprecated: ctype_upper():\
    \ Argument of type int will be interpreted as string in the future in /tmp/tmpqy_kkl_6.php\
    \ on line 22\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqy_kkl_6.php:58\n\
    Stack trace:\n#0 /tmp/tmpqy_kkl_6.php(61): test()\n#1 {main}\n  thrown in /tmp/tmpqy_kkl_6.php\
    \ on line 58\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n    $lower = array_map('strtolower', array_keys($dict));\n    $upper = array_map('strtoupper',\
    \ array_keys($dict));\n    if ($lower == array_keys($dict) || $upper == array_keys($dict))\
    \ {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n/*\
    \ Given an array, return true if all keys are strings in lower \ncase or all keys\
    \ are strings in upper case, else return false.\nThe function should return false\
    \ is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"a\" =>\
    \ \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\" => \"\
    apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp97v80biz.php:47\n\
    Stack trace:\n#0 /tmp/tmp97v80biz.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp97v80biz.php\
    \ on line 47\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$keys = array_keys($dict);\n\t$all_lower = true;\n\t$all_upper = true;\n\
    \tforeach ($keys as $key) {\n\t\tif (ctype_lower($key)) {\n\t\t\t$all_upper =\
    \ false;\n\t\t} else {\n\t\t\t$all_lower = false;\n\t\t}\n\t}\n\treturn $all_lower\
    \ || $all_upper;\n}\n\n/* Given an array of strings, return the longest string\
    \ in the array.\nExamples:\n>>> longest_string(array(\"a\", \"aa\", \"aaa\"))\n\
    \"aaa\"\n>>> longest_string(array(\"a\", \"aa\", \"aaa\", \"aaaa\"))\n\"aaaa\"\
    \n>>> longest_string(array(\"a\", \"aa\", \"aaa\", \"aaaa\", \"aaaaa\"))\n\"aaaaa\"\
    \n>>> longest_string(array(\"a\", \"aa\", \"aaa\", \"aaaa\", \"aaaaa\", \"aaaaaa\"\
    ))\n\"aaaaaa\"\n>>> longest_string(array(\"a\", \"aa\", \"aaa\", \"aaaa\", \"\
    aaaaa\", \"aaaaaa\", \"aaaaaaa\"))\n\"aaaaaaa\"\n>>> longest_string(array(\"a\"\
    , \"aa\", \"aaa\", \"aaaa\", \"aaaaa\", \"aaaaaa\", \"aaaaaaa\", \"aaaaaaaa\"\
    ))\n\"aaaaaaaa\"\n>>> longest_string(array(\"a\", \"aa\", \"aaa\", \"aaaa\", \"\
    aaaaa\", \"aaaaaa\", \"aaaaaaa\", \"aaaaaaaa\", \"aaaaaaaaa\"))\n\"aaaaaaaaa\"\
    \n>>> longest_string(array(\"a\", \"aa\", \"aaa\", \"aaaa\", \"aaaaa\", \"aaaaaa\"\
    , \"aaaaaaa\", \"aaaaaaaa\", \"aaaaaaaaa\", \"aaaaaaaaaa\"))\n\"aaaaaaaaaa\"\n\
    >>> longest_string(array(\"a\", \"aa\", \"aaa\", \"aaaa\", \"aaaaa\", \"aaaaaa\"\
    , \"aaaaaaa\", \"aaaaaaaa\", \"aaaaaaaaa\", \"aaaaaaaaaa\", \"aaaaaaaaaaa\"))\n\
    \"aaaaaaaaaaa\"\n>>> longest_string(array(\"a\", \"aa\", \"aaa\", \"aaaa\", \"\
    aaaaa\", \"aaaaaa\", \"aaaaaaa\", \"aaaaaaaa\", \"aaaaaaaaa\", \"aaaaaaaaaa\"\
    , \"aaaaaaaaaaa\", \"aaaaaaaaaaaa\"))\n\"\nfunction candidate(...$args) {\n  \
    \  return check_dict_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"b\" => \"banana\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"\
    banana\", \"B\" => \"banana\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"p\" => \"pineapple\", \"5\" => \"banana\", \"\
    a\" => \"apple\")) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\")) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"fruit\" => \"Orange\", \"taste\" =>\
    \ \"Sweet\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 30 in /tmp/tmp5kyp4rq3.php on
    line 30

    '
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$keys = array_keys($dict);\n\t$is_upper = ctype_upper($keys[0]);\n\tforeach\
    \ ($keys as $key) {\n\t\tif ($is_upper != ctype_upper($key)) {\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\treturn true;\n}\n\n/* Given an array, return true if all keys are\
    \ strings in lower \ncase or all keys are strings in upper case, else return false.\n\
    The function should return false is the given array is empty.\nExamples:\n>>>\
    \ check_dict_case(array(\"a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: ctype_upper(): Argument of type int will be interpreted as\
    \ string in the future in /tmp/tmpcg9641xs.php on line 20\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpcg9641xs.php:48\nStack trace:\n#0 /tmp/tmpcg9641xs.php(55):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpcg9641xs.php on line 48\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n    $lower = true;\n    $upper = true;\n    foreach ($dict as $key => $value)\
    \ {\n        if (ctype_lower($key)) {\n            $upper = false;\n        }\
    \ elseif (ctype_upper($key)) {\n            $lower = false;\n        } else {\n\
    \            return false;\n        }\n    }\n    return $lower || $upper;\n}\n\
    \n/* Given an array, return true if all keys are strings in lower \ncase or all\
    \ keys are strings in upper case, else return false.\nThe function should return\
    \ false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: ctype_lower(): Argument of type int will be interpreted as\
    \ string in the future in /tmp/tmpkij3nkgd.php on line 20\n\nDeprecated: ctype_upper():\
    \ Argument of type int will be interpreted as string in the future in /tmp/tmpkij3nkgd.php\
    \ on line 22\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkij3nkgd.php:56\n\
    Stack trace:\n#0 /tmp/tmpkij3nkgd.php(59): test()\n#1 {main}\n  thrown in /tmp/tmpkij3nkgd.php\
    \ on line 56\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$keys = array_keys($dict);\n\t$lower = array_map('strtolower', $keys);\n\
    \t$upper = array_map('strtoupper', $keys);\n\tif ($keys == $lower || $keys ==\
    \ $upper) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n/* Given\
    \ an array of integers, return true if the array contains \na 5 immediately followed\
    \ by a 7.\nExamples:\n>>> check_57(array(1, 2, 3, 4, 5, 6, 7))\nfalse\n>>> check_57(array(1,\
    \ 2, 3, 4, 5, 7))\ntrue\n>>> check_57(array(1, 2, 3, 4, 5, 6, 7, 8, 9))\nfalse\n\
    >>> check_57(array(1, 2, 3, 4, 5, 7, 8, 9))\ntrue\n>>> check_57(array(1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10))\nfalse\n>>> check_57(array(1, 2, 3, 4, 5, 7, 8, 9, 10))\n\
    true*/\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"p\" => \"pineapple\",\
    \ \"b\" => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" =>\
    \ \"banana\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1xz7_5vg.php:49\n\
    Stack trace:\n#0 /tmp/tmp1xz7_5vg.php(56): test()\n#1 {main}\n  thrown in /tmp/tmp1xz7_5vg.php\
    \ on line 49\n"
  timestamp: 1660220839
- exit_code: 0
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (count($dict) == 0) return false;\n\t$keys = array_keys($dict);\n\t\
    $is_lower = ctype_lower($keys[0]);\n\tforeach ($keys as $key) {\n\t\tif ($is_lower\
    \ && !ctype_lower($key)) return false;\n\t\tif (!$is_lower && !ctype_upper($key))\
    \ return false;\n\t}\n\treturn true;\n}\n\necho check_dict_case(array(\"a\" =>\
    \ \"apple\", \"b\" => \"banana\")) ? \"true\" : \"false\";\necho \"\\n\";\necho\
    \ check_dict_case(array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"\
    )) ? \"true\" : \"false\";\necho \"\\n\";\necho check_dict_case(array(\"a\" =>\
    \ \"apple\", 8 => \"banana\", \"a\" => \"apple\")) ? \"true\" : \"false\";\necho\
    \ \"\\n\";\necho check_dict_case(array(\"Name\" => \"John\", \"Age\" => \"36\"\
    , \"City\" => \"Houston\")) ? \"true\" : \"false\";\necho \"\\n\";\necho check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\")) ? \"true\" : \"false\";\necho \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return check_dict_case(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(\"p\" => \"pineapple\", \"b\"\
    \ => \"banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(\"p\" => \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\"\
    )) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    false


    Deprecated: ctype_lower(): Argument of type int will be interpreted as string
    in the future in /tmp/tmpdy7yjgvr.php on line 21

    false

    false

    true


    Deprecated: ctype_lower(): Argument of type int will be interpreted as string
    in the future in /tmp/tmpdy7yjgvr.php on line 21

    '
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$first_key = $keys[0];\n\t$first_key_is_upper = ctype_upper($first_key);\n\t\
    foreach ($keys as $key) {\n\t\tif (ctype_upper($key) != $first_key_is_upper) {\n\
    \t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n$dict = array(\"a\" => \"\
    apple\", \"b\" => \"banana\");\necho check_dict_case($dict) . \"\\n\";\n$dict\
    \ = array(\"a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\");\necho\
    \ check_dict_case($dict) . \"\\n\";\n$dict = array(\"a\" => \"apple\", 8 => \"\
    banana\", \"a\" => \"apple\");\necho check_dict_case($dict) . \"\\n\";\n$dict\
    \ = array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\");\n\
    echo check_dict_case($dict) . \"\\n\";\n$dict = array(\"STATE\" => \"NC\", \"\
    ZIP\" => \"12345\");\necho check_dict_case($dict) . \"\\n\";\n$dict = array();\n\
    echo check_dict_case($dict) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ check_dict_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"b\" => \"banana\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"\
    banana\", \"B\" => \"banana\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"p\" => \"pineapple\", \"5\" => \"banana\", \"\
    a\" => \"apple\")) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\")) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"fruit\" => \"Orange\", \"taste\" =>\
    \ \"Sweet\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n\n\nDeprecated: ctype_upper(): Argument of type int will be interpreted\
    \ as string in the future in /tmp/tmpjynie0x3.php on line 24\n1\n1\n1\n\n\nDeprecated:\
    \ ctype_upper(): Argument of type int will be interpreted as string in the future\
    \ in /tmp/tmpjynie0x3.php on line 24\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpjynie0x3.php:50\nStack trace:\n#0 /tmp/tmpjynie0x3.php(57):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpjynie0x3.php on line 50\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\tif (empty($dict)) {\n\t\treturn false;\n\t}\n\t$keys = array_keys($dict);\n\
    \t$first_key = $keys[0];\n\t$first_key_case = strtoupper($first_key) == $first_key\
    \ ? 'upper' : 'lower';\n\tforeach ($keys as $key) {\n\t\t$key_case = strtoupper($key)\
    \ == $key ? 'upper' : 'lower';\n\t\tif ($key_case != $first_key_case) {\n\t\t\t\
    return false;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args) {\n\
    \    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"b\" => \"banana\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\", \"A\" => \"\
    banana\", \"B\" => \"banana\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"p\" => \"pineapple\", \"5\" => \"banana\", \"\
    a\" => \"apple\")) !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(\"Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"\
    Houston\")) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\")) !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"fruit\" => \"Orange\", \"taste\" =>\
    \ \"Sweet\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5wm1572d.php:40\n\
    Stack trace:\n#0 /tmp/tmp5wm1572d.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp5wm1572d.php\
    \ on line 40\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$lower = true;\n\t$upper = true;\n\tforeach ($dict as $key => $value) {\n\
    \t\tif (ctype_lower($key)) {\n\t\t\t$upper = false;\n\t\t} else {\n\t\t\t$lower\
    \ = false;\n\t\t}\n\t}\n\tif ($lower || $upper) {\n\t\treturn true;\n\t} else\
    \ {\n\t\treturn false;\n\t}\n}\n\n/* Given an array, return true if all keys are\
    \ strings in lower \ncase or all keys are strings in upper case, else return false.\n\
    The function should return false is the given array is empty.\nExamples:\n>>>\
    \ check_dict_case(array(\"a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction candidate(...$args)\
    \ {\n    return check_dict_case(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"banana\")) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" =>\
    \ \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"pineapple\"\
    , \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\", \"Age\" => \"\
    36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"12345\")) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: ctype_lower(): Argument of type int will be interpreted as\
    \ string in the future in /tmp/tmpvtx8t6gh.php on line 20\n\nFatal error: Uncaught\
    \ Exception: Test failed! in /tmp/tmpvtx8t6gh.php:55\nStack trace:\n#0 /tmp/tmpvtx8t6gh.php(61):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpvtx8t6gh.php on line 55\n"
  timestamp: 1660220839
- exit_code: 255
  program: "<?php\n/* Given an array, return true if all keys are strings in lower\
    \ \ncase or all keys are strings in upper case, else return false.\nThe function\
    \ should return false is the given array is empty.\nExamples:\n>>> check_dict_case(array(\"\
    a\" => \"apple\", \"b\" => \"banana\"))\ntrue\n>>> check_dict_case(array(\"a\"\
    \ => \"apple\", \"A\" => \"banana\", \"B\" => \"banana\"))\nfalse\n>>> check_dict_case(array(\"\
    a\" => \"apple\", 8 => \"banana\", \"a\" => \"apple\"))\nfalse\n>>> check_dict_case(array(\"\
    Name\" => \"John\", \"Age\" => \"36\", \"City\" => \"Houston\"))\nfalse\n>>> check_dict_case(array(\"\
    STATE\" => \"NC\", \"ZIP\" => \"12345\"))\ntrue*/\nfunction check_dict_case($dict)\
    \ {\n\t$lower = 0;\n\t$upper = 0;\n\tforeach ($dict as $key => $value) {\n\t\t\
    if (strtolower($key) == $key) {\n\t\t\t$lower++;\n\t\t} elseif (strtoupper($key)\
    \ == $key) {\n\t\t\t$upper++;\n\t\t}\n\t}\n\tif ($lower == count($dict) || $upper\
    \ == count($dict)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\
    $array = array(\"a\" => \"apple\", \"b\" => \"banana\");\necho check_dict_case($array);\n\
    function candidate(...$args) {\n    return check_dict_case(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"p\" => \"pineapple\", \"b\" => \"\
    banana\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    p\" => \"pineapple\", \"A\" => \"banana\", \"B\" => \"banana\")) !== false) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"p\" => \"\
    pineapple\", \"5\" => \"banana\", \"a\" => \"apple\")) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"Name\" => \"John\"\
    , \"Age\" => \"36\", \"City\" => \"Houston\")) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"STATE\" => \"NC\", \"ZIP\" => \"\
    12345\")) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    fruit\" => \"Orange\", \"taste\" => \"Sweet\")) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdq51vis6.php:41\n\
    Stack trace:\n#0 /tmp/tmpdq51vis6.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpdq51vis6.php\
    \ on line 41\n"
  timestamp: 1660220839

language: php
name: HumanEval_131_digits
results:
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $odds = 1;\n    $n = (string)$n;\n\
    \    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 != 0) {\n \
    \           $odds *= $n[$i];\n        }\n    }\n    return $odds;\n}\necho digits(1);\n\
    echo digits(4);\necho digits(235);\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1115\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8zv8j4zo.php:35\n\
    Stack trace:\n#0 /tmp/tmp8zv8j4zo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8zv8j4zo.php\
    \ on line 35\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $odd_digits = [];\n    $n\
    \ = str_split($n);\n    foreach ($n as $digit) {\n        if ($digit % 2 != 0)\
    \ {\n            $odd_digits[] = $digit;\n        }\n    }\n    if (count($odd_digits)\
    \ == 0) {\n        return 0;\n    }\n    return array_product($odd_digits);\n\
    }\n\n/* Given a positive integer n, return the product of the odd digits.\nReturn\
    \ 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n0\n\
    >>> digits(235)\n15*/\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $result = 1;\n    foreach ($n as $value) {\n        if ($value % 2 != 0) {\n\
    \            $result *= $value;\n        }\n    }\n    return $result;\n}\necho\
    \ digits(235);\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpolabo11v.php:33\n\
    Stack trace:\n#0 /tmp/tmpolabo11v.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpolabo11v.php\
    \ on line 33\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n\t$digits = str_split($n);\n\t\
    $odd_digits = array_filter($digits, function($digit) {\n\t\treturn $digit % 2\
    \ != 0;\n\t});\n\tif (count($odd_digits) == 0) {\n\t\treturn 0;\n\t}\n\treturn\
    \ array_product($odd_digits);\n}\n\n/* Given a positive integer n, return the\
    \ sum of the first n odd digits.\nReturn 0 if n is 0.\nFor example:\n>>> sum_odd_digits(1)\n\
    1\n>>> sum_odd_digits(4)\n10\n>>> sum_odd_digits(235)\n15*/\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n\t$n = str_split($n);\n\t$odds\
    \ = array();\n\tforeach ($n as $digit) {\n\t\tif ($digit % 2 != 0) {\n\t\t\t$odds[]\
    \ = $digit;\n\t\t}\n\t}\n\tif (empty($odds)) {\n\t\treturn 0;\n\t}\n\treturn array_product($odds);\n\
    }\necho digits(1) . PHP_EOL;\necho digits(4) . PHP_EOL;\necho digits(235) . PHP_EOL;\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    0

    15

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $result = 1;\n    $n = (string)$n;\n\
    \    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 != 0) {\n \
    \           $result *= $n[$i];\n        }\n    }\n    return $result;\n}\necho\
    \ digits(1);\necho digits(4);\necho digits(235);\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1115\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo8q5hhm4.php:35\n\
    Stack trace:\n#0 /tmp/tmpo8q5hhm4.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpo8q5hhm4.php\
    \ on line 35\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $result = 1;\n    $n = (string)$n;\n\
    \    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 != 0) {\n \
    \           $result *= $n[$i];\n        }\n    }\n    return $result;\n}\necho\
    \ digits(235);\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpauwxmdad.php:33\n\
    Stack trace:\n#0 /tmp/tmpauwxmdad.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpauwxmdad.php\
    \ on line 33\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $odd = 1;\n    foreach ($n as $digit) {\n        if ($digit % 2 != 0) {\n  \
    \          $odd *= $digit;\n        }\n    }\n    return $odd;\n}\n\necho digits(1)\
    \ . PHP_EOL;\necho digits(4) . PHP_EOL;\necho digits(235) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjx4aer06.php:36\n\
    Stack trace:\n#0 /tmp/tmpjx4aer06.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpjx4aer06.php\
    \ on line 36\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n\t$n = str_split($n);\n\t$sum\
    \ = 1;\n\tforeach ($n as $key => $value) {\n\t\tif ($value % 2 != 0) {\n\t\t\t\
    $sum *= $value;\n\t\t}\n\t}\n\treturn $sum;\n}\necho digits(235);\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpms9x3fa4.php:33\n\
    Stack trace:\n#0 /tmp/tmpms9x3fa4.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpms9x3fa4.php\
    \ on line 33\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $result = 1;\n    foreach ($n as $value) {\n        if ($value % 2 != 0) {\n\
    \            $result *= $value;\n        }\n    }\n    return $result;\n}\n\n\
    echo digits(1);\necho \"<br>\";\necho digits(4);\necho \"<br>\";\necho digits(235);\n\
    echo \"<br>\";\necho digits(123456789);\necho \"<br>\";\necho digits(1234567890123456789);\n\
    echo \"<br>\";\necho digits(12345678901234567890123456789);\necho \"<br>\";\n\
    echo digits(123456789012345678901234567890123456789);\necho \"<br>\";\necho digits(1234567890123456789012345678901234567890123456789);\n\
    echo \"<br>\";\necho digits(12345678901234567890123456789012345678901234567890123456789);\n\
    echo \"<br>\";\necho digits(123456789012345678901234567890123456789012345678901234567890123456789);\n\
    echo \"<br>\";\necho digits(1234567890123456789012345678901234567890123456789012345678901234567890123456789);\n\
    echo \"<br>\";\necho digits(12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789);\n\
    echo \"<br>\";\necho digits(123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789);\n\
    echo \"<br>\";\necho digits(1234567890123456789012345678901234567890123456789012345678901234567\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpwho975gn.php
    on line 49

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $product = 1;\n    $n = (string)$n;\n\
    \    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 != 0) {\n \
    \           $product *= $n[$i];\n        }\n    }\n    return $product;\n}\necho\
    \ digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(235) . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuz4yrgg7.php:35\n\
    Stack trace:\n#0 /tmp/tmpuz4yrgg7.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpuz4yrgg7.php\
    \ on line 35\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $result = 1;\n    foreach ($n as $value) {\n        if ($value % 2 != 0) {\n\
    \            $result *= $value;\n        }\n    }\n    return $result;\n}\necho\
    \ digits(1);\necho digits(4);\necho digits(235);\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1115\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppgo18czo.php:35\n\
    Stack trace:\n#0 /tmp/tmppgo18czo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmppgo18czo.php\
    \ on line 35\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odd_digits = [];\n    foreach ($digits as $digit) {\n        if ($digit\
    \ % 2 !== 0) {\n            $odd_digits[] = $digit;\n        }\n    }\n    if\
    \ (count($odd_digits) === 0) {\n        return 0;\n    }\n    return array_product($odd_digits);\n\
    }\n\necho digits(1) . PHP_EOL;\necho digits(4) . PHP_EOL;\necho digits(235) .\
    \ PHP_EOL;\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    0

    15

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n\t$n = str_split($n);\n\t$sum\
    \ = 1;\n\tforeach ($n as $value) {\n\t\tif ($value % 2 != 0) {\n\t\t\t$sum *=\
    \ $value;\n\t\t}\n\t}\n\treturn $sum;\n}\necho digits(1);\necho \"\\n\";\necho\
    \ digits(4);\necho \"\\n\";\necho digits(235);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg1ep3x99.php:38\n\
    Stack trace:\n#0 /tmp/tmpg1ep3x99.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpg1ep3x99.php\
    \ on line 38\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $result = 1;\n    while ($n\
    \ > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 == 1) {\n        \
    \    $result *= $digit;\n        }\n        $n = (int)($n / 10);\n    }\n    return\
    \ $result;\n}\n\necho digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(235)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_8df57jl.php:37\n\
    Stack trace:\n#0 /tmp/tmp_8df57jl.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_8df57jl.php\
    \ on line 37\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $sum = 1;\n    while ($n\
    \ > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 != 0) {\n        \
    \    $sum *= $digit;\n        }\n        $n = floor($n / 10);\n    }\n    return\
    \ $sum;\n}\necho digits(235);\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqp9nop2f.php:34\n\
    Stack trace:\n#0 /tmp/tmpqp9nop2f.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpqp9nop2f.php\
    \ on line 34\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $result = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $value) {\n        if ($value % 2 != 0) {\n            $result\
    \ *= $value;\n        }\n    }\n    return $result;\n}\necho digits(1);\necho\
    \ \"\\n\";\necho digits(4);\necho \"\\n\";\necho digits(235);\necho \"\\n\";\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1lc42xh0.php:38\n\
    Stack trace:\n#0 /tmp/tmp1lc42xh0.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp1lc42xh0.php\
    \ on line 38\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $product = 1;\n    foreach ($n as $digit) {\n        if ($digit % 2 == 1) {\n\
    \            $product *= $digit;\n        }\n    }\n    return $product;\n}\n\n\
    echo digits(1) . PHP_EOL;\necho digits(4) . PHP_EOL;\necho digits(235) . PHP_EOL;\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpajs6h8d9.php:36\n\
    Stack trace:\n#0 /tmp/tmpajs6h8d9.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpajs6h8d9.php\
    \ on line 36\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n\t$n = str_split($n);\n\t$sum\
    \ = 1;\n\tforeach ($n as $number) {\n\t\tif ($number % 2 != 0) {\n\t\t\t$sum *=\
    \ $number;\n\t\t}\n\t}\n\treturn $sum;\n}\necho digits(1) . PHP_EOL;\necho digits(4)\
    \ . PHP_EOL;\necho digits(235) . PHP_EOL;\nfunction candidate(...$args) {\n  \
    \  return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp56uf3x7x.php:35\n\
    Stack trace:\n#0 /tmp/tmp56uf3x7x.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp56uf3x7x.php\
    \ on line 35\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $odd_digits = [];\n    $digits\
    \ = str_split($n);\n    foreach ($digits as $digit) {\n        if ($digit % 2\
    \ !== 0) {\n            $odd_digits[] = $digit;\n        }\n    }\n    if (empty($odd_digits))\
    \ {\n        return 0;\n    }\n    return array_product($odd_digits);\n}\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $product = 1;\n    foreach ($n as $digit) {\n        if ($digit % 2 != 0) {\n\
    \            $product *= $digit;\n        }\n    }\n    if ($product == 1) {\n\
    \        return 0;\n    }\n    return $product;\n}\necho digits(1) . PHP_EOL;\n\
    echo digits(4) . PHP_EOL;\necho digits(235) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n0\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf8k7s7u6.php:34\n\
    Stack trace:\n#0 /tmp/tmpf8k7s7u6.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpf8k7s7u6.php\
    \ on line 34\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odd_digits = array_filter($digits, function($digit) {\n        return $digit\
    \ % 2 == 1;\n    });\n    return array_product($odd_digits);\n}\n\n/* Given a\
    \ string, return a new string with the first and last characters swapped.\nFor\
    \ example:\n>>> swap_first_last('hello')\n'oellh'\n>>> swap_first_last('hi')\n\
    'ih'\n>>> swap_first_last('a')\n'a'*/\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_4_7ojxf.php:38\n\
    Stack trace:\n#0 /tmp/tmp_4_7ojxf.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp_4_7ojxf.php\
    \ on line 38\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $product = 1;\n    foreach ($n as $value) {\n        if ($value % 2 != 0) {\n\
    \            $product *= $value;\n        }\n    }\n    if ($product == 1) {\n\
    \        return 0;\n    }\n    return $product;\n}\necho digits(1);\necho \"<br>\"\
    ;\necho digits(4);\necho \"<br>\";\necho digits(235);\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0<br>0<br>15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm7wa3ww9.php:36\n\
    Stack trace:\n#0 /tmp/tmpm7wa3ww9.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpm7wa3ww9.php\
    \ on line 36\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $result = 1;\n    while ($n\
    \ > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 != 0) {\n        \
    \    $result *= $digit;\n        }\n        $n = (int)($n / 10);\n    }\n    return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy6qjs34g.php:33\n\
    Stack trace:\n#0 /tmp/tmpy6qjs34g.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpy6qjs34g.php\
    \ on line 33\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $result = 1;\n    foreach ($n as $digit) {\n        if ($digit % 2 != 0) {\n\
    \            $result *= $digit;\n        }\n    }\n    return $result;\n}\necho\
    \ digits(1);\necho digits(4);\necho digits(235);\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1115\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps3s6e7cz.php:35\n\
    Stack trace:\n#0 /tmp/tmps3s6e7cz.php(38): test()\n#1 {main}\n  thrown in /tmp/tmps3s6e7cz.php\
    \ on line 35\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n  $digits = str_split($n);\n\
    \  $odd_digits = array_filter($digits, function($digit) {\n    return $digit %\
    \ 2 !== 0;\n  });\n  if (empty($odd_digits)) {\n    return 0;\n  }\n  return array_product($odd_digits);\n\
    }\n\n/* Given a string, return the first character that is not repeated.\nFor\
    \ example:\n>>> first_non_repeated('aabbc')\n'c'\n>>> first_non_repeated('aabbcc')\n\
    ''\n>>> first_non_repeated('aabbccdde')\n'e'*/\nfunction candidate(...$args) {\n\
    \    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $sum = 1;\n    while ($n\
    \ > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 != 0) {\n        \
    \    $sum *= $digit;\n        }\n        $n = floor($n / 10);\n    }\n    return\
    \ $sum;\n}\necho digits(1);\necho digits(4);\necho digits(235);\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1115\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx5aygx6b.php:36\n\
    Stack trace:\n#0 /tmp/tmpx5aygx6b.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpx5aygx6b.php\
    \ on line 36\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $result = 1;\n    while ($n\
    \ > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 != 0) {\n        \
    \    $result *= $digit;\n        }\n        $n = (int)($n / 10);\n    }\n    return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy6qjs34g.php:33\n\
    Stack trace:\n#0 /tmp/tmpy6qjs34g.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpy6qjs34g.php\
    \ on line 33\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $odd = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $number) {\n        if ($number % 2 != 0) {\n            $odd\
    \ *= $number;\n        }\n    }\n    return $odd;\n}\necho digits(1) . \"\\n\"\
    ;\necho digits(4) . \"\\n\";\necho digits(235) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpte3ahz_x.php:35\n\
    Stack trace:\n#0 /tmp/tmpte3ahz_x.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpte3ahz_x.php\
    \ on line 35\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n  $sum = 1;\n  while ($n > 0)\
    \ {\n    $digit = $n % 10;\n    if ($digit % 2 != 0) {\n      $sum *= $digit;\n\
    \    }\n    $n = floor($n / 10);\n  }\n  return $sum;\n}\necho digits(1) . \"\\\
    n\";\necho digits(4) . \"\\n\";\necho digits(235) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsy7fzzyp.php:36\n\
    Stack trace:\n#0 /tmp/tmpsy7fzzyp.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpsy7fzzyp.php\
    \ on line 36\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $product = 1;\n    foreach ($n as $digit) {\n        if ($digit % 2 !== 0) {\n\
    \            $product *= $digit;\n        }\n    }\n    return $product;\n}\n\
    echo digits(1);\necho digits(4);\necho digits(235);\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1115\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9aezk3xj.php:35\n\
    Stack trace:\n#0 /tmp/tmp9aezk3xj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp9aezk3xj.php\
    \ on line 35\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $product = 1;\n    foreach ($n as $digit) {\n        if ($digit % 2 != 0) {\n\
    \            $product *= $digit;\n        }\n    }\n    if ($product == 1) {\n\
    \        return 0;\n    }\n    return $product;\n}\n\n/* Given a positive integer\
    \ n, return the sum of the first n positive integers.\nFor example:\n>>> sum_n(1)\n\
    1\n>>> sum_n(2)\n3\n>>> sum_n(3)\n6\n>>> sum_n(4)\n10\n>>> sum_n(5)\n15*/\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz8lmcd9q.php:44\n\
    Stack trace:\n#0 /tmp/tmpz8lmcd9q.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpz8lmcd9q.php\
    \ on line 44\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $sum = 1;\n    while ($n\
    \ > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 != 0) {\n        \
    \    $sum *= $digit;\n        }\n        $n = (int)($n / 10);\n    }\n    return\
    \ $sum;\n}\necho digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(235)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8ayp68hc.php:36\n\
    Stack trace:\n#0 /tmp/tmp8ayp68hc.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp8ayp68hc.php\
    \ on line 36\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $result = 1;\n    while ($n\
    \ > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 != 0) {\n        \
    \    $result *= $digit;\n        }\n        $n = (int)($n / 10);\n    }\n    return\
    \ $result;\n}\necho digits(1);\necho digits(4);\necho digits(235);\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1115\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1hrr2mo5.php:36\n\
    Stack trace:\n#0 /tmp/tmp1hrr2mo5.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp1hrr2mo5.php\
    \ on line 36\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $odd_digits = array();\n\
    \    $digits = str_split($n);\n    foreach ($digits as $digit) {\n        if ($digit\
    \ % 2 != 0) {\n            $odd_digits[] = $digit;\n        }\n    }\n    if (count($odd_digits)\
    \ == 0) {\n        return 0;\n    }\n    return array_product($odd_digits);\n\
    }\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $result = 1;\n    foreach ($n as $value) {\n        if ($value % 2 != 0) {\n\
    \            $result *= $value;\n        }\n    }\n    return $result;\n}\necho\
    \ digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(235) . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3qch9fsi.php:35\n\
    Stack trace:\n#0 /tmp/tmp3qch9fsi.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp3qch9fsi.php\
    \ on line 35\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $result = 1;\n    foreach ($n as $value) {\n        if ($value % 2 != 0) {\n\
    \            $result *= $value;\n        }\n    }\n    return $result;\n}\necho\
    \ digits(1);\necho digits(4);\necho digits(235);\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1115\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppgo18czo.php:35\n\
    Stack trace:\n#0 /tmp/tmppgo18czo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmppgo18czo.php\
    \ on line 35\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $product = 1;\n    foreach ($n as $value) {\n        if ($value % 2 != 0) {\n\
    \            $product *= $value;\n        }\n    }\n    if ($product == 1) {\n\
    \        return 0;\n    }\n    return $product;\n}\necho digits(1);\necho \"\\\
    n\";\necho digits(4);\necho \"\\n\";\necho digits(235);\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n0\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjb5m0q65.php:37\n\
    Stack trace:\n#0 /tmp/tmpjb5m0q65.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpjb5m0q65.php\
    \ on line 37\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n  $n = str_split($n);\n  $product\
    \ = 1;\n  foreach ($n as $number) {\n    if ($number % 2 == 1) {\n      $product\
    \ *= $number;\n    }\n  }\n  return $product;\n}\necho digits(235);\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm97o6n_v.php:33\n\
    Stack trace:\n#0 /tmp/tmpm97o6n_v.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpm97o6n_v.php\
    \ on line 33\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n\t$n = str_split($n);\n\t$product\
    \ = 1;\n\tforeach ($n as $digit) {\n\t\tif ($digit % 2 != 0) {\n\t\t\t$product\
    \ *= $digit;\n\t\t}\n\t}\n\treturn $product;\n}\necho digits(1) . PHP_EOL;\necho\
    \ digits(4) . PHP_EOL;\necho digits(235) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoq04ij91.php:35\n\
    Stack trace:\n#0 /tmp/tmpoq04ij91.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpoq04ij91.php\
    \ on line 35\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $result = 1;\n    while ($n\
    \ > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 != 0) {\n        \
    \    $result *= $digit;\n        }\n        $n = (int)($n / 10);\n    }\n    return\
    \ $result;\n}\n\necho digits(1);\necho \"\\n\";\necho digits(4);\necho \"\\n\"\
    ;\necho digits(235);\necho \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpobw6j1xd.php:40\n\
    Stack trace:\n#0 /tmp/tmpobw6j1xd.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpobw6j1xd.php\
    \ on line 40\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n\t$sum = 1;\n\t$n = str_split($n);\n\
    \tforeach ($n as $value) {\n\t\tif ($value % 2 != 0) {\n\t\t\t$sum *= $value;\n\
    \t\t}\n\t}\n\treturn $sum;\n}\necho digits(1);\necho \"\\n\";\necho digits(4);\n\
    echo \"\\n\";\necho digits(235);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk5ejb0d7.php:38\n\
    Stack trace:\n#0 /tmp/tmpk5ejb0d7.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpk5ejb0d7.php\
    \ on line 38\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $odds = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $digit) {\n        if ($digit % 2 != 0) {\n            $odds\
    \ *= $digit;\n        }\n    }\n    return $odds;\n}\necho digits(1);\necho digits(4);\n\
    echo digits(235);\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1115\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjps3xlml.php:35\n\
    Stack trace:\n#0 /tmp/tmpjps3xlml.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpjps3xlml.php\
    \ on line 35\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n  $n = str_split($n);\n  $odd\
    \ = array();\n  foreach ($n as $digit) {\n    if ($digit % 2 != 0) {\n      $odd[]\
    \ = $digit;\n    }\n  }\n  if (empty($odd)) {\n    return 0;\n  }\n  return array_product($odd);\n\
    }\necho digits(1) . PHP_EOL;\necho digits(4) . PHP_EOL;\necho digits(235) . PHP_EOL;\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    0

    15

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $result = 1;\n    foreach ($n as $value) {\n        if ($value % 2 != 0) {\n\
    \            $result *= $value;\n        }\n    }\n    return $result;\n}\necho\
    \ digits(1);\necho digits(4);\necho digits(235);\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1115\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppgo18czo.php:35\n\
    Stack trace:\n#0 /tmp/tmppgo18czo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmppgo18czo.php\
    \ on line 35\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $result = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $value) {\n        if ($value % 2 != 0) {\n            $result\
    \ *= $value;\n        }\n    }\n    return $result;\n}\necho digits(1);\necho\
    \ \"<br>\";\necho digits(4);\necho \"<br>\";\necho digits(235);\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1<br>1<br>15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplufi7_n_.php:37\n\
    Stack trace:\n#0 /tmp/tmplufi7_n_.php(40): test()\n#1 {main}\n  thrown in /tmp/tmplufi7_n_.php\
    \ on line 37\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n  $product = 1;\n  $n = str_split($n);\n\
    \  foreach ($n as $number) {\n    if ($number % 2 == 1) {\n      $product *= $number;\n\
    \    }\n  }\n  return $product;\n}\necho digits(1) . PHP_EOL;\necho digits(4)\
    \ . PHP_EOL;\necho digits(235) . PHP_EOL;\nfunction candidate(...$args) {\n  \
    \  return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnal8xfof.php:35\n\
    Stack trace:\n#0 /tmp/tmpnal8xfof.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpnal8xfof.php\
    \ on line 35\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $product = 1;\n    foreach ($n as $num) {\n        if ($num % 2 != 0) {\n  \
    \          $product *= $num;\n        }\n    }\n    return $product;\n}\necho\
    \ digits(235);\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0knlatpe.php:33\n\
    Stack trace:\n#0 /tmp/tmp0knlatpe.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp0knlatpe.php\
    \ on line 33\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $sum = 1;\n    foreach ($n as $value) {\n        if ($value % 2 == 1) {\n  \
    \          $sum *= $value;\n        }\n    }\n    if ($sum == 1) {\n        return\
    \ 0;\n    }\n    return $sum;\n}\necho digits(1);\necho \"\\n\";\necho digits(4);\n\
    echo \"\\n\";\necho digits(235);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n0\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdrk9qsbl.php:37\n\
    Stack trace:\n#0 /tmp/tmpdrk9qsbl.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpdrk9qsbl.php\
    \ on line 37\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $odd = 1;\n    while ($n\
    \ > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 == 1) {\n        \
    \    $odd *= $digit;\n        }\n        $n = floor($n / 10);\n    }\n    return\
    \ $odd;\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp21dsagv_.php:33\n\
    Stack trace:\n#0 /tmp/tmp21dsagv_.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp21dsagv_.php\
    \ on line 33\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $total = 1;\n    foreach ($n as $num) {\n        if ($num % 2 != 0) {\n    \
    \        $total *= $num;\n        }\n    }\n    return $total;\n}\necho digits(1)\
    \ . PHP_EOL;\necho digits(4) . PHP_EOL;\necho digits(235) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmzng7qqq.php:35\n\
    Stack trace:\n#0 /tmp/tmpmzng7qqq.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpmzng7qqq.php\
    \ on line 35\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $odd_digits = array();\n\
    \    $digits = str_split($n);\n    foreach ($digits as $digit) {\n        if ($digit\
    \ % 2 != 0) {\n            $odd_digits[] = $digit;\n        }\n    }\n    if (count($odd_digits)\
    \ == 0) {\n        return 0;\n    }\n    return array_product($odd_digits);\n\
    }\necho digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(235) . \"\
    \\n\";\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    0

    15

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $product = 1;\n    foreach ($n as $number) {\n        if ($number % 2 == 1)\
    \ {\n            $product *= $number;\n        }\n    }\n    return $product;\n\
    }\n\necho digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(235) .\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu7s9ywtw.php:36\n\
    Stack trace:\n#0 /tmp/tmpu7s9ywtw.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpu7s9ywtw.php\
    \ on line 36\n"
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $odds = [];\n    foreach ($n as $num) {\n        if ($num % 2 !== 0) {\n   \
    \         $odds[] = $num;\n        }\n    }\n    if (empty($odds)) {\n       \
    \ return 0;\n    }\n    return array_product($odds);\n}\n\necho digits(1) . PHP_EOL;\n\
    echo digits(4) . PHP_EOL;\necho digits(235) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    0

    15

    '
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n\t$digits = str_split($n);\n\t\
    $odd_digits = array_filter($digits, function($digit) {\n\t\treturn $digit % 2\
    \ !== 0;\n\t});\n\tif (count($odd_digits) === 0) {\n\t\treturn 0;\n\t}\n\treturn\
    \ array_product($odd_digits);\n}\n\n/* Given a string, return a new string that\
    \ has the first and last characters\nremoved.\nFor example:\n>>> remove_first_last(\"\
    hello\")\n\"ell\"\n>>> remove_first_last(\"maybe\")\n\"ayb\"\n>>> remove_first_last(\"\
    benefit\")\n\"enefi\"\n>>> remove_first_last(\"a\")\n\"\"\n>>> remove_first_last(\"\
    \")\n\"\"*/\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $result = 1;\n    foreach ($n as $num) {\n        if ($num % 2 != 0) {\n   \
    \         $result *= $num;\n        }\n    }\n    return $result;\n}\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6nt8a3bf.php:32\n\
    Stack trace:\n#0 /tmp/tmp6nt8a3bf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp6nt8a3bf.php\
    \ on line 32\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $product = 1;\n    while\
    \ ($n > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 == 1) {\n    \
    \        $product *= $digit;\n        }\n        $n = floor($n / 10);\n    }\n\
    \    return $product;\n}\necho digits(1) . \"\\n\";\necho digits(4) . \"\\n\"\
    ;\necho digits(235) . \"\\n\";\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfqk_gf7u.php:36\n\
    Stack trace:\n#0 /tmp/tmpfqk_gf7u.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpfqk_gf7u.php\
    \ on line 36\n"
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odd_digits = array_filter($digits, function($digit) {\n        return $digit\
    \ % 2 != 0;\n    });\n    if (count($odd_digits) == 0) {\n        return 0;\n\
    \    }\n    return array_product($odd_digits);\n}\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $product = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $num) {\n        if ($num % 2 != 0) {\n            $product\
    \ *= $num;\n        }\n    }\n    return $product;\n}\necho digits(235);\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbrpkxn6d.php:33\n\
    Stack trace:\n#0 /tmp/tmpbrpkxn6d.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpbrpkxn6d.php\
    \ on line 33\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $product = 1;\n    foreach ($n as $value) {\n        if ($value % 2 != 0) {\n\
    \            $product *= $value;\n        }\n    }\n    if ($product == 1) {\n\
    \        return 0;\n    }\n    return $product;\n}\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpunxbxaio.php:31\n\
    Stack trace:\n#0 /tmp/tmpunxbxaio.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpunxbxaio.php\
    \ on line 31\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $result = 1;\n    while ($n\
    \ > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 != 0) {\n        \
    \    $result *= $digit;\n        }\n        $n = floor($n / 10);\n    }\n    return\
    \ $result;\n}\n\necho digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(235)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe0yq41vl.php:37\n\
    Stack trace:\n#0 /tmp/tmpe0yq41vl.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpe0yq41vl.php\
    \ on line 37\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $result = 1;\n    foreach ($n as $value) {\n        if ($value % 2 == 1) {\n\
    \            $result *= $value;\n        }\n    }\n    return $result;\n}\necho\
    \ digits(1);\necho digits(4);\necho digits(235);\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1115\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmy0rit7l.php:35\n\
    Stack trace:\n#0 /tmp/tmpmy0rit7l.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpmy0rit7l.php\
    \ on line 35\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n\t$n = str_split($n);\n\t$product\
    \ = 1;\n\tforeach ($n as $value) {\n\t\tif ($value % 2 != 0) {\n\t\t\t$product\
    \ *= $value;\n\t\t}\n\t}\n\tif ($product == 1) {\n\t\treturn 0;\n\t}\n\treturn\
    \ $product;\n}\necho digits(235);\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5j3fd1di.php:32\n\
    Stack trace:\n#0 /tmp/tmp5j3fd1di.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp5j3fd1di.php\
    \ on line 32\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $result = 1;\n    $n = (string)$n;\n\
    \    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 != 0) {\n \
    \           $result *= $n[$i];\n        }\n    }\n    return $result;\n}\necho\
    \ digits(1);\necho digits(4);\necho digits(235);\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1115\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo8q5hhm4.php:35\n\
    Stack trace:\n#0 /tmp/tmpo8q5hhm4.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpo8q5hhm4.php\
    \ on line 35\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $product = 1;\n    foreach ($n as $digit) {\n        if ($digit % 2 != 0) {\n\
    \            $product *= $digit;\n        }\n    }\n    if ($product == 1) {\n\
    \        return 0;\n    }\n    return $product;\n}\necho digits(1);\necho \"\\\
    n\";\necho digits(4);\necho \"\\n\";\necho digits(235);\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n0\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1slw7091.php:37\n\
    Stack trace:\n#0 /tmp/tmp1slw7091.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp1slw7091.php\
    \ on line 37\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $result = 1;\n    foreach ($n as $v) {\n        if ($v % 2 == 1) {\n       \
    \     $result *= $v;\n        }\n    }\n    return $result;\n}\necho digits(1);\n\
    echo digits(4);\necho digits(235);\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1115\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp55ra3ve8.php:35\n\
    Stack trace:\n#0 /tmp/tmp55ra3ve8.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp55ra3ve8.php\
    \ on line 35\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n  $n = str_split($n);\n  $odd\
    \ = 1;\n  foreach ($n as $value) {\n    if ($value % 2 != 0) {\n      $odd *=\
    \ $value;\n    }\n  }\n  return $odd;\n}\necho digits(1);\necho digits(4);\necho\
    \ digits(235);\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1115\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiniy1p6y.php:35\n\
    Stack trace:\n#0 /tmp/tmpiniy1p6y.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpiniy1p6y.php\
    \ on line 35\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $total = 1;\n    foreach ($n as $number) {\n        if ($number % 2 != 0) {\n\
    \            $total *= $number;\n        }\n    }\n    return $total;\n}\necho\
    \ digits(1) . PHP_EOL;\necho digits(4) . PHP_EOL;\necho digits(235) . PHP_EOL;\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3yxlxc2f.php:35\n\
    Stack trace:\n#0 /tmp/tmp3yxlxc2f.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp3yxlxc2f.php\
    \ on line 35\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $sum = 1;\n    foreach ($n as $digit) {\n        if ($digit % 2 !== 0) {\n \
    \           $sum *= $digit;\n        }\n    }\n    return $sum;\n}\necho digits(1)\
    \ . PHP_EOL;\necho digits(4) . PHP_EOL;\necho digits(235) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9j6e1tb1.php:35\n\
    Stack trace:\n#0 /tmp/tmp9j6e1tb1.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp9j6e1tb1.php\
    \ on line 35\n"
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odds = array_filter($digits, function($digit) {\n        return $digit %\
    \ 2 !== 0;\n    });\n    if (count($odds) === 0) {\n        return 0;\n    }\n\
    \    return array_product($odds);\n}\n\n/* Given a positive integer n, return\
    \ the product of the odd digits.\nReturn 0 if all digits are even.\nFor example:\n\
    >>> digits(1)\n1\n>>> digits(4)\n0\n>>> digits(235)\n15*/\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $prod = 1;\n    foreach ($n as $num) {\n        if ($num % 2 != 0) {\n     \
    \       $prod *= $num;\n        }\n    }\n    return $prod;\n}\necho digits(1);\n\
    echo \"\\n\";\necho digits(4);\necho \"\\n\";\necho digits(235);\necho \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqutd_h8d.php:38\n\
    Stack trace:\n#0 /tmp/tmpqutd_h8d.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqutd_h8d.php\
    \ on line 38\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $odds = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $digit) {\n        if ($digit % 2 == 1) {\n            $odds\
    \ *= $digit;\n        }\n    }\n    return $odds;\n}\necho digits(1) . PHP_EOL;\n\
    echo digits(4) . PHP_EOL;\necho digits(235) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppach5yon.php:35\n\
    Stack trace:\n#0 /tmp/tmppach5yon.php(38): test()\n#1 {main}\n  thrown in /tmp/tmppach5yon.php\
    \ on line 35\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $odd = 1;\n    while ($n\
    \ > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 == 1) {\n        \
    \    $odd *= $digit;\n        }\n        $n = (int)($n / 10);\n    }\n    return\
    \ $odd;\n}\n\necho digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(235)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj820v5br.php:37\n\
    Stack trace:\n#0 /tmp/tmpj820v5br.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpj820v5br.php\
    \ on line 37\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $result = 1;\n    $n = (string)$n;\n\
    \    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 != 0) {\n \
    \           $result *= $n[$i];\n        }\n    }\n    return $result;\n}\necho\
    \ digits(1);\necho digits(4);\necho digits(235);\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1115\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo8q5hhm4.php:35\n\
    Stack trace:\n#0 /tmp/tmpo8q5hhm4.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpo8q5hhm4.php\
    \ on line 35\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n  $product = 1;\n  $n = str_split($n);\n\
    \  foreach ($n as $digit) {\n    if ($digit % 2 != 0) {\n      $product *= $digit;\n\
    \    }\n  }\n  return $product;\n}\necho digits(1) . PHP_EOL;\necho digits(4)\
    \ . PHP_EOL;\necho digits(235) . PHP_EOL;\nfunction candidate(...$args) {\n  \
    \  return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvvvj_6u4.php:35\n\
    Stack trace:\n#0 /tmp/tmpvvvj_6u4.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpvvvj_6u4.php\
    \ on line 35\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $product = 1;\n    foreach ($n as $number) {\n        if ($number % 2 != 0)\
    \ {\n            $product *= $number;\n        }\n    }\n    if ($product == 1)\
    \ {\n        return 0;\n    }\n    return $product;\n}\n\necho digits(1) . \"\\\
    n\";\necho digits(4) . \"\\n\";\necho digits(235) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n0\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4uf1pxkt.php:35\n\
    Stack trace:\n#0 /tmp/tmp4uf1pxkt.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp4uf1pxkt.php\
    \ on line 35\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $product = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $digit) {\n        if ($digit % 2 != 0) {\n            $product\
    \ *= $digit;\n        }\n    }\n    return $product;\n}\necho digits(1);\necho\
    \ \"\\n\";\necho digits(4);\necho \"\\n\";\necho digits(235);\necho \"\\n\";\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr8v_f1y1.php:38\n\
    Stack trace:\n#0 /tmp/tmpr8v_f1y1.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpr8v_f1y1.php\
    \ on line 38\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n\t$n = str_split($n);\n\t$product\
    \ = 1;\n\tforeach ($n as $number) {\n\t\tif ($number % 2 != 0) {\n\t\t\t$product\
    \ *= $number;\n\t\t}\n\t}\n\tif ($product == 1) {\n\t\treturn 0;\n\t}\n\treturn\
    \ $product;\n}\necho digits(1) . PHP_EOL;\necho digits(4) . PHP_EOL;\necho digits(235)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n0\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpom17rda1.php:34\n\
    Stack trace:\n#0 /tmp/tmpom17rda1.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpom17rda1.php\
    \ on line 34\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $product = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $digit) {\n        if ($digit % 2 != 0) {\n            $product\
    \ *= $digit;\n        }\n    }\n    return $product;\n}\necho digits(1) . \"\\\
    n\";\necho digits(4) . \"\\n\";\necho digits(235) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmo4ckwlf.php:35\n\
    Stack trace:\n#0 /tmp/tmpmo4ckwlf.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpmo4ckwlf.php\
    \ on line 35\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $result = 1;\n    while ($n\
    \ > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 != 0) {\n        \
    \    $result *= $digit;\n        }\n        $n = (int)($n / 10);\n    }\n    return\
    \ $result;\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy6qjs34g.php:33\n\
    Stack trace:\n#0 /tmp/tmpy6qjs34g.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpy6qjs34g.php\
    \ on line 33\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $result = 1;\n    $n = (string)$n;\n\
    \    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 != 0) {\n \
    \           $result *= $n[$i];\n        }\n    }\n    return $result;\n}\necho\
    \ digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(235) . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcdqi0izt.php:35\n\
    Stack trace:\n#0 /tmp/tmpcdqi0izt.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpcdqi0izt.php\
    \ on line 35\n"
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $odds = [];\n    foreach ($n as $num) {\n        if ($num % 2 !== 0) {\n   \
    \         $odds[] = $num;\n        }\n    }\n    if (empty($odds)) {\n       \
    \ return 0;\n    }\n    return array_product($odds);\n}\n\n/* Given a string,\
    \ return the first character that does not repeat.\nFor example:\n>>> firstNonRepeating(\"\
    aabbccdde\")\n'e'\n>>> firstNonRepeating(\"aabbcddee\")\n'c'*/\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $sum = 1;\n    while ($n\
    \ > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 != 0) {\n        \
    \    $sum *= $digit;\n        }\n        $n = (int)($n / 10);\n    }\n    return\
    \ $sum;\n}\necho digits(235);\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq7oqwwko.php:34\n\
    Stack trace:\n#0 /tmp/tmpq7oqwwko.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpq7oqwwko.php\
    \ on line 34\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n  $n = str_split($n);\n  $result\
    \ = 1;\n  foreach ($n as $value) {\n    if ($value % 2 != 0) {\n      $result\
    \ *= $value;\n    }\n  }\n  return $result;\n}\necho digits(1) . \"\\n\";\necho\
    \ digits(4) . \"\\n\";\necho digits(235) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7qdglhtc.php:35\n\
    Stack trace:\n#0 /tmp/tmp7qdglhtc.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp7qdglhtc.php\
    \ on line 35\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $result = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $value) {\n        if ($value % 2 != 0) {\n            $result\
    \ *= $value;\n        }\n    }\n    return $result;\n}\necho digits(235);\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpulvq3lyg.php:33\n\
    Stack trace:\n#0 /tmp/tmpulvq3lyg.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpulvq3lyg.php\
    \ on line 33\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $result = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $num) {\n        if ($num % 2 !== 0) {\n            $result\
    \ *= $num;\n        }\n    }\n    return $result;\n}\n\necho digits(235);\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9kn980us.php:34\n\
    Stack trace:\n#0 /tmp/tmp9kn980us.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp9kn980us.php\
    \ on line 34\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $product = 1;\n    foreach ($n as $digit) {\n        if ($digit % 2 !== 0) {\n\
    \            $product *= $digit;\n        }\n    }\n    return $product;\n}\n\
    echo digits(1) . PHP_EOL;\necho digits(4) . PHP_EOL;\necho digits(235) . PHP_EOL;\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf8ay6qej.php:35\n\
    Stack trace:\n#0 /tmp/tmpf8ay6qej.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpf8ay6qej.php\
    \ on line 35\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n  $product = 1;\n  $n = str_split($n);\n\
    \  foreach ($n as $number) {\n    if ($number % 2 == 1) {\n      $product *= $number;\n\
    \    }\n  }\n  return $product;\n}\necho digits(1) . PHP_EOL;\necho digits(4)\
    \ . PHP_EOL;\necho digits(235) . PHP_EOL;\nfunction candidate(...$args) {\n  \
    \  return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnal8xfof.php:35\n\
    Stack trace:\n#0 /tmp/tmpnal8xfof.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpnal8xfof.php\
    \ on line 35\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $result = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $key => $value) {\n        if ($value % 2 != 0) {\n      \
    \      $result *= $value;\n        }\n    }\n    return $result;\n}\necho digits(235);\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpninqcjyc.php:33\n\
    Stack trace:\n#0 /tmp/tmpninqcjyc.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpninqcjyc.php\
    \ on line 33\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $result = 1;\n    foreach ($n as $digit) {\n        if ($digit % 2 != 0) {\n\
    \            $result *= $digit;\n        }\n    }\n    return $result;\n}\necho\
    \ digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(235) . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjwv3udcx.php:35\n\
    Stack trace:\n#0 /tmp/tmpjwv3udcx.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpjwv3udcx.php\
    \ on line 35\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $result = 1;\n    foreach ($n as $value) {\n        if ($value % 2 != 0) {\n\
    \            $result *= $value;\n        }\n    }\n    return $result;\n}\necho\
    \ digits(1);\necho \"<br>\";\necho digits(4);\necho \"<br>\";\necho digits(235);\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1<br>1<br>15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposy4zwgz.php:37\n\
    Stack trace:\n#0 /tmp/tmposy4zwgz.php(40): test()\n#1 {main}\n  thrown in /tmp/tmposy4zwgz.php\
    \ on line 37\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $arr = str_split($n);\n \
    \   $result = 1;\n    foreach ($arr as $value) {\n        if ($value % 2 != 0)\
    \ {\n            $result *= $value;\n        }\n    }\n    return $result;\n}\n\
    echo digits(235);\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpppxh_ldj.php:33\n\
    Stack trace:\n#0 /tmp/tmpppxh_ldj.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpppxh_ldj.php\
    \ on line 33\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $result = 1;\n    foreach ($n as $value) {\n        if ($value % 2 != 0) {\n\
    \            $result *= $value;\n        }\n    }\n    return $result;\n}\necho\
    \ digits(1);\necho \"\\n\";\necho digits(4);\necho \"\\n\";\necho digits(235);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv6oi4s6b.php:38\n\
    Stack trace:\n#0 /tmp/tmpv6oi4s6b.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpv6oi4s6b.php\
    \ on line 38\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $result = 1;\n    foreach ($n as $value) {\n        if ($value % 2 != 0) {\n\
    \            $result *= $value;\n        }\n    }\n    return $result;\n}\necho\
    \ digits(1);\necho \"\\n\";\necho digits(4);\necho \"\\n\";\necho digits(235);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv6oi4s6b.php:38\n\
    Stack trace:\n#0 /tmp/tmpv6oi4s6b.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpv6oi4s6b.php\
    \ on line 38\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $product = 1;\n    while\
    \ ($n > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 != 0) {\n    \
    \        $product *= $digit;\n        }\n        $n = (int)($n / 10);\n    }\n\
    \    return $product;\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplsah4evl.php:33\n\
    Stack trace:\n#0 /tmp/tmplsah4evl.php(36): test()\n#1 {main}\n  thrown in /tmp/tmplsah4evl.php\
    \ on line 33\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $product = 1;\n    foreach ($n as $num) {\n        if ($num % 2 != 0) {\n  \
    \          $product *= $num;\n        }\n    }\n    return $product;\n}\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo2gesek9.php:32\n\
    Stack trace:\n#0 /tmp/tmpo2gesek9.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpo2gesek9.php\
    \ on line 32\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $result = 1;\n    foreach ($n as $value) {\n        if ($value % 2 != 0) {\n\
    \            $result *= $value;\n        }\n    }\n    return $result;\n}\necho\
    \ digits(1);\necho digits(4);\necho digits(235);\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1115\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppgo18czo.php:35\n\
    Stack trace:\n#0 /tmp/tmppgo18czo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmppgo18czo.php\
    \ on line 35\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n  $n = str_split($n);\n  $odd\
    \ = 1;\n  foreach ($n as $digit) {\n    if ($digit % 2 == 1) {\n      $odd *=\
    \ $digit;\n    }\n  }\n  return $odd;\n}\necho digits(1) . PHP_EOL;\necho digits(4)\
    \ . PHP_EOL;\necho digits(235) . PHP_EOL;\nfunction candidate(...$args) {\n  \
    \  return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpizlu5qyk.php:35\n\
    Stack trace:\n#0 /tmp/tmpizlu5qyk.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpizlu5qyk.php\
    \ on line 35\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n\t$n = str_split($n);\n\t$result\
    \ = 1;\n\tforeach ($n as $value) {\n\t\tif ($value % 2 != 0) {\n\t\t\t$result\
    \ *= $value;\n\t\t}\n\t}\n\treturn $result;\n}\necho digits(1);\necho \"<br>\"\
    ;\necho digits(4);\necho \"<br>\";\necho digits(235);\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1<br>1<br>15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvz8qqa_f.php:37\n\
    Stack trace:\n#0 /tmp/tmpvz8qqa_f.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpvz8qqa_f.php\
    \ on line 37\n"
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odd_digits = array_filter($digits, function($digit) {\n        return $digit\
    \ % 2 !== 0;\n    });\n    if (empty($odd_digits)) {\n        return 0;\n    }\n\
    \    return array_product($odd_digits);\n}\n\necho digits(1) . \"\\n\";\necho\
    \ digits(4) . \"\\n\";\necho digits(235) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    0

    15

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $product = 1;\n    foreach ($n as $num) {\n        if ($num % 2 != 0) {\n  \
    \          $product *= $num;\n        }\n    }\n    return $product;\n}\necho\
    \ digits(1) . PHP_EOL;\necho digits(4) . PHP_EOL;\necho digits(235) . PHP_EOL;\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_ffa7nhe.php:35\n\
    Stack trace:\n#0 /tmp/tmp_ffa7nhe.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_ffa7nhe.php\
    \ on line 35\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $result = 1;\n    while ($n\
    \ > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 == 1) {\n        \
    \    $result *= $digit;\n        }\n        $n = floor($n / 10);\n    }\n    return\
    \ $result;\n}\necho digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(235)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7cqqdxx5.php:36\n\
    Stack trace:\n#0 /tmp/tmp7cqqdxx5.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp7cqqdxx5.php\
    \ on line 36\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $sum = 1;\n    foreach ($n as $value) {\n        if ($value % 2 != 0) {\n  \
    \          $sum *= $value;\n        }\n    }\n    return $sum;\n}\necho digits(235);\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpytcjp_b2.php:33\n\
    Stack trace:\n#0 /tmp/tmpytcjp_b2.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpytcjp_b2.php\
    \ on line 33\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = (string)$n;\n    $product\
    \ = 1;\n    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 != 0)\
    \ {\n            $product *= $n[$i];\n        }\n    }\n    return $product;\n\
    }\necho digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(235) . \"\
    \\n\";\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9g0lsr40.php:35\n\
    Stack trace:\n#0 /tmp/tmp9g0lsr40.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp9g0lsr40.php\
    \ on line 35\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $product = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $digit) {\n        if ($digit % 2 != 0) {\n            $product\
    \ *= $digit;\n        }\n    }\n    return $product;\n}\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvsiqzh4_.php:32\n\
    Stack trace:\n#0 /tmp/tmpvsiqzh4_.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpvsiqzh4_.php\
    \ on line 32\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $result = 1;\n    foreach ($n as $value) {\n        if ($value % 2 != 0) {\n\
    \            $result *= $value;\n        }\n    }\n    return $result;\n}\necho\
    \ digits(1);\necho \"<br>\";\necho digits(4);\necho \"<br>\";\necho digits(235);\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1<br>1<br>15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposy4zwgz.php:37\n\
    Stack trace:\n#0 /tmp/tmposy4zwgz.php(40): test()\n#1 {main}\n  thrown in /tmp/tmposy4zwgz.php\
    \ on line 37\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $result = 1;\n    foreach ($n as $value) {\n        if ($value % 2 != 0) {\n\
    \            $result *= $value;\n        }\n    }\n    return $result;\n}\necho\
    \ digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(235) . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3qch9fsi.php:35\n\
    Stack trace:\n#0 /tmp/tmp3qch9fsi.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp3qch9fsi.php\
    \ on line 35\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $result = 1;\n    foreach ($n as $value) {\n        if ($value % 2 != 0) {\n\
    \            $result *= $value;\n        }\n    }\n    return $result;\n}\necho\
    \ digits(4);\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb8y010ql.php:33\n\
    Stack trace:\n#0 /tmp/tmpb8y010ql.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpb8y010ql.php\
    \ on line 33\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $result = 1;\n    foreach ($n as $value) {\n        if ($value % 2 != 0) {\n\
    \            $result *= $value;\n        }\n    }\n    return $result;\n}\necho\
    \ digits(1);\necho digits(4);\necho digits(235);\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1115\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppgo18czo.php:35\n\
    Stack trace:\n#0 /tmp/tmppgo18czo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmppgo18czo.php\
    \ on line 35\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $product = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $digit) {\n        if ($digit % 2 != 0) {\n            $product\
    \ *= $digit;\n        }\n    }\n    return $product;\n}\n\necho digits(1) . PHP_EOL;\n\
    echo digits(4) . PHP_EOL;\necho digits(235) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3uib0ubh.php:36\n\
    Stack trace:\n#0 /tmp/tmp3uib0ubh.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp3uib0ubh.php\
    \ on line 36\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n  $n = str_split($n);\n  $product\
    \ = 1;\n  foreach ($n as $value) {\n    if ($value % 2 != 0) {\n      $product\
    \ *= $value;\n    }\n  }\n  if ($product == 1) {\n    return 0;\n  }\n  return\
    \ $product;\n}\necho digits(1);\necho \"<br>\";\necho digits(4);\necho \"<br>\"\
    ;\necho digits(235);\necho \"<br>\";\necho digits(123456789);\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0<br>0<br>15<br>945\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprp0a3gxn.php:38\n\
    Stack trace:\n#0 /tmp/tmprp0a3gxn.php(45): test()\n#1 {main}\n  thrown in /tmp/tmprp0a3gxn.php\
    \ on line 38\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $product = 1;\n    foreach ($n as $number) {\n        if ($number % 2 != 0)\
    \ {\n            $product *= $number;\n        }\n    }\n    if ($product == 1)\
    \ {\n        return 0;\n    }\n    return $product;\n}\necho digits(235);\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxccuzq8g.php:32\n\
    Stack trace:\n#0 /tmp/tmpxccuzq8g.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpxccuzq8g.php\
    \ on line 32\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $product = 1;\n    while\
    \ ($n > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 != 0) {\n    \
    \        $product *= $digit;\n        }\n        $n = (int)($n / 10);\n    }\n\
    \    return $product;\n}\n\necho digits(1) . \"\\n\";\necho digits(4) . \"\\n\"\
    ;\necho digits(235) . \"\\n\";\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4mv2ii0r.php:37\n\
    Stack trace:\n#0 /tmp/tmp4mv2ii0r.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp4mv2ii0r.php\
    \ on line 37\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $result = 1;\n    while ($n\
    \ > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 != 0) {\n        \
    \    $result *= $digit;\n        }\n        $n = (int)($n / 10);\n    }\n    return\
    \ $result;\n}\necho digits(1);\necho \"<br>\";\necho digits(4);\necho \"<br>\"\
    ;\necho digits(235);\necho \"<br>\";\necho digits(123456789);\necho \"<br>\";\n\
    echo digits(1234567890);\necho \"<br>\";\necho digits(12345678901);\necho \"<br>\"\
    ;\necho digits(123456789012);\necho \"<br>\";\necho digits(1234567890123);\necho\
    \ \"<br>\";\necho digits(12345678901234);\necho \"<br>\";\necho digits(123456789012345);\n\
    echo \"<br>\";\necho digits(1234567890123456);\necho \"<br>\";\necho digits(12345678901234567);\n\
    echo \"<br>\";\necho digits(123456789012345678);\necho \"<br>\";\necho digits(1234567890123456789);\n\
    echo \"<br>\";\necho digits(12345678901234567890);\necho \"<br>\";\necho digits(123456789012345678901);\n\
    echo \"<br>\";\necho digits(1234567890123456789012);\necho \"<br>\";\necho digits(12345678901234567890123);\n\
    echo \"<br>\";\necho digits(123456789012345678901234);\necho \"<br>\";\necho digits(1234567890123456789012345);\n\
    echo \"<br>\";\necho digits(12345678901234567890123456);\necho \"<br>\";\necho\
    \ digits(123456789012345678901234567);\necho \"<br>\";\necho digits(1234567890123456789012345678);\n\
    echo \"<br>\";\necho digits(1234567890123456789\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpvoqvecbs.php
    on line 69

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $product = 1;\n    $n = (string)$n;\n\
    \    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 != 0) {\n \
    \           $product *= $n[$i];\n        }\n    }\n    return $product;\n}\necho\
    \ digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(235) . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuz4yrgg7.php:35\n\
    Stack trace:\n#0 /tmp/tmpuz4yrgg7.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpuz4yrgg7.php\
    \ on line 35\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $product = 1;\n    foreach ($n as $value) {\n        if ($value % 2 == 1) {\n\
    \            $product *= $value;\n        }\n    }\n    return $product;\n}\n\
    echo digits(235);\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpahrxtoei.php:33\n\
    Stack trace:\n#0 /tmp/tmpahrxtoei.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpahrxtoei.php\
    \ on line 33\n"
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n  $digits = str_split($n);\n\
    \  $odd_digits = [];\n  foreach ($digits as $digit) {\n    if ($digit % 2 != 0)\
    \ {\n      $odd_digits[] = $digit;\n    }\n  }\n  if (count($odd_digits) == 0)\
    \ {\n    return 0;\n  }\n  return array_product($odd_digits);\n}\n\necho digits(1)\
    \ . PHP_EOL;\necho digits(4) . PHP_EOL;\necho digits(235) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    0

    15

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $odd = 1;\n    foreach ($n as $number) {\n        if ($number % 2 != 0) {\n\
    \            $odd *= $number;\n        }\n    }\n    return $odd;\n}\necho digits(235);\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0pjyu2cm.php:33\n\
    Stack trace:\n#0 /tmp/tmp0pjyu2cm.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp0pjyu2cm.php\
    \ on line 33\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $product = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $digit) {\n        if ($digit % 2 != 0) {\n            $product\
    \ *= $digit;\n        }\n    }\n    return $product;\n}\necho digits(1) . PHP_EOL;\n\
    echo digits(4) . PHP_EOL;\necho digits(235) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsqvtk0qi.php:35\n\
    Stack trace:\n#0 /tmp/tmpsqvtk0qi.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpsqvtk0qi.php\
    \ on line 35\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $result = 1;\n    foreach ($n as $digit) {\n        if ($digit % 2 != 0) {\n\
    \            $result *= $digit;\n        }\n    }\n    return $result;\n}\necho\
    \ digits(1);\necho digits(4);\necho digits(235);\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1115\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps3s6e7cz.php:35\n\
    Stack trace:\n#0 /tmp/tmps3s6e7cz.php(38): test()\n#1 {main}\n  thrown in /tmp/tmps3s6e7cz.php\
    \ on line 35\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $product = 1;\n    while\
    \ ($n > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 != 0) {\n    \
    \        $product *= $digit;\n        }\n        $n = floor($n / 10);\n    }\n\
    \    return $product;\n}\necho digits(1) . \"\\n\";\necho digits(4) . \"\\n\"\
    ;\necho digits(235) . \"\\n\";\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9k79_sp1.php:36\n\
    Stack trace:\n#0 /tmp/tmp9k79_sp1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp9k79_sp1.php\
    \ on line 36\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n  $n = str_split($n);\n  $result\
    \ = 1;\n  foreach ($n as $digit) {\n    if ($digit % 2 != 0) {\n      $result\
    \ *= $digit;\n    }\n  }\n  return $result;\n}\necho digits(1) . PHP_EOL;\necho\
    \ digits(4) . PHP_EOL;\necho digits(235) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppsymovb6.php:35\n\
    Stack trace:\n#0 /tmp/tmppsymovb6.php(38): test()\n#1 {main}\n  thrown in /tmp/tmppsymovb6.php\
    \ on line 35\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $sum = 1;\n    $n = (string)$n;\n\
    \    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 != 0) {\n \
    \           $sum *= $n[$i];\n        }\n    }\n    return $sum;\n}\n\necho digits(1)\
    \ . PHP_EOL;\necho digits(4) . PHP_EOL;\necho digits(235) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9ey6y31j.php:36\n\
    Stack trace:\n#0 /tmp/tmp9ey6y31j.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp9ey6y31j.php\
    \ on line 36\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $sum = 1;\n    foreach ($n as $value) {\n        if ($value % 2 == 1) {\n  \
    \          $sum *= $value;\n        }\n    }\n    return $sum;\n}\necho digits(1);\n\
    echo digits(4);\necho digits(235);\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1115\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnyhq_3_5.php:35\n\
    Stack trace:\n#0 /tmp/tmpnyhq_3_5.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpnyhq_3_5.php\
    \ on line 35\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n\t$n = str_split($n);\n\t$product\
    \ = 1;\n\tforeach ($n as $num) {\n\t\tif ($num % 2 != 0) {\n\t\t\t$product *=\
    \ $num;\n\t\t}\n\t}\n\treturn $product;\n}\necho digits(235);\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpe8d9av3k.php:33\n\
    Stack trace:\n#0 /tmp/tmpe8d9av3k.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpe8d9av3k.php\
    \ on line 33\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n\t$n = str_split($n);\n\t$odd\
    \ = 1;\n\tforeach ($n as $digit) {\n\t\tif ($digit % 2 != 0) {\n\t\t\t$odd *=\
    \ $digit;\n\t\t}\n\t}\n\treturn $odd;\n}\necho digits(1);\necho \"\\n\";\necho\
    \ digits(4);\necho \"\\n\";\necho digits(235);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwnyefnwi.php:38\n\
    Stack trace:\n#0 /tmp/tmpwnyefnwi.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpwnyefnwi.php\
    \ on line 38\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $result = 1;\n    $n = (string)$n;\n\
    \    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 != 0) {\n \
    \           $result *= $n[$i];\n        }\n    }\n    return $result;\n}\necho\
    \ digits(1);\necho digits(4);\necho digits(235);\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1115\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo8q5hhm4.php:35\n\
    Stack trace:\n#0 /tmp/tmpo8q5hhm4.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpo8q5hhm4.php\
    \ on line 35\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $product = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $num) {\n        if ($num % 2 != 0) {\n            $product\
    \ *= $num;\n        }\n    }\n    return $product;\n}\necho digits(1) . PHP_EOL;\n\
    echo digits(4) . PHP_EOL;\necho digits(235) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmz1jdoko.php:35\n\
    Stack trace:\n#0 /tmp/tmpmz1jdoko.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpmz1jdoko.php\
    \ on line 35\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $odd_digits = 1;\n    $n\
    \ = (string)$n;\n    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i]\
    \ % 2 != 0) {\n            $odd_digits *= $n[$i];\n        }\n    }\n    return\
    \ $odd_digits;\n}\n\necho digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho\
    \ digits(235) . \"\\n\";\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkrxadr_v.php:36\n\
    Stack trace:\n#0 /tmp/tmpkrxadr_v.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpkrxadr_v.php\
    \ on line 36\n"
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $odd_digits = array();\n\
    \    $n = str_split($n);\n    foreach ($n as $digit) {\n        if ($digit % 2\
    \ != 0) {\n            $odd_digits[] = $digit;\n        }\n    }\n    if (empty($odd_digits))\
    \ {\n        return 0;\n    } else {\n        return array_product($odd_digits);\n\
    \    }\n}\necho digits(1) . PHP_EOL;\necho digits(4) . PHP_EOL;\necho digits(235)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1

    0

    15

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n  $n = str_split($n);\n  $product\
    \ = 1;\n  foreach ($n as $num) {\n    if ($num % 2 !== 0) {\n      $product *=\
    \ $num;\n    }\n  }\n  return $product;\n}\necho digits(1) . PHP_EOL;\necho digits(4)\
    \ . PHP_EOL;\necho digits(235) . PHP_EOL;\nfunction candidate(...$args) {\n  \
    \  return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpc6r6ak4d.php:35\n\
    Stack trace:\n#0 /tmp/tmpc6r6ak4d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpc6r6ak4d.php\
    \ on line 35\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $product = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $digit) {\n        if ($digit % 2 != 0) {\n            $product\
    \ *= $digit;\n        }\n    }\n    return $product;\n}\necho digits(1) . PHP_EOL;\n\
    echo digits(4) . PHP_EOL;\necho digits(235) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsqvtk0qi.php:35\n\
    Stack trace:\n#0 /tmp/tmpsqvtk0qi.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpsqvtk0qi.php\
    \ on line 35\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $result = 1;\n    foreach ($n as $value) {\n        if ($value % 2 != 0) {\n\
    \            $result *= $value;\n        }\n    }\n    return $result;\n}\necho\
    \ digits(1);\necho digits(4);\necho digits(235);\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1115\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppgo18czo.php:35\n\
    Stack trace:\n#0 /tmp/tmppgo18czo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmppgo18czo.php\
    \ on line 35\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n\t$n = str_split($n);\n\t$total\
    \ = 1;\n\tforeach ($n as $number) {\n\t\tif ($number % 2 == 1) {\n\t\t\t$total\
    \ *= $number;\n\t\t}\n\t}\n\treturn $total;\n}\necho digits(1);\necho \"\\n\"\
    ;\necho digits(4);\necho \"\\n\";\necho digits(235);\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3q1i8nce.php:38\n\
    Stack trace:\n#0 /tmp/tmp3q1i8nce.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp3q1i8nce.php\
    \ on line 38\n"
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odd_digits = array_filter($digits, function($digit) {\n        return $digit\
    \ % 2 != 0;\n    });\n    if (empty($odd_digits)) {\n        return 0;\n    }\n\
    \    return array_product($odd_digits);\n}\nfunction candidate(...$args) {\n \
    \   return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $product = 1;\n    foreach ($n as $num) {\n        if ($num % 2 != 0) {\n  \
    \          $product *= $num;\n        }\n    }\n    return $product;\n}\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo2gesek9.php:32\n\
    Stack trace:\n#0 /tmp/tmpo2gesek9.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpo2gesek9.php\
    \ on line 32\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $product = 1;\n    foreach ($digits as $digit) {\n        if ($digit % 2\
    \ != 0) {\n            $product *= $digit;\n        }\n    }\n    return $product;\n\
    }\necho digits(235);\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpg1kb_di0.php:33\n\
    Stack trace:\n#0 /tmp/tmpg1kb_di0.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpg1kb_di0.php\
    \ on line 33\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $product = 1;\n    foreach ($digits as $digit) {\n        if ($digit % 2\
    \ == 1) {\n            $product *= $digit;\n        }\n    }\n    return $product;\n\
    }\n\necho digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(235) .\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp490olbf7.php:36\n\
    Stack trace:\n#0 /tmp/tmp490olbf7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp490olbf7.php\
    \ on line 36\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $result = 1;\n    while ($n\
    \ > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 != 0) {\n        \
    \    $result *= $digit;\n        }\n        $n = floor($n / 10);\n    }\n    return\
    \ $result;\n}\necho digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(235)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6zk1twjc.php:36\n\
    Stack trace:\n#0 /tmp/tmp6zk1twjc.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp6zk1twjc.php\
    \ on line 36\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $product = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $digit) {\n        if ($digit % 2 !== 0) {\n            $product\
    \ *= $digit;\n        }\n    }\n    return $product;\n}\necho digits(1) . PHP_EOL;\n\
    echo digits(4) . PHP_EOL;\necho digits(235) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt3366tru.php:35\n\
    Stack trace:\n#0 /tmp/tmpt3366tru.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpt3366tru.php\
    \ on line 35\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $product = 1;\n    while\
    \ ($n > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 != 0) {\n    \
    \        $product *= $digit;\n        }\n        $n = (int)($n / 10);\n    }\n\
    \    return $product;\n}\n\necho digits(1) . \"\\n\";\necho digits(4) . \"\\n\"\
    ;\necho digits(235) . \"\\n\";\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4mv2ii0r.php:37\n\
    Stack trace:\n#0 /tmp/tmp4mv2ii0r.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp4mv2ii0r.php\
    \ on line 37\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $product = 1;\n    foreach ($n as $digit) {\n        if ($digit % 2 != 0) {\n\
    \            $product *= $digit;\n        }\n    }\n    if ($product == 1) {\n\
    \        return 0;\n    }\n    return $product;\n}\necho digits(1) . PHP_EOL;\n\
    echo digits(4) . PHP_EOL;\necho digits(235) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n0\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf8k7s7u6.php:34\n\
    Stack trace:\n#0 /tmp/tmpf8k7s7u6.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpf8k7s7u6.php\
    \ on line 34\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $product = 1;\n    while\
    \ ($n > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 != 0) {\n    \
    \        $product *= $digit;\n        }\n        $n = (int)($n / 10);\n    }\n\
    \    return $product;\n}\necho digits(1) . \"\\n\";\necho digits(4) . \"\\n\"\
    ;\necho digits(235) . \"\\n\";\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppu55pus8.php:36\n\
    Stack trace:\n#0 /tmp/tmppu55pus8.php(39): test()\n#1 {main}\n  thrown in /tmp/tmppu55pus8.php\
    \ on line 36\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $product = 1;\n    while\
    \ ($n > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 != 0) {\n    \
    \        $product *= $digit;\n        }\n        $n = (int)($n / 10);\n    }\n\
    \    return $product;\n}\n\necho digits(1) . \"\\n\";\necho digits(4) . \"\\n\"\
    ;\necho digits(235) . \"\\n\";\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4mv2ii0r.php:37\n\
    Stack trace:\n#0 /tmp/tmp4mv2ii0r.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp4mv2ii0r.php\
    \ on line 37\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $odd = 0;\n    $even = 0;\n\
    \    while ($n > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 == 0)\
    \ {\n            $even++;\n        } else {\n            $odd *= $digit;\n   \
    \     }\n        $n = (int)($n / 10);\n    }\n    if ($even == 0) {\n        return\
    \ $odd;\n    } else {\n        return 0;\n    }\n}\necho digits(1) . \"\\n\";\n\
    echo digits(4) . \"\\n\";\necho digits(235) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n0\n0\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb097ioq7.php:37\n\
    Stack trace:\n#0 /tmp/tmpb097ioq7.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpb097ioq7.php\
    \ on line 37\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $result = 1;\n    foreach ($n as $value) {\n        if ($value % 2 != 0) {\n\
    \            $result *= $value;\n        }\n    }\n    return $result;\n}\necho\
    \ digits(1);\necho digits(4);\necho digits(235);\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1115\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppgo18czo.php:35\n\
    Stack trace:\n#0 /tmp/tmppgo18czo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmppgo18czo.php\
    \ on line 35\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $result = 1;\n    foreach ($n as $value) {\n        if ($value % 2 != 0) {\n\
    \            $result *= $value;\n        }\n    }\n    return $result;\n}\necho\
    \ digits(1);\necho \"<br>\";\necho digits(4);\necho \"<br>\";\necho digits(235);\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1<br>1<br>15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposy4zwgz.php:37\n\
    Stack trace:\n#0 /tmp/tmposy4zwgz.php(40): test()\n#1 {main}\n  thrown in /tmp/tmposy4zwgz.php\
    \ on line 37\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $product = 1;\n    foreach ($n as $num) {\n        if ($num % 2 !== 0) {\n \
    \           $product *= $num;\n        }\n    }\n    return $product;\n}\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm20tz0sa.php:32\n\
    Stack trace:\n#0 /tmp/tmpm20tz0sa.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpm20tz0sa.php\
    \ on line 32\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $result = 1;\n    while ($n\
    \ > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 != 0) {\n        \
    \    $result *= $digit;\n        }\n        $n = (int)($n / 10);\n    }\n    return\
    \ $result;\n}\necho digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(235)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6ekauxnk.php:36\n\
    Stack trace:\n#0 /tmp/tmp6ekauxnk.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp6ekauxnk.php\
    \ on line 36\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $result = 1;\n    foreach ($n as $value) {\n        if ($value % 2 != 0) {\n\
    \            $result *= $value;\n        }\n    }\n    return $result;\n}\necho\
    \ digits(1);\necho digits(4);\necho digits(235);\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1115\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppgo18czo.php:35\n\
    Stack trace:\n#0 /tmp/tmppgo18czo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmppgo18czo.php\
    \ on line 35\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $result = 1;\n    foreach ($n as $value) {\n        if ($value % 2 != 0) {\n\
    \            $result *= $value;\n        }\n    }\n    return $result;\n}\necho\
    \ digits(235);\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpolabo11v.php:33\n\
    Stack trace:\n#0 /tmp/tmpolabo11v.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpolabo11v.php\
    \ on line 33\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $product = 1;\n    foreach ($n as $digit) {\n        if ($digit % 2 != 0) {\n\
    \            $product *= $digit;\n        }\n    }\n    if ($product == 1) {\n\
    \        return 0;\n    }\n    return $product;\n}\necho digits(1);\necho \"\\\
    n\";\necho digits(4);\necho \"\\n\";\necho digits(235);\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n0\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1slw7091.php:37\n\
    Stack trace:\n#0 /tmp/tmp1slw7091.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp1slw7091.php\
    \ on line 37\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $result = 1;\n    foreach ($n as $value) {\n        if ($value % 2 != 0) {\n\
    \            $result *= $value;\n        }\n    }\n    return $result;\n}\necho\
    \ digits(1);\necho \"<br>\";\necho digits(4);\necho \"<br>\";\necho digits(235);\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1<br>1<br>15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposy4zwgz.php:37\n\
    Stack trace:\n#0 /tmp/tmposy4zwgz.php(40): test()\n#1 {main}\n  thrown in /tmp/tmposy4zwgz.php\
    \ on line 37\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $product = 1;\n    while\
    \ ($n > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 != 0) {\n    \
    \        $product *= $digit;\n        }\n        $n = (int)($n / 10);\n    }\n\
    \    return $product;\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplsah4evl.php:33\n\
    Stack trace:\n#0 /tmp/tmplsah4evl.php(36): test()\n#1 {main}\n  thrown in /tmp/tmplsah4evl.php\
    \ on line 33\n"
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odd_digits = array_filter($digits, function($digit) {\n        return $digit\
    \ % 2 == 1;\n    });\n    if (count($odd_digits) == 0) {\n        return 0;\n\
    \    }\n    return array_product($odd_digits);\n}\n\n/* Given a positive integer\
    \ n, return the sum of the digits.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    4\n>>> digits(235)\n10*/\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $result = 1;\n    while ($n\
    \ > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 != 0) {\n        \
    \    $result *= $digit;\n        }\n        $n = (int)($n / 10);\n    }\n    return\
    \ $result;\n}\necho digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(235)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6ekauxnk.php:36\n\
    Stack trace:\n#0 /tmp/tmp6ekauxnk.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp6ekauxnk.php\
    \ on line 36\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $arr = str_split($n);\n \
    \   $product = 1;\n    foreach ($arr as $number) {\n        if ($number % 2 !=\
    \ 0) {\n            $product *= $number;\n        }\n    }\n    if ($product ==\
    \ 1) {\n        return 0;\n    }\n    return $product;\n}\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp7vm4a6o.php:31\n\
    Stack trace:\n#0 /tmp/tmpp7vm4a6o.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpp7vm4a6o.php\
    \ on line 31\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n  $odds = 1;\n  $n = (string)$n;\n\
    \  for ($i = 0; $i < strlen($n); $i++) {\n    if ($n[$i] % 2 != 0) {\n      $odds\
    \ *= $n[$i];\n    }\n  }\n  return $odds;\n}\necho digits(1) . PHP_EOL;\necho\
    \ digits(4) . PHP_EOL;\necho digits(235) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeh9lj73r.php:35\n\
    Stack trace:\n#0 /tmp/tmpeh9lj73r.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpeh9lj73r.php\
    \ on line 35\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $sum = 1;\n    $n = (string)$n;\n\
    \    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 != 0) {\n \
    \           $sum *= $n[$i];\n        }\n    }\n    return $sum;\n}\necho digits(1);\n\
    echo digits(4);\necho digits(235);\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1115\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpde02tk_h.php:35\n\
    Stack trace:\n#0 /tmp/tmpde02tk_h.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpde02tk_h.php\
    \ on line 35\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n  $result = 1;\n  $n = (string)$n;\n\
    \  for ($i = 0; $i < strlen($n); $i++) {\n    if ($n[$i] % 2 != 0) {\n      $result\
    \ *= $n[$i];\n    }\n  }\n  return $result;\n}\nfunction candidate(...$args) {\n\
    \    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8rdi4wle.php:32\n\
    Stack trace:\n#0 /tmp/tmp8rdi4wle.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp8rdi4wle.php\
    \ on line 32\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $result = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $digit) {\n        if ($digit % 2 != 0) {\n            $result\
    \ *= $digit;\n        }\n    }\n    return $result;\n}\n\n/* Given a positive\
    \ integer n, return the product of the odd digits.\nReturn 0 if all digits are\
    \ even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n0\n>>> digits(235)\n15*/\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjpokch20.php:42\n\
    Stack trace:\n#0 /tmp/tmpjpokch20.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpjpokch20.php\
    \ on line 42\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $result = 1;\n    foreach ($n as $value) {\n        if ($value % 2 != 0) {\n\
    \            $result *= $value;\n        }\n    }\n    return $result;\n}\necho\
    \ digits(1);\necho digits(4);\necho digits(235);\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1115\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppgo18czo.php:35\n\
    Stack trace:\n#0 /tmp/tmppgo18czo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmppgo18czo.php\
    \ on line 35\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odd_digits = [];\n    foreach ($digits as $digit) {\n        if ($digit\
    \ % 2 != 0) {\n            $odd_digits[] = $digit;\n        }\n    }\n    if (empty($odd_digits))\
    \ {\n        return 0;\n    }\n    return array_product($odd_digits);\n}\n\n/*\
    \ Given a positive integer n, return the sum of the digits.\nFor example:\n>>>\
    \ digits(1)\n1\n>>> digits(4)\n4\n>>> digits(235)\n10*/\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $result = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $digit) {\n        if ($digit % 2 != 0) {\n            $result\
    \ *= $digit;\n        }\n    }\n    return $result;\n}\n\n/* Given a positive\
    \ integer n, return the product of the odd digits.\nReturn 0 if all digits are\
    \ even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n0\n>>> digits(235)\n15*/\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjpokch20.php:42\n\
    Stack trace:\n#0 /tmp/tmpjpokch20.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpjpokch20.php\
    \ on line 42\n"
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odd_digits = array_filter($digits, function($digit) {\n        return $digit\
    \ % 2;\n    });\n    if (count($odd_digits) == 0) {\n        return 0;\n    }\n\
    \    return array_product($odd_digits);\n}\nfunction candidate(...$args) {\n \
    \   return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n\t$n = str_split($n);\n\t$product\
    \ = 1;\n\tforeach ($n as $key => $value) {\n\t\tif ($value % 2 != 0) {\n\t\t\t\
    $product *= $value;\n\t\t}\n\t}\n\tif ($product == 1) {\n\t\treturn 0;\n\t}\n\t\
    return $product;\n}\necho digits(1);\necho \"<br>\";\necho digits(4);\necho \"\
    <br>\";\necho digits(235);\necho \"<br>\";\necho digits(123456789);\necho \"<br>\"\
    ;\necho digits(1234567890123456789);\necho \"<br>\";\necho digits(12345678901234567890123456789);\n\
    echo \"<br>\";\necho digits(123456789012345678901234567890123456789);\necho \"\
    <br>\";\necho digits(1234567890123456789012345678901234567890123456789);\necho\
    \ \"<br>\";\necho digits(12345678901234567890123456789012345678901234567890123456789);\n\
    echo \"<br>\";\necho digits(123456789012345678901234567890123456789012345678901234567890123456789);\n\
    echo \"<br>\";\necho digits(1234567890123456789012345678901234567890123456789012345678901234567890123456789);\n\
    echo \"<br>\";\necho digits(12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789);\n\
    echo \"<br>\";\necho digits(123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789);\n\
    echo \"<br>\";\necho digits(1234567890123456789\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmp97aay6b9.php
    on line 51

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n  $result = 1;\n  $n = str_split($n);\n\
    \  foreach ($n as $value) {\n    if ($value % 2 != 0) {\n      $result *= $value;\n\
    \    }\n  }\n  if ($result == 1) {\n    return 0;\n  }\n  return $result;\n}\n\
    echo digits(1) . PHP_EOL;\necho digits(4) . PHP_EOL;\necho digits(235) . PHP_EOL;\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n0\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb9fpj_v7.php:34\n\
    Stack trace:\n#0 /tmp/tmpb9fpj_v7.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpb9fpj_v7.php\
    \ on line 34\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $result = 1;\n    $n = (string)$n;\n\
    \    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 != 0) {\n \
    \           $result *= $n[$i];\n        }\n    }\n    return $result;\n}\necho\
    \ digits(1);\necho digits(4);\necho digits(235);\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1115\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo8q5hhm4.php:35\n\
    Stack trace:\n#0 /tmp/tmpo8q5hhm4.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpo8q5hhm4.php\
    \ on line 35\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $product = 1;\n    foreach ($n as $num) {\n        if ($num % 2 !== 0) {\n \
    \           $product *= $num;\n        }\n    }\n    return $product;\n}\n\n/*\
    \ Given a positive integer n, return the product of the odd digits.\nReturn 0\
    \ if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n0\n\
    >>> digits(235)\n15*/\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_w_hah7.php:42\n\
    Stack trace:\n#0 /tmp/tmpu_w_hah7.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpu_w_hah7.php\
    \ on line 42\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $result = 1;\n    while ($n\
    \ > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 != 0) {\n        \
    \    $result *= $digit;\n        }\n        $n = (int)($n / 10);\n    }\n    return\
    \ $result;\n}\necho digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(235)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6ekauxnk.php:36\n\
    Stack trace:\n#0 /tmp/tmp6ekauxnk.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp6ekauxnk.php\
    \ on line 36\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $odds = 1;\n    $str = strval($n);\n\
    \    for ($i = 0; $i < strlen($str); $i++) {\n        if ($str[$i] % 2 != 0) {\n\
    \            $odds *= $str[$i];\n        }\n    }\n    return $odds;\n}\necho\
    \ digits(1);\necho \"\\n\";\necho digits(4);\necho \"\\n\";\necho digits(235);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiu6bjtnj.php:38\n\
    Stack trace:\n#0 /tmp/tmpiu6bjtnj.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpiu6bjtnj.php\
    \ on line 38\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $result = 1;\n    foreach ($n as $value) {\n        if ($value % 2 != 0) {\n\
    \            $result *= $value;\n        }\n    }\n    return $result;\n}\necho\
    \ digits(1);\necho digits(4);\necho digits(235);\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1115\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppgo18czo.php:35\n\
    Stack trace:\n#0 /tmp/tmppgo18czo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmppgo18czo.php\
    \ on line 35\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $sum = 1;\n    foreach ($n as $value) {\n        if ($value % 2 != 0) {\n  \
    \          $sum *= $value;\n        }\n    }\n    return $sum;\n}\necho digits(235);\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpytcjp_b2.php:33\n\
    Stack trace:\n#0 /tmp/tmpytcjp_b2.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpytcjp_b2.php\
    \ on line 33\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $result = 1;\n    foreach ($n as $digit) {\n        if ($digit % 2 !== 0) {\n\
    \            $result *= $digit;\n        }\n    }\n    return $result;\n}\necho\
    \ digits(1);\necho digits(4);\necho digits(235);\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1115\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmvs1dbwo.php:35\n\
    Stack trace:\n#0 /tmp/tmpmvs1dbwo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpmvs1dbwo.php\
    \ on line 35\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $product = 1;\n    foreach ($n as $digit) {\n        if ($digit % 2 != 0) {\n\
    \            $product *= $digit;\n        }\n    }\n    if ($product == 1) {\n\
    \        return 0;\n    }\n    return $product;\n}\n\n/* Given a positive integer\
    \ n, return the sum of the first n positive integers.\nFor example:\n>>> sum_n(1)\n\
    1\n>>> sum_n(4)\n10\n>>> sum_n(10)\n55*/\nfunction candidate(...$args) {\n   \
    \ return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoob0kxul.php:40\n\
    Stack trace:\n#0 /tmp/tmpoob0kxul.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpoob0kxul.php\
    \ on line 40\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $product = 1;\n    while\
    \ ($n > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 == 1) {\n    \
    \        $product *= $digit;\n        }\n        $n = (int)($n / 10);\n    }\n\
    \    return $product;\n}\necho digits(1) . \"\\n\";\necho digits(4) . \"\\n\"\
    ;\necho digits(235) . \"\\n\";\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqst4_tfq.php:36\n\
    Stack trace:\n#0 /tmp/tmpqst4_tfq.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpqst4_tfq.php\
    \ on line 36\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $result = 1;\n    while ($n\
    \ > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 != 0) {\n        \
    \    $result *= $digit;\n        }\n        $n = (int)($n / 10);\n    }\n    return\
    \ $result;\n}\n\n/* Given a positive integer n, return the product of the odd\
    \ digits.\nReturn 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n\
    >>> digits(4)\n0\n>>> digits(235)\n15*/\nfunction candidate(...$args) {\n    return\
    \ digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !== 5) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(98765) !== 315) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp52turzar.php:43\n\
    Stack trace:\n#0 /tmp/tmp52turzar.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp52turzar.php\
    \ on line 43\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $product = 1;\n    foreach ($n as $digit) {\n        if ($digit % 2 != 0) {\n\
    \            $product *= $digit;\n        }\n    }\n    if ($product == 1) {\n\
    \        return 0;\n    }\n    return $product;\n}\n\necho digits(1) . PHP_EOL;\n\
    echo digits(4) . PHP_EOL;\necho digits(235) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n0\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptvu8hhl9.php:35\n\
    Stack trace:\n#0 /tmp/tmptvu8hhl9.php(42): test()\n#1 {main}\n  thrown in /tmp/tmptvu8hhl9.php\
    \ on line 35\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n  $n = str_split($n);\n  $result\
    \ = 1;\n  foreach ($n as $number) {\n    if ($number % 2 != 0) {\n      $result\
    \ *= $number;\n    }\n  }\n  return $result;\n}\necho digits(1) . PHP_EOL;\necho\
    \ digits(4) . PHP_EOL;\necho digits(235) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5aanut3u.php:35\n\
    Stack trace:\n#0 /tmp/tmp5aanut3u.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp5aanut3u.php\
    \ on line 35\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $sum = 1;\n    $n = (string)$n;\n\
    \    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 != 0) {\n \
    \           $sum *= $n[$i];\n        }\n    }\n    return $sum;\n}\necho digits(1)\
    \ . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(235) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4qnp3o0y.php:35\n\
    Stack trace:\n#0 /tmp/tmp4qnp3o0y.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4qnp3o0y.php\
    \ on line 35\n"
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $odd_digits = array();\n\
    \    $n_string = strval($n);\n    $n_array = str_split($n_string);\n    foreach\
    \ ($n_array as $digit) {\n        if ($digit % 2 != 0) {\n            array_push($odd_digits,\
    \ $digit);\n        }\n    }\n    if (count($odd_digits) == 0) {\n        return\
    \ 0;\n    } else {\n        $product = 1;\n        foreach ($odd_digits as $odd_digit)\
    \ {\n            $product *= $odd_digit;\n        }\n        return $product;\n\
    \    }\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $product = 1;\n    foreach ($n as $digit) {\n        if ($digit % 2 == 1) {\n\
    \            $product *= $digit;\n        }\n    }\n    return $product;\n}\n\
    echo digits(1);\necho digits(4);\necho digits(235);\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1115\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbx_7at5z.php:35\n\
    Stack trace:\n#0 /tmp/tmpbx_7at5z.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpbx_7at5z.php\
    \ on line 35\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $sum = 1;\n    while ($n\
    \ > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 != 0) {\n        \
    \    $sum *= $digit;\n        }\n        $n = floor($n / 10);\n    }\n    return\
    \ $sum;\n}\necho digits(235);\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqp9nop2f.php:34\n\
    Stack trace:\n#0 /tmp/tmpqp9nop2f.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpqp9nop2f.php\
    \ on line 34\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $product = 1;\n    foreach ($n as $number) {\n        if ($number % 2 != 0)\
    \ {\n            $product *= $number;\n        }\n    }\n    if ($product == 1)\
    \ {\n        return 0;\n    }\n    return $product;\n}\n\necho digits(1) . PHP_EOL;\n\
    echo digits(4) . PHP_EOL;\necho digits(235) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n0\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxoi803nb.php:35\n\
    Stack trace:\n#0 /tmp/tmpxoi803nb.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpxoi803nb.php\
    \ on line 35\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n\t$n = str_split($n);\n\t$product\
    \ = 1;\n\tforeach ($n as $digit) {\n\t\tif ($digit % 2 == 1) {\n\t\t\t$product\
    \ *= $digit;\n\t\t}\n\t}\n\treturn $product;\n}\necho digits(1) . PHP_EOL;\necho\
    \ digits(4) . PHP_EOL;\necho digits(235) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpamc9l8u4.php:35\n\
    Stack trace:\n#0 /tmp/tmpamc9l8u4.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpamc9l8u4.php\
    \ on line 35\n"
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odds = array_filter($digits, function($digit) {\n        return $digit %\
    \ 2 !== 0;\n    });\n    if (count($odds) === 0) {\n        return 0;\n    }\n\
    \    return array_product($odds);\n}\n\n/* Given a string, return the first character\
    \ that does not repeat.\nFor example:\n>>> first_non_repeating_letter('a')\n'a'\n\
    >>> first_non_repeating_letter('stress')\n't'\n>>> first_non_repeating_letter('moonmen')\n\
    'e'*/\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $result = 1;\n    foreach ($n as $value) {\n        if ($value % 2 != 0) {\n\
    \            $result *= $value;\n        }\n    }\n    return $result;\n}\necho\
    \ digits(1) . \"\\n\";\necho digits(4) . \"\\n\";\necho digits(235) . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3qch9fsi.php:35\n\
    Stack trace:\n#0 /tmp/tmp3qch9fsi.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp3qch9fsi.php\
    \ on line 35\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $result = 1;\n    foreach ($n as $digit) {\n        if ($digit % 2 != 0) {\n\
    \            $result *= $digit;\n        }\n    }\n    return $result;\n}\n\n\
    /* Given a positive integer n, return the sum of the first n odd digits.\nReturn\
    \ 0 if n is 0.\nFor example:\n>>> first_odds(1)\n1\n>>> first_odds(4)\n10\n>>>\
    \ first_odds(235)\n15*/\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6juen3qz.php:42\n\
    Stack trace:\n#0 /tmp/tmp6juen3qz.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp6juen3qz.php\
    \ on line 42\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $product = 1;\n    foreach ($n as $digit) {\n        if ($digit % 2 != 0) {\n\
    \            $product *= $digit;\n        }\n    }\n    if ($product == 1) {\n\
    \        return 0;\n    }\n    return $product;\n}\necho digits(1) . PHP_EOL;\n\
    echo digits(4) . PHP_EOL;\necho digits(235) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0\n0\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf8k7s7u6.php:34\n\
    Stack trace:\n#0 /tmp/tmpf8k7s7u6.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpf8k7s7u6.php\
    \ on line 34\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n  $digits = str_split($n);\n\
    \  $odd_digits = array_filter($digits, function($digit) {\n    return $digit %\
    \ 2 == 1;\n  });\n  if (empty($odd_digits)) {\n    return 0;\n  }\n  return array_product($odd_digits);\n\
    }\n\n/* Given a string, return the first character that is unique.\nFor example:\n\
    >>> unique(\"aabbccddeefghi\")\n\"e\"\n>>> unique(\"hello\")\n\"h\"\n>>> unique(\"\
    this is a test\")\n\"s\"*/\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $sum = 1;\n    foreach ($n as $value) {\n        if ($value % 2 != 0) {\n  \
    \          $sum *= $value;\n        }\n    }\n    if ($sum == 1) {\n        return\
    \ 0;\n    }\n    return $sum;\n}\n\n/* Given a positive integer n, return the\
    \ sum of the first n odd numbers.\nFor example:\n>>> sum_odds(1)\n1\n>>> sum_odds(2)\n\
    4\n>>> sum_odds(3)\n9*/\nfunction candidate(...$args) {\n    return digits(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm0ojardo.php:40\n\
    Stack trace:\n#0 /tmp/tmpm0ojardo.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpm0ojardo.php\
    \ on line 40\n"
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $digits = str_split($n);\n\
    \    $odd_digits = array_filter($digits, function($digit) {\n        return $digit\
    \ % 2 !== 0;\n    });\n    if (empty($odd_digits)) {\n        return 0;\n    }\n\
    \    return array_product($odd_digits);\n}\n\n/* Given a string, return a new\
    \ string that has the same characters in the\nsame order, but with a dash between\
    \ each pair of consecutive characters.\nFor example:\n>>> dasherize('12345')\n\
    '1-2-3-4-5'\n>>> dasherize('1234')\n'1-2-3-4'\n>>> dasherize('123')\n'1-2-3'\n\
    >>> dasherize('12')\n'1-2'\n>>> dasherize('1')\n'1'\n>>> dasherize('')\n''*/\n\
    function candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $result = 1;\n    $n = (string)$n;\n\
    \    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 != 0) {\n \
    \           $result *= $n[$i];\n        }\n    }\n    return $result;\n}\necho\
    \ digits(1);\necho digits(4);\necho digits(235);\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1115\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpo8q5hhm4.php:35\n\
    Stack trace:\n#0 /tmp/tmpo8q5hhm4.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpo8q5hhm4.php\
    \ on line 35\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n\t$digits = str_split($n);\n\t\
    $odd_digits = array_filter($digits, function($digit) {\n\t\treturn $digit % 2\
    \ == 1;\n\t});\n\treturn array_product($odd_digits);\n}\n\necho digits(1) . PHP_EOL;\n\
    echo digits(4) . PHP_EOL;\necho digits(235) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv6midscp.php:33\n\
    Stack trace:\n#0 /tmp/tmpv6midscp.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpv6midscp.php\
    \ on line 33\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $sum = 1;\n    $n = str_split($n);\n\
    \    foreach ($n as $num) {\n        if ($num % 2 != 0) {\n            $sum *=\
    \ $num;\n        }\n    }\n    return $sum;\n}\necho digits(235);\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "15\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj_c4iafz.php:33\n\
    Stack trace:\n#0 /tmp/tmpj_c4iafz.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpj_c4iafz.php\
    \ on line 33\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $odd = 1;\n    while ($n\
    \ > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 == 1) {\n        \
    \    $odd *= $digit;\n        }\n        $n = (int)($n / 10);\n    }\n    return\
    \ $odd;\n}\nfunction candidate(...$args) {\n    return digits(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(54) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5014) !== 5) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(98765) !== 315) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(5576543) !== 2625) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2468) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbzu2eovm.php:33\n\
    Stack trace:\n#0 /tmp/tmpbzu2eovm.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpbzu2eovm.php\
    \ on line 33\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n  $n = str_split($n);\n  $product\
    \ = 1;\n  foreach ($n as $digit) {\n    if ($digit % 2 != 0) {\n      $product\
    \ *= $digit;\n    }\n  }\n  return $product;\n}\necho digits(1) . PHP_EOL;\necho\
    \ digits(4) . PHP_EOL;\necho digits(235) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw8y5an95.php:35\n\
    Stack trace:\n#0 /tmp/tmpw8y5an95.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpw8y5an95.php\
    \ on line 35\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $n = str_split($n);\n   \
    \ $odd = 1;\n    foreach ($n as $digit) {\n        if ($digit % 2 != 0) {\n  \
    \          $odd *= $digit;\n        }\n    }\n    return $odd;\n}\n\necho digits(1)\
    \ . PHP_EOL;\necho digits(4) . PHP_EOL;\necho digits(235) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjx4aer06.php:36\n\
    Stack trace:\n#0 /tmp/tmpjx4aer06.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpjx4aer06.php\
    \ on line 36\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n\t$n = str_split($n);\n\t$result\
    \ = 1;\n\tforeach ($n as $value) {\n\t\tif ($value % 2 != 0) {\n\t\t\t$result\
    \ *= $value;\n\t\t}\n\t}\n\treturn $result;\n}\necho digits(1);\necho \"\\n\"\
    ;\necho digits(4);\necho \"\\n\";\necho digits(235);\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return digits(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(5) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(54) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(120) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5014) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(98765)\
    \ !== 315) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543)\
    \ !== 2625) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n15\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvrnzie4h.php:38\n\
    Stack trace:\n#0 /tmp/tmpvrnzie4h.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpvrnzie4h.php\
    \ on line 38\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* Given a positive integer n, return the product of the odd digits.\n\
    Return 0 if all digits are even.\nFor example:\n>>> digits(1)\n1\n>>> digits(4)\n\
    0\n>>> digits(235)\n15*/\nfunction digits($n) {\n    $sum = 1;\n    while ($n\
    \ > 0) {\n        $digit = $n % 10;\n        if ($digit % 2 != 0) {\n        \
    \    $sum *= $digit;\n        }\n        $n = (int)($n / 10);\n    }\n    return\
    \ $sum;\n}\necho digits(1);\necho digits(4);\necho digits(235);\nfunction candidate(...$args)\
    \ {\n    return digits(...$args);\n}\n\nfunction test(): void {\n    if (candidate(5)\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(54) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(120) !== 1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5014) !== 5) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(98765) !== 315)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5576543) !== 2625)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2468) !== 0) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1115\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw7ps_2jt.php:36\n\
    Stack trace:\n#0 /tmp/tmpw7ps_2jt.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpw7ps_2jt.php\
    \ on line 36\n"
  timestamp: 1660220656

name: HumanEval_117_select_words
language: php
prompt: "<?php\n/* Given a string s and a natural number n, you have been tasked to\
  \ implement \na function that returns an array of all words from string s that contain\
  \ exactly \nn consonants, in order these words appear in the string s.\nIf the string\
  \ s is empty then the function should return an empty array.\nNote: you may assume\
  \ the input string contains only letters and spaces.\nExamples:\n>>> select_words(\"\
  Mary had a little lamb\", 4)\narray(\"little\")\n>>> select_words(\"Mary had a little\
  \ lamb\", 3)\narray(\"Mary\", \"lamb\")\n>>> select_words(\"simple white space\"\
  , 2)\narray()\n>>> select_words(\"Hello world\", 4)\narray(\"world\")\n>>> select_words(\"\
  Uncle sam\", 3)\narray(\"Uncle\")*/\nfunction select_words($s, $n) {\n"
tests: "function candidate(...$args) {\n    return select_words(...$args);\n}\n\n\
  function test(): void {\n    if (candidate(\"Mary had a little lamb\", 4) !== array(\"\
  little\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Mary\
  \ had a little lamb\", 3) !== array(\"Mary\", \"lamb\")) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"simple white space\", 2) !== array()) {\
  \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world\", 4)\
  \ !== array(\"world\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
  Uncle sam\", 3) !== array(\"Uncle\")) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(\"\", 4) !== array()) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(\"a b c d e f\", 1) !== array(\"b\", \"c\", \"d\", \"f\"\
  )) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $words = explode(' ', $s);\n    $result = [];\n    foreach ($words\
    \ as $word) {\n        if (preg_match_all('/[^aeiou]/i', $word, $matches) == $n)\
    \ {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\
    \n/*", "    $words = explode(' ', $s);\n    $result = [];\n    foreach ($words\
    \ as $word) {\n        if (substr_count($word, 'a') + substr_count($word, 'e')\
    \ + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}", "    $s = explode(' ', $s);\n    $result = [];\n    foreach ($s\
    \ as $word) {\n        if (substr_count($word, 'a') + substr_count($word, 'e')\
    \ + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* Given a string s and a natural number n, you have been tasked\
    \ to implement \na function that returns an array of all words from string s that\
    \ contain exactly \nn consonants, in order these words appear in the string s.\n\
    If the string s is empty then the function should return an empty array.\nNote:\
    \ you may assume the input string contains only letters and spaces.\nExamples:\n\
    >>> select_words(\"Mary had a little lamb\", 4)\narray(\"little\")\n>>> select_words(\"\
    Mary had a little lamb\", 3)\narray(\"Mary\", \"lamb\")\n>>> select_words(\"simple\
    \ white space\", 2)\narray()\n>>> select_words(\"Hello world\", 4)\narray(\"world\"\
    )\n>>> select_words(\"Uncle sam\", 3)\narray(\"Uncle\")*/", "\t$s = explode('\
    \ ', $s);\n\t$result = [];\n\tforeach ($s as $word) {\n\t\tif (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n\t\t\t$result[] = $word;\n\t\t}\n\t\
    }\n\treturn $result;\n}\n\nprint_r(select_words(\"Mary had a little lamb\", 4));\n\
    print_r(select_words(\"Mary had a little lamb\", 3));\nprint_r(select_words(\"\
    simple white space\", 2));\nprint_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"\
    Uncle sam\", 3));", "    $words = explode(' ', $s);\n    $result = [];\n    foreach\
    \ ($words as $word) {\n        if (substr_count($word, 'a') + substr_count($word,\
    \ 'e') + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\n/*", "    $words = explode(' ', $s);\n    $result = [];\n   \
    \ foreach ($words as $word) {\n        if (substr_count($word, 'a') + substr_count($word,\
    \ 'e') + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "    $arr = explode(\" \", $s);\n    $result = [];\n    foreach ($arr\
    \ as $value) {\n        if (substr_count($value, \"a\") + substr_count($value,\
    \ \"e\") + substr_count($value, \"i\") + substr_count($value, \"o\") + substr_count($value,\
    \ \"u\") == $n) {\n            $result[] = $value;\n        }\n    }\n    return\
    \ $result;\n}\n\nprint_r(select_words(\"Mary had a little lamb\", 4));\necho \"\
    <br>\";\nprint_r(select_words(\"Mary had a little lamb\", 3));\necho \"<br>\"\
    ;\nprint_r(select_words(\"simple white space\", 2));\necho \"<br>\";\nprint_r(select_words(\"\
    Hello world\", 4));\necho \"<br>\";\nprint_r(select_words(\"Uncle sam\", 3));\n\
    echo \"<br>\";", "    $s = explode(' ', $s);\n    $result = [];\n    foreach ($s\
    \ as $word) {\n        if (substr_count($word, 'a') + substr_count($word, 'e')\
    \ + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\n/*\n * Test code\n */\n$tests = [\n    [\n        'input' =>\
    \ ['Mary had a little lamb', 4],\n        'expected' => ['little']\n    ],\n \
    \   [\n        'input' => ['Mary had a little lamb', 3],\n        'expected' =>\
    \ ['Mary', 'lamb']\n    ],\n    [\n        'input' => ['simple white space', 2],\n\
    \        'expected' => []\n    ],\n    [\n        'input' => ['Hello world', 4],\n\
    \        'expected' => ['world']\n    ],\n    [\n        'input' => ['Uncle sam',\
    \ 3],\n        'expected' => ['Uncle']\n    ],\n];\n\n$success = true;\nforeach\
    \ ($tests as $test) {\n    $result = select_words($test['input'][0], $test['input'][1]);\n\
    \    if ($result != $test['expected']) {\n        $success = false;\n        echo\
    \ \"Test with input {$test['input'][0]} and {$test['input'][1]} failed.\\n\";\n\
    \        echo \"Got: \" . var_export($result, true) . \"\\n\";\n        echo \"\
    Expected: \" . var_export($test['expected'], true) . \"\\n\";\n    }\n}\nif ($success)\
    \ {\n    echo \"Tests complete.\\n\";\n}", "\t$arr = explode(\" \", $s);\n\t$result\
    \ = [];\n\tforeach ($arr as $word) {\n\t\tif (substr_count($word, \"a\") + substr_count($word,\
    \ \"e\") + substr_count($word, \"i\") + substr_count($word, \"o\") + substr_count($word,\
    \ \"u\") == $n) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\
    print_r(select_words(\"Mary had a little lamb\", 4));", "\t$arr = explode(\" \"\
    , $s);\n\t$res = [];\n\tforeach ($arr as $word) {\n\t\tif (consonants($word) ==\
    \ $n) {\n\t\t\t$res[] = $word;\n\t\t}\n\t}\n\treturn $res;\n}", "  $words = explode('\
    \ ', $s);\n  $result = [];\n  foreach ($words as $word) {\n    if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n      $result[] = $word;\n    }\n\
    \  }\n  return $result;\n}\n\nprint_r(select_words(\"Mary had a little lamb\"\
    , 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\nprint_r(select_words(\"\
    simple white space\", 2));\nprint_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"\
    Uncle sam\", 3));", "    $words = explode(' ', $s);\n    $result = [];\n    foreach\
    \ ($words as $word) {\n        if (substr_count($word, 'a') + substr_count($word,\
    \ 'e') + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "    $words = explode(' ', $s);\n    $result = [];\n    foreach ($words\
    \ as $word) {\n        if (substr_count($word, 'a') + substr_count($word, 'e')\
    \ + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "    $arr = explode(\" \", $s);\n    $result = [];\n    foreach ($arr\
    \ as $word) {\n        if (substr_count($word, \"a\") + substr_count($word, \"\
    e\") + substr_count($word, \"i\") + substr_count($word, \"o\") + substr_count($word,\
    \ \"u\") == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "    $s = preg_replace('/[^a-zA-Z ]/', '', $s);\n    $s = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($s as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') + substr_count($word, 'y') == $n) {\n      \
    \      $result[] = $word;\n        }\n    }\n    return $result;\n}", "    $words\
    \ = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n  \
    \      if (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n      \
    \      $result[] = $word;\n        }\n    }\n    return $result;\n}\n\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "\t$arr = explode(\"\
    \ \", $s);\n\t$result = [];\n\tforeach ($arr as $word) {\n\t\tif (substr_count($word,\
    \ \"a\") + substr_count($word, \"e\") + substr_count($word, \"i\") + substr_count($word,\
    \ \"o\") + substr_count($word, \"u\") == $n) {\n\t\t\t$result[] = $word;\n\t\t\
    }\n\t}\n\treturn $result;\n}\nprint_r(select_words(\"Mary had a little lamb\"\
    , 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\nprint_r(select_words(\"\
    simple white space\", 2));\nprint_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"\
    Uncle sam\", 3));", "    $result = [];\n    $words = explode(' ', $s);\n    foreach\
    \ ($words as $word) {\n        if (substr_count($word, 'a') + substr_count($word,\
    \ 'e') + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "    $words = explode(' ', $s);\n    $result = [];\n    foreach ($words\
    \ as $word) {\n        if (substr_count($word, 'a') + substr_count($word, 'e')\
    \ + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "    $words = explode(' ', $s);\n    $result = [];\n    foreach ($words\
    \ as $word) {\n        if (substr_count($word, 'a') + substr_count($word, 'e')\
    \ + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\necho '<pre>';\nprint_r(select_words(\"Mary had a little lamb\"\
    , 4));\necho '</pre>';\necho '<pre>';\nprint_r(select_words(\"Mary had a little\
    \ lamb\", 3));\necho '</pre>';\necho '<pre>';\nprint_r(select_words(\"simple white\
    \ space\", 2));\necho '</pre>';\necho '<pre>';\nprint_r(select_words(\"Hello world\"\
    , 4));\necho '</pre>';\necho '<pre>';\nprint_r(select_words(\"Uncle sam\", 3));\n\
    echo '</pre>';", "    $result = [];\n    $words = explode(' ', $s);\n    foreach\
    \ ($words as $word) {\n        if (substr_count($word, 'a') + substr_count($word,\
    \ 'e') + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "    $words = explode(' ', $s);\n    $result = [];\n    foreach ($words\
    \ as $word) {\n        if (substr_count($word, 'a') + substr_count($word, 'e')\
    \ + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "\t$words = explode(\" \", $s);\n\t$result = [];\n\tforeach ($words as\
    \ $word) {\n\t\tif (countConsonants($word) == $n) {\n\t\t\t$result[] = $word;\n\
    \t\t}\n\t}\n\treturn $result;\n}\n", "    $words = explode(' ', $s);\n    $result\
    \ = [];\n    foreach ($words as $word) {\n        if (consonants_count($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n", "\t$arr = explode(\" \", $s);\n\t$result = [];\n\tforeach ($arr as $word)\
    \ {\n\t\tif (substr_count($word, \"a\") + substr_count($word, \"e\") + substr_count($word,\
    \ \"i\") + substr_count($word, \"o\") + substr_count($word, \"u\") == $n) {\n\t\
    \t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}", "    $arr = explode(\"\
    \ \", $s);\n    $result = [];\n    foreach ($arr as $word) {\n        if (substr_count($word,\
    \ \"a\") + substr_count($word, \"e\") + substr_count($word, \"i\") + substr_count($word,\
    \ \"o\") + substr_count($word, \"u\") == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\nprint_r(select_words(\"Mary had a little\
    \ lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\nprint_r(select_words(\"\
    simple white space\", 2));\nprint_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"\
    Uncle sam\", 3));", "\t$s = explode(' ', $s);\n\t$result = [];\n\tforeach ($s\
    \ as $word) {\n\t\tif (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n\t\t\t\
    $result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "  $consonants\
    \ = array(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\"\
    , \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    );\n  $words = explode(\" \", $s);\n  $result = array();\n  foreach ($words as\
    \ $word) {\n    $count = 0;\n    for ($i = 0; $i < strlen($word); $i++) {\n  \
    \    if (in_array(strtolower($word[$i]), $consonants)) {\n        $count++;\n\
    \      }\n    }\n    if ($count == $n) {\n      array_push($result, $word);\n\
    \    }\n  }\n  return $result;\n}", "\t$words = explode(\" \", $s);\n\t$result\
    \ = [];\n\tforeach ($words as $word) {\n\t\tif (substr_count($word, \"a\") + substr_count($word,\
    \ \"e\") + substr_count($word, \"i\") + substr_count($word, \"o\") + substr_count($word,\
    \ \"u\") == $n) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\
    print_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "\t$s = str_replace(' ', '', $s);\n\t$s = str_split($s);\n\t$vowels =\
    \ array('a', 'e', 'i', 'o', 'u');\n\t$consonants = array();\n\tforeach ($s as\
    \ $letter) {\n\t\tif (!in_array($letter, $vowels)) {\n\t\t\t$consonants[] = $letter;\n\
    \t\t}\n\t}\n\t$consonants = array_count_values($consonants);\n\t$consonants =\
    \ array_filter($consonants, function($v) use ($n) {\n\t\treturn $v == $n;\n\t\
    });\n\t$consonants = array_keys($consonants);\n\treturn $consonants;\n}\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "    $arr = explode(\"\
    \ \", $s);\n    $result = [];\n    foreach ($arr as $word) {\n        if (substr_count($word,\
    \ \"a\") + substr_count($word, \"e\") + substr_count($word, \"i\") + substr_count($word,\
    \ \"o\") + substr_count($word, \"u\") == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\nprint_r(select_words(\"Mary had a little\
    \ lamb\", 4));", "    $words = explode(' ', $s);\n    $result = [];\n    foreach\
    \ ($words as $word) {\n        if (substr_count($word, 'a') + substr_count($word,\
    \ 'e') + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* Given an array of integers, your task is to implement a function\
    \ that returns \nthe sum of all integers in the array that are divisible by 3.\n\
    Examples:\n>>> sum_of_three([1, 2, 3, 4, 5, 6, 7, 8, 9])\n18\n>>> sum_of_three([0,\
    \ -1, -2, -3, -4, -5, -6])\n0\n>>> sum_of_three([-1, 1, -2, 2, -3, 3, -4, 4])\n\
    0\n>>> sum_of_three([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15])\n45\n\
    >>> sum_of_three([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14,\
    \ -15])\n0*/", "    $words = explode(' ', $s);\n    $result = [];\n    foreach\
    \ ($words as $word) {\n        if (substr_count($word, 'a') + substr_count($word,\
    \ 'e') + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "    $s = explode(' ', $s);\n    $result = [];\n    foreach ($s as $word)\
    \ {\n        if (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n      \
    \      $result[] = $word;\n        }\n    }\n    return $result;\n}\n\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "    $words =\
    \ explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n    \
    \    if (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n      \
    \      $result[] = $word;\n        }\n    }\n    return $result;\n}\n\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "\t$s = explode('\
    \ ', $s);\n\t$result = [];\n\tforeach ($s as $word) {\n\t\tif (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n\t\t\t$result[] = $word;\n\t\t}\n\t\
    }\n\treturn $result;\n}\nprint_r(select_words(\"Mary had a little lamb\", 4));\n\
    print_r(select_words(\"Mary had a little lamb\", 3));\nprint_r(select_words(\"\
    simple white space\", 2));\nprint_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"\
    Uncle sam\", 3));", "    $words = explode(' ', $s);\n    $result = [];\n    foreach\
    \ ($words as $word) {\n        if (substr_count($word, 'a') + substr_count($word,\
    \ 'e') + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\n$s = \"Mary had a little lamb\";\n$n = 4;\nprint_r(select_words($s,\
    \ $n));", "\t$s = explode(' ', $s);\n\t$result = [];\n\tforeach ($s as $word)\
    \ {\n\t\tif (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n\t\t\t\
    $result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "    $arr = explode(\"\
    \ \", $s);\n    $result = [];\n    foreach ($arr as $word) {\n        if (substr_count($word,\
    \ \"a\") + substr_count($word, \"e\") + substr_count($word, \"i\") + substr_count($word,\
    \ \"o\") + substr_count($word, \"u\") == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nprint_r(select_words(\"Mary had a\
    \ little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\n\
    print_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"Hello\
    \ world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "\t$arr = explode(\"\
    \ \", $s);\n\t$result = [];\n\tforeach ($arr as $word) {\n\t\tif (strlen($word)\
    \ == $n) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "    $words =\
    \ explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n    \
    \    if (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n      \
    \      $result[] = $word;\n        }\n    }\n    return $result;\n}\n\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "    $words =\
    \ explode(' ', $s);\n    $consonants = array('b', 'c', 'd', 'f', 'g', 'h', 'j',\
    \ 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'z');\n    $result\
    \ = array();\n    foreach ($words as $word) {\n        $count = 0;\n        for\
    \ ($i = 0; $i < strlen($word); $i++) {\n            if (in_array($word[$i], $consonants))\
    \ {\n                $count++;\n            }\n        }\n        if ($count ==\
    \ $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "\t$words = explode(\" \", $s);\n\t$result = [];\n\tforeach ($words as\
    \ $word) {\n\t\tif (consonants($word) == $n) {\n\t\t\t$result[] = $word;\n\t\t\
    }\n\t}\n\treturn $result;\n}\n", "    $s = explode(' ', $s);\n    $consonants\
    \ = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'z'];\n    $result = [];\n    foreach ($s as $word) {\n\
    \        $count = 0;\n        for ($i = 0; $i < strlen($word); $i++) {\n     \
    \       if (in_array($word[$i], $consonants)) {\n                $count++;\n \
    \           }\n        }\n        if ($count == $n) {\n            $result[] =\
    \ $word;\n        }\n    }\n    return $result;\n}\n\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "    $words =\
    \ explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n    \
    \    if (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n      \
    \      $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n/* Given\
    \ a string s and a natural number n, you have been tasked to implement \na function\
    \ that returns an array of all words from string s that contain exactly \nn consonants,\
    \ in order these words appear in the string s.\nIf the string s is empty then\
    \ the function should return an empty array.\nNote: you may assume the input string\
    \ contains only letters and spaces.\nExamples:\n>>> select_words(\"Mary had a\
    \ little lamb\", 4)\narray(\"little\")\n>>> select_words(\"Mary had a little lamb\"\
    , 3)\narray(\"Mary\", \"lamb\")\n>>> select_words(\"simple white space\", 2)\n\
    array()\n>>> select_words(\"Hello world\", 4)\narray(\"world\")\n>>> select_words(\"\
    Uncle sam\", 3)\narray(\"Uncle\")*/", "\t$arr = explode(\" \", $s);\n\t$result\
    \ = [];\n\tforeach ($arr as $word) {\n\t\tif (consonants_count($word) == $n) {\n\
    \t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n", "    $words = explode('\
    \ ', $s);\n    $consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm',\
    \ 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'z'];\n    $result = [];\n    foreach\
    \ ($words as $word) {\n        $count = 0;\n        for ($i = 0; $i < strlen($word);\
    \ $i++) {\n            if (in_array($word[$i], $consonants)) {\n             \
    \   $count++;\n            }\n        }\n        if ($count == $n) {\n       \
    \     $result[] = $word;\n        }\n    }\n    return $result;\n}\n\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "\t$words = explode(\"\
    \ \", $s);\n\t$result = [];\n\tforeach ($words as $word) {\n\t\tif (substr_count($word,\
    \ \"a\") + substr_count($word, \"e\") + substr_count($word, \"i\") + substr_count($word,\
    \ \"o\") + substr_count($word, \"u\") == $n) {\n\t\t\t$result[] = $word;\n\t\t\
    }\n\t}\n\treturn $result;\n}\nprint_r(select_words(\"Mary had a little lamb\"\
    , 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\nprint_r(select_words(\"\
    simple white space\", 2));\nprint_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"\
    Uncle sam\", 3));", "    $words = explode(' ', $s);\n    $result = [];\n    foreach\
    \ ($words as $word) {\n        if (substr_count($word, 'a') + substr_count($word,\
    \ 'e') + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $words = explode('\
    \ ', $s);\n    $result = array();\n    foreach ($words as $word) {\n        $consonants\
    \ = 0;\n        for ($i = 0; $i < strlen($word); $i++) {\n            if (!in_array($word[$i],\
    \ $vowels)) {\n                $consonants++;\n            }\n        }\n    \
    \    if ($consonants == $n) {\n            $result[] = $word;\n        }\n   \
    \ }\n    return $result;\n}\n\nprint_r(select_words(\"Mary had a little lamb\"\
    , 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\nprint_r(select_words(\"\
    simple white space\", 2));\nprint_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"\
    Uncle sam\", 3));", "    $words = explode(' ', $s);\n    $consonants = ['b', 'c',\
    \ 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w',\
    \ 'x', 'z'];\n    $result = [];\n    foreach ($words as $word) {\n        $count\
    \ = 0;\n        for ($i = 0; $i < strlen($word); $i++) {\n            if (in_array($word[$i],\
    \ $consonants)) {\n                $count++;\n            }\n        }\n     \
    \   if ($count == $n) {\n            $result[] = $word;\n        }\n    }\n  \
    \  return $result;\n}\n\n$s = 'Mary had a little lamb';\n$n = 4;\nprint_r(select_words($s,\
    \ $n));", "    $s = explode(' ', $s);\n    $result = [];\n    foreach ($s as $word)\
    \ {\n        if (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n      \
    \      $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n/*\n *\
    \ \n */\n", "    $arr = explode(\" \", $s);\n    $result = [];\n    foreach ($arr\
    \ as $word) {\n        if (count_consonants($word) == $n) {\n            $result[]\
    \ = $word;\n        }\n    }\n    return $result;\n}", "    $result = [];\n  \
    \  $words = explode(' ', $s);\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\nprint_r(select_words(\"Mary had a little\
    \ lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\nprint_r(select_words(\"\
    simple white space\", 2));\nprint_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"\
    Uncle sam\", 3));", "    $s = explode(' ', $s);\n    $result = [];\n    foreach\
    \ ($s as $word) {\n        if (substr_count($word, 'a') + substr_count($word,\
    \ 'e') + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\nprint_r(select_words(\"Mary had a little lamb\", 4));", "    $arr\
    \ = explode(\" \", $s);\n    $result = [];\n    foreach ($arr as $word) {\n  \
    \      if (substr_count($word, \"a\") + substr_count($word, \"e\") + substr_count($word,\
    \ \"i\") + substr_count($word, \"o\") + substr_count($word, \"u\") == $n) {\n\
    \            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n\
    print_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "    $words = explode(' ', $s);\n    $consonants = ['b', 'c', 'd', 'f',\
    \ 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'z'];\n\
    \    $result = [];\n    foreach ($words as $word) {\n        $count = 0;\n   \
    \     $letters = str_split($word);\n        foreach ($letters as $letter) {\n\
    \            if (in_array($letter, $consonants)) {\n                $count++;\n\
    \            }\n        }\n        if ($count == $n) {\n            $result[]\
    \ = $word;\n        }\n    }\n    return $result;\n}\n\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "    $arr = explode(\"\
    \ \", $s);\n    $res = [];\n    foreach ($arr as $word) {\n        if (substr_count($word,\
    \ \"a\") + substr_count($word, \"e\") + substr_count($word, \"i\") + substr_count($word,\
    \ \"o\") + substr_count($word, \"u\") == $n) {\n            $res[] = $word;\n\
    \        }\n    }\n    return $res;\n}\n\nprint_r(select_words(\"Mary had a little\
    \ lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\nprint_r(select_words(\"\
    simple white space\", 2));\nprint_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"\
    Uncle sam\", 3));", "    $arr = explode(\" \", $s);\n    $result = [];\n    foreach\
    \ ($arr as $word) {\n        if (substr_count($word, \"a\") + substr_count($word,\
    \ \"e\") + substr_count($word, \"i\") + substr_count($word, \"o\") + substr_count($word,\
    \ \"u\") == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "  $arr = explode(\" \", $s);\n  $result = [];\n  foreach ($arr as $word)\
    \ {\n    if (substr_count($word, \"a\") + substr_count($word, \"e\") + substr_count($word,\
    \ \"i\") + substr_count($word, \"o\") + substr_count($word, \"u\") == $n) {\n\
    \      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "\t$arr = explode(\"\
    \ \", $s);\n\t$res = [];\n\tforeach ($arr as $key => $value) {\n\t\tif (substr_count($value,\
    \ \"a\") + substr_count($value, \"e\") + substr_count($value, \"i\") + substr_count($value,\
    \ \"o\") + substr_count($value, \"u\") == $n) {\n\t\t\t$res[] = $value;\n\t\t\
    }\n\t}\n\treturn $res;\n}\nprint_r(select_words(\"Mary had a little lamb\", 4));\n\
    print_r(select_words(\"Mary had a little lamb\", 3));\nprint_r(select_words(\"\
    simple white space\", 2));\nprint_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"\
    Uncle sam\", 3));", "    $words = explode(' ', $s);\n    $result = [];\n    foreach\
    \ ($words as $word) {\n        if (substr_count($word, 'a') + substr_count($word,\
    \ 'e') + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "\t$arr = explode(\" \", $s);\n\t$result = [];\n\tforeach ($arr as $value)\
    \ {\n\t\tif (count_consonants($value) == $n) {\n\t\t\t$result[] = $value;\n\t\t\
    }\n\t}\n\treturn $result;\n}", "    $arr = explode(\" \", $s);\n    $result =\
    \ [];\n    foreach ($arr as $value) {\n        if (substr_count($value, \"a\"\
    ) + substr_count($value, \"e\") + substr_count($value, \"i\") + substr_count($value,\
    \ \"o\") + substr_count($value, \"u\") == $n) {\n            $result[] = $value;\n\
    \        }\n    }\n    return $result;\n}\n\nprint_r(select_words(\"Mary had a\
    \ little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\n\
    print_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"Hello\
    \ world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "    $arr = explode(\"\
    \ \", $s);\n    $result = [];\n    foreach ($arr as $word) {\n        if (substr_count($word,\
    \ \"a\") + substr_count($word, \"e\") + substr_count($word, \"i\") + substr_count($word,\
    \ \"o\") + substr_count($word, \"u\") == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\n/*", "    $words = explode(' ', $s);\n\
    \    $consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p',\
    \ 'q', 'r', 's', 't', 'v', 'w', 'x', 'z'];\n    $result = [];\n    foreach ($words\
    \ as $word) {\n        $count = 0;\n        for ($i = 0; $i < strlen($word); $i++)\
    \ {\n            if (in_array($word[$i], $consonants)) {\n                $count++;\n\
    \            }\n        }\n        if ($count == $n) {\n            $result[]\
    \ = $word;\n        }\n    }\n    return $result;\n}\n\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "    $s = explode('\
    \ ', $s);\n    $result = [];\n    foreach ($s as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\n/* Given a string s and a natural\
    \ number n, you have been tasked to implement \na function that returns an array\
    \ of all words from string s that contain exactly \nn consonants, in order these\
    \ words appear in the string s.\nIf the string s is empty then the function should\
    \ return an empty array.\nNote: you may assume the input string contains only\
    \ letters and spaces.\nExamples:\n>>> select_words(\"Mary had a little lamb\"\
    , 4)\narray(\"little\")\n>>> select_words(\"Mary had a little lamb\", 3)\narray(\"\
    Mary\", \"lamb\")\n>>> select_words(\"simple white space\", 2)\narray()\n>>> select_words(\"\
    Hello world\", 4)\narray(\"world\")\n>>> select_words(\"Uncle sam\", 3)\narray(\"\
    Uncle\")*/", "    $s = explode(' ', $s);\n    $result = [];\n    foreach ($s as\
    \ $word) {\n        if (substr_count($word, 'a') + substr_count($word, 'e') +\
    \ substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word, 'u')\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\n/* Given a string s, you have been tasked to implement a function that returns\
    \ \nan array of all words from string s that contain exactly n vowels, in order\
    \ \nthese words appear in the string s.\nIf the string s is empty then the function\
    \ should return an empty array.\nNote: you may assume the input string contains\
    \ only letters and spaces.\nExamples:\n>>> select_words(\"Mary had a little lamb\"\
    , 3)\narray(\"Mary\", \"little\")\n>>> select_words(\"Mary had a little lamb\"\
    , 4)\narray(\"little\")\n>>> select_words(\"simple white space\", 2)\narray()\n\
    >>> select_words(\"Hello world\", 4)\narray(\"world\")\n>>> select_words(\"Uncle\
    \ sam\", 3)\narray(\"Uncle\")*/", "\t$s = str_replace(\" \", \"\", $s);\n\t$s\
    \ = str_split($s);\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t\
    $consonants = array();\n\tforeach ($s as $letter) {\n\t\tif (!in_array($letter,\
    \ $vowels)) {\n\t\t\t$consonants[] = $letter;\n\t\t}\n\t}\n\t$consonants = count($consonants);\n\
    \tif ($consonants == $n) {\n\t\treturn array($s);\n\t} else {\n\t\treturn array();\n\
    \t}\n}\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "    $words = explode(' ', $s);\n    $result = [];\n    foreach ($words\
    \ as $word) {\n        if (substr_count($word, 'a') + substr_count($word, 'e')\
    \ + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "    $arr = explode(\" \", $s);\n    $result = [];\n    foreach ($arr\
    \ as $word) {\n        if (substr_count($word, \"a\") + substr_count($word, \"\
    e\") + substr_count($word, \"i\") + substr_count($word, \"o\") + substr_count($word,\
    \ \"u\") == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "\t$words = explode(\" \", $s);\n\t$result = [];\n\tforeach ($words as\
    \ $word) {\n\t\tif (substr_count($word, \"a\") + substr_count($word, \"e\") +\
    \ substr_count($word, \"i\") + substr_count($word, \"o\") + substr_count($word,\
    \ \"u\") == $n) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\
    print_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "    $words = explode(' ', $s);\n    $result = [];\n    foreach ($words\
    \ as $word) {\n        if (substr_count($word, 'a') + substr_count($word, 'e')\
    \ + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "\t$arr = explode(\" \", $s);\n\t$result = [];\n\tforeach ($arr as $value)\
    \ {\n\t\tif (substr_count($value, \"a\") + substr_count($value, \"e\") + substr_count($value,\
    \ \"i\") + substr_count($value, \"o\") + substr_count($value, \"u\") + substr_count($value,\
    \ \"y\") == $n) {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\treturn $result;\n\
    }\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "\t$words = explode(\" \", $s);\n\t$result = [];\n\tforeach ($words as\
    \ $word) {\n\t\tif (count_consonants($word) == $n) {\n\t\t\t$result[] = $word;\n\
    \t\t}\n\t}\n\treturn $result;\n}", "\t$words = explode(\" \", $s);\n\t$result\
    \ = [];\n\tforeach ($words as $word) {\n\t\tif (substr_count($word, \"a\") + substr_count($word,\
    \ \"e\") + substr_count($word, \"i\") + substr_count($word, \"o\") + substr_count($word,\
    \ \"u\") == $n) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\
    print_r(select_words(\"Mary had a little lamb\", 4));", "    $result = [];\n \
    \   $words = explode(' ', $s);\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\n/*", "\t$arr = explode(\" \", $s);\n\
    \t$result = [];\n\tforeach ($arr as $value) {\n\t\tif (substr_count($value, \"\
    a\") + substr_count($value, \"e\") + substr_count($value, \"i\") + substr_count($value,\
    \ \"o\") + substr_count($value, \"u\") == $n) {\n\t\t\t$result[] = $value;\n\t\
    \t}\n\t}\n\treturn $result;\n}\nprint_r(select_words(\"Mary had a little lamb\"\
    , 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\nprint_r(select_words(\"\
    simple white space\", 2));\nprint_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"\
    Uncle sam\", 3));", "    $s = explode(' ', $s);\n    $result = [];\n    foreach\
    \ ($s as $word) {\n        if (substr_count($word, 'a') + substr_count($word,\
    \ 'e') + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "\t$words = explode(\" \", $s);\n\t$result = [];\n\tforeach ($words as\
    \ $word) {\n\t\tif (substr_count($word, \"a\") + substr_count($word, \"e\") +\
    \ substr_count($word, \"i\") + substr_count($word, \"o\") + substr_count($word,\
    \ \"u\") == $n) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\
    print_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "    $words = explode(' ', $s);\n    $result = [];\n    foreach ($words\
    \ as $word) {\n        if (substr_count($word, 'a') + substr_count($word, 'e')\
    \ + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\n/*", "\t$words = explode(\" \", $s);\n\t$result = [];\n\tforeach\
    \ ($words as $word) {\n\t\tif (substr_count($word, \"a\") + substr_count($word,\
    \ \"e\") + substr_count($word, \"i\") + substr_count($word, \"o\") + substr_count($word,\
    \ \"u\") == $n) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\
    print_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "    $words = explode(' ', $s);\n    $result = [];\n    foreach ($words\
    \ as $word) {\n        if (substr_count($word, 'a') + substr_count($word, 'e')\
    \ + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "    $words = explode(' ', $s);\n    $result = [];\n    foreach ($words\
    \ as $word) {\n        if (substr_count($word, 'a') + substr_count($word, 'e')\
    \ + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\n/*", "\t$s = explode(' ', $s);\n\t$result = [];\n\tforeach ($s\
    \ as $word) {\n\t\tif (consonants($word) == $n) {\n\t\t\t$result[] = $word;\n\t\
    \t}\n\t}\n\treturn $result;\n}", "\t$s = explode(' ', $s);\n\t$result = [];\n\t\
    foreach ($s as $word) {\n\t\tif (substr_count($word, 'a') + substr_count($word,\
    \ 'e') + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\
    print_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "\t$s = explode(' ', $s);\n\t$result = [];\n\tforeach ($s as $word) {\n\
    \t\tif (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n\t\t\t\
    $result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "    $words =\
    \ explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n    \
    \    if (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n      \
    \      $result[] = $word;\n        }\n    }\n    return $result;\n}\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "    $words =\
    \ explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n    \
    \    if (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n      \
    \      $result[] = $word;\n        }\n    }\n    return $result;\n}\n\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "\t$arr = explode(\"\
    \ \", $s);\n\t$result = [];\n\tforeach ($arr as $value) {\n\t\tif (substr_count($value,\
    \ \"a\") + substr_count($value, \"e\") + substr_count($value, \"i\") + substr_count($value,\
    \ \"o\") + substr_count($value, \"u\") == $n) {\n\t\t\t$result[] = $value;\n\t\
    \t}\n\t}\n\treturn $result;\n}\nprint_r(select_words(\"Mary had a little lamb\"\
    , 4));\necho \"<br>\";\nprint_r(select_words(\"Mary had a little lamb\", 3));\n\
    echo \"<br>\";\nprint_r(select_words(\"simple white space\", 2));\necho \"<br>\"\
    ;\nprint_r(select_words(\"Hello world\", 4));\necho \"<br>\";\nprint_r(select_words(\"\
    Uncle sam\", 3));", "\t$arr = explode(\" \", $s);\n\t$result = [];\n\tforeach\
    \ ($arr as $word) {\n\t\tif (preg_match_all('/[^aeiou]/i', $word, $matches) ==\
    \ $n) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));", "    $words = explode(' ', $s);\n    $result\
    \ = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n", "    $words = explode(' ', $s);\n    $result = [];\n    foreach ($words\
    \ as $word) {\n        if (substr_count($word, 'a') + substr_count($word, 'e')\
    \ + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* Given a string s and a natural number n, you have been tasked\
    \ to implement \na function that returns an array of all words from string s that\
    \ contain exactly \nn consonants, in order these words appear in the string s.\n\
    If the string s is empty then the function should return an empty array.\nNote:\
    \ you may assume the input string contains only letters and spaces.\nExamples:\n\
    >>> select_words(\"Mary had a little lamb\", 4)\narray(\"little\")\n>>> select_words(\"\
    Mary had a little lamb\", 3)\narray(\"Mary\", \"lamb\")\n>>> select_words(\"simple\
    \ white space\", 2)\narray()\n>>> select_words(\"Hello world\", 4)\narray(\"world\"\
    )\n>>> select_words(\"Uncle sam\", 3)\narray(\"Uncle\")*/", "    $words = explode('\
    \ ', $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\nprint_r(select_words(\"Mary had a little\
    \ lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\nprint_r(select_words(\"\
    simple white space\", 2));\nprint_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"\
    Uncle sam\", 3));", "    $words = explode(' ', $s);\n    $result = [];\n    foreach\
    \ ($words as $word) {\n        if (substr_count($word, 'a') + substr_count($word,\
    \ 'e') + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "    $words = explode(' ', $s);\n    $result = [];\n    foreach ($words\
    \ as $word) {\n        if (substr_count($word, 'a') + substr_count($word, 'e')\
    \ + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "  $s = explode(' ', $s);\n  $consonants = ['b', 'c', 'd', 'f', 'g',\
    \ 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n\
    \  $result = [];\n  foreach ($s as $word) {\n    $count = 0;\n    for ($i = 0;\
    \ $i < strlen($word); $i++) {\n      if (in_array(strtolower($word[$i]), $consonants))\
    \ {\n        $count++;\n      }\n    }\n    if ($count == $n) {\n      $result[]\
    \ = $word;\n    }\n  }\n  return $result;\n}\n\nprint_r(select_words(\"Mary had\
    \ a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\n\
    print_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"Hello\
    \ world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "    $words = explode('\
    \ ', $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}", "    $words = explode(' ', $s);\n \
    \   $result = [];\n    foreach ($words as $word) {\n        if (countConsonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n", "    $words = explode(' ', $s);\n    $result = [];\n    foreach ($words\
    \ as $word) {\n        if (substr_count($word, 'a') + substr_count($word, 'e')\
    \ + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\n/*", "    $words = explode(' ', $s);\n    $result = [];\n   \
    \ foreach ($words as $word) {\n        if (substr_count($word, 'a') + substr_count($word,\
    \ 'e') + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "    $words = explode(' ', $s);\n    $result = [];\n    foreach ($words\
    \ as $word) {\n        if (substr_count($word, 'a') + substr_count($word, 'e')\
    \ + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "\t$arr = explode(\" \", $s);\n\t$result = [];\n\tforeach ($arr as $word)\
    \ {\n\t\tif (substr_count($word, \"a\") + substr_count($word, \"e\") + substr_count($word,\
    \ \"i\") + substr_count($word, \"o\") + substr_count($word, \"u\") == $n) {\n\t\
    \t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "    $words =\
    \ explode(' ', $s);\n    $consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k',\
    \ 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'z'];\n    $result =\
    \ [];\n    foreach ($words as $word) {\n        $count = 0;\n        for ($i =\
    \ 0; $i < strlen($word); $i++) {\n            if (in_array($word[$i], $consonants))\
    \ {\n                $count++;\n            }\n        }\n        if ($count ==\
    \ $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "    $words = explode(' ', $s);\n    $result = [];\n    foreach ($words\
    \ as $word) {\n        if (substr_count($word, 'a') + substr_count($word, 'e')\
    \ + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "    $words = explode(' ', $s);\n    $result = [];\n    foreach ($words\
    \ as $word) {\n        if (substr_count($word, 'a') + substr_count($word, 'e')\
    \ + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\nprint_r(select_words(\"Mary had a little lamb\", 4));", "    $arr\
    \ = explode(\" \", $s);\n    $result = [];\n    foreach ($arr as $word) {\n  \
    \      if (substr_count($word, \"a\") + substr_count($word, \"e\") + substr_count($word,\
    \ \"i\") + substr_count($word, \"o\") + substr_count($word, \"u\") == $n) {\n\
    \            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n\
    print_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "    $arr = explode(\" \", $s);\n    $result = [];\n    foreach ($arr\
    \ as $value) {\n        if (substr_count($value, \"a\") + substr_count($value,\
    \ \"e\") + substr_count($value, \"i\") + substr_count($value, \"o\") + substr_count($value,\
    \ \"u\") == $n) {\n            $result[] = $value;\n        }\n    }\n    return\
    \ $result;\n}\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "    $words = explode(' ', $s);\n    $result = [];\n    foreach ($words\
    \ as $word) {\n        if (substr_count($word, 'a') + substr_count($word, 'e')\
    \ + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "    $words = explode(' ', $s);\n    $result = [];\n    foreach ($words\
    \ as $word) {\n        if (substr_count($word, 'a') + substr_count($word, 'e')\
    \ + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "    $words = explode(' ', $s);\n    $result = [];\n    foreach ($words\
    \ as $word) {\n        if (substr_count($word, 'a') + substr_count($word, 'e')\
    \ + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "    $s = explode(' ', $s);\n    $result = [];\n    foreach ($s as $word)\
    \ {\n        if (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n      \
    \      $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n/*", " \
    \   $arr = explode(\" \", $s);\n    $result = [];\n    foreach ($arr as $word)\
    \ {\n        if (substr_count($word, \"a\") + substr_count($word, \"e\") + substr_count($word,\
    \ \"i\") + substr_count($word, \"o\") + substr_count($word, \"u\") == $n) {\n\
    \            $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n\
    /* Given a string s and a natural number n, you have been tasked to implement\
    \ \na function that returns an array of all words from string s that contain exactly\
    \ \nn vowels, in order these words appear in the string s.\nIf the string s is\
    \ empty then the function should return an empty array.\nNote: you may assume\
    \ the input string contains only letters and spaces.\nExamples:\n>>> select_words(\"\
    Mary had a little lamb\", 4)\narray(\"little\")\n>>> select_words(\"Mary had a\
    \ little lamb\", 3)\narray(\"Mary\", \"lamb\")\n>>> select_words(\"simple white\
    \ space\", 2)\narray()\n>>> select_words(\"Hello world\", 4)\narray(\"world\"\
    )\n>>> select_words(\"Uncle sam\", 3)\narray(\"Uncle\")*/", "\t$words = explode(\"\
    \ \", $s);\n\t$result = [];\n\tforeach ($words as $word) {\n\t\tif (count_consonants($word)\
    \ == $n) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n", " \
    \   $words = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word)\
    \ {\n        if (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n      \
    \      $result[] = $word;\n        }\n    }\n    return $result;\n}\n\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "    $words =\
    \ explode(' ', $s);\n    $consonants = array('b', 'c', 'd', 'f', 'g', 'h', 'j',\
    \ 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'z');\n    $result\
    \ = array();\n    foreach ($words as $word) {\n        $count = 0;\n        for\
    \ ($i = 0; $i < strlen($word); $i++) {\n            if (in_array($word[$i], $consonants))\
    \ {\n                $count++;\n            }\n        }\n        if ($count ==\
    \ $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n\n/* Given a string s and a natural number n, you have been tasked to implement\
    \ \na function that returns an array of all words from string s that contain exactly\
    \ \nn vowels, in order these words appear in the string s.\nIf the string s is\
    \ empty then the function should return an empty array.\nNote: you may assume\
    \ the input string contains only letters and spaces.\nExamples:\n>>> select_words(\"\
    Mary had a little lamb\", 4)\narray(\"little\")\n>>> select_words(\"Mary had a\
    \ little lamb\", 3)\narray(\"Mary\", \"lamb\")\n>>> select_words(\"simple white\
    \ space\", 2)\narray()\n>>> select_words(\"Hello world\", 4)\narray(\"world\"\
    )\n>>> select_words(\"Uncle sam\", 3)\narray(\"Uncle\")*/", "    $words = explode('\
    \ ', $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (countConsonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n", "    $arr = explode(\" \", $s);\n    $result = [];\n    foreach ($arr as\
    \ $value) {\n        if (substr_count($value, \"a\") + substr_count($value, \"\
    e\") + substr_count($value, \"i\") + substr_count($value, \"o\") + substr_count($value,\
    \ \"u\") == $n) {\n            $result[] = $value;\n        }\n    }\n    return\
    \ $result;\n}\n\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "    $words = explode(' ', $s);\n    $result = [];\n    foreach ($words\
    \ as $word) {\n        if (substr_count($word, 'a') + substr_count($word, 'e')\
    \ + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "\t$result = [];\n\t$words = explode(' ', $s);\n\tforeach ($words as\
    \ $word) {\n\t\tif (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n\t\t\t\
    $result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));", "    $words = explode(' ', $s);\n    $result\
    \ = [];\n    foreach ($words as $word) {\n        if (substr_count($word, 'a')\
    \ + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nprint_r(select_words(\"Mary had a\
    \ little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\n\
    print_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"Hello\
    \ world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "    $words = explode('\
    \ ', $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nprint_r(select_words(\"Mary had a\
    \ little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\n\
    print_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"Hello\
    \ world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "    $arr = explode(\"\
    \ \", $s);\n    $result = [];\n    foreach ($arr as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n", "    $words = explode(' ', $s);\n    $result = [];\n    foreach ($words\
    \ as $word) {\n        if (substr_count($word, 'a') + substr_count($word, 'e')\
    \ + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "\t$arr = explode(\" \", $s);\n\t$result = [];\n\tforeach ($arr as $word)\
    \ {\n\t\tif (substr_count($word, \"a\") + substr_count($word, \"e\") + substr_count($word,\
    \ \"i\") + substr_count($word, \"o\") + substr_count($word, \"u\") == $n) {\n\t\
    \t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));", "    $arr = explode(\" \", $s);\n    $result\
    \ = [];\n    foreach ($arr as $word) {\n        if (count_consonants($word) ==\
    \ $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }", "    $s = explode(' ', $s);\n    $result = [];\n    foreach ($s as $word)\
    \ {\n        if (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n      \
    \      $result[] = $word;\n        }\n    }\n    return $result;\n}\n\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "    $words =\
    \ explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n    \
    \    if (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n      \
    \      $result[] = $word;\n        }\n    }\n    return $result;\n}\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "    $s = explode('\
    \ ', $s);\n    $words = [];\n    foreach ($s as $word) {\n        if (preg_match_all('/[^aeiou]/i',\
    \ $word) == $n) {\n            $words[] = $word;\n        }\n    }\n    return\
    \ $words;\n}\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "\t$words = explode(\" \", $s);\n\t$result = [];\n\tforeach ($words as\
    \ $word) {\n\t\tif (preg_match_all('/[^aeiou]/i', $word, $matches) == $n) {\n\t\
    \t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "    $words =\
    \ explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n    \
    \    if (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n      \
    \      $result[] = $word;\n        }\n    }\n    return $result;\n}\n\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "    $words =\
    \ explode(' ', $s);\n    $consonants = array('b', 'c', 'd', 'f', 'g', 'h', 'j',\
    \ 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'z');\n    $result\
    \ = array();\n    foreach ($words as $word) {\n        $consonant_count = 0;\n\
    \        for ($i = 0; $i < strlen($word); $i++) {\n            if (in_array($word[$i],\
    \ $consonants)) {\n                $consonant_count++;\n            }\n      \
    \  }\n        if ($consonant_count == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nprint_r(select_words(\"Mary had a\
    \ little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\n\
    print_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"Hello\
    \ world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "    $arr = explode(\"\
    \ \", $s);\n    $result = [];\n    foreach ($arr as $word) {\n        if (substr_count($word,\
    \ \"a\") + substr_count($word, \"e\") + substr_count($word, \"i\") + substr_count($word,\
    \ \"o\") + substr_count($word, \"u\") == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\n/*\n * \n */\n", "    $words = explode('\
    \ ', $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nprint_r(select_words(\"Mary had a\
    \ little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\n\
    print_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"Hello\
    \ world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "\t$s = explode('\
    \ ', $s);\n\t$result = [];\n\tforeach ($s as $word) {\n\t\tif (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n\t\t\t$result[] = $word;\n\t\t}\n\t\
    }\n\treturn $result;\n}\nprint_r(select_words(\"Mary had a little lamb\", 4));\n\
    print_r(select_words(\"Mary had a little lamb\", 3));\nprint_r(select_words(\"\
    simple white space\", 2));\nprint_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"\
    Uncle sam\", 3));", "\t$s = explode(' ', $s);\n\t$result = [];\n\tforeach ($s\
    \ as $word) {\n\t\tif (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n\t\t\t\
    $result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));", "    $arr = explode(\" \", $s);\n    $result\
    \ = [];\n    foreach ($arr as $word) {\n        if (substr_count($word, \"a\"\
    ) + substr_count($word, \"e\") + substr_count($word, \"i\") + substr_count($word,\
    \ \"o\") + substr_count($word, \"u\") == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\n/* Given a string s and a natural\
    \ number n, you have been tasked to implement \na function that returns an array\
    \ of all words from string s that contain exactly \nn consonants, in order these\
    \ words appear in the string s.\nIf the string s is empty then the function should\
    \ return an empty array.\nNote: you may assume the input string contains only\
    \ letters and spaces.\nExamples:\n>>> select_words(\"Mary had a little lamb\"\
    , 4)\narray(\"little\")\n>>> select_words(\"Mary had a little lamb\", 3)\narray(\"\
    Mary\", \"lamb\")\n>>> select_words(\"simple white space\", 2)\narray()\n>>> select_words(\"\
    Hello world\", 4)\narray(\"world\")\n>>> select_words(\"Uncle sam\", 3)\narray(\"\
    Uncle\")*/", "    $words = explode(' ', $s);\n    $result = [];\n    foreach ($words\
    \ as $word) {\n        if (substr_count($word, 'a') + substr_count($word, 'e')\
    \ + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\n/*", "    $words = explode(' ', $s);\n    $result = [];\n   \
    \ foreach ($words as $word) {\n        if (substr_count($word, 'a') + substr_count($word,\
    \ 'e') + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "\t$words = explode(\" \", $s);\n\t$result = [];\n\tforeach ($words as\
    \ $word) {\n\t\tif (substr_count($word, \"a\") + substr_count($word, \"e\") +\
    \ substr_count($word, \"i\") + substr_count($word, \"o\") + substr_count($word,\
    \ \"u\") == $n) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\
    print_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "    $words = explode(' ', $s);\n    $result = [];\n    foreach ($words\
    \ as $word) {\n        if (substr_count($word, 'a') + substr_count($word, 'e')\
    \ + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "\t$arr = explode(\" \", $s);\n\t$result = [];\n\tforeach ($arr as $value)\
    \ {\n\t\tif (substr_count($value, \"a\") + substr_count($value, \"e\") + substr_count($value,\
    \ \"i\") + substr_count($value, \"o\") + substr_count($value, \"u\") == $n) {\n\
    \t\t\t$result[] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "\t$arr = explode(\"\
    \ \", $s);\n\t$result = [];\n\tforeach ($arr as $word) {\n\t\tif (substr_count($word,\
    \ \"a\") + substr_count($word, \"e\") + substr_count($word, \"i\") + substr_count($word,\
    \ \"o\") + substr_count($word, \"u\") == $n) {\n\t\t\t$result[] = $word;\n\t\t\
    }\n\t}\n\treturn $result;\n}\nprint_r(select_words(\"Mary had a little lamb\"\
    , 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\nprint_r(select_words(\"\
    simple white space\", 2));\nprint_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"\
    Uncle sam\", 3));", "\t$words = explode(\" \", $s);\n\t$result = [];\n\tforeach\
    \ ($words as $word) {\n\t\tif (substr_count($word, \"a\") + substr_count($word,\
    \ \"e\") + substr_count($word, \"i\") + substr_count($word, \"o\") + substr_count($word,\
    \ \"u\") == $n) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\
    print_r(select_words(\"Mary had a little lamb\", 4));", "\t$s = str_replace('\
    \ ', '', $s);\n\t$arr = str_split($s);\n\t$consonants = array('b', 'c', 'd', 'f',\
    \ 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y',\
    \ 'z');\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$result = array();\n\t\
    $count = 0;\n\tforeach ($arr as $key => $value) {\n\t\tif (in_array($value, $consonants))\
    \ {\n\t\t\t$count++;\n\t\t}\n\t\tif (in_array($value, $vowels)) {\n\t\t\t$count\
    \ = 0;\n\t\t}\n\t\tif ($count == $n) {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\
    \treturn $result;\n}\nprint_r(select_words(\"Mary had a little lamb\", 4));",
  "    $words = explode(' ', $s);\n    $result = [];\n    foreach ($words as $word)\
    \ {\n        if (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n      \
    \      $result[] = $word;\n        }\n    }\n    return $result;\n}\n\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "    $arr = explode(\"\
    \ \", $s);\n    $result = [];\n    foreach ($arr as $word) {\n        if (substr_count($word,\
    \ \"a\") + substr_count($word, \"e\") + substr_count($word, \"i\") + substr_count($word,\
    \ \"o\") + substr_count($word, \"u\") == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\nprint_r(select_words(\"Mary had a\
    \ little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\n\
    print_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"Hello\
    \ world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "\t$arr = explode(\"\
    \ \", $s);\n\t$result = [];\n\tforeach ($arr as $word) {\n\t\tif (count_consonants($word)\
    \ == $n) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n", "\t\
    $s = explode(' ', $s);\n\t$result = [];\n\tforeach ($s as $word) {\n\t\tif (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n\t\t\t$result[] = $word;\n\t\t}\n\t\
    }\n\treturn $result;\n}\n\nprint_r(select_words(\"Mary had a little lamb\", 4));\n\
    print_r(select_words(\"Mary had a little lamb\", 3));\nprint_r(select_words(\"\
    simple white space\", 2));\nprint_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"\
    Uncle sam\", 3));", "\t$s = explode(' ', $s);\n\t$result = [];\n\tforeach ($s\
    \ as $word) {\n\t\tif (consonants($word) == $n) {\n\t\t\t$result[] = $word;\n\t\
    \t}\n\t}\n\treturn $result;\n}", "\t$s = explode(' ', $s);\n\t$result = [];\n\t\
    foreach ($s as $word) {\n\t\tif (substr_count($word, 'a') + substr_count($word,\
    \ 'e') + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\n\
    print_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "    $s = explode(' ', $s);\n    $result = [];\n    foreach ($s as $word)\
    \ {\n        if (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n      \
    \      $result[] = $word;\n        }\n    }\n    return $result;\n}\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "    $arr = explode(\"\
    \ \", $s);\n    $result = [];\n    foreach ($arr as $word) {\n        if (substr_count($word,\
    \ \"a\") + substr_count($word, \"e\") + substr_count($word, \"i\") + substr_count($word,\
    \ \"o\") + substr_count($word, \"u\") == $n) {\n            $result[] = $word;\n\
    \        }\n    }\n    return $result;\n}\n\n/*\n * Test code\n */\n\n$tests =\
    \ [\n    [\"Mary had a little lamb\", 4, [\"little\"]],\n    [\"Mary had a little\
    \ lamb\", 3, [\"Mary\", \"lamb\"]],\n    [\"simple white space\", 2, []],\n  \
    \  [\"Hello world\", 4, [\"world\"]],\n    [\"Uncle sam\", 3, [\"Uncle\"]],\n\
    ];\n\nforeach ($tests as $test) {\n    $result = select_words($test[0], $test[1]);\n\
    \    if ($result == $test[2]) {\n        echo \"Test passed!\\n\";\n    } else\
    \ {\n        echo \"Test failed!\\n\";\n        echo \"Input: \" . $test[0] .\
    \ \", \" . $test[1] . \"\\n\";\n        echo \"Expected: \" . implode(\", \",\
    \ $test[2]) . \"\\n\";\n        echo \"Got: \" . implode(\", \", $result) . \"\
    \\n\";\n    }\n}", "    $arr = explode(\" \", $s);\n    $result = [];\n    foreach\
    \ ($arr as $word) {\n        if (substr_count($word, \"a\") + substr_count($word,\
    \ \"e\") + substr_count($word, \"i\") + substr_count($word, \"o\") + substr_count($word,\
    \ \"u\") == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "\t$s = explode(' ', $s);\n\t$result = [];\n\tforeach ($s as $value)\
    \ {\n\t\tif (substr_count($value, 'a') + substr_count($value, 'e') + substr_count($value,\
    \ 'i') + substr_count($value, 'o') + substr_count($value, 'u') == $n) {\n\t\t\t\
    $result[] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "    $words =\
    \ explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n    \
    \    if (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n      \
    \      $result[] = $word;\n        }\n    }\n    return $result;\n}\n\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "    $words =\
    \ explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n    \
    \    if (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n      \
    \      $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n/*\n *\
    \ CODEWARS\n * https://www.codewars.com/kata/5a523566b3bfa84c2e00010b/train/php\n\
    \ *\n * @description\n * You are given an array (which will have a length of at\
    \ least 3, but could be very large) containing integers.\n * The array is either\
    \ entirely comprised of odd integers or entirely comprised of even integers except\
    \ for a single integer N.\n * Write a method that takes the array as an argument\
    \ and returns this \"outlier\" N.\n *\n * Examples\n * [2, 4, 0, 100, 4, 11, 2602,\
    \ 36]\n * Should return: 11 (the only odd number)\n *\n * [160, 3, 1719, 19, 11,\
    \ 13, -21]\n * Should return: 160 (the only even number)\n *\n * @param array\
    \ $integers\n * @return int\n */", "    $arr = explode(\" \", $s);\n    $result\
    \ = [];\n    foreach ($arr as $word) {\n        if (preg_match_all('/[^aeiou]/i',\
    \ $word, $matches) == $n) {\n            $result[] = $word;\n        }\n    }\n\
    \    return $result;\n}\nprint_r(select_words(\"Mary had a little lamb\", 4));\n\
    print_r(select_words(\"Mary had a little lamb\", 3));\nprint_r(select_words(\"\
    simple white space\", 2));\nprint_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"\
    Uncle sam\", 3));", "    $s = explode(' ', $s);\n    $result = [];\n    foreach\
    \ ($s as $word) {\n        if (substr_count($word, 'a') + substr_count($word,\
    \ 'e') + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\necho '<pre>';\nprint_r(select_words(\"Mary had a little lamb\"\
    , 4));\necho '</pre>';\necho '<pre>';\nprint_r(select_words(\"Mary had a little\
    \ lamb\", 3));\necho '</pre>';\necho '<pre>';\nprint_r(select_words(\"simple white\
    \ space\", 2));\necho '</pre>';\necho '<pre>';\nprint_r(select_words(\"Hello world\"\
    , 4));\necho '</pre>';\necho '<pre>';\nprint_r(select_words(\"Uncle sam\", 3));\n\
    echo '</pre>';", "    $arr = explode(\" \", $s);\n    $result = [];\n    foreach\
    \ ($arr as $word) {\n        if (count_consonants($word) == $n) {\n          \
    \  $result[] = $word;\n        }\n    }\n    return $result;\n}", "    $s = explode('\
    \ ', $s);\n    $result = [];\n    foreach ($s as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\nprint_r(select_words(\"Mary had a little\
    \ lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\nprint_r(select_words(\"\
    simple white space\", 2));\nprint_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"\
    Uncle sam\", 3));", "\t$arr = explode(\" \", $s);\n\t$result = [];\n\tforeach\
    \ ($arr as $word) {\n\t\tif (substr_count($word, \"a\") + substr_count($word,\
    \ \"e\") + substr_count($word, \"i\") + substr_count($word, \"o\") + substr_count($word,\
    \ \"u\") == $n) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\
    print_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "    $words = explode(' ', $s);\n    $result = [];\n    foreach ($words\
    \ as $word) {\n        if (substr_count($word, 'a') + substr_count($word, 'e')\
    \ + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "    $words = explode(' ', $s);\n    $result = [];\n    foreach ($words\
    \ as $word) {\n        if (count_consonants($word) == $n) {\n            $result[]\
    \ = $word;\n        }\n    }\n    return $result;\n}\n", "    $words = explode('\
    \ ', $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (countConsonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n", "    $words = explode(' ', $s);\n    $result = [];\n    foreach ($words\
    \ as $word) {\n        if (substr_count($word, 'a') + substr_count($word, 'e')\
    \ + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\n$s = 'Mary had a little lamb';\n$n = 4;\nprint_r(select_words($s,\
    \ $n));", "    $arr = explode(\" \", $s);\n    $result = [];\n    foreach ($arr\
    \ as $word) {\n        if (substr_count($word, \"a\") + substr_count($word, \"\
    e\") + substr_count($word, \"i\") + substr_count($word, \"o\") + substr_count($word,\
    \ \"u\") == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "    $words = explode(' ', $s);\n    $result = [];\n    foreach ($words\
    \ as $word) {\n        if (substr_count($word, 'a') + substr_count($word, 'e')\
    \ + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "    $arr = explode(\" \", $s);\n    $result = [];\n    foreach ($arr\
    \ as $word) {\n        if (countConsonants($word) == $n) {\n            $result[]\
    \ = $word;\n        }\n    }\n    return $result;\n}\n", "    $words = explode('\
    \ ', $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nprint_r(select_words(\"Mary had a\
    \ little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\n\
    print_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"Hello\
    \ world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "    $words = explode('\
    \ ', $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\nprint_r(select_words(\"Mary had a little\
    \ lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\nprint_r(select_words(\"\
    simple white space\", 2));\nprint_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"\
    Uncle sam\", 3));", "    $arr = explode(\" \", $s);\n    $result = [];\n    foreach\
    \ ($arr as $value) {\n        if (consonants($value) == $n) {\n            $result[]\
    \ = $value;\n        }\n    }\n    return $result;\n}\n", "    $words = explode('\
    \ ', $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (count_consonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n", "\t$s = explode(' ', $s);\n\t$result = [];\n\tforeach ($s as $word) {\n\t\
    \tif (count_consonants($word) == $n) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\
    \treturn $result;\n}\n", "    $words = explode(' ', $s);\n    $result = [];\n\
    \    foreach ($words as $word) {\n        if (substr_count($word, 'a') + substr_count($word,\
    \ 'e') + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\n/*", "    $words = explode(' ', $s);\n    $result = [];\n   \
    \ foreach ($words as $word) {\n        if (substr_count($word, 'a') + substr_count($word,\
    \ 'e') + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "    $words = explode(' ', $s);\n    $result = [];\n    foreach ($words\
    \ as $word) {\n        if (substr_count($word, 'a') + substr_count($word, 'e')\
    \ + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "  $words = explode(' ', $s);\n  $consonants = ['b', 'c', 'd', 'f', 'g',\
    \ 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n\
    \  $result = [];\n  foreach ($words as $word) {\n    $count = 0;\n    for ($i\
    \ = 0; $i < strlen($word); $i++) {\n      if (in_array(strtolower($word[$i]),\
    \ $consonants)) {\n        $count++;\n      }\n    }\n    if ($count == $n) {\n\
    \      $result[] = $word;\n    }\n  }\n  return $result;\n}\n\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "    $words =\
    \ explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n    \
    \    if (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n      \
    \      $result[] = $word;\n        }\n    }\n    return $result;\n}\n\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "    $words =\
    \ explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n    \
    \    if (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n      \
    \      $result[] = $word;\n        }\n    }\n    return $result;\n}\n\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "    $words =\
    \ explode(' ', $s);\n    $result = [];\n    foreach ($words as $word) {\n    \
    \    if (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n      \
    \      $result[] = $word;\n        }\n    }\n    return $result;\n}\n\n/*", " \
    \ $words = explode(' ', $s);\n  $result = [];\n  foreach ($words as $word) {\n\
    \    if (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n      $result[]\
    \ = $word;\n    }\n  }\n  return $result;\n}\n\nprint_r(select_words(\"Mary had\
    \ a little lamb\", 4));", "\t$words = explode(\" \", $s);\n\t$result = [];\n\t\
    foreach ($words as $word) {\n\t\tif (substr_count($word, 'a') + substr_count($word,\
    \ 'e') + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\
    print_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "    $arr = explode(\" \", $s);\n    $result = [];\n    foreach ($arr\
    \ as $word) {\n        if (substr_count($word, \"a\") + substr_count($word, \"\
    e\") + substr_count($word, \"i\") + substr_count($word, \"o\") + substr_count($word,\
    \ \"u\") == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "    $arr = explode(\" \", $s);\n    $result = [];\n    foreach ($arr\
    \ as $word) {\n        if (count_consonants($word) == $n) {\n            $result[]\
    \ = $word;\n        }\n    }\n    return $result;\n}\n", "    $result = [];\n\
    \    $words = explode(' ', $s);\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nprint_r(select_words(\"Mary had a\
    \ little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\n\
    print_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"Hello\
    \ world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));", "\t$arr = explode(\"\
    \ \", $s);\n\t$result = [];\n\tforeach ($arr as $key => $value) {\n\t\tif (consonants($value)\
    \ == $n) {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\treturn $result;\n}", "  \
    \  $words = explode(' ', $s);\n    $consonants = ['b', 'c', 'd', 'f', 'g', 'h',\
    \ 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n\
    \    $result = [];\n    foreach ($words as $word) {\n        $count = 0;\n   \
    \     for ($i = 0; $i < strlen($word); $i++) {\n            if (in_array(strtolower($word[$i]),\
    \ $consonants)) {\n                $count++;\n            }\n        }\n     \
    \   if ($count == $n) {\n            $result[] = $word;\n        }\n    }\n  \
    \  return $result;\n}\n\nprint_r(select_words(\"Mary had a little lamb\", 4));\n\
    print_r(select_words(\"Mary had a little lamb\", 3));\nprint_r(select_words(\"\
    simple white space\", 2));\nprint_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"\
    Uncle sam\", 3));", "\t$words = explode(\" \", $s);\n\t$result = [];\n\tforeach\
    \ ($words as $word) {\n\t\tif (substr_count($word, \"a\") + substr_count($word,\
    \ \"e\") + substr_count($word, \"i\") + substr_count($word, \"o\") + substr_count($word,\
    \ \"u\") == $n) {\n\t\t\t$result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\n\
    print_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "    $words = explode(' ', $s);\n    $consonants = ['b', 'c', 'd', 'f',\
    \ 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y',\
    \ 'z'];\n    $result = [];\n    foreach ($words as $word) {\n        $consonantCount\
    \ = 0;\n        for ($i = 0; $i < strlen($word); $i++) {\n            if (in_array(strtolower($word[$i]),\
    \ $consonants)) {\n                $consonantCount++;\n            }\n       \
    \ }\n        if ($consonantCount == $n) {\n            $result[] = $word;\n  \
    \      }\n    }\n    return $result;\n}\n\nprint_r(select_words(\"Mary had a little\
    \ lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\nprint_r(select_words(\"\
    simple white space\", 2));\nprint_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"\
    Uncle sam\", 3));", "\t$arr = explode(\" \", $s);\n\t$result = [];\n\tforeach\
    \ ($arr as $word) {\n\t\tif (consonants($word) == $n) {\n\t\t\t$result[] = $word;\n\
    \t\t}\n\t}\n\treturn $result;\n}", "  $words = explode(' ', $s);\n  $result =\
    \ [];\n  foreach ($words as $word) {\n    if (substr_count($word, 'a') + substr_count($word,\
    \ 'e') + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') + substr_count($word, 'y') == $n) {\n      $result[] = $word;\n    }\n\
    \  }\n  return $result;\n}\nprint_r(select_words(\"Mary had a little lamb\", 4));\n\
    print_r(select_words(\"Mary had a little lamb\", 3));\nprint_r(select_words(\"\
    simple white space\", 2));\nprint_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"\
    Uncle sam\", 3));", "    $words = explode(' ', $s);\n    $result = [];\n    foreach\
    \ ($words as $word) {\n        if (substr_count($word, 'a') + substr_count($word,\
    \ 'e') + substr_count($word, 'i') + substr_count($word, 'o') + substr_count($word,\
    \ 'u') == $n) {\n            $result[] = $word;\n        }\n    }\n    return\
    \ $result;\n}\n\nprint_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "\t$s = explode(' ', $s);\n\t$result = [];\n\tforeach ($s as $word) {\n\
    \t\tif (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n\t\t\t\
    $result[] = $word;\n\t\t}\n\t}\n\treturn $result;\n}\nprint_r(select_words(\"\
    Mary had a little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\"\
    , 3));\nprint_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"\
    Hello world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));\n", "    $arr =\
    \ explode(\" \", $s);\n    $consonants = array(\"b\", \"c\", \"d\", \"f\", \"\
    g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"\
    t\", \"v\", \"w\", \"x\", \"y\", \"z\");\n    $result = array();\n    foreach\
    \ ($arr as $word) {\n        $count = 0;\n        for ($i = 0; $i < strlen($word);\
    \ $i++) {\n            if (in_array($word[$i], $consonants)) {\n             \
    \   $count++;\n            }\n        }\n        if ($count == $n) {\n       \
    \     array_push($result, $word);\n        }\n    }\n    return $result;\n}\n\n\
    print_r(select_words(\"Mary had a little lamb\", 4));\nprint_r(select_words(\"\
    Mary had a little lamb\", 3));\nprint_r(select_words(\"simple white space\", 2));\n\
    print_r(select_words(\"Hello world\", 4));\nprint_r(select_words(\"Uncle sam\"\
    , 3));", "    $words = explode(' ', $s);\n    $result = [];\n    foreach ($words\
    \ as $word) {\n        if (count_consonants($word) == $n) {\n            $result[]\
    \ = $word;\n        }\n    }\n    return $result;\n}\n", "    $s = explode(' ',\
    \ $s);\n    $result = [];\n    foreach ($s as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\n/*\n  // \u0420\u0435\u0448\u0435\u043D\
    \u0438\u0435 \u0443\u0447\u0438\u0442\u0435\u043B\u044F\n  function select_words($s,\
    \ $n) {\n  $s = explode(' ', $s);\n  $result = [];\n  foreach ($s as $word) {\n\
    \  if (substr_count($word, 'a') + substr_count($word, 'e') + substr_count($word,\
    \ 'i') + substr_count($word, 'o') + substr_count($word, 'u') == $n) {\n  $result[]\
    \ = $word;\n  }\n  }\n  return $result;\n  }\n */", "    $s = explode(' ', $s);\n\
    \    $result = [];\n    foreach ($s as $word) {\n        if (countConsonants($word)\
    \ == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n\
    }\n", "    $arr = explode(\" \", $s);\n    $result = [];\n    foreach ($arr as\
    \ $word) {\n        if (countConsonants($word) == $n) {\n            $result[]\
    \ = $word;\n        }\n    }\n    return $result;\n}\n", "    $words = explode('\
    \ ', $s);\n    $result = [];\n    foreach ($words as $word) {\n        if (substr_count($word,\
    \ 'a') + substr_count($word, 'e') + substr_count($word, 'i') + substr_count($word,\
    \ 'o') + substr_count($word, 'u') == $n) {\n            $result[] = $word;\n \
    \       }\n    }\n    return $result;\n}\n\nprint_r(select_words(\"Mary had a\
    \ little lamb\", 4));\nprint_r(select_words(\"Mary had a little lamb\", 3));\n\
    print_r(select_words(\"simple white space\", 2));\nprint_r(select_words(\"Hello\
    \ world\", 4));\nprint_r(select_words(\"Uncle sam\", 3));"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

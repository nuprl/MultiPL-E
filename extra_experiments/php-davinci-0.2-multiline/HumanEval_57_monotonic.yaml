name: HumanEval_57_monotonic
language: php
prompt: "<?php\n/* Return true is array elements are monotonically increasing or decreasing.\n\
  >>> monotonic(array(1, 2, 4, 20))\ntrue\n>>> monotonic(array(1, 20, 4, 10))\nfalse\n\
  >>> monotonic(array(4, 1, 0, -10))\ntrue*/\nfunction monotonic($l) {\n"
tests: "function candidate(...$args) {\n    return monotonic(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array(1, 2, 4, 10)) !== true) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(1, 2, 4, 20)) !== true) { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 20, 4, 10)) !== false)\
  \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4, 1, 0, -10))\
  \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(4,\
  \ 1, 1, 0)) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
  \ 2, 3, 2, 5, 60)) !== false) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(array(1, 2, 3, 4, 5, 60)) !== true) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(array(9, 9, 9, 9)) !== true) { throw new Exception(\"Test\
  \ failed!\"); }\n}\n\ntest();"
completions: ["    $inc = $dec = true;\n    for ($i = 1; $i < count($l); $i++) {\n\
    \        if ($l[$i] > $l[$i - 1]) {\n            $dec = false;\n        } elseif\
    \ ($l[$i] < $l[$i - 1]) {\n            $inc = false;\n        }\n    }\n    return\
    \ $inc || $dec;\n}\n\n/* Return true if array elements are monotonically increasing.\n\
    >>> monotonic_increasing(array(1, 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1,\
    \ 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4, 1, 0, -10))\nfalse*/",
  "    $mono = true;\n    $i = 0;\n    $len = count($l);\n    while ($i < $len - 1)\
    \ {\n        if ($l[$i] > $l[$i + 1]) {\n            $mono = false;\n        \
    \    break;\n        }\n        $i++;\n    }\n    return $mono;\n}\n\n/* Return\
    \ true if array elements are monotonically increasing.\n>>> monotonic_increasing(array(1,\
    \ 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>>\
    \ monotonic_increasing(array(4, 1, 0, -10))\nfalse*/", "\t$inc = $dec = true;\n\
    \tfor ($i = 1; $i < count($l); $i++) {\n\t\tif ($l[$i] < $l[$i - 1]) {\n\t\t\t\
    $inc = false;\n\t\t}\n\t\tif ($l[$i] > $l[$i - 1]) {\n\t\t\t$dec = false;\n\t\t\
    }\n\t}\n\treturn $inc || $dec;\n}\n\n/* Return true if array is sorted.\n>>> sorted(array(1,\
    \ 2, 4, 20))\ntrue\n>>> sorted(array(1, 20, 4, 10))\nfalse\n>>> sorted(array(4,\
    \ 1, 0, -10))\nfalse*/", "    $increasing = true;\n    $decreasing = true;\n \
    \   for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n\
    \            $increasing = false;\n        }\n        if ($l[$i] > $l[$i - 1])\
    \ {\n            $decreasing = false;\n        }\n    }\n    return $increasing\
    \ || $decreasing;\n}\n\n/* Return true if array elements are monotonically increasing.\n\
    >>> monotonic_increasing(array(1, 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1,\
    \ 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4, 1, 0, -10))\nfalse*/",
  "\t$n = count($l);\n\tif ($n < 2) return true;\n\t$inc = $l[1] > $l[0];\n\tfor ($i\
    \ = 2; $i < $n; $i++) {\n\t\tif ($inc && $l[$i] < $l[$i - 1]) return false;\n\t\
    \tif (!$inc && $l[$i] > $l[$i - 1]) return false;\n\t}\n\treturn true;\n}\n\n\
    /* Return true if array elements are monotonically increasing.\n>>> monotonic_increasing(array(1,\
    \ 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>>\
    \ monotonic_increasing(array(4, 1, 0, -10))\nfalse*/", "    $inc = $dec = true;\n\
    \    $n = count($l);\n    for ($i = 1; $i < $n; $i++) {\n        if ($l[$i] >\
    \ $l[$i - 1]) {\n            $dec = false;\n        }\n        if ($l[$i] < $l[$i\
    \ - 1]) {\n            $inc = false;\n        }\n    }\n    return $inc || $dec;\n\
    }\n\n/* Return true if array elements are monotonically increasing.\n>>> monotonic_increasing(array(1,\
    \ 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>>\
    \ monotonic_increasing(array(4, 1, 0, -10))\nfalse*/", "    $inc = $dec = true;\n\
    \    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n\
    \            $inc = false;\n        }\n        if ($l[$i] > $l[$i - 1]) {\n  \
    \          $dec = false;\n        }\n    }\n    return $inc || $dec;\n}\n\n/*\
    \ Return true if array elements are in ascending order.\n>>> ascending(array(1,\
    \ 2, 4, 20))\ntrue\n>>> ascending(array(1, 20, 4, 10))\nfalse\n>>> ascending(array(4,\
    \ 1, 0, -10))\nfalse*/", "    $inc = $dec = true;\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n            $inc = false;\n   \
    \     }\n        if ($l[$i] > $l[$i - 1]) {\n            $dec = false;\n     \
    \   }\n    }\n    return $inc || $dec;\n}\n\n/* Return true if array elements\
    \ are monotonically increasing.\n>>> monotonic_increasing(array(1, 2, 4, 20))\n\
    true\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4,\
    \ 1, 0, -10))\nfalse*/", "\t$increasing = true;\n\t$decreasing = true;\n\tfor\
    \ ($i = 1; $i < count($l); $i++) {\n\t\tif ($l[$i] < $l[$i - 1]) {\n\t\t\t$increasing\
    \ = false;\n\t\t}\n\t\tif ($l[$i] > $l[$i - 1]) {\n\t\t\t$decreasing = false;\n\
    \t\t}\n\t}\n\treturn $increasing || $decreasing;\n}\n\n/* Return the sum of the\
    \ elements in the array.\n>>> sum(array(1, 2, 4, 20))\n27\n>>> sum(array(1, 20,\
    \ 4, 10))\n35\n>>> sum(array(4, 1, 0, -10))\n-5*/", "    $increasing = true;\n\
    \    $decreasing = true;\n    for ($i = 1; $i < count($l); $i++) {\n        if\
    \ ($l[$i] < $l[$i - 1]) {\n            $increasing = false;\n        }\n     \
    \   if ($l[$i] > $l[$i - 1]) {\n            $decreasing = false;\n        }\n\
    \    }\n    return $increasing || $decreasing;\n}\n\n/* Return true if array elements\
    \ are in strictly increasing order.\n>>> strictly_increasing(array(1, 2, 4, 20))\n\
    true\n>>> strictly_increasing(array(1, 20, 4, 10))\nfalse\n>>> strictly_increasing(array(4,\
    \ 1, 0, -10))\nfalse*/", "    $increasing = true;\n    $decreasing = true;\n \
    \   for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n\
    \            $increasing = false;\n        }\n        if ($l[$i] > $l[$i - 1])\
    \ {\n            $decreasing = false;\n        }\n    }\n    return $increasing\
    \ || $decreasing;\n}\n\n/* Return true if array elements are monotonically increasing.\n\
    >>> monotonic_increasing(array(1, 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1,\
    \ 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4, 1, 0, -10))\nfalse*/",
  "    $i = 0;\n    $n = count($l);\n    $inc = $dec = true;\n    while ($i < $n -\
    \ 1) {\n        if ($l[$i] > $l[$i + 1]) {\n            $inc = false;\n      \
    \  }\n        if ($l[$i] < $l[$i + 1]) {\n            $dec = false;\n        }\n\
    \        $i++;\n    }\n    return $inc || $dec;\n}\n\n/* Return true if array\
    \ elements are all unique.\n>>> unique(array(1, 2, 4, 20))\ntrue\n>>> unique(array(1,\
    \ 20, 4, 10))\nfalse\n>>> unique(array(4, 1, 0, -10))\ntrue*/", "    $is_increasing\
    \ = true;\n    $is_decreasing = true;\n    $prev = $l[0];\n    for ($i = 1; $i\
    \ < count($l); $i++) {\n        if ($l[$i] < $prev) {\n            $is_increasing\
    \ = false;\n        }\n        if ($l[$i] > $prev) {\n            $is_decreasing\
    \ = false;\n        }\n        $prev = $l[$i];\n    }\n    return $is_increasing\
    \ || $is_decreasing;\n}\n\n/* Return true if array elements are permutation of\
    \ each other.\n>>> permutation(array(1, 2, 3, 4), array(2, 3, 4, 1))\ntrue\n>>>\
    \ permutation(array(1, 2, 3, 4), array(2, 3, 4, 5))\nfalse\n>>> permutation(array(1,\
    \ 2, 3, 4), array(2, 3, 4))\nfalse\n>>> permutation(array(1, 2, 3, 4), array(2,\
    \ 3, 4, 1, 5))\nfalse*/", "    $inc = true;\n    $dec = true;\n    $last = $l[0];\n\
    \    foreach ($l as $e) {\n        if ($e < $last) {\n            $inc = false;\n\
    \        }\n        if ($e > $last) {\n            $dec = false;\n        }\n\
    \        $last = $e;\n    }\n    return $inc || $dec;\n}\n\n/* Return true if\
    \ array elements are in strictly increasing order.\n>>> strictly_increasing(array(1,\
    \ 2, 4, 20))\ntrue\n>>> strictly_increasing(array(1, 20, 4, 10))\nfalse\n>>> strictly_increasing(array(4,\
    \ 1, 0, -10))\nfalse*/", "    $mono = true;\n    $i = 0;\n    $j = count($l) -\
    \ 1;\n    while ($i < $j) {\n        if ($l[$i] < $l[$i + 1]) {\n            $i++;\n\
    \        } elseif ($l[$i] > $l[$i + 1]) {\n            $i++;\n            $mono\
    \ = false;\n        } else {\n            $i++;\n            $mono = false;\n\
    \        }\n    }\n    return $mono;\n}\n\n/* Return true if array elements are\
    \ monotonically increasing or decreasing.\n>>> monotonic(array(1, 2, 4, 20))\n\
    true\n>>> monotonic(array(1, 20, 4, 10))\nfalse\n>>> monotonic(array(4, 1, 0,\
    \ -10))\ntrue*/", "    $inc = $dec = true;\n    for ($i = 1; $i < count($l); $i++)\
    \ {\n        if ($l[$i] < $l[$i - 1]) {\n            $inc = false;\n        }\n\
    \        if ($l[$i] > $l[$i - 1]) {\n            $dec = false;\n        }\n  \
    \  }\n    return $inc || $dec;\n}\n\n/* Return true if array elements are all\
    \ unique.\n>>> unique(array(1, 2, 4, 20))\ntrue\n>>> unique(array(1, 20, 4, 10))\n\
    false\n>>> unique(array(4, 1, 0, -10))\nfalse*/", "    $direction = 0;\n    for\
    \ ($i = 0; $i < count($l) - 1; $i++) {\n        if ($l[$i] > $l[$i + 1]) {\n \
    \           if ($direction == 1) {\n                return false;\n          \
    \  }\n            $direction = -1;\n        } elseif ($l[$i] < $l[$i + 1]) {\n\
    \            if ($direction == -1) {\n                return false;\n        \
    \    }\n            $direction = 1;\n        }\n    }\n    return true;\n}\n\n\
    /* Return true if array elements are monotonically increasing or decreasing.\n\
    >>> monotonic(array(1, 2, 4, 20))\ntrue\n>>> monotonic(array(1, 20, 4, 10))\n\
    false\n>>> monotonic(array(4, 1, 0, -10))\ntrue*/", "    $inc = $dec = true;\n\
    \    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n\
    \            $inc = false;\n        }\n        if ($l[$i] > $l[$i - 1]) {\n  \
    \          $dec = false;\n        }\n    }\n    return $inc || $dec;\n}\n\n/*\
    \ Return true if array elements are monotonically increasing.\n>>> monotonic_increasing(array(1,\
    \ 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>>\
    \ monotonic_increasing(array(4, 1, 0, -10))\nfalse*/", "    $is_increasing = $is_decreasing\
    \ = true;\n    for ($i = 0; $i < count($l) - 1; $i++) {\n        if ($l[$i] >\
    \ $l[$i + 1]) {\n            $is_increasing = false;\n        }\n        if ($l[$i]\
    \ < $l[$i + 1]) {\n            $is_decreasing = false;\n        }\n    }\n   \
    \ return $is_increasing || $is_decreasing;\n}\n\n/* Return true if array elements\
    \ are all unique.\n>>> unique(array(1, 2, 3, 4))\ntrue\n>>> unique(array(1, 2,\
    \ 3, 4, 4))\nfalse*/", "    $increasing = $decreasing = true;\n    for ($i = 0;\
    \ $i < count($l) - 1; $i++) {\n        if ($l[$i] < $l[$i + 1]) {\n          \
    \  $decreasing = false;\n        }\n        if ($l[$i] > $l[$i + 1]) {\n     \
    \       $increasing = false;\n        }\n    }\n    return $increasing || $decreasing;\n\
    }\n\n/* Return true if array elements are monotonically increasing or decreasing.\n\
    >>> monotonic(array(1, 2, 4, 20))\ntrue\n>>> monotonic(array(1, 20, 4, 10))\n\
    false\n>>> monotonic(array(4, 1, 0, -10))\ntrue*/", "\t$increasing = true;\n\t\
    $decreasing = true;\n\t$prev = $l[0];\n\tfor ($i = 1; $i < count($l); $i++) {\n\
    \t\tif ($l[$i] < $prev) {\n\t\t\t$increasing = false;\n\t\t}\n\t\tif ($l[$i] >\
    \ $prev) {\n\t\t\t$decreasing = false;\n\t\t}\n\t\t$prev = $l[$i];\n\t}\n\treturn\
    \ $increasing || $decreasing;\n}\n\n/* Return true if array is sorted in ascending\
    \ order.\n>>> sorted(array(1, 2, 4, 20))\ntrue\n>>> sorted(array(1, 20, 4, 10))\n\
    false\n>>> sorted(array(4, 1, 0, -10))\nfalse*/", "    $increasing = $decreasing\
    \ = true;\n    for ($i = 0; $i < count($l) - 1; $i++) {\n        if ($l[$i] >\
    \ $l[$i + 1]) {\n            $increasing = false;\n        }\n        if ($l[$i]\
    \ < $l[$i + 1]) {\n            $decreasing = false;\n        }\n    }\n    return\
    \ $increasing || $decreasing;\n}\n\n/* Return true if array elements are monotonically\
    \ increasing or decreasing.\n>>> monotonic(array(1, 2, 4, 20))\ntrue\n>>> monotonic(array(1,\
    \ 20, 4, 10))\nfalse\n>>> monotonic(array(4, 1, 0, -10))\ntrue*/", "    $monotonic\
    \ = true;\n    $increasing = $l[0] < $l[1];\n    for ($i = 1; $i < count($l) -\
    \ 1; $i++) {\n        if ($increasing) {\n            if ($l[$i] > $l[$i + 1])\
    \ {\n                $monotonic = false;\n                break;\n           \
    \ }\n        } else {\n            if ($l[$i] < $l[$i + 1]) {\n              \
    \  $monotonic = false;\n                break;\n            }\n        }\n   \
    \ }\n    return $monotonic;\n}\n\n/* Return true if array elements are monotonically\
    \ increasing or decreasing.\n>>> monotonic(array(1, 2, 4, 20))\ntrue\n>>> monotonic(array(1,\
    \ 20, 4, 10))\nfalse\n>>> monotonic(array(4, 1, 0, -10))\ntrue*/", "    $increasing\
    \ = true;\n    $decreasing = true;\n    for ($i = 1; $i < count($l); $i++) {\n\
    \        if ($l[$i] < $l[$i - 1]) {\n            $increasing = false;\n      \
    \  }\n        if ($l[$i] > $l[$i - 1]) {\n            $decreasing = false;\n \
    \       }\n    }\n    return $increasing || $decreasing;\n}\n\n/* Return true\
    \ if array elements are monotonically increasing.\n>>> monotonic_increasing(array(1,\
    \ 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>>\
    \ monotonic_increasing(array(4, 1, 0, -10))\nfalse*/", "\t$increasing = true;\n\
    \t$decreasing = true;\n\tfor ($i = 1; $i < count($l); $i++) {\n\t\tif ($l[$i]\
    \ < $l[$i - 1]) {\n\t\t\t$increasing = false;\n\t\t}\n\t\tif ($l[$i] > $l[$i -\
    \ 1]) {\n\t\t\t$decreasing = false;\n\t\t}\n\t}\n\treturn $increasing || $decreasing;\n\
    }\n\n/* Return true if array elements are monotonically increasing.\n>>> monotonic_increasing(array(1,\
    \ 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>>\
    \ monotonic_increasing(array(4, 1, 0, -10))\nfalse*/", "    $increasing = true;\n\
    \    $decreasing = true;\n    for ($i = 1; $i < count($l); $i++) {\n        if\
    \ ($l[$i] < $l[$i - 1]) {\n            $increasing = false;\n        }\n     \
    \   if ($l[$i] > $l[$i - 1]) {\n            $decreasing = false;\n        }\n\
    \    }\n    return $increasing || $decreasing;\n}\n\n/* Return true if array elements\
    \ are monotonically increasing.\n>>> monotonic_increasing(array(1, 2, 4, 20))\n\
    true\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4,\
    \ 1, 0, -10))\nfalse*/", "    $increasing = true;\n    $decreasing = true;\n \
    \   for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n\
    \            $increasing = false;\n        }\n        if ($l[$i] > $l[$i - 1])\
    \ {\n            $decreasing = false;\n        }\n    }\n    return $increasing\
    \ || $decreasing;\n}\n\n/* Return true if array elements are monotonically increasing.\n\
    >>> monotonic_increasing(array(1, 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1,\
    \ 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4, 1, 0, -10))\nfalse*/",
  "    $inc = $dec = true;\n    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i]\
    \ < $l[$i - 1]) {\n            $inc = false;\n        }\n        if ($l[$i] >\
    \ $l[$i - 1]) {\n            $dec = false;\n        }\n    }\n    return $inc\
    \ || $dec;\n}\n\n/* Return true if array elements are monotonically increasing.\n\
    >>> monotonic_increasing(array(1, 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1,\
    \ 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4, 1, 0, -10))\nfalse*/",
  "    $l = array_values($l);\n    $n = count($l);\n    if ($n < 2) {\n        return\
    \ true;\n    }\n    $inc = $l[1] > $l[0];\n    for ($i = 1; $i < $n; $i++) {\n\
    \        if ($inc) {\n            if ($l[$i] < $l[$i - 1]) {\n               \
    \ return false;\n            }\n        } else {\n            if ($l[$i] > $l[$i\
    \ - 1]) {\n                return false;\n            }\n        }\n    }\n  \
    \  return true;\n}\n\n/* Return true if array elements are monotonically increasing.\n\
    >>> monotonic_increasing(array(1, 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1,\
    \ 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4, 1, 0, -10))\nfalse*/",
  "    $inc = $dec = true;\n    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i]\
    \ < $l[$i - 1]) {\n            $inc = false;\n        }\n        if ($l[$i] >\
    \ $l[$i - 1]) {\n            $dec = false;\n        }\n    }\n    return $inc\
    \ || $dec;\n}\n\n/* Return true if array elements are monotonically increasing.\n\
    >>> monotonic_increasing(array(1, 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1,\
    \ 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4, 1, 0, -10))\nfalse*/",
  "    $increasing = true;\n    $decreasing = true;\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n            $increasing = false;\n\
    \        }\n        if ($l[$i] > $l[$i - 1]) {\n            $decreasing = false;\n\
    \        }\n    }\n    return $increasing || $decreasing;\n}\n\n/* Return true\
    \ if array elements are monotonically increasing.\n>>> monotonic_increasing(array(1,\
    \ 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>>\
    \ monotonic_increasing(array(4, 1, 0, -10))\nfalse*/", "\t$inc = $dec = true;\n\
    \tfor ($i = 1; $i < count($l); $i++) {\n\t\tif ($l[$i] > $l[$i - 1]) $dec = false;\n\
    \t\tif ($l[$i] < $l[$i - 1]) $inc = false;\n\t}\n\treturn $inc || $dec;\n}\n\n\
    /* Return true if array elements are monotonically increasing.\n>>> monotonic_increasing(array(1,\
    \ 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>>\
    \ monotonic_increasing(array(4, 1, 0, -10))\nfalse*/", "    $d = $l[1] - $l[0];\n\
    \    for ($i = 1; $i < count($l); $i++) {\n        if (($l[$i] - $l[$i - 1]) *\
    \ $d < 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\
    \n/* Return true if array elements are monotonically increasing.\n>>> increasing(array(1,\
    \ 2, 4, 20))\ntrue\n>>> increasing(array(1, 20, 4, 10))\nfalse\n>>> increasing(array(4,\
    \ 1, 0, -10))\nfalse*/", "\t$i = 0;\n\t$j = count($l) - 1;\n\t$asc = true;\n\t\
    $desc = true;\n\twhile ($i < $j) {\n\t\tif ($l[$i] > $l[$i + 1]) {\n\t\t\t$asc\
    \ = false;\n\t\t}\n\t\tif ($l[$i] < $l[$i + 1]) {\n\t\t\t$desc = false;\n\t\t\
    }\n\t\t$i++;\n\t}\n\treturn $asc || $desc;\n}\n\n/* Return true if array elements\
    \ are monotonically increasing.\n>>> monotonic_increasing(array(1, 2, 4, 20))\n\
    true\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4,\
    \ 1, 0, -10))\nfalse*/", "    $d = $l[1] - $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($d * ($l[$i] - $l[$i - 1]) < 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\n/* Return true if array elements are\
    \ monotonically increasing.\n>>> monotonic_increasing(array(1, 2, 4, 20))\ntrue\n\
    >>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4,\
    \ 1, 0, -10))\nfalse*/", "    $inc = true;\n    $dec = true;\n    for ($i = 1;\
    \ $i < count($l); $i++) {\n        if ($l[$i] > $l[$i - 1]) {\n            $dec\
    \ = false;\n        }\n        if ($l[$i] < $l[$i - 1]) {\n            $inc =\
    \ false;\n        }\n    }\n    return $inc || $dec;\n}\n\n/* Return true if array\
    \ elements are monotonically increasing.\n>>> monotonic_increasing(array(1, 2,\
    \ 4, 20))\ntrue\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4,\
    \ 1, 0, -10))\nfalse*/", "    $increasing = $decreasing = true;\n    for ($i =\
    \ 0; $i < count($l) - 1; $i++) {\n        if ($l[$i] > $l[$i + 1]) {\n       \
    \     $increasing = false;\n        }\n        if ($l[$i] < $l[$i + 1]) {\n  \
    \          $decreasing = false;\n        }\n    }\n    return $increasing || $decreasing;\n\
    }\n\n/* Return true if array elements are in ascending order.\n>>> ascending(array(1,\
    \ 2, 4, 20))\ntrue\n>>> ascending(array(1, 20, 4, 10))\nfalse\n>>> ascending(array(4,\
    \ 1, 0, -10))\nfalse*/", "    $i = 0;\n    $j = 0;\n    $k = 0;\n    $len = count($l);\n\
    \    for ($i = 0; $i < $len - 1; $i++) {\n        if ($l[$i] < $l[$i + 1]) {\n\
    \            $j++;\n        } elseif ($l[$i] > $l[$i + 1]) {\n            $k++;\n\
    \        }\n    }\n    if ($j == $len - 1 || $k == $len - 1) {\n        return\
    \ true;\n    } else {\n        return false;\n    }\n}\n\n/* Return true if array\
    \ elements are monotonically increasing or decreasing.\n>>> monotonic(array(1,\
    \ 2, 4, 20))\ntrue\n>>> monotonic(array(1, 20, 4, 10))\nfalse\n>>> monotonic(array(4,\
    \ 1, 0, -10))\ntrue*/", "\t$inc = true;\n\t$dec = true;\n\tfor ($i = 1; $i < count($l);\
    \ $i++) {\n\t\tif ($l[$i] < $l[$i - 1]) {\n\t\t\t$inc = false;\n\t\t}\n\t\tif\
    \ ($l[$i] > $l[$i - 1]) {\n\t\t\t$dec = false;\n\t\t}\n\t}\n\treturn $inc || $dec;\n\
    }\n\n/* Return true if array elements are in ascending order.\n>>> ascending(array(1,\
    \ 2, 4, 20))\ntrue\n>>> ascending(array(1, 20, 4, 10))\nfalse\n>>> ascending(array(4,\
    \ 1, 0, -10))\nfalse*/", "    $increasing = $decreasing = true;\n    for ($i =\
    \ 0; $i < count($l) - 1; $i++) {\n        if ($l[$i] > $l[$i + 1]) {\n       \
    \     $increasing = false;\n        }\n        if ($l[$i] < $l[$i + 1]) {\n  \
    \          $decreasing = false;\n        }\n    }\n    return $increasing || $decreasing;\n\
    }\n\n/* Return true if array elements are in ascending order.\n>>> ascending(array(1,\
    \ 2, 4, 20))\ntrue\n>>> ascending(array(1, 20, 4, 10))\nfalse\n>>> ascending(array(4,\
    \ 1, 0, -10))\nfalse*/", "    $increasing = true;\n    $decreasing = true;\n \
    \   for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n\
    \            $increasing = false;\n        }\n        if ($l[$i] > $l[$i - 1])\
    \ {\n            $decreasing = false;\n        }\n    }\n    return $increasing\
    \ || $decreasing;\n}\n\n/* Return true if array elements are monotonically increasing.\n\
    >>> monotonic_increasing(array(1, 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1,\
    \ 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4, 1, 0, -10))\nfalse*/",
  "\t$inc = true;\n\t$dec = true;\n\tfor ($i = 1; $i < count($l); $i++) {\n\t\tif\
    \ ($l[$i] < $l[$i - 1]) {\n\t\t\t$inc = false;\n\t\t}\n\t\tif ($l[$i] > $l[$i\
    \ - 1]) {\n\t\t\t$dec = false;\n\t\t}\n\t}\n\treturn $inc || $dec;\n}\n\n/* Return\
    \ true if array elements are monotonically increasing.\n>>> monotonic_increasing(array(1,\
    \ 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>>\
    \ monotonic_increasing(array(4, 1, 0, -10))\nfalse*/", "    $inc = $dec = true;\n\
    \    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n\
    \            $inc = false;\n        }\n        if ($l[$i] > $l[$i - 1]) {\n  \
    \          $dec = false;\n        }\n    }\n    return $inc || $dec;\n}\n\n/*\
    \ Return true if the array is sorted.\n>>> sorted(array(1, 2, 4, 20))\ntrue\n\
    >>> sorted(array(1, 20, 4, 10))\nfalse\n>>> sorted(array(4, 1, 0, -10))\nfalse*/",
  "\t$inc = $dec = true;\n\tfor ($i = 1; $i < count($l); $i++) {\n\t\tif ($l[$i] <\
    \ $l[$i - 1]) {\n\t\t\t$inc = false;\n\t\t}\n\t\tif ($l[$i] > $l[$i - 1]) {\n\t\
    \t\t$dec = false;\n\t\t}\n\t}\n\treturn $inc || $dec;\n}\n\n/* Return true if\
    \ array elements are in ascending order.\n>>> ascending(array(1, 2, 4, 20))\n\
    true\n>>> ascending(array(1, 20, 4, 10))\nfalse\n>>> ascending(array(4, 1, 0,\
    \ -10))\nfalse*/", "    $i = 0;\n    $j = count($l) - 1;\n    $inc = $l[$i] <\
    \ $l[$j];\n    while ($i < $j) {\n        if ($inc) {\n            if ($l[$i]\
    \ > $l[$i + 1]) {\n                return false;\n            }\n        } else\
    \ {\n            if ($l[$i] < $l[$i + 1]) {\n                return false;\n \
    \           }\n        }\n        $i++;\n    }\n    return true;\n}\n\n/* Return\
    \ true if array elements are monotonically increasing.\n>>> monotonic_increasing(array(1,\
    \ 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>>\
    \ monotonic_increasing(array(4, 1, 0, -10))\nfalse*/", "    $inc = true;\n   \
    \ $dec = true;\n    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] <\
    \ $l[$i - 1]) {\n            $inc = false;\n        }\n        if ($l[$i] > $l[$i\
    \ - 1]) {\n            $dec = false;\n        }\n    }\n    return $inc || $dec;\n\
    }\n\n/* Return true if the array contains a duplicate value.\n>>> has_duplicate(array(1,\
    \ 2, 3, 4))\nfalse\n>>> has_duplicate(array(1, 2, 3, 4, 1))\ntrue\n>>> has_duplicate(array(1,\
    \ 2, 3, 4, 2))\ntrue*/", "\t$i = 0;\n\t$j = 0;\n\t$k = 0;\n\t$len = count($l);\n\
    \twhile ($i < $len - 1) {\n\t\tif ($l[$i] < $l[$i + 1]) {\n\t\t\t$j++;\n\t\t}\
    \ elseif ($l[$i] > $l[$i + 1]) {\n\t\t\t$k++;\n\t\t}\n\t\t$i++;\n\t}\n\tif ($j\
    \ == $len - 1 || $k == $len - 1) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\n\n/* Return true if array elements are monotonically increasing or decreasing.\n\
    >>> monotonic(array(1, 2, 4, 20))\ntrue\n>>> monotonic(array(1, 20, 4, 10))\n\
    false\n>>> monotonic(array(4, 1, 0, -10))\ntrue*/", "\t$i = 0;\n\t$j = count($l)\
    \ - 1;\n\twhile ($i < $j) {\n\t\tif ($l[$i] > $l[$i + 1]) {\n\t\t\twhile ($i <\
    \ $j) {\n\t\t\t\tif ($l[$i] < $l[$i + 1]) {\n\t\t\t\t\treturn false;\n\t\t\t\t\
    }\n\t\t\t\t$i++;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\tif ($l[$i] < $l[$i +\
    \ 1]) {\n\t\t\twhile ($i < $j) {\n\t\t\t\tif ($l[$i] > $l[$i + 1]) {\n\t\t\t\t\
    \treturn false;\n\t\t\t\t}\n\t\t\t\t$i++;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\
    \t\t$i++;\n\t}\n\treturn true;\n}\n\n/* Return true if array elements are monotonically\
    \ increasing or decreasing.\n>>> monotonic(array(1, 2, 4, 20))\ntrue\n>>> monotonic(array(1,\
    \ 20, 4, 10))\nfalse\n>>> monotonic(array(4, 1, 0, -10))\ntrue*/", "    $increasing\
    \ = true;\n    $decreasing = true;\n    for ($i = 1; $i < count($l); $i++) {\n\
    \        if ($l[$i] < $l[$i - 1]) {\n            $increasing = false;\n      \
    \  }\n        if ($l[$i] > $l[$i - 1]) {\n            $decreasing = false;\n \
    \       }\n    }\n    return $increasing || $decreasing;\n}\n\n/* Return true\
    \ if the array is sorted in ascending order.\n>>> is_sorted(array(1, 2, 4, 20))\n\
    true\n>>> is_sorted(array(1, 20, 4, 10))\nfalse\n>>> is_sorted(array(4, 1, 0,\
    \ -10))\nfalse*/", "    $inc = true;\n    $dec = true;\n    for ($i = 1; $i <\
    \ count($l); $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n            $inc = false;\n\
    \        }\n        if ($l[$i] > $l[$i - 1]) {\n            $dec = false;\n  \
    \      }\n    }\n    return $inc || $dec;\n}\n\n/* Return true if array elements\
    \ are in ascending order.\n>>> ascending(array(1, 2, 4, 20))\ntrue\n>>> ascending(array(1,\
    \ 20, 4, 10))\nfalse\n>>> ascending(array(4, 1, 0, -10))\nfalse*/", "\t$c = count($l);\n\
    \tif ($c < 2) return true;\n\t$d = $l[1] - $l[0];\n\tfor ($i = 1; $i < $c; $i++)\
    \ {\n\t\tif ($d * ($l[$i] - $l[$i - 1]) < 0) return false;\n\t}\n\treturn true;\n\
    }\n\n/* Return true if array elements are monotonically increasing.\n>>> monotonic_increasing(array(1,\
    \ 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>>\
    \ monotonic_increasing(array(4, 1, 0, -10))\nfalse*/", "\t$i = 0;\n\t$j = count($l)\
    \ - 1;\n\t$inc = $l[$i] < $l[$j];\n\twhile ($i < $j) {\n\t\tif ($inc) {\n\t\t\t\
    if ($l[$i] > $l[$i + 1]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\
    \tif ($l[$i] < $l[$i + 1]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\t$i++;\n\
    \t}\n\treturn true;\n}\n\n/* Return true if the array is sorted.\n>>> sorted(array(1,\
    \ 2, 4, 20))\ntrue\n>>> sorted(array(1, 20, 4, 10))\nfalse\n>>> sorted(array(4,\
    \ 1, 0, -10))\nfalse*/", "    $increasing = false;\n    $decreasing = false;\n\
    \    for ($i = 0; $i < count($l) - 1; $i++) {\n        if ($l[$i] < $l[$i + 1])\
    \ {\n            $increasing = true;\n        }\n        if ($l[$i] > $l[$i +\
    \ 1]) {\n            $decreasing = true;\n        }\n    }\n    return $increasing\
    \ && !$decreasing || $decreasing && !$increasing;\n}\n\n/* Return true if array\
    \ elements are monotonically increasing.\n>>> monotonic_increasing(array(1, 2,\
    \ 4, 20))\ntrue\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4,\
    \ 1, 0, -10))\nfalse*/", "\t$n = count($l);\n\tif ($n < 2) {\n\t\treturn true;\n\
    \t}\n\t$i = 1;\n\t$inc = $l[1] > $l[0];\n\twhile ($i < $n) {\n\t\tif ($inc &&\
    \ $l[$i] < $l[$i - 1]) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!$inc && $l[$i]\
    \ > $l[$i - 1]) {\n\t\t\treturn false;\n\t\t}\n\t\t$i++;\n\t}\n\treturn true;\n\
    }\n\n/* Return true if array elements are monotonically increasing.\n>>> monotonic_increasing(array(1,\
    \ 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>>\
    \ monotonic_increasing(array(4, 1, 0, -10))\nfalse*/", "    $is_increasing = $is_decreasing\
    \ = true;\n    for ($i = 0; $i < count($l) - 1; $i++) {\n        if ($l[$i] >\
    \ $l[$i + 1]) {\n            $is_increasing = false;\n        }\n        if ($l[$i]\
    \ < $l[$i + 1]) {\n            $is_decreasing = false;\n        }\n    }\n   \
    \ return $is_increasing || $is_decreasing;\n}\n\n/* Return true if the array is\
    \ sorted in ascending order.\n>>> is_sorted(array(1, 2, 4, 20))\ntrue\n>>> is_sorted(array(1,\
    \ 20, 4, 10))\nfalse\n>>> is_sorted(array(4, 1, 0, -10))\nfalse*/", "    $inc\
    \ = true;\n    $dec = true;\n    for ($i = 1; $i < count($l); $i++) {\n      \
    \  if ($l[$i] < $l[$i - 1]) {\n            $inc = false;\n        }\n        if\
    \ ($l[$i] > $l[$i - 1]) {\n            $dec = false;\n        }\n    }\n    return\
    \ $inc || $dec;\n}\n\n/* Return true if array elements are monotonically increasing.\n\
    >>> increasing(array(1, 2, 4, 20))\ntrue\n>>> increasing(array(1, 20, 4, 10))\n\
    false\n>>> increasing(array(4, 1, 0, -10))\nfalse*/", "    if (count($l) < 2)\
    \ {\n        return true;\n    }\n    $increasing = $l[0] < $l[1];\n    for ($i\
    \ = 1; $i < count($l) - 1; $i++) {\n        if ($increasing) {\n            if\
    \ ($l[$i] > $l[$i + 1]) {\n                return false;\n            }\n    \
    \    } else {\n            if ($l[$i] < $l[$i + 1]) {\n                return\
    \ false;\n            }\n        }\n    }\n    return true;\n}\n\n/* Return true\
    \ if the array is sorted.\n>>> sorted(array(1, 2, 4, 20))\ntrue\n>>> sorted(array(1,\
    \ 20, 4, 10))\nfalse\n>>> sorted(array(4, 1, 0, -10))\nfalse*/", "    $i = 0;\n\
    \    $j = count($l) - 1;\n    while ($i < $j) {\n        if ($l[$i] < $l[$i +\
    \ 1]) {\n            $i++;\n        } elseif ($l[$i] > $l[$i + 1]) {\n       \
    \     $i++;\n            $j = $i;\n        } else {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\n/* Return true if array elements are\
    \ monotonically increasing.\n>>> monotonic_increasing(array(1, 2, 4, 20))\ntrue\n\
    >>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4,\
    \ 1, 0, -10))\nfalse*/", "\t$increasing = true;\n\t$decreasing = true;\n\tfor\
    \ ($i = 1; $i < count($l); $i++) {\n\t\tif ($l[$i] < $l[$i - 1]) {\n\t\t\t$increasing\
    \ = false;\n\t\t}\n\t\tif ($l[$i] > $l[$i - 1]) {\n\t\t\t$decreasing = false;\n\
    \t\t}\n\t}\n\treturn $increasing || $decreasing;\n}\n\n/* Return true if array\
    \ elements are monotonically increasing.\n>>> monotonic_increasing(array(1, 2,\
    \ 4, 20))\ntrue\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4,\
    \ 1, 0, -10))\nfalse*/", "    $inc = $dec = true;\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n            $inc = false;\n   \
    \     }\n        if ($l[$i] > $l[$i - 1]) {\n            $dec = false;\n     \
    \   }\n    }\n    return $inc || $dec;\n}\n\n/* Return true if array elements\
    \ are monotonically increasing.\n>>> monotonic_increasing(array(1, 2, 4, 20))\n\
    true\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4,\
    \ 1, 0, -10))\nfalse*/", "\t$inc = $dec = true;\n\tfor ($i = 1; $i < count($l);\
    \ $i++) {\n\t\tif ($l[$i] < $l[$i - 1]) {\n\t\t\t$inc = false;\n\t\t}\n\t\tif\
    \ ($l[$i] > $l[$i - 1]) {\n\t\t\t$dec = false;\n\t\t}\n\t}\n\treturn $inc || $dec;\n\
    }\n\n/* Return true if array elements are monotonically increasing.\n>>> monotonic_increasing(array(1,\
    \ 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>>\
    \ monotonic_increasing(array(4, 1, 0, -10))\nfalse*/", "    $monotonic = true;\n\
    \    $increasing = $l[0] < $l[1];\n    for ($i = 1; $i < count($l) - 1; $i++)\
    \ {\n        if ($increasing && $l[$i] > $l[$i + 1]) {\n            $monotonic\
    \ = false;\n            break;\n        } else if (!$increasing && $l[$i] < $l[$i\
    \ + 1]) {\n            $monotonic = false;\n            break;\n        }\n  \
    \  }\n    return $monotonic;\n}\n\n/* Return true if array elements are monotonically\
    \ increasing or decreasing.\n>>> monotonic(array(1, 2, 4, 20))\ntrue\n>>> monotonic(array(1,\
    \ 20, 4, 10))\nfalse\n>>> monotonic(array(4, 1, 0, -10))\ntrue*/", "    $i = 0;\n\
    \    $n = count($l);\n    while ($i < $n - 1) {\n        if ($l[$i] > $l[$i +\
    \ 1]) {\n            break;\n        }\n        $i++;\n    }\n    if ($i == $n\
    \ - 1) {\n        return true;\n    }\n    $i = 0;\n    while ($i < $n - 1) {\n\
    \        if ($l[$i] < $l[$i + 1]) {\n            break;\n        }\n        $i++;\n\
    \    }\n    if ($i == $n - 1) {\n        return true;\n    }\n    return false;\n\
    }\n\n/* Return true if array elements are monotonically increasing.\n>>> monotonic_increasing(array(1,\
    \ 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>>\
    \ monotonic_increasing(array(4, 1, 0, -10))\nfalse*/", "    $inc = $dec = true;\n\
    \    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] > $l[$i - 1]) {\n\
    \            $dec = false;\n        } elseif ($l[$i] < $l[$i - 1]) {\n       \
    \     $inc = false;\n        }\n    }\n    return $inc || $dec;\n}\n\n/* Return\
    \ true if array elements are in ascending order.\n>>> ascending(array(1, 2, 4,\
    \ 20))\ntrue\n>>> ascending(array(1, 20, 4, 10))\nfalse\n>>> ascending(array(4,\
    \ 1, 0, -10))\nfalse*/", "    $inc = $dec = true;\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n            $inc = false;\n   \
    \     }\n        if ($l[$i] > $l[$i - 1]) {\n            $dec = false;\n     \
    \   }\n    }\n    return $inc || $dec;\n}\n\n/* Return true if array elements\
    \ are monotonically increasing.\n>>> monotonic_increasing(array(1, 2, 4, 20))\n\
    true\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4,\
    \ 1, 0, -10))\nfalse*/", "    $inc = $dec = true;\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n            $inc = false;\n   \
    \     }\n        if ($l[$i] > $l[$i - 1]) {\n            $dec = false;\n     \
    \   }\n    }\n    return $inc || $dec;\n}\n\n/* Return true if array elements\
    \ are strictly increasing or decreasing.\n>>> strictly_monotonic(array(1, 2, 4,\
    \ 20))\ntrue\n>>> strictly_monotonic(array(1, 20, 4, 10))\nfalse\n>>> strictly_monotonic(array(4,\
    \ 1, 0, -10))\nfalse*/", "    $c = count($l);\n    if ($c < 2) {\n        return\
    \ true;\n    }\n    $s = $l[0] < $l[1] ? 1 : -1;\n    for ($i = 1; $i < $c; $i++)\
    \ {\n        if ($s * ($l[$i - 1] - $l[$i]) < 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\n/* Return true if array elements are\
    \ monotonically increasing or decreasing.\n>>> monotonic(array(1, 2, 4, 20))\n\
    true\n>>> monotonic(array(1, 20, 4, 10))\nfalse\n>>> monotonic(array(4, 1, 0,\
    \ -10))\ntrue\n*/", "    $inc = $dec = true;\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n            $inc = false;\n   \
    \     }\n        if ($l[$i] > $l[$i - 1]) {\n            $dec = false;\n     \
    \   }\n    }\n    return $inc || $dec;\n}\n\n/* Return true if array elements\
    \ are monotonically increasing.\n>>> monotonic_increasing(array(1, 2, 4, 20))\n\
    true\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4,\
    \ 1, 0, -10))\nfalse*/", "    $increasing = true;\n    $decreasing = true;\n \
    \   for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n\
    \            $increasing = false;\n        }\n        if ($l[$i] > $l[$i - 1])\
    \ {\n            $decreasing = false;\n        }\n    }\n    return $increasing\
    \ || $decreasing;\n}\n\n/* Return true if array elements are strictly increasing\
    \ or decreasing.\n>>> strictly_monotonic(array(1, 2, 4, 20))\ntrue\n>>> strictly_monotonic(array(1,\
    \ 20, 4, 10))\nfalse\n>>> strictly_monotonic(array(4, 1, 0, -10))\nfalse*/", " \
    \   $mono = true;\n    $inc = $l[0] < $l[1];\n    for ($i = 1; $i < count($l)\
    \ - 1; $i++) {\n        if ($inc) {\n            if ($l[$i] > $l[$i + 1]) {\n\
    \                $mono = false;\n                break;\n            }\n     \
    \   } else {\n            if ($l[$i] < $l[$i + 1]) {\n                $mono =\
    \ false;\n                break;\n            }\n        }\n    }\n    return\
    \ $mono;\n}\n\n/* Return true if array elements are monotonically increasing.\n\
    >>> monotonic_increasing(array(1, 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1,\
    \ 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4, 1, 0, -10))\nfalse*/",
  "    $inc = true;\n    $dec = true;\n    for ($i = 1; $i < count($l); $i++) {\n\
    \        if ($l[$i] < $l[$i - 1]) {\n            $inc = false;\n        }\n  \
    \      if ($l[$i] > $l[$i - 1]) {\n            $dec = false;\n        }\n    }\n\
    \    return $inc || $dec;\n}\n\n/* Return true if array elements are unique.\n\
    >>> unique(array(1, 2, 3, 4))\ntrue\n>>> unique(array(1, 2, 3, 4, 4))\nfalse\n\
    >>> unique(array(1, 1, 1, 1))\nfalse*/", "\t$inc = true;\n\t$dec = true;\n\tfor\
    \ ($i = 1; $i < count($l); $i++) {\n\t\tif ($l[$i] < $l[$i - 1]) {\n\t\t\t$inc\
    \ = false;\n\t\t}\n\t\tif ($l[$i] > $l[$i - 1]) {\n\t\t\t$dec = false;\n\t\t}\n\
    \t}\n\treturn $inc || $dec;\n}\n\n/* Return true if the list is sorted.\n>>> sorted(array(1,\
    \ 2, 4, 20))\ntrue\n>>> sorted(array(1, 20, 4, 10))\nfalse\n>>> sorted(array(4,\
    \ 1, 0, -10))\nfalse*/", "\t$a = $l[0];\n\t$b = $l[1];\n\t$c = $l[2];\n\t$d =\
    \ $l[3];\n\tif ($a < $b && $b < $c && $c < $d) {\n\t\treturn true;\n\t} elseif\
    \ ($a > $b && $b > $c && $c > $d) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\n\n/* Return true if array elements are monotonically increasing\
    \ or decreasing.\n>>> monotonic(array(1, 2, 4, 20))\ntrue\n>>> monotonic(array(1,\
    \ 20, 4, 10))\nfalse\n>>> monotonic(array(4, 1, 0, -10))\ntrue*/", "\t$n = count($l);\n\
    \tif ($n < 2) return true;\n\t$increasing = $l[1] > $l[0];\n\tfor ($i = 2; $i\
    \ < $n; $i++) {\n\t\tif ($increasing) {\n\t\t\tif ($l[$i] < $l[$i - 1]) return\
    \ false;\n\t\t} else {\n\t\t\tif ($l[$i] > $l[$i - 1]) return false;\n\t\t}\n\t\
    }\n\treturn true;\n}\n\n/* Return true if array elements are monotonically increasing\
    \ or decreasing.\n>>> monotonic(array(1, 2, 4, 20))\ntrue\n>>> monotonic(array(1,\
    \ 20, 4, 10))\nfalse\n>>> monotonic(array(4, 1, 0, -10))\ntrue*/", "    $a = $l[0];\n\
    \    $b = $l[1];\n    $c = $l[2];\n    $d = $l[3];\n    if ($a < $b && $b < $c\
    \ && $c < $d) {\n        return true;\n    } elseif ($a > $b && $b > $c && $c\
    \ > $d) {\n        return true;\n    } else {\n        return false;\n    }\n\
    }\n\n/* Return true if the array is sorted in ascending order.\n>>> sorted(array(1,\
    \ 2, 4, 20))\ntrue\n>>> sorted(array(1, 20, 4, 10))\nfalse\n>>> sorted(array(4,\
    \ 1, 0, -10))\nfalse*/", "    $inc = $dec = true;\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n            $inc = false;\n   \
    \     }\n        if ($l[$i] > $l[$i - 1]) {\n            $dec = false;\n     \
    \   }\n    }\n    return $inc || $dec;\n}\n\n/* Return true if array elements\
    \ are monotonically increasing.\n>>> monotonic_increasing(array(1, 2, 4, 20))\n\
    true\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4,\
    \ 1, 0, -10))\nfalse*/", "\t$inc = true;\n\t$dec = true;\n\tfor ($i = 1; $i <\
    \ count($l); $i++) {\n\t\tif ($l[$i] < $l[$i - 1]) {\n\t\t\t$inc = false;\n\t\t\
    }\n\t\tif ($l[$i] > $l[$i - 1]) {\n\t\t\t$dec = false;\n\t\t}\n\t}\n\treturn $inc\
    \ || $dec;\n}\n\n/* Return true if array elements are monotonically increasing.\n\
    >>> monotonic_increasing(array(1, 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1,\
    \ 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4, 1, 0, -10))\nfalse*/",
  "    $d = $l[1] - $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n        if (($l[$i]\
    \ - $l[$i - 1]) * $d < 0) {\n            return false;\n        }\n    }\n   \
    \ return true;\n}\n\n/* Return true if array elements are monotonically increasing.\n\
    >>> monotonic_increasing(array(1, 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1,\
    \ 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4, 1, 0, -10))\nfalse*/",
  "\t$monotonic = true;\n\t$increasing = $l[0] < $l[1];\n\tfor ($i = 0; $i < count($l)\
    \ - 1; $i++) {\n\t\tif ($increasing) {\n\t\t\tif ($l[$i] > $l[$i + 1]) {\n\t\t\
    \t\t$monotonic = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\tif ($l[$i]\
    \ < $l[$i + 1]) {\n\t\t\t\t$monotonic = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\
    }\n\t}\n\treturn $monotonic;\n}\n\n/* Return true if array elements are in strictly\
    \ increasing order.\n>>> increasing(array(1, 2, 4, 20))\ntrue\n>>> increasing(array(1,\
    \ 20, 4, 10))\nfalse\n>>> increasing(array(4, 1, 0, -10))\nfalse*/", "\t$inc =\
    \ $dec = true;\n\tfor ($i = 1; $i < count($l); $i++) {\n\t\tif ($l[$i] > $l[$i\
    \ - 1]) {\n\t\t\t$dec = false;\n\t\t} else if ($l[$i] < $l[$i - 1]) {\n\t\t\t\
    $inc = false;\n\t\t}\n\t}\n\treturn $inc || $dec;\n}\n\n/* Return true if array\
    \ elements are all unique.\n>>> unique(array(1, 2, 4, 20))\ntrue\n>>> unique(array(1,\
    \ 20, 4, 10))\nfalse\n>>> unique(array(4, 1, 0, -10))\nfalse*/", "\t$inc = $dec\
    \ = true;\n\tfor ($i = 1; $i < count($l); $i++) {\n\t\tif ($l[$i] > $l[$i - 1])\
    \ $dec = false;\n\t\tif ($l[$i] < $l[$i - 1]) $inc = false;\n\t}\n\treturn $inc\
    \ || $dec;\n}\n\n/* Return true if array elements are monotonically increasing.\n\
    >>> increasing(array(1, 2, 4, 20))\ntrue\n>>> increasing(array(1, 20, 4, 10))\n\
    false\n>>> increasing(array(4, 1, 0, -10))\nfalse*/", "    $increasing = true;\n\
    \    $decreasing = true;\n    for ($i = 1; $i < count($l); $i++) {\n        if\
    \ ($l[$i] < $l[$i - 1]) {\n            $increasing = false;\n        }\n     \
    \   if ($l[$i] > $l[$i - 1]) {\n            $decreasing = false;\n        }\n\
    \    }\n    return $increasing || $decreasing;\n}\n\n/* Return true if array elements\
    \ are in ascending order.\n>>> ascending(array(1, 2, 4, 20))\ntrue\n>>> ascending(array(1,\
    \ 20, 4, 10))\nfalse\n>>> ascending(array(4, 1, 0, -10))\nfalse*/", "    $i =\
    \ 0;\n    $j = 0;\n    $k = 0;\n    $len = count($l);\n    while ($i < $len &&\
    \ $l[$i] <= $l[$i + 1]) {\n        $i++;\n    }\n    while ($j < $len && $l[$j]\
    \ >= $l[$j + 1]) {\n        $j++;\n    }\n    while ($k < $len && $l[$k] == $l[$k\
    \ + 1]) {\n        $k++;\n    }\n    return $i == $len - 1 || $j == $len - 1 ||\
    \ $k == $len - 1;\n}\n\n/* Return true if the array contains a duplicate element.\n\
    >>> has_duplicate(array(1, 2, 3, 4))\nfalse\n>>> has_duplicate(array(1, 2, 3,\
    \ 4, 1))\ntrue*/", "    $inc = $dec = true;\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n            $inc = false;\n   \
    \     }\n        if ($l[$i] > $l[$i - 1]) {\n            $dec = false;\n     \
    \   }\n    }\n    return $inc || $dec;\n}\n\n/* Return true if array elements\
    \ are strictly increasing.\n>>> strictly_increasing(array(1, 2, 4, 20))\ntrue\n\
    >>> strictly_increasing(array(1, 20, 4, 10))\nfalse\n>>> strictly_increasing(array(4,\
    \ 1, 0, -10))\nfalse*/", "    $inc = $dec = true;\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n            $inc = false;\n   \
    \     }\n        if ($l[$i] > $l[$i - 1]) {\n            $dec = false;\n     \
    \   }\n    }\n    return $inc || $dec;\n}\n\n/* Return true if array elements\
    \ are unique.\n>>> unique(array(1, 2, 4, 20))\ntrue\n>>> unique(array(1, 20, 4,\
    \ 10))\nfalse\n>>> unique(array(4, 1, 0, -10))\nfalse*/", "    $increasing = true;\n\
    \    $decreasing = true;\n    for ($i = 1; $i < count($l); $i++) {\n        if\
    \ ($l[$i] < $l[$i - 1]) {\n            $increasing = false;\n        }\n     \
    \   if ($l[$i] > $l[$i - 1]) {\n            $decreasing = false;\n        }\n\
    \    }\n    return $increasing || $decreasing;\n}\n\n/* Return true if array elements\
    \ are monotonically increasing.\n>>> monotonic_increasing(array(1, 2, 4, 20))\n\
    true\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4,\
    \ 1, 0, -10))\nfalse*/", "    $inc = true;\n    $dec = true;\n    for ($i = 1;\
    \ $i < count($l); $i++) {\n        if ($l[$i] > $l[$i - 1]) {\n            $dec\
    \ = false;\n        }\n        if ($l[$i] < $l[$i - 1]) {\n            $inc =\
    \ false;\n        }\n    }\n    return $inc || $dec;\n}\n\n/* Return true if array\
    \ elements are monotonically increasing.\n>>> monotonic_increasing(array(1, 2,\
    \ 4, 20))\ntrue\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4,\
    \ 1, 0, -10))\nfalse*/", "\t$inc = true;\n\t$dec = true;\n\tfor ($i = 1; $i <\
    \ count($l); $i++) {\n\t\tif ($l[$i] < $l[$i - 1]) {\n\t\t\t$inc = false;\n\t\t\
    }\n\t\tif ($l[$i] > $l[$i - 1]) {\n\t\t\t$dec = false;\n\t\t}\n\t}\n\treturn $inc\
    \ || $dec;\n}\n\n/* Return true if array elements are monotonically increasing.\n\
    >>> monotonic_increasing(array(1, 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1,\
    \ 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4, 1, 0, -10))\nfalse*/",
  "    $increasing = true;\n    $decreasing = true;\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n            $increasing = false;\n\
    \        }\n        if ($l[$i] > $l[$i - 1]) {\n            $decreasing = false;\n\
    \        }\n    }\n    return $increasing || $decreasing;\n}\n\n/* Return true\
    \ if array elements are monotonically increasing.\n>>> monotonic_increasing(array(1,\
    \ 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>>\
    \ monotonic_increasing(array(4, 1, 0, -10))\nfalse*/", "    $inc = $dec = true;\n\
    \    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n\
    \            $inc = false;\n        }\n        if ($l[$i] > $l[$i - 1]) {\n  \
    \          $dec = false;\n        }\n    }\n    return $inc || $dec;\n}\n\n/*\
    \ Return true if array elements are monotonically increasing.\n>>> monotonic_increasing(array(1,\
    \ 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>>\
    \ monotonic_increasing(array(4, 1, 0, -10))\nfalse*/", "\t$c = count($l);\n\t\
    if ($c < 2) {\n\t\treturn true;\n\t}\n\t$inc = $l[1] > $l[0];\n\tfor ($i = 2;\
    \ $i < $c; $i++) {\n\t\tif ($inc && $l[$i] < $l[$i - 1]) {\n\t\t\treturn false;\n\
    \t\t}\n\t\tif (!$inc && $l[$i] > $l[$i - 1]) {\n\t\t\treturn false;\n\t\t}\n\t\
    }\n\treturn true;\n}\n\n/* Return true if array elements are monotonically increasing\
    \ or decreasing.\n>>> monotonic(array(1, 2, 4, 20))\ntrue\n>>> monotonic(array(1,\
    \ 20, 4, 10))\nfalse\n>>> monotonic(array(4, 1, 0, -10))\ntrue*/", "    $increasing\
    \ = true;\n    $decreasing = true;\n    for ($i = 1; $i < count($l); $i++) {\n\
    \        if ($l[$i] < $l[$i - 1]) {\n            $increasing = false;\n      \
    \  }\n        if ($l[$i] > $l[$i - 1]) {\n            $decreasing = false;\n \
    \       }\n    }\n    return $increasing || $decreasing;\n}\n\n/* Return true\
    \ if array elements are monotonically increasing.\n>>> monotonic_increasing(array(1,\
    \ 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>>\
    \ monotonic_increasing(array(4, 1, 0, -10))\nfalse*/", "    $i = 0;\n    $j =\
    \ count($l) - 1;\n    $inc = $l[$i] < $l[$j];\n    while ($i < $j) {\n       \
    \ if ($inc && $l[$i] > $l[$i + 1]) {\n            return false;\n        }\n \
    \       if (!$inc && $l[$i] < $l[$i + 1]) {\n            return false;\n     \
    \   }\n        $i++;\n    }\n    return true;\n}\n\n/* Return true if array elements\
    \ are monotonically increasing or decreasing.\n>>> monotonic(array(1, 2, 4, 20))\n\
    true\n>>> monotonic(array(1, 20, 4, 10))\nfalse\n>>> monotonic(array(4, 1, 0,\
    \ -10))\ntrue*/", "    $n = count($l);\n    $i = 1;\n    $inc = $dec = true;\n\
    \    while ($i < $n) {\n        if ($l[$i] > $l[$i - 1]) {\n            $dec =\
    \ false;\n        } elseif ($l[$i] < $l[$i - 1]) {\n            $inc = false;\n\
    \        }\n        $i++;\n    }\n    return $inc || $dec;\n}\n\n/* Return true\
    \ if array elements are strictly increasing or decreasing.\n>>> strictly_monotonic(array(1,\
    \ 2, 4, 20))\ntrue\n>>> strictly_monotonic(array(1, 20, 4, 10))\nfalse\n>>> strictly_monotonic(array(4,\
    \ 1, 0, -10))\nfalse*/", "    $inc = true;\n    $dec = true;\n    for ($i = 1;\
    \ $i < count($l); $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n            $inc\
    \ = false;\n        }\n        if ($l[$i] > $l[$i - 1]) {\n            $dec =\
    \ false;\n        }\n    }\n    return $inc || $dec;\n}\n\n/* Return true if array\
    \ elements are monotonically increasing.\n>>> monotonic_increasing(array(1, 2,\
    \ 4, 20))\ntrue\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4,\
    \ 1, 0, -10))\nfalse*/", "    $increasing = true;\n    $decreasing = true;\n \
    \   for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n\
    \            $increasing = false;\n        }\n        if ($l[$i] > $l[$i - 1])\
    \ {\n            $decreasing = false;\n        }\n    }\n    return $increasing\
    \ || $decreasing;\n}\n\n/* Return true if array elements are monotonically increasing.\n\
    >>> monotonic_increasing(array(1, 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1,\
    \ 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4, 1, 0, -10))\nfalse*/",
  "    $inc = $dec = true;\n    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i]\
    \ < $l[$i - 1]) {\n            $inc = false;\n        }\n        if ($l[$i] >\
    \ $l[$i - 1]) {\n            $dec = false;\n        }\n    }\n    return $inc\
    \ || $dec;\n}\n\n/* Return true if array elements are monotonically increasing.\n\
    >>> monotonic_increasing(array(1, 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1,\
    \ 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4, 1, 0, -10))\nfalse*/",
  "    $m = $l[0];\n    $i = 1;\n    while ($i < count($l)) {\n        if ($l[$i]\
    \ > $m) {\n            $m = $l[$i];\n            $i++;\n        } else {\n   \
    \         return false;\n        }\n    }\n    return true;\n}\n\n/* Return true\
    \ if all elements of array are unique.\n>>> unique(array(1, 2, 4, 20))\ntrue\n\
    >>> unique(array(1, 20, 4, 10))\nfalse\n>>> unique(array(4, 1, 0, -10))\ntrue*/",
  "\t$inc = $dec = true;\n\tfor ($i = 1; $i < count($l); $i++) {\n\t\tif ($l[$i] <\
    \ $l[$i - 1]) {\n\t\t\t$inc = false;\n\t\t}\n\t\tif ($l[$i] > $l[$i - 1]) {\n\t\
    \t\t$dec = false;\n\t\t}\n\t}\n\treturn $inc || $dec;\n}\n\n/* Return true if\
    \ array elements are in ascending order.\n>>> ascending(array(1, 2, 4, 20))\n\
    true\n>>> ascending(array(1, 20, 4, 10))\nfalse\n>>> ascending(array(4, 1, 0,\
    \ -10))\nfalse*/", "    $inc = $dec = true;\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $l[$i - 1]) {\n            $dec = false;\n   \
    \     } elseif ($l[$i] < $l[$i - 1]) {\n            $inc = false;\n        }\n\
    \    }\n    return $inc || $dec;\n}\n\n/* Return true if array elements are monotonically\
    \ increasing.\n>>> monotonic_increasing(array(1, 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1,\
    \ 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4, 1, 0, -10))\nfalse*/",
  "    $n = count($l);\n    $increasing = true;\n    $decreasing = true;\n    for\
    \ ($i = 0; $i < $n - 1; $i++) {\n        if ($l[$i] > $l[$i + 1]) {\n        \
    \    $increasing = false;\n        }\n        if ($l[$i] < $l[$i + 1]) {\n   \
    \         $decreasing = false;\n        }\n    }\n    return $increasing || $decreasing;\n\
    }\n\n/* Return true if array elements are all unique.\n>>> unique(array(1, 2,\
    \ 3, 4))\ntrue\n>>> unique(array(1, 2, 3, 4, 4))\nfalse*/", "    $inc = true;\n\
    \    $dec = true;\n    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i]\
    \ < $l[$i - 1]) {\n            $inc = false;\n        }\n        if ($l[$i] >\
    \ $l[$i - 1]) {\n            $dec = false;\n        }\n    }\n    return $inc\
    \ || $dec;\n}\n\n/* Return true if array elements are monotonically increasing.\n\
    >>> monotonic_increasing(array(1, 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1,\
    \ 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4, 1, 0, -10))\nfalse*/",
  "    $monotonic = true;\n    $inc = $l[0] < $l[1];\n    for ($i = 1; $i < count($l)\
    \ - 1; $i++) {\n        if ($inc) {\n            if ($l[$i] > $l[$i + 1]) {\n\
    \                $monotonic = false;\n                break;\n            }\n\
    \        } else {\n            if ($l[$i] < $l[$i + 1]) {\n                $monotonic\
    \ = false;\n                break;\n            }\n        }\n    }\n    return\
    \ $monotonic;\n}\n\n/* Return true if array elements are in strictly increasing\
    \ order.\n>>> increasing(array(1, 2, 4, 20))\ntrue\n>>> increasing(array(1, 20,\
    \ 4, 10))\nfalse\n>>> increasing(array(4, 1, 0, -10))\nfalse*/", "    $increasing\
    \ = true;\n    $decreasing = true;\n    for ($i = 1; $i < count($l); $i++) {\n\
    \        if ($l[$i] < $l[$i - 1]) {\n            $increasing = false;\n      \
    \  }\n        if ($l[$i] > $l[$i - 1]) {\n            $decreasing = false;\n \
    \       }\n    }\n    return $increasing || $decreasing;\n}\n\n/* Return true\
    \ if array elements are monotonically increasing.\n>>> monotonic_increasing(array(1,\
    \ 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>>\
    \ monotonic_increasing(array(4, 1, 0, -10))\nfalse*/", "    $inc = $dec = true;\n\
    \    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n\
    \            $inc = false;\n        }\n        if ($l[$i] > $l[$i - 1]) {\n  \
    \          $dec = false;\n        }\n    }\n    return $inc || $dec;\n}\n\n/*\
    \ Return true if array elements are monotonically increasing.\n>>> monotonic_increasing(array(1,\
    \ 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>>\
    \ monotonic_increasing(array(4, 1, 0, -10))\nfalse*/", "    $inc = $dec = true;\n\
    \    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] > $l[$i - 1]) {\n\
    \            $dec = false;\n        } else if ($l[$i] < $l[$i - 1]) {\n      \
    \      $inc = false;\n        }\n    }\n    return $inc || $dec;\n}\n\n/* Return\
    \ true if array elements are in ascending order.\n>>> ascending(array(1, 2, 4,\
    \ 20))\ntrue\n>>> ascending(array(1, 20, 4, 10))\nfalse\n>>> ascending(array(4,\
    \ 1, 0, -10))\nfalse*/", "    return $l == array_unique($l) && count($l) == count(array_unique($l));\n\
    }\n\n/* Return true if array elements are monotonically increasing.\n>>> increasing(array(1,\
    \ 2, 4, 20))\ntrue\n>>> increasing(array(1, 20, 4, 10))\nfalse\n>>> increasing(array(4,\
    \ 1, 0, -10))\nfalse*/", "    $d = $l[1] - $l[0];\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if (($l[$i] - $l[$i - 1]) * $d < 0) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\n/* Return true if array elements are\
    \ monotonically increasing or decreasing.\n>>> monotonic(array(1, 2, 4, 20))\n\
    true\n>>> monotonic(array(1, 20, 4, 10))\nfalse\n>>> monotonic(array(4, 1, 0,\
    \ -10))\ntrue*/", "  $inc = $dec = true;\n  for ($i = 1; $i < count($l); $i++)\
    \ {\n    if ($l[$i] < $l[$i - 1]) {\n      $inc = false;\n    }\n    if ($l[$i]\
    \ > $l[$i - 1]) {\n      $dec = false;\n    }\n  }\n  return $inc || $dec;\n}\n\
    \n/* Return true if array elements are strictly increasing.\n>>> strictly_increasing(array(1,\
    \ 2, 4, 20))\ntrue\n>>> strictly_increasing(array(1, 20, 4, 10))\nfalse\n>>> strictly_increasing(array(4,\
    \ 1, 0, -10))\nfalse*/", "    $inc = $dec = true;\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n            $inc = false;\n   \
    \     }\n        if ($l[$i] > $l[$i - 1]) {\n            $dec = false;\n     \
    \   }\n    }\n    return $inc || $dec;\n}\n\n/* Return true if array elements\
    \ are monotonically increasing.\n>>> monotonic_increasing(array(1, 2, 4, 20))\n\
    true\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4,\
    \ 1, 0, -10))\nfalse*/", "    $monotonic = true;\n    $i = 0;\n    $n = count($l);\n\
    \    if ($n > 1) {\n        $direction = $l[1] - $l[0];\n        while ($i < $n\
    \ - 1 && $monotonic) {\n            if ($direction * ($l[$i + 1] - $l[$i]) <=\
    \ 0) {\n                $monotonic = false;\n            }\n            $i++;\n\
    \        }\n    }\n    return $monotonic;\n}\n\n/* Return true if array elements\
    \ are monotonically increasing.\n>>> monotonic_increasing(array(1, 2, 4, 20))\n\
    true\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4,\
    \ 1, 0, -10))\nfalse*/", "    $increasing = true;\n    $decreasing = true;\n \
    \   for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n\
    \            $increasing = false;\n        }\n        if ($l[$i] > $l[$i - 1])\
    \ {\n            $decreasing = false;\n        }\n    }\n    return $increasing\
    \ || $decreasing;\n}\n\n/* Return true if array elements are all unique.\n>>>\
    \ unique(array(1, 2, 4, 20))\ntrue\n>>> unique(array(1, 20, 4, 10))\nfalse\n>>>\
    \ unique(array(4, 1, 0, -10))\nfalse*/", "    $inc = $dec = true;\n    for ($i\
    \ = 1; $i < count($l); $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n         \
    \   $inc = false;\n        }\n        if ($l[$i] > $l[$i - 1]) {\n           \
    \ $dec = false;\n        }\n    }\n    return $inc || $dec;\n}\n\n/* Return true\
    \ if array elements are monotonically increasing.\n>>> monotonic_increasing(array(1,\
    \ 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>>\
    \ monotonic_increasing(array(4, 1, 0, -10))\nfalse*/", "    $mono = true;\n  \
    \  $inc = $l[0] < $l[1];\n    for ($i = 1; $i < count($l) - 1; $i++) {\n     \
    \   if ($inc) {\n            if ($l[$i] > $l[$i + 1]) {\n                $mono\
    \ = false;\n                break;\n            }\n        } else {\n        \
    \    if ($l[$i] < $l[$i + 1]) {\n                $mono = false;\n            \
    \    break;\n            }\n        }\n    }\n    return $mono;\n}\n\n/* Return\
    \ true if array elements are monotonically increasing or decreasing.\n>>> monotonic(array(1,\
    \ 2, 4, 20))\ntrue\n>>> monotonic(array(1, 20, 4, 10))\nfalse\n>>> monotonic(array(4,\
    \ 1, 0, -10))\ntrue*/", "    $asc = true;\n    $desc = true;\n    for ($i = 1;\
    \ $i < count($l); $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n            $asc\
    \ = false;\n        }\n        if ($l[$i] > $l[$i - 1]) {\n            $desc =\
    \ false;\n        }\n    }\n    return $asc || $desc;\n}\n\n/* Return true if\
    \ array elements are strictly increasing or decreasing.\n>>> strictly_monotonic(array(1,\
    \ 2, 4, 20))\ntrue\n>>> strictly_monotonic(array(1, 20, 4, 10))\nfalse\n>>> strictly_monotonic(array(4,\
    \ 1, 0, -10))\nfalse*/", "    $monotonic = true;\n    $increasing = $l[0] < $l[1];\n\
    \    for ($i = 1; $i < count($l) - 1; $i++) {\n        if ($increasing && $l[$i]\
    \ > $l[$i + 1]) {\n            $monotonic = false;\n            break;\n     \
    \   } else if (!$increasing && $l[$i] < $l[$i + 1]) {\n            $monotonic\
    \ = false;\n            break;\n        }\n    }\n    return $monotonic;\n}\n\n\
    /* Return true if array elements are permutations of each other.\n>>> permutation(array(1,\
    \ 2, 3), array(3, 2, 1))\ntrue\n>>> permutation(array(1, 2, 3), array(3, 2, 4))\n\
    false*/", "\t$n = count($l);\n\t$inc = $dec = true;\n\tfor ($i = 1; $i < $n; $i++)\
    \ {\n\t\tif ($l[$i] < $l[$i - 1]) $inc = false;\n\t\tif ($l[$i] > $l[$i - 1])\
    \ $dec = false;\n\t}\n\treturn $inc || $dec;\n}\n\n/* Return true if array elements\
    \ are monotonically increasing.\n>>> monotonic_increasing(array(1, 2, 4, 20))\n\
    true\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4,\
    \ 1, 0, -10))\nfalse*/", "\t$inc = $dec = true;\n\tfor ($i = 1; $i < count($l);\
    \ $i++) {\n\t\tif ($l[$i] < $l[$i - 1]) {\n\t\t\t$inc = false;\n\t\t}\n\t\tif\
    \ ($l[$i] > $l[$i - 1]) {\n\t\t\t$dec = false;\n\t\t}\n\t}\n\treturn $inc || $dec;\n\
    }\n\n/* Return true if array elements are monotonically increasing.\n>>> increasing(array(1,\
    \ 2, 4, 20))\ntrue\n>>> increasing(array(1, 20, 4, 10))\nfalse\n>>> increasing(array(4,\
    \ 1, 0, -10))\nfalse*/", "    $inc = true;\n    $dec = true;\n    for ($i = 1;\
    \ $i < count($l); $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n            $inc\
    \ = false;\n        }\n        if ($l[$i] > $l[$i - 1]) {\n            $dec =\
    \ false;\n        }\n    }\n    return $inc || $dec;\n}\n\n/* Return true if array\
    \ elements are monotonically increasing.\n>>> monotonic_increasing(array(1, 2,\
    \ 4, 20))\ntrue\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4,\
    \ 1, 0, -10))\nfalse*/", "\t$l = array_values($l);\n\t$n = count($l);\n\tif ($n\
    \ < 2) {\n\t\treturn true;\n\t}\n\t$inc = $l[1] > $l[0];\n\tfor ($i = 2; $i <\
    \ $n; $i++) {\n\t\tif ($inc && $l[$i] < $l[$i - 1]) {\n\t\t\treturn false;\n\t\
    \t}\n\t\tif (!$inc && $l[$i] > $l[$i - 1]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\
    \treturn true;\n}\n\n/* Return true if array elements are monotonically increasing.\n\
    >>> monotonic_increasing(array(1, 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1,\
    \ 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4, 1, 0, -10))\nfalse*/",
  "\t$l = array_values($l);\n\t$n = count($l);\n\tif ($n < 2) {\n\t\treturn true;\n\
    \t}\n\t$inc = $l[1] > $l[0];\n\tfor ($i = 2; $i < $n; $i++) {\n\t\tif ($inc) {\n\
    \t\t\tif ($l[$i] < $l[$i - 1]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\
    \t\t\tif ($l[$i] > $l[$i - 1]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\
    \treturn true;\n}\n\n/* Return true if array elements are monotonically increasing.\n\
    >>> monotonic_increasing(array(1, 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1,\
    \ 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4, 1, 0, -10))\nfalse*/",
  "    $increasing = true;\n    $decreasing = true;\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n            $increasing = false;\n\
    \        }\n        if ($l[$i] > $l[$i - 1]) {\n            $decreasing = false;\n\
    \        }\n    }\n    return $increasing || $decreasing;\n}\n\n/* Return true\
    \ if array elements are monotonically increasing.\n>>> monotonic_increasing(array(1,\
    \ 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>>\
    \ monotonic_increasing(array(4, 1, 0, -10))\nfalse*/", "    $d = 0;\n    $n =\
    \ count($l);\n    for ($i = 1; $i < $n; $i++) {\n        $d += $l[$i] - $l[$i\
    \ - 1];\n    }\n    return $d == 0 || $d == $n - 1 || $d == 1 - $n;\n}\n\n/* Return\
    \ true if array elements are monotonically increasing.\n>>> monotonic_increasing(array(1,\
    \ 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>>\
    \ monotonic_increasing(array(4, 1, 0, -10))\nfalse*/", "\t$inc = true;\n\t$dec\
    \ = true;\n\tfor ($i = 1; $i < count($l); $i++) {\n\t\tif ($l[$i] < $l[$i - 1])\
    \ {\n\t\t\t$inc = false;\n\t\t}\n\t\tif ($l[$i] > $l[$i - 1]) {\n\t\t\t$dec =\
    \ false;\n\t\t}\n\t}\n\treturn $inc || $dec;\n}\n\n/* Return true if array elements\
    \ are in ascending order.\n>>> ascending(array(1, 2, 4, 20))\ntrue\n>>> ascending(array(1,\
    \ 20, 4, 10))\nfalse\n>>> ascending(array(4, 1, 0, -10))\nfalse*/", "    $monotonic\
    \ = true;\n    $i = 0;\n    $j = 1;\n    $k = 2;\n    $len = count($l);\n    if\
    \ ($len < 3) {\n        return true;\n    }\n    if ($l[$i] < $l[$j]) {\n    \
    \    while ($k < $len) {\n            if ($l[$j] > $l[$k]) {\n               \
    \ $monotonic = false;\n                break;\n            }\n            $i++;\n\
    \            $j++;\n            $k++;\n        }\n    } else {\n        while\
    \ ($k < $len) {\n            if ($l[$j] < $l[$k]) {\n                $monotonic\
    \ = false;\n                break;\n            }\n            $i++;\n       \
    \     $j++;\n            $k++;\n        }\n    }\n    return $monotonic;\n}\n\n\
    /* Return true if array elements are monotonically increasing or decreasing.\n\
    >>> monotonic(array(1, 2, 4, 20))\ntrue\n>>> monotonic(array(1, 20, 4, 10))\n\
    false\n>>> monotonic(array(4, 1, 0, -10))\ntrue*/", "    $inc = $dec = true;\n\
    \    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n\
    \            $inc = false;\n        }\n        if ($l[$i] > $l[$i - 1]) {\n  \
    \          $dec = false;\n        }\n    }\n    return $inc || $dec;\n}\n\n/*\
    \ Return true if array elements are monotonically increasing.\n>>> monotonic_increasing(array(1,\
    \ 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>>\
    \ monotonic_increasing(array(4, 1, 0, -10))\nfalse*/", "    $increasing = true;\n\
    \    $decreasing = true;\n    $i = 0;\n    while ($i < count($l) - 1) {\n    \
    \    if ($l[$i] > $l[$i + 1]) {\n            $increasing = false;\n        }\n\
    \        if ($l[$i] < $l[$i + 1]) {\n            $decreasing = false;\n      \
    \  }\n        $i++;\n    }\n    return $increasing || $decreasing;\n}\n\n/* Return\
    \ true if array elements are in ascending order.\n>>> ascending(array(1, 2, 4,\
    \ 20))\ntrue\n>>> ascending(array(1, 20, 4, 10))\nfalse\n>>> ascending(array(4,\
    \ 1, 0, -10))\nfalse*/", "    $m = 0;\n    $n = count($l);\n    for ($i = 1; $i\
    \ < $n; $i++) {\n        $m = $m + ($l[$i] - $l[$i - 1]);\n    }\n    return $m\
    \ == 0 || $m == $n - 1 || $m == 1 - $n;\n}\n\n/* Return true if array elements\
    \ are monotonically increasing.\n>>> increasing(array(1, 2, 4, 20))\ntrue\n>>>\
    \ increasing(array(1, 20, 4, 10))\nfalse\n>>> increasing(array(4, 1, 0, -10))\n\
    false*/", "    $inc = $dec = true;\n    for ($i = 1; $i < count($l); $i++) {\n\
    \        if ($l[$i] < $l[$i - 1]) {\n            $inc = false;\n        }\n  \
    \      if ($l[$i] > $l[$i - 1]) {\n            $dec = false;\n        }\n    }\n\
    \    return $inc || $dec;\n}\n\n/* Return true if array elements are strictly\
    \ increasing or decreasing.\n>>> strictly_monotonic(array(1, 2, 4, 20))\ntrue\n\
    >>> strictly_monotonic(array(1, 20, 4, 10))\nfalse\n>>> strictly_monotonic(array(4,\
    \ 1, 0, -10))\nfalse*/", "\t$inc = $dec = true;\n\tfor ($i = 1; $i < count($l);\
    \ $i++) {\n\t\tif ($l[$i] < $l[$i - 1]) {\n\t\t\t$inc = false;\n\t\t}\n\t\tif\
    \ ($l[$i] > $l[$i - 1]) {\n\t\t\t$dec = false;\n\t\t}\n\t}\n\treturn $inc || $dec;\n\
    }\n\n/* Return true if array elements are monotonically increasing.\n>>> monotonic_increasing(array(1,\
    \ 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>>\
    \ monotonic_increasing(array(4, 1, 0, -10))\nfalse*/", "    $inc = $dec = true;\n\
    \    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n\
    \            $inc = false;\n        }\n        if ($l[$i] > $l[$i - 1]) {\n  \
    \          $dec = false;\n        }\n    }\n    return $inc || $dec;\n}\n\n/*\
    \ Return true if array elements are monotonically increasing.\n>>> monotonic_increasing(array(1,\
    \ 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>>\
    \ monotonic_increasing(array(4, 1, 0, -10))\nfalse*/", "    $increasing = true;\n\
    \    $decreasing = true;\n    for ($i = 1; $i < count($l); $i++) {\n        if\
    \ ($l[$i] < $l[$i - 1]) {\n            $increasing = false;\n        }\n     \
    \   if ($l[$i] > $l[$i - 1]) {\n            $decreasing = false;\n        }\n\
    \    }\n    return $increasing || $decreasing;\n}\n\n/* Return true if array elements\
    \ are monotonically increasing.\n>>> increasing(array(1, 2, 4, 20))\ntrue\n>>>\
    \ increasing(array(1, 20, 4, 10))\nfalse\n>>> increasing(array(4, 1, 0, -10))\n\
    false*/", "    $increasing = true;\n    $decreasing = true;\n    for ($i = 1;\
    \ $i < count($l); $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n            $increasing\
    \ = false;\n        }\n        if ($l[$i] > $l[$i - 1]) {\n            $decreasing\
    \ = false;\n        }\n    }\n    return $increasing || $decreasing;\n}\n\n/*\
    \ Return true if array is sorted.\n>>> sorted(array(1, 2, 4, 20))\ntrue\n>>> sorted(array(1,\
    \ 20, 4, 10))\nfalse\n>>> sorted(array(4, 1, 0, -10))\nfalse*/", "    $inc = true;\n\
    \    $dec = true;\n    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i]\
    \ < $l[$i - 1]) {\n            $inc = false;\n        }\n        if ($l[$i] >\
    \ $l[$i - 1]) {\n            $dec = false;\n        }\n    }\n    return $inc\
    \ || $dec;\n}\n\n/* Return true if array elements are in ascending order.\n>>>\
    \ ascending(array(1, 2, 4, 20))\ntrue\n>>> ascending(array(1, 20, 4, 10))\nfalse\n\
    >>> ascending(array(4, 1, 0, -10))\nfalse*/", "    $inc = $dec = true;\n    for\
    \ ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] > $l[$i - 1]) {\n     \
    \       $dec = false;\n        } elseif ($l[$i] < $l[$i - 1]) {\n            $inc\
    \ = false;\n        }\n    }\n    return $inc || $dec;\n}\n\n/* Return true if\
    \ array elements are monotonically increasing.\n>>> monotonic_increasing(array(1,\
    \ 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>>\
    \ monotonic_increasing(array(4, 1, 0, -10))\nfalse*/", "    $inc = $dec = true;\n\
    \    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n\
    \            $inc = false;\n        }\n        if ($l[$i] > $l[$i - 1]) {\n  \
    \          $dec = false;\n        }\n    }\n    return $inc || $dec;\n}\n\n/*\
    \ Return true if the array is sorted.\n>>> sorted(array(1, 2, 4, 20))\ntrue\n\
    >>> sorted(array(1, 20, 4, 10))\nfalse\n>>> sorted(array(4, 1, 0, -10))\nfalse*/",
  "    $increasing = $decreasing = true;\n    for ($i = 0; $i < count($l) - 1; $i++)\
    \ {\n        if ($l[$i] > $l[$i + 1]) {\n            $increasing = false;\n  \
    \      }\n        if ($l[$i] < $l[$i + 1]) {\n            $decreasing = false;\n\
    \        }\n    }\n    return $increasing || $decreasing;\n}\n\n/* Return true\
    \ if array elements are in ascending order.\n>>> ascending(array(1, 2, 4, 20))\n\
    true\n>>> ascending(array(1, 20, 4, 10))\nfalse\n>>> ascending(array(4, 1, 0,\
    \ -10))\nfalse*/", "    $increasing = $decreasing = true;\n    for ($i = 0; $i\
    \ < count($l) - 1; $i++) {\n        if ($l[$i] > $l[$i + 1]) {\n            $increasing\
    \ = false;\n        }\n        if ($l[$i] < $l[$i + 1]) {\n            $decreasing\
    \ = false;\n        }\n    }\n    return $increasing || $decreasing;\n}\n\n/*\
    \ Return true if array elements are all unique.\n>>> unique(array(1, 2, 3, 4))\n\
    true\n>>> unique(array(1, 2, 3, 4, 1))\nfalse*/", "    $m = $l[0];\n    $s = $l[0];\n\
    \    $c = 0;\n    $d = 0;\n    for ($i = 1; $i < count($l); $i++) {\n        if\
    \ ($l[$i] > $m) {\n            $m = $l[$i];\n            $c++;\n        }\n  \
    \      if ($l[$i] < $s) {\n            $s = $l[$i];\n            $d++;\n     \
    \   }\n    }\n    if ($c == count($l) - 1 || $d == count($l) - 1) {\n        return\
    \ true;\n    } else {\n        return false;\n    }\n}\n\n/* Return true if array\
    \ elements are monotonically increasing or decreasing.\n>>> monotonic(array(1,\
    \ 2, 4, 20))\ntrue\n>>> monotonic(array(1, 20, 4, 10))\nfalse\n>>> monotonic(array(4,\
    \ 1, 0, -10))\ntrue*/", "    $increasing = true;\n    $decreasing = true;\n  \
    \  for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n\
    \            $increasing = false;\n        }\n        if ($l[$i] > $l[$i - 1])\
    \ {\n            $decreasing = false;\n        }\n    }\n    return $increasing\
    \ || $decreasing;\n}\n\n/* Return true if array elements are monotonically increasing.\n\
    >>> monotonic_increasing(array(1, 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1,\
    \ 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4, 1, 0, -10))\nfalse*/",
  "    $s = $l[0] < $l[1] ? 1 : -1;\n    for ($i = 1; $i < count($l) - 1; $i++) {\n\
    \        if ($s * ($l[$i] - $l[$i + 1]) < 0) {\n            return false;\n  \
    \      }\n    }\n    return true;\n}\n\n/* Return true if array elements are monotonically\
    \ increasing.\n>>> monotonic_increasing(array(1, 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1,\
    \ 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4, 1, 0, -10))\nfalse*/",
  "    $n = count($l);\n    $increasing = true;\n    $decreasing = true;\n    for\
    \ ($i = 0; $i < $n - 1; $i++) {\n        if ($l[$i] > $l[$i + 1]) {\n        \
    \    $increasing = false;\n        }\n        if ($l[$i] < $l[$i + 1]) {\n   \
    \         $decreasing = false;\n        }\n    }\n    return $increasing || $decreasing;\n\
    }\n\n/* Return true if array elements are monotonically increasing.\n>>> monotonic_increasing(array(1,\
    \ 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>>\
    \ monotonic_increasing(array(4, 1, 0, -10))\nfalse*/", "    $len = count($l);\n\
    \    $inc = $dec = true;\n    for ($i = 1; $i < $len; $i++) {\n        if ($l[$i]\
    \ < $l[$i - 1]) {\n            $inc = false;\n        }\n        if ($l[$i] >\
    \ $l[$i - 1]) {\n            $dec = false;\n        }\n    }\n    return $inc\
    \ || $dec;\n}\n\n/* Return true if array elements are monotonically increasing.\n\
    >>> monotonic_increasing(array(1, 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1,\
    \ 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4, 1, 0, -10))\nfalse*/",
  "    $inc = $dec = true;\n    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i]\
    \ < $l[$i - 1]) {\n            $inc = false;\n        }\n        if ($l[$i] >\
    \ $l[$i - 1]) {\n            $dec = false;\n        }\n    }\n    return $inc\
    \ || $dec;\n}\n\n/* Return true if array elements are monotonically increasing.\n\
    >>> increasing(array(1, 2, 4, 20))\ntrue\n>>> increasing(array(1, 20, 4, 10))\n\
    false\n>>> increasing(array(4, 1, 0, -10))\nfalse*/", "    $d = 0;\n    $n = count($l);\n\
    \    for ($i = 1; $i < $n; $i++) {\n        $d += $l[$i] - $l[$i - 1];\n    }\n\
    \    return $d == 0 || $d == $n - 1 || $d == 1 - $n;\n}\n\n/* Return true if array\
    \ elements are monotonically increasing.\n>>> monotonic_increasing(array(1, 2,\
    \ 4, 20))\ntrue\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4,\
    \ 1, 0, -10))\nfalse*/", "\t$i = 0;\n\t$j = count($l) - 1;\n\t$inc = $l[$i] <\
    \ $l[$j];\n\twhile ($i < $j) {\n\t\tif ($inc) {\n\t\t\tif ($l[$i] > $l[$i + 1])\
    \ {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\tif ($l[$i] < $l[$i +\
    \ 1]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\t$i++;\n\t}\n\treturn true;\n\
    }\n\n/* Return true if array elements are monotonically increasing or decreasing.\n\
    >>> monotonic(array(1, 2, 4, 20))\ntrue\n>>> monotonic(array(1, 20, 4, 10))\n\
    false\n>>> monotonic(array(4, 1, 0, -10))\ntrue*/", "    $increasing = true;\n\
    \    $decreasing = true;\n    for ($i = 1; $i < count($l); $i++) {\n        if\
    \ ($l[$i] < $l[$i - 1]) {\n            $increasing = false;\n        }\n     \
    \   if ($l[$i] > $l[$i - 1]) {\n            $decreasing = false;\n        }\n\
    \    }\n    return $increasing || $decreasing;\n}\n\n/* Return true if array elements\
    \ are monotonically increasing.\n>>> monotonic(array(1, 2, 4, 20))\ntrue\n>>>\
    \ monotonic(array(1, 20, 4, 10))\nfalse\n>>> monotonic(array(4, 1, 0, -10))\n\
    false*/", "    $increasing = true;\n    $decreasing = true;\n    for ($i = 1;\
    \ $i < count($l); $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n            $increasing\
    \ = false;\n        }\n        if ($l[$i] > $l[$i - 1]) {\n            $decreasing\
    \ = false;\n        }\n    }\n    return $increasing || $decreasing;\n}\n\n/*\
    \ Return true if the array is sorted in ascending order.\n>>> is_sorted(array(1,\
    \ 2, 4, 20))\ntrue\n>>> is_sorted(array(1, 20, 4, 10))\nfalse\n>>> is_sorted(array(4,\
    \ 1, 0, -10))\nfalse*/", "\t$inc = $dec = true;\n\tfor ($i = 1; $i < count($l);\
    \ $i++) {\n\t\tif ($l[$i] < $l[$i - 1]) $inc = false;\n\t\tif ($l[$i] > $l[$i\
    \ - 1]) $dec = false;\n\t}\n\treturn $inc || $dec;\n}\n\n/* Return true if array\
    \ elements are monotonically increasing.\n>>> monotonic_increasing(array(1, 2,\
    \ 4, 20))\ntrue\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4,\
    \ 1, 0, -10))\nfalse*/", "    $increasing = true;\n    $decreasing = true;\n \
    \   for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n\
    \            $increasing = false;\n        }\n        if ($l[$i] > $l[$i - 1])\
    \ {\n            $decreasing = false;\n        }\n    }\n    return $increasing\
    \ || $decreasing;\n}\n\n/* Return true if array elements are all unique.\n>>>\
    \ unique(array(1, 2, 3, 4))\ntrue\n>>> unique(array(1, 2, 3, 4, 1))\nfalse*/",
  "    $monotonic = true;\n    $direction = 0;\n    for ($i = 0; $i < count($l) -\
    \ 1; $i++) {\n        if ($l[$i] == $l[$i + 1]) {\n            continue;\n   \
    \     }\n        if ($direction == 0) {\n            $direction = $l[$i] < $l[$i\
    \ + 1] ? 1 : -1;\n        } else {\n            if ($direction == 1 && $l[$i]\
    \ > $l[$i + 1]) {\n                $monotonic = false;\n                break;\n\
    \            }\n            if ($direction == -1 && $l[$i] < $l[$i + 1]) {\n \
    \               $monotonic = false;\n                break;\n            }\n \
    \       }\n    }\n    return $monotonic;\n}\n\n/* Return true if array elements\
    \ are monotonically increasing or decreasing.\n>>> monotonic(array(1, 2, 4, 20))\n\
    true\n>>> monotonic(array(1, 20, 4, 10))\nfalse\n>>> monotonic(array(4, 1, 0,\
    \ -10))\ntrue*/", "    $monotonic = true;\n    $increasing = ($l[0] < $l[1]);\n\
    \    for ($i = 1; $i < count($l) - 1; $i++) {\n        if ($increasing) {\n  \
    \          if ($l[$i] > $l[$i + 1]) {\n                $monotonic = false;\n \
    \               break;\n            }\n        } else {\n            if ($l[$i]\
    \ < $l[$i + 1]) {\n                $monotonic = false;\n                break;\n\
    \            }\n        }\n    }\n    return $monotonic;\n}\n\n/* Return true\
    \ if array elements are monotonically increasing.\n>>> monotonic_increasing(array(1,\
    \ 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>>\
    \ monotonic_increasing(array(4, 1, 0, -10))\nfalse*/", "    $increasing = true;\n\
    \    $decreasing = true;\n    $last = $l[0];\n    foreach ($l as $i) {\n     \
    \   if ($i < $last) {\n            $increasing = false;\n        }\n        if\
    \ ($i > $last) {\n            $decreasing = false;\n        }\n        $last =\
    \ $i;\n    }\n    return $increasing || $decreasing;\n}\n\n/* Return true if array\
    \ elements are monotonically increasing.\n>>> monotonic_increasing(array(1, 2,\
    \ 4, 20))\ntrue\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4,\
    \ 1, 0, -10))\nfalse*/", "    $i = 0;\n    $j = 0;\n    $k = 0;\n    $count =\
    \ count($l);\n    for ($i = 0; $i < $count - 1; $i++) {\n        if ($l[$i] <\
    \ $l[$i + 1]) {\n            $j++;\n        } else if ($l[$i] > $l[$i + 1]) {\n\
    \            $k++;\n        }\n    }\n    if ($j == $count - 1 || $k == $count\
    \ - 1) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\
    \n/* Return true if array elements are monotonically increasing or decreasing.\n\
    >>> monotonic(array(1, 2, 4, 20))\ntrue\n>>> monotonic(array(1, 20, 4, 10))\n\
    false\n>>> monotonic(array(4, 1, 0, -10))\ntrue*/", "    $i = 0;\n    $j = 0;\n\
    \    $k = 0;\n    $n = count($l);\n    for ($i = 0; $i < $n - 1; $i++) {\n   \
    \     if ($l[$i] < $l[$i + 1]) {\n            $j = 1;\n        } elseif ($l[$i]\
    \ > $l[$i + 1]) {\n            $k = 1;\n        }\n    }\n    if ($j == 1 && $k\
    \ == 0) {\n        return true;\n    } elseif ($j == 0 && $k == 1) {\n       \
    \ return true;\n    } else {\n        return false;\n    }\n}\n\n/* Return true\
    \ if array elements are monotonically increasing or decreasing.\n>>> monotonic(array(1,\
    \ 2, 4, 20))\ntrue\n>>> monotonic(array(1, 20, 4, 10))\nfalse\n>>> monotonic(array(4,\
    \ 1, 0, -10))\ntrue*/", "    $inc = true;\n    $dec = true;\n    for ($i = 1;\
    \ $i < count($l); $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n            $inc\
    \ = false;\n        }\n        if ($l[$i] > $l[$i - 1]) {\n            $dec =\
    \ false;\n        }\n    }\n    return $inc || $dec;\n}\n\n/* Return true if array\
    \ elements are strictly increasing or decreasing.\n>>> strictly_monotonic(array(1,\
    \ 2, 4, 20))\ntrue\n>>> strictly_monotonic(array(1, 20, 4, 10))\nfalse\n>>> strictly_monotonic(array(4,\
    \ 1, 0, -10))\nfalse*/", "\t$a = $l[0];\n\t$b = $l[1];\n\t$c = $l[2];\n\t$d =\
    \ $l[3];\n\tif ($a < $b && $b < $c && $c < $d) {\n\t\treturn true;\n\t}\n\tif\
    \ ($a > $b && $b > $c && $c > $d) {\n\t\treturn true;\n\t}\n\treturn false;\n\
    }\n\n/* Return true if array elements are monotonically increasing or decreasing.\n\
    >>> monotonic(array(1, 2, 4, 20))\ntrue\n>>> monotonic(array(1, 20, 4, 10))\n\
    false\n>>> monotonic(array(4, 1, 0, -10))\ntrue*/", "    $asc = true;\n    $desc\
    \ = true;\n    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] > $l[$i\
    \ - 1]) {\n            $desc = false;\n        }\n        if ($l[$i] < $l[$i -\
    \ 1]) {\n            $asc = false;\n        }\n    }\n    return $asc || $desc;\n\
    }\n\n/* Return true if array elements are monotonically increasing.\n>>> monotonic_increasing(array(1,\
    \ 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>>\
    \ monotonic_increasing(array(4, 1, 0, -10))\nfalse*/", "\t$inc = $dec = true;\n\
    \tfor ($i = 1; $i < count($l); $i++) {\n\t\tif ($l[$i] < $l[$i - 1]) {\n\t\t\t\
    $inc = false;\n\t\t}\n\t\tif ($l[$i] > $l[$i - 1]) {\n\t\t\t$dec = false;\n\t\t\
    }\n\t}\n\treturn $inc || $dec;\n}\n\n/* Return true if array elements are permutation\
    \ of each other.\n>>> permutation(array(1, 2, 3), array(3, 2, 1))\ntrue\n>>> permutation(array(1,\
    \ 2, 3), array(3, 2, 2))\nfalse\n>>> permutation(array(1, 2, 3), array(3, 2, 3,\
    \ 1))\nfalse*/", "    $is_increasing = $is_decreasing = true;\n    for ($i = 0;\
    \ $i < count($l) - 1; $i++) {\n        if ($l[$i] > $l[$i + 1]) {\n          \
    \  $is_increasing = false;\n        }\n        if ($l[$i] < $l[$i + 1]) {\n  \
    \          $is_decreasing = false;\n        }\n    }\n    return $is_increasing\
    \ || $is_decreasing;\n}\n\n/* Return true if array elements are monotonically\
    \ increasing.\n>>> monotonic_increasing(array(1, 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1,\
    \ 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4, 1, 0, -10))\nfalse*/",
  "    $inc = $dec = true;\n    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i]\
    \ < $l[$i - 1]) {\n            $inc = false;\n        }\n        if ($l[$i] >\
    \ $l[$i - 1]) {\n            $dec = false;\n        }\n    }\n    return $inc\
    \ || $dec;\n}\n\n/* Return true if array elements are monotonically increasing.\n\
    >>> monotonic_increasing(array(1, 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1,\
    \ 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4, 1, 0, -10))\nfalse*/",
  "    $i = 0;\n    $j = 0;\n    $k = 0;\n    $len = count($l);\n    while ($i < $len\
    \ - 1) {\n        if ($l[$i] < $l[$i + 1]) {\n            $j++;\n        } elseif\
    \ ($l[$i] > $l[$i + 1]) {\n            $k++;\n        }\n        $i++;\n    }\n\
    \    if ($j == $len - 1 || $k == $len - 1) {\n        return true;\n    } else\
    \ {\n        return false;\n    }\n}\n\n/* Return true if the array is sorted\
    \ in ascending order.\n>>> is_sorted(array(1, 2, 4, 20))\ntrue\n>>> is_sorted(array(1,\
    \ 20, 4, 10))\nfalse\n>>> is_sorted(array(4, 1, 0, -10))\nfalse*/", "    $inc\
    \ = false;\n    $dec = false;\n    for ($i = 0; $i < count($l) - 1; $i++) {\n\
    \        if ($l[$i] < $l[$i + 1]) {\n            $inc = true;\n        }\n   \
    \     if ($l[$i] > $l[$i + 1]) {\n            $dec = true;\n        }\n    }\n\
    \    return $inc && !$dec || !$inc && $dec;\n}\n\n/* Return true if array elements\
    \ are monotonically increasing or decreasing.\n>>> monotonic(array(1, 2, 4, 20))\n\
    true\n>>> monotonic(array(1, 20, 4, 10))\nfalse\n>>> monotonic(array(4, 1, 0,\
    \ -10))\ntrue*/", "    $increasing = true;\n    $decreasing = true;\n    for ($i\
    \ = 1; $i < count($l); $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n         \
    \   $increasing = false;\n        }\n        if ($l[$i] > $l[$i - 1]) {\n    \
    \        $decreasing = false;\n        }\n    }\n    return $increasing || $decreasing;\n\
    }\n\n/* Return true if array elements are monotonically increasing.\n>>> monotonic_increasing(array(1,\
    \ 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>>\
    \ monotonic_increasing(array(4, 1, 0, -10))\nfalse*/", "    $inc = true;\n   \
    \ $dec = true;\n    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] <\
    \ $l[$i - 1]) {\n            $inc = false;\n        }\n        if ($l[$i] > $l[$i\
    \ - 1]) {\n            $dec = false;\n        }\n    }\n    return $inc || $dec;\n\
    }\n\n/* Return true if array elements are monotonically increasing.\n>>> monotonic_increasing(array(1,\
    \ 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>>\
    \ monotonic_increasing(array(4, 1, 0, -10))\nfalse*/", "    $inc = true;\n   \
    \ $dec = true;\n    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] <\
    \ $l[$i - 1]) {\n            $inc = false;\n        }\n        if ($l[$i] > $l[$i\
    \ - 1]) {\n            $dec = false;\n        }\n    }\n    return $inc || $dec;\n\
    }\n\n/* Return true if array elements are monotonically increasing.\n>>> monotonic_increasing(array(1,\
    \ 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>>\
    \ monotonic_increasing(array(4, 1, 0, -10))\nfalse*/", "\t$asc = true;\n\t$desc\
    \ = true;\n\tfor ($i = 1; $i < count($l); $i++) {\n\t\tif ($l[$i] < $l[$i - 1])\
    \ {\n\t\t\t$asc = false;\n\t\t}\n\t\tif ($l[$i] > $l[$i - 1]) {\n\t\t\t$desc =\
    \ false;\n\t\t}\n\t}\n\treturn $asc || $desc;\n}\n\n/* Return true if array elements\
    \ are monotonically increasing.\n>>> monotonic_increasing(array(1, 2, 4, 20))\n\
    true\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4,\
    \ 1, 0, -10))\nfalse*/", "    $inc = true;\n    $dec = true;\n    for ($i = 1;\
    \ $i < count($l); $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n            $inc\
    \ = false;\n        }\n        if ($l[$i] > $l[$i - 1]) {\n            $dec =\
    \ false;\n        }\n    }\n    return $inc || $dec;\n}\n\n/* Return true if array\
    \ elements are monotonically increasing.\n>>> monotonic_increasing(array(1, 2,\
    \ 4, 20))\ntrue\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4,\
    \ 1, 0, -10))\nfalse*/", "    $inc = $dec = true;\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n            $inc = false;\n   \
    \     }\n        if ($l[$i] > $l[$i - 1]) {\n            $dec = false;\n     \
    \   }\n    }\n    return $inc || $dec;\n}\n\n/* Return true if array elements\
    \ are monotonically increasing.\n>>> monotonic_increasing(array(1, 2, 4, 20))\n\
    true\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4,\
    \ 1, 0, -10))\nfalse*/", "    $increasing = true;\n    $decreasing = true;\n \
    \   for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n\
    \            $increasing = false;\n        }\n        if ($l[$i] > $l[$i - 1])\
    \ {\n            $decreasing = false;\n        }\n    }\n    return $increasing\
    \ || $decreasing;\n}\n\n/* Return true if array elements are monotonically increasing.\n\
    >>> monotonic_increasing(array(1, 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1,\
    \ 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4, 1, 0, -10))\nfalse*/",
  "    $i = 0;\n    $j = 1;\n    $k = 2;\n    $n = count($l);\n    $increasing = $l[$i]\
    \ < $l[$j];\n    while ($k < $n) {\n        if ($increasing) {\n            if\
    \ ($l[$j] > $l[$k]) {\n                return false;\n            }\n        }\
    \ else {\n            if ($l[$j] < $l[$k]) {\n                return false;\n\
    \            }\n        }\n        $i++;\n        $j++;\n        $k++;\n    }\n\
    \    return true;\n}\n\n/* Return true if array elements are monotonically increasing\
    \ or decreasing.\n>>> monotonic(array(1, 2, 4, 20))\ntrue\n>>> monotonic(array(1,\
    \ 20, 4, 10))\nfalse\n>>> monotonic(array(4, 1, 0, -10))\ntrue*/", "    $inc =\
    \ $dec = true;\n    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] >\
    \ $l[$i - 1]) {\n            $dec = false;\n        } else if ($l[$i] < $l[$i\
    \ - 1]) {\n            $inc = false;\n        }\n    }\n    return $inc || $dec;\n\
    }\n\n/* Return true if array elements are monotonically increasing or decreasing.\n\
    >>> monotonic(array(1, 2, 4, 20))\ntrue\n>>> monotonic(array(1, 20, 4, 10))\n\
    false\n>>> monotonic(array(4, 1, 0, -10))\ntrue*/", "    $t = $l[0];\n    $i =\
    \ 1;\n    $inc = true;\n    $dec = true;\n    while ($i < count($l)) {\n     \
    \   if ($l[$i] < $t) {\n            $inc = false;\n        }\n        if ($l[$i]\
    \ > $t) {\n            $dec = false;\n        }\n        $t = $l[$i];\n      \
    \  $i++;\n    }\n    return $inc || $dec;\n}\n\n/* Return true if array elements\
    \ are monotonically increasing.\n>>> monotonic_increasing(array(1, 2, 4, 20))\n\
    true\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4,\
    \ 1, 0, -10))\nfalse*/", "    $increasing = $decreasing = true;\n    for ($i =\
    \ 0; $i < count($l) - 1; $i++) {\n        if ($l[$i] > $l[$i + 1]) {\n       \
    \     $increasing = false;\n        }\n        if ($l[$i] < $l[$i + 1]) {\n  \
    \          $decreasing = false;\n        }\n    }\n    return $increasing || $decreasing;\n\
    }\n\n/* Return true if array elements are monotonically increasing.\n>>> monotonic_increasing(array(1,\
    \ 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>>\
    \ monotonic_increasing(array(4, 1, 0, -10))\nfalse*/", "\t$asc = true;\n\t$desc\
    \ = true;\n\tfor ($i = 1; $i < count($l); $i++) {\n\t\tif ($l[$i] < $l[$i - 1])\
    \ {\n\t\t\t$asc = false;\n\t\t}\n\t\tif ($l[$i] > $l[$i - 1]) {\n\t\t\t$desc =\
    \ false;\n\t\t}\n\t}\n\treturn $asc || $desc;\n}\n\n/* Return true if array elements\
    \ are monotonically increasing.\n>>> monotonic_increasing(array(1, 2, 4, 20))\n\
    true\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4,\
    \ 1, 0, -10))\nfalse*/", "    $inc = $dec = true;\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n            $inc = false;\n   \
    \     }\n        if ($l[$i] > $l[$i - 1]) {\n            $dec = false;\n     \
    \   }\n    }\n    return $inc || $dec;\n}\n\n/* Return true if array elements\
    \ are monotonically increasing.\n>>> monotonic_increasing(array(1, 2, 4, 20))\n\
    true\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4,\
    \ 1, 0, -10))\nfalse*/", "    $increasing = true;\n    $decreasing = true;\n \
    \   for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n\
    \            $increasing = false;\n        }\n        if ($l[$i] > $l[$i - 1])\
    \ {\n            $decreasing = false;\n        }\n    }\n    return $increasing\
    \ || $decreasing;\n}\n\n/* Return true if array elements are monotonically increasing.\n\
    >>> monotonic_increasing(array(1, 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1,\
    \ 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4, 1, 0, -10))\nfalse*/",
  "    $mono = true;\n    $inc = $l[0] < $l[1];\n    for ($i = 1; $i < count($l) -\
    \ 1; $i++) {\n        if ($inc) {\n            if ($l[$i] > $l[$i + 1]) {\n  \
    \              $mono = false;\n                break;\n            }\n       \
    \ } else {\n            if ($l[$i] < $l[$i + 1]) {\n                $mono = false;\n\
    \                break;\n            }\n        }\n    }\n    return $mono;\n\
    }\n\n/* Return true if array elements are monotonically increasing or decreasing.\n\
    >>> monotonic(array(1, 2, 4, 20))\ntrue\n>>> monotonic(array(1, 20, 4, 10))\n\
    false\n>>> monotonic(array(4, 1, 0, -10))\ntrue*/", "    $increasing = true;\n\
    \    $decreasing = true;\n    for ($i = 1; $i < count($l); $i++) {\n        if\
    \ ($l[$i] < $l[$i - 1]) {\n            $increasing = false;\n        }\n     \
    \   if ($l[$i] > $l[$i - 1]) {\n            $decreasing = false;\n        }\n\
    \    }\n    return $increasing || $decreasing;\n}\n\n/* Return true if array elements\
    \ are monotonically increasing.\n>>> monotonic_increasing(array(1, 2, 4, 20))\n\
    true\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4,\
    \ 1, 0, -10))\nfalse*/", "    $increasing = true;\n    $decreasing = true;\n \
    \   for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n\
    \            $increasing = false;\n        }\n        if ($l[$i] > $l[$i - 1])\
    \ {\n            $decreasing = false;\n        }\n    }\n    return $increasing\
    \ || $decreasing;\n}\n\n/* Return true if array elements are monotonically increasing.\n\
    >>> monotonic_increasing(array(1, 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1,\
    \ 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4, 1, 0, -10))\nfalse*/",
  "    $increasing = true;\n    $decreasing = true;\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n            $increasing = false;\n\
    \        }\n        if ($l[$i] > $l[$i - 1]) {\n            $decreasing = false;\n\
    \        }\n    }\n    return $increasing || $decreasing;\n}\n\n/* Return true\
    \ if array elements are all unique.\n>>> unique(array(1, 2, 4, 20))\ntrue\n>>>\
    \ unique(array(1, 20, 4, 10))\nfalse\n>>> unique(array(4, 1, 0, -10))\nfalse*/",
  "\t$increasing = $decreasing = true;\n\tfor ($i = 0; $i < count($l) - 1; $i++) {\n\
    \t\tif ($l[$i] > $l[$i + 1]) {\n\t\t\t$increasing = false;\n\t\t}\n\t\tif ($l[$i]\
    \ < $l[$i + 1]) {\n\t\t\t$decreasing = false;\n\t\t}\n\t}\n\treturn $increasing\
    \ || $decreasing;\n}\n\n/* Return true if array elements are permutation of each\
    \ other.\n>>> permutation(array(1, 2, 3, 4), array(4, 3, 2, 1))\ntrue\n>>> permutation(array(1,\
    \ 2, 3, 4), array(4, 3, 2, 2))\nfalse\n>>> permutation(array(1, 2, 3, 4), array(4,\
    \ 3, 2))\nfalse\n>>> permutation(array(1, 2, 3, 4), array(4, 3, 2, 1, 5))\nfalse*/",
  "\t$inc = true;\n\t$dec = true;\n\tfor ($i = 1; $i < count($l); $i++) {\n\t\tif\
    \ ($l[$i] < $l[$i - 1]) {\n\t\t\t$inc = false;\n\t\t}\n\t\tif ($l[$i] > $l[$i\
    \ - 1]) {\n\t\t\t$dec = false;\n\t\t}\n\t}\n\treturn $inc || $dec;\n}\n\n/* Return\
    \ true if array elements are monotonically increasing.\n>>> monotonic_increasing(array(1,\
    \ 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>>\
    \ monotonic_increasing(array(4, 1, 0, -10))\nfalse*/", "\t$inc = $dec = true;\n\
    \tfor ($i = 1; $i < count($l); $i++) {\n\t\tif ($l[$i] < $l[$i - 1]) {\n\t\t\t\
    $inc = false;\n\t\t}\n\t\tif ($l[$i] > $l[$i - 1]) {\n\t\t\t$dec = false;\n\t\t\
    }\n\t}\n\treturn $inc || $dec;\n}\n\n/* Return true if array elements are in ascending\
    \ order.\n>>> ascending(array(1, 2, 4, 20))\ntrue\n>>> ascending(array(1, 20,\
    \ 4, 10))\nfalse\n>>> ascending(array(4, 1, 0, -10))\nfalse*/", "    $increasing\
    \ = true;\n    $decreasing = true;\n    for ($i = 1; $i < count($l); $i++) {\n\
    \        if ($l[$i] < $l[$i - 1]) {\n            $increasing = false;\n      \
    \  }\n        if ($l[$i] > $l[$i - 1]) {\n            $decreasing = false;\n \
    \       }\n    }\n    return $increasing || $decreasing;\n}\n\n/* Return true\
    \ if array elements are monotonically increasing.\n>>> monotonic_increasing(array(1,\
    \ 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>>\
    \ monotonic_increasing(array(4, 1, 0, -10))\nfalse*/", "    $inc = $dec = true;\n\
    \    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n\
    \            $inc = false;\n        }\n        if ($l[$i] > $l[$i - 1]) {\n  \
    \          $dec = false;\n        }\n    }\n    return $inc || $dec;\n}\n\n/*\
    \ Return true if array elements are in ascending order.\n>>> ascending(array(1,\
    \ 2, 4, 20))\ntrue\n>>> ascending(array(1, 20, 4, 10))\nfalse\n>>> ascending(array(4,\
    \ 1, 0, -10))\nfalse*/", "    $inc = $dec = true;\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i - 1] > $l[$i]) {\n            $inc = false;\n   \
    \     }\n        if ($l[$i - 1] < $l[$i]) {\n            $dec = false;\n     \
    \   }\n    }\n    return $inc || $dec;\n}\n\n/* Return true if array elements\
    \ are monotonically increasing.\n>>> monotonic_increasing(array(1, 2, 4, 20))\n\
    true\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4,\
    \ 1, 0, -10))\nfalse*/", "    $increasing = true;\n    $decreasing = true;\n \
    \   for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n\
    \            $increasing = false;\n        }\n        if ($l[$i] > $l[$i - 1])\
    \ {\n            $decreasing = false;\n        }\n    }\n    return $increasing\
    \ || $decreasing;\n}\n\n/* Return true if array elements are monotonically increasing.\n\
    >>> increasing(array(1, 2, 4, 20))\ntrue\n>>> increasing(array(1, 20, 4, 10))\n\
    false\n>>> increasing(array(4, 1, 0, -10))\nfalse*/", "\t$asc = true;\n\t$desc\
    \ = true;\n\tfor ($i = 1; $i < count($l); $i++) {\n\t\tif ($l[$i] < $l[$i - 1])\
    \ {\n\t\t\t$asc = false;\n\t\t}\n\t\tif ($l[$i] > $l[$i - 1]) {\n\t\t\t$desc =\
    \ false;\n\t\t}\n\t}\n\treturn $asc || $desc;\n}\n\n/* Return true if array elements\
    \ are monotonically increasing.\n>>> increasing(array(1, 2, 4, 20))\ntrue\n>>>\
    \ increasing(array(1, 20, 4, 10))\nfalse\n>>> increasing(array(4, 1, 0, -10))\n\
    false*/", "\t$inc = $dec = true;\n\tfor ($i = 1; $i < count($l); $i++) {\n\t\t\
    if ($l[$i] < $l[$i - 1]) {\n\t\t\t$inc = false;\n\t\t}\n\t\tif ($l[$i] > $l[$i\
    \ - 1]) {\n\t\t\t$dec = false;\n\t\t}\n\t}\n\treturn $inc || $dec;\n}\n\n/* Return\
    \ true if array elements are in ascending order.\n>>> ascending(array(1, 2, 4,\
    \ 20))\ntrue\n>>> ascending(array(1, 20, 4, 10))\nfalse\n>>> ascending(array(4,\
    \ 1, 0, -10))\nfalse*/", "    $increasing = true;\n    $decreasing = true;\n \
    \   $last = $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i]\
    \ < $last) {\n            $increasing = false;\n        }\n        if ($l[$i]\
    \ > $last) {\n            $decreasing = false;\n        }\n        $last = $l[$i];\n\
    \    }\n    return $increasing || $decreasing;\n}\n\n/* Return true if array is\
    \ sorted in ascending order.\n>>> is_sorted(array(1, 2, 4, 20))\ntrue\n>>> is_sorted(array(1,\
    \ 20, 4, 10))\nfalse\n>>> is_sorted(array(4, 1, 0, -10))\nfalse*/", "    $d =\
    \ $l[1] - $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n        if (($l[$i]\
    \ - $l[$i - 1]) * $d < 0) {\n            return false;\n        }\n    }\n   \
    \ return true;\n}\n\n/* Return true if array elements are monotonically increasing.\n\
    >>> monotonic_increasing(array(1, 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1,\
    \ 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4, 1, 0, -10))\nfalse*/",
  "    $d = $l[1] - $l[0];\n    for ($i = 1; $i < count($l); $i++) {\n        if ($d\
    \ * ($l[$i] - $l[$i - 1]) < 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n\n/* Return true if array elements are all equal.\n>>> all_equal(array(1,\
    \ 1, 1, 1))\ntrue\n>>> all_equal(array(1, 2, 1, 1))\nfalse*/", "    $increasing\
    \ = true;\n    $decreasing = true;\n    for ($i = 1; $i < count($l); $i++) {\n\
    \        if ($l[$i] < $l[$i - 1]) {\n            $increasing = false;\n      \
    \  }\n        if ($l[$i] > $l[$i - 1]) {\n            $decreasing = false;\n \
    \       }\n    }\n    return $increasing || $decreasing;\n}\n\n/* Return true\
    \ if array elements are monotonically increasing.\n>>> monotonic_increasing(array(1,\
    \ 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1, 20, 4, 10))\nfalse\n>>>\
    \ monotonic_increasing(array(4, 1, 0, -10))\nfalse*/", "    $increasing = $decreasing\
    \ = true;\n    for ($i = 0; $i < count($l) - 1; $i++) {\n        if ($l[$i] >\
    \ $l[$i + 1]) {\n            $increasing = false;\n        }\n        if ($l[$i]\
    \ < $l[$i + 1]) {\n            $decreasing = false;\n        }\n    }\n    return\
    \ $increasing || $decreasing;\n}\n\n/* Return true if the array is sorted in ascending\
    \ order.\n>>> is_sorted(array(1, 2, 4, 20))\ntrue\n>>> is_sorted(array(1, 20,\
    \ 4, 10))\nfalse\n>>> is_sorted(array(4, 1, 0, -10))\nfalse*/", "\t$increasing\
    \ = true;\n\t$decreasing = true;\n\tfor ($i = 1; $i < count($l); $i++) {\n\t\t\
    if ($l[$i] < $l[$i - 1]) {\n\t\t\t$increasing = false;\n\t\t}\n\t\tif ($l[$i]\
    \ > $l[$i - 1]) {\n\t\t\t$decreasing = false;\n\t\t}\n\t}\n\treturn $increasing\
    \ || $decreasing;\n}\n\n/* Return true if array elements are monotonically increasing.\n\
    >>> monotonic_increasing(array(1, 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1,\
    \ 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4, 1, 0, -10))\nfalse*/",
  "    $inc = $dec = true;\n    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i]\
    \ < $l[$i - 1]) {\n            $inc = false;\n        }\n        if ($l[$i] >\
    \ $l[$i - 1]) {\n            $dec = false;\n        }\n    }\n    return $inc\
    \ || $dec;\n}\n\n/* Return true if array elements are in ascending order.\n>>>\
    \ ascending(array(1, 2, 4, 20))\ntrue\n>>> ascending(array(1, 20, 4, 10))\nfalse\n\
    >>> ascending(array(4, 1, 0, -10))\nfalse*/", "    $inc = true;\n    $dec = true;\n\
    \    for ($i = 1; $i < count($l); $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n\
    \            $inc = false;\n        }\n        if ($l[$i] > $l[$i - 1]) {\n  \
    \          $dec = false;\n        }\n    }\n    return $inc || $dec;\n}\n\n/*\
    \ Return true if array elements are in ascending order.\n>>> ascending(array(1,\
    \ 2, 4, 20))\ntrue\n>>> ascending(array(1, 20, 4, 10))\nfalse\n>>> ascending(array(4,\
    \ 1, 0, -10))\nfalse*/", "    $inc = $dec = true;\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] > $l[$i - 1]) {\n            $dec = false;\n   \
    \     } else if ($l[$i] < $l[$i - 1]) {\n            $inc = false;\n        }\n\
    \    }\n    return $inc || $dec;\n}\n\n/* Return true if array elements are monotonically\
    \ increasing.\n>>> monotonic_increasing(array(1, 2, 4, 20))\ntrue\n>>> monotonic_increasing(array(1,\
    \ 20, 4, 10))\nfalse\n>>> monotonic_increasing(array(4, 1, 0, -10))\nfalse*/",
  "    $increasing = true;\n    $decreasing = true;\n    for ($i = 1; $i < count($l);\
    \ $i++) {\n        if ($l[$i] < $l[$i - 1]) {\n            $increasing = false;\n\
    \        }\n        if ($l[$i] > $l[$i - 1]) {\n            $decreasing = false;\n\
    \        }\n    }\n    return $increasing || $decreasing;\n}\n\n/* Return the\
    \ number of elements in the array that are greater than or equal to the given\
    \ value.\n>>> count_greater_than_or_equal_to(array(1, 2, 4, 20), 3)\n2\n>>> count_greater_than_or_equal_to(array(1,\
    \ 2, 4, 20), 5)\n1\n>>> count_greater_than_or_equal_to(array(1, 2, 4, 20), 20)\n\
    1\n>>> count_greater_than_or_equal_to(array(1, 2, 4, 20), 21)\n0*/"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

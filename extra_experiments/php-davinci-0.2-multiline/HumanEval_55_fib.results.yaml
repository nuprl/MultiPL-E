language: php
name: HumanEval_55_fib
results:
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n <= 2) {\n        return 1;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1 || $n == 2) {\n     \
    \   return 1;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the\
    \ sum of all even Fibonacci numbers up to and including\nthe n-th Fibonacci number.\n\
    >>> sum_even_fibs(10)\n188\n>>> sum_even_fibs(1)\n0\n>>> sum_even_fibs(8)\n44*/\n\
    function candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the sum of the first\
    \ n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n1\n>>> fib_sum(8)\n\
    54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n <= 2) {\n        return 1;\n\
    \    } else {\n        return fib($n - 1) + fib($n - 2);\n    }\n}\n\n/* Return\
    \ n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1 || $n == 2) {\n     \
    \   return 1;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the\
    \ sum of the first n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n\
    1\n>>> fib_sum(8)\n54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n <= 1) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the sum of the first\
    \ n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n1\n>>> fib_sum(8)\n\
    54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the sum of the first\
    \ n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n1\n>>> fib_sum(8)\n\
    54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1 || $n == 2) {\n     \
    \   return 1;\n    } else {\n        return fib($n - 1) + fib($n - 2);\n    }\n\
    }\n\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n\
    21*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the sum of the first\
    \ n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n1\n>>> fib_sum(8)\n\
    54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    } else {\n        return fib($n - 1) + fib($n - 2);\n    }\n}\n\n/* Return\
    \ n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n <= 2) {\n        return 1;\n\
    \    } else {\n        return fib($n - 1) + fib($n - 2);\n    }\n}\n\n/* Return\
    \ the sum of the first n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n\
    1\n>>> fib_sum(8)\n54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n <= 1) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n <= 2) {\n        return 1;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n <= 1) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the sum of the first\
    \ n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n1\n>>> fib_sum(8)\n\
    54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n <= 1) {\n        return $n;\n\
    \    } else {\n        return fib($n - 1) + fib($n - 2);\n    }\n}\n\n/* Return\
    \ the sum of the first n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n\
    1\n>>> fib_sum(8)\n54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n <= 1) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the sum of the first\
    \ n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n1\n>>> fib_sum(8)\n\
    54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1 || $n == 2) {\n     \
    \   return 1;\n    } else {\n        return fib($n - 1) + fib($n - 2);\n    }\n\
    }\n\n/* Return the sum of the first n Fibonacci numbers.\n>>> fib_sum(10)\n143\n\
    >>> fib_sum(1)\n1\n>>> fib_sum(8)\n54*/\nfunction candidate(...$args) {\n    return\
    \ fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 55)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12) !== 144) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n\tif ($n < 2) {\n\t\treturn $n;\n\t}\n\
    \treturn fib($n - 1) + fib($n - 2);\n}\n\n/* Return the sum of the first n Fibonacci\
    \ numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n1\n>>> fib_sum(8)\n54*/\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the sum of the first\
    \ n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n1\n>>> fib_sum(8)\n\
    54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n <= 2) {\n        return 1;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the sum of the first\
    \ n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n1\n>>> fib_sum(8)\n\
    54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1 || $n == 2) {\n     \
    \   return 1;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the\
    \ sum of the first n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n\
    1\n>>> fib_sum(8)\n54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1 || $n == 2) {\n     \
    \   return 1;\n    } else {\n        return fib($n - 1) + fib($n - 2);\n    }\n\
    }\n\n/* Return the sum of the first n Fibonacci numbers.\n>>> fib_sum(10)\n143\n\
    >>> fib_sum(1)\n1\n>>> fib_sum(8)\n54*/\nfunction candidate(...$args) {\n    return\
    \ fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 55)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12) !== 144) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n <= 2) {\n        return 1;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the sum of the first\
    \ n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n1\n>>> fib_sum(8)\n\
    54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n <= 1) {\n        return $n;\n\
    \    } else {\n        return fib($n - 1) + fib($n - 2);\n    }\n}\n\n/* Return\
    \ the sum of the first n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n\
    1\n>>> fib_sum(8)\n54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n <= 1) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the sum of the first\
    \ n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n1\n>>> fib_sum(8)\n\
    54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n <= 1) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the sum of the first\
    \ n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n1\n>>> fib_sum(8)\n\
    54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1 || $n == 2) {\n     \
    \   return 1;\n    } else {\n        return fib($n - 1) + fib($n - 2);\n    }\n\
    }\n\n/* Return the sum of the first n Fibonacci numbers.\n>>> fib_sum(10)\n143\n\
    >>> fib_sum(1)\n1\n>>> fib_sum(8)\n54*/\nfunction candidate(...$args) {\n    return\
    \ fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 55)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12) !== 144) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1 || $n == 2) {\n     \
    \   return 1;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th\
    \ Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the sum of the first\
    \ n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n1\n>>> fib_sum(8)\n\
    54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1 || $n == 2) {\n     \
    \   return 1;\n    } else {\n        return fib($n - 1) + fib($n - 2);\n    }\n\
    }\n\n/* Return the sum of the first n Fibonacci numbers.\n>>> fib_sum(10)\n143\n\
    >>> fib_sum(1)\n1\n>>> fib_sum(8)\n54*/\nfunction candidate(...$args) {\n    return\
    \ fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 55)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12) !== 144) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the sum of the first\
    \ n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n1\n>>> fib_sum(8)\n\
    54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1 || $n == 2) {\n     \
    \   return 1;\n    } else {\n        return fib($n - 1) + fib($n - 2);\n    }\n\
    }\n\n/* Return the sum of the first n Fibonacci numbers.\n>>> fib_sum(10)\n143\n\
    >>> fib_sum(1)\n1\n>>> fib_sum(8)\n54*/\nfunction candidate(...$args) {\n    return\
    \ fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 55)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12) !== 144) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1 || $n == 2) {\n     \
    \   return 1;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th\
    \ Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n <= 1) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the sum of all even\
    \ Fibonacci numbers up to and including the value given to you at `maxFibValue`\n\
    \n>>> sumFibs(1000)\n1785\n>>> sumFibs(4000000)\n4613732\n>>> sumFibs(4)\n5\n\
    >>> sumFibs(75024)\n60696\n>>> sumFibs(75025)\n135721*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the sum of the first\
    \ n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n1\n>>> fib_sum(8)\n\
    54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1 || $n == 2) {\n     \
    \   return 1;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th\
    \ Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) return $n;\n    return\
    \ fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n>>> fib(10)\n\
    55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args) {\n    return\
    \ fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 55)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12) !== 144) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1 || $n == 2) {\n     \
    \   return 1;\n    } else {\n        return fib($n - 1) + fib($n - 2);\n    }\n\
    }\n\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n\
    21*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n <= 2) {\n        return 1;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n!\n>>> factorial(5)\n\
    120\n>>> factorial(1)\n1\n>>> factorial(3)\n6*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n <= 2) {\n        return 1;\n\
    \    } else {\n        return fib($n - 1) + fib($n - 2);\n    }\n}\n\n/* Return\
    \ n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the number of ways\
    \ to make change for amount.\n>>> count_change(7)\n6\n>>> count_change(10)\n14\n\
    >>> count_change(20)\n60\n>>> count_change(100)\n9828*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n\tif ($n == 1) {\n\t\treturn 1;\n\t}\
    \ elseif ($n == 2) {\n\t\treturn 1;\n\t} else {\n\t\treturn fib($n - 1) + fib($n\
    \ - 2);\n\t}\n}\n\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n <= 2) {\n        return 1;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1 || $n == 2) {\n     \
    \   return 1;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the\
    \ sum of all even Fibonacci numbers less than n.\n>>> sum_even_fib(10)\n10\n>>>\
    \ sum_even_fib(100)\n44*/\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the sum of the first\
    \ n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n1\n>>> fib_sum(8)\n\
    54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1 || $n == 2) {\n     \
    \   return 1;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th\
    \ Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1 || $n == 2) {\n     \
    \   return 1;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th\
    \ Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the sum of the first\
    \ n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n1\n>>> fib_sum(8)\n\
    54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the factorial of\
    \ a number.\n>>> factorial(5)\n120\n>>> factorial(1)\n1\n>>> factorial(3)\n6*/\n\
    function candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the sum of the first\
    \ n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n1\n>>> fib_sum(8)\n\
    54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n <= 2) {\n        return 1;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    } else {\n        return fib($n - 1) + fib($n - 2);\n    }\n}\n\necho fib(10);\n\
    echo \"\\n\";\necho fib(1);\necho \"\\n\";\necho fib(8);\necho \"\\n\";\n\n/*\
    \ Return the factorial of n.\n>>> factorial(5)\n120\n>>> factorial(1)\n1\n>>>\
    \ factorial(3)\n6*/\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: '55

    1

    21

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the sum of the first\
    \ n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n1\n>>> fib_sum(8)\n\
    54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the sum of the first\
    \ n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n1\n>>> fib_sum(8)\n\
    54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n <= 2) {\n        return 1;\n\
    \    } else {\n        return fib($n - 1) + fib($n - 2);\n    }\n}\n\n/* Return\
    \ n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1 || $n == 2) {\n     \
    \   return 1;\n    } else {\n        return fib($n - 1) + fib($n - 2);\n    }\n\
    }\n\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n\
    21*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n <= 2) {\n        return 1;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n <= 2) {\n        return 1;\n\
    \    } else {\n        return fib($n - 1) + fib($n - 2);\n    }\n}\n\n/* Return\
    \ n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1 || $n == 2) {\n     \
    \   return 1;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the\
    \ greatest common divisor of two numbers.\n>>> gcd(12, 18)\n6\n>>> gcd(18, 12)\n\
    6\n>>> gcd(3, 7)\n1*/\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the sum of the first\
    \ n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n1\n>>> fib_sum(8)\n\
    54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n <= 1) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the sum of the first\
    \ n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n1\n>>> fib_sum(8)\n\
    54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 3) {\n        return 1;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n <= 1) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the sum of the first\
    \ n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n1\n>>> fib_sum(8)\n\
    54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1) {\n        return 1;\n\
    \    } elseif ($n == 2) {\n        return 1;\n    } else {\n        return fib($n\
    \ - 1) + fib($n - 2);\n    }\n}\n\n/* Return the greatest common divisor of two\
    \ numbers.\n>>> gcd(12, 8)\n4\n>>> gcd(8, 12)\n4\n>>> gcd(0, 0)\n0\n>>> gcd(0,\
    \ 1)\n1\n>>> gcd(1, 0)\n1\n>>> gcd(1, 1)\n1\n>>> gcd(1, 2)\n1\n>>> gcd(2, 1)\n\
    1\n>>> gcd(2, 2)\n2\n>>> gcd(2, 3)\n1\n>>> gcd(3, 2)\n1\n>>> gcd(3, 3)\n3\n>>>\
    \ gcd(3, 4)\n1\n>>> gcd(4, 3)\n1\n>>> gcd(4, 4)\n4\n>>> gcd(4, 5)\n1\n>>> gcd(5,\
    \ 4)\n1\n>>> gcd(5, 5)\n5\n>>> gcd(5, 6)\n1\n>>> gcd(6, 5)\n1\n>>> gcd(6, 6)\n\
    6\n>>> gcd(6, 7)\n1\n>>> gcd(7, 6)\n1\n>>> gcd(7, 7)\n7\n>>> gcd(7, 8)\n1\n>>>\
    \ gcd(8, 7)\n1\n>>> gcd(8, 8)\n8\n>>> gcd(8, 9)\n1\n>>> gcd(9, 8)\n1\n>>> gcd(9,\
    \ 9)\n9\n>>> gcd(9, 10)\n1\n>>> gcd(10, 9)\n1\n>>> gcd(10, 10)\n10\n>>> gcd(10,\
    \ 11)\n1\n>>> gcd(11, 10)\n1\n>>> gcd(11, 11)\n11\n>>> gcd(11, 12)\n1\n>>> gcd(12,\
    \ 11)\n1\n>>> gcd(12, 12)\n12\n>>> gcd(12, 13)\n1\n>>>\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 19 in /tmp/tmptf4sd53g.php on
    line 19

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1 || $n == 2) {\n     \
    \   return 1;\n    } else {\n        return fib($n - 1) + fib($n - 2);\n    }\n\
    }\n\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n\
    21*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the sum of the first\
    \ n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n1\n>>> fib_sum(8)\n\
    54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return sum of all digits\
    \ of n.\n>>> sum_digits(1325132435356)\n43\n>>> sum_digits(123)\n6\n>>> sum_digits(6)\n\
    6\n>>> sum_digits(-10)\n1*/\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 3) {\n        return 1;\n\
    \    } else {\n        return fib($n - 1) + fib($n - 2);\n    }\n}\n\n/* Return\
    \ n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the sum of the first\
    \ n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n1\n>>> fib_sum(8)\n\
    54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the sum of the first\
    \ n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n1\n>>> fib_sum(8)\n\
    54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n <= 1) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the sum of the first\
    \ n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n1\n>>> fib_sum(8)\n\
    54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1 || $n == 2) {\n     \
    \   return 1;\n    } else {\n        return fib($n - 1) + fib($n - 2);\n    }\n\
    }\n\n/* Return the sum of the first n Fibonacci numbers.\n>>> fib_sum(10)\n143\n\
    >>> fib_sum(1)\n1\n>>> fib_sum(8)\n54*/\nfunction candidate(...$args) {\n    return\
    \ fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 55)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12) !== 144) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1 || $n == 2) {\n     \
    \   return 1;\n    } else {\n        return fib($n - 1) + fib($n - 2);\n    }\n\
    }\n\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n\
    21*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n <= 1) {\n        return $n;\n\
    \    } else {\n        return fib($n - 1) + fib($n - 2);\n    }\n}\n\n/* Return\
    \ n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1 || $n == 2) {\n     \
    \   return 1;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the\
    \ sum of the first n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n\
    1\n>>> fib_sum(8)\n54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1 || $n == 2) {\n     \
    \   return 1;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the\
    \ sum of the first n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n\
    1\n>>> fib_sum(8)\n54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1) {\n        return 1;\n\
    \    } elseif ($n == 2) {\n        return 1;\n    } else {\n        return fib($n\
    \ - 1) + fib($n - 2);\n    }\n}\n\n/* Return n-th Fibonacci number.\n>>> fib(10)\n\
    55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args) {\n    return\
    \ fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 55)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12) !== 144) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1) {\n        return 1;\n\
    \    } elseif ($n == 2) {\n        return 1;\n    } else {\n        return fib($n\
    \ - 1) + fib($n - 2);\n    }\n}\n\n/* Return the sum of the first n Fibonacci\
    \ numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n1\n>>> fib_sum(8)\n54*/\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1 || $n == 2) {\n     \
    \   return 1;\n    } else {\n        return fib($n - 1) + fib($n - 2);\n    }\n\
    }\n\n/* Return the sum of the first n Fibonacci numbers.\n>>> fib_sum(10)\n143\n\
    >>> fib_sum(1)\n1\n>>> fib_sum(8)\n54*/\nfunction candidate(...$args) {\n    return\
    \ fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 55)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12) !== 144) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the sum of the first\
    \ n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n1\n>>> fib_sum(8)\n\
    54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1) {\n        return 1;\n\
    \    } elseif ($n == 2) {\n        return 1;\n    } else {\n        return fib($n\
    \ - 1) + fib($n - 2);\n    }\n}\n\n/* Return the sum of the first n Fibonacci\
    \ numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n1\n>>> fib_sum(8)\n54*/\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1 || $n == 2) {\n     \
    \   return 1;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the\
    \ sum of the first n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n\
    1\n>>> fib_sum(8)\n54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n <= 2) {\n        return 1;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n <= 1) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the sum of all even\
    \ Fibonacci numbers less than n.\n>>> sum_even_fib(10)\n10\n>>> sum_even_fib(100)\n\
    44*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1 || $n == 2) {\n     \
    \   return 1;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the\
    \ sum of the first n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n\
    1\n>>> fib_sum(8)\n54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1 || $n == 2) {\n     \
    \   return 1;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th\
    \ Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1) {\n        return 1;\n\
    \    }\n    if ($n == 2) {\n        return 1;\n    }\n    return fib($n - 1) +\
    \ fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 3) {\n        return 1;\n\
    \    } else {\n        return fib($n - 1) + fib($n - 2);\n    }\n}\n\n/* Return\
    \ n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1 || $n == 2) {\n     \
    \   return 1;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the\
    \ number of occurrences of $needle in $haystack.\n>>> str_count('abca', 'a')\n\
    2\n>>> str_count('aaaa', 'aa')\n2\n>>> str_count('aaaa', 'b')\n0*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n <= 2) {\n        return 1;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the sum of the first\
    \ n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n1\n>>> fib_sum(8)\n\
    54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    } else {\n        return fib($n - 1) + fib($n - 2);\n    }\n}\n\n/* Return\
    \ n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    } else {\n        return fib($n - 1) + fib($n - 2);\n    }\n}\n\n/* Return\
    \ n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n <= 1) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the greatest common\
    \ divisor of two numbers.\n>>> gcd(12, 8)\n4\n>>> gcd(8, 12)\n4\n>>> gcd(0, 0)\n\
    0\n>>> gcd(0, 1)\n1\n>>> gcd(1, 0)\n1\n>>> gcd(1, 1)\n1\n>>> gcd(1, 2)\n1\n>>>\
    \ gcd(2, 1)\n1\n>>> gcd(2, 2)\n2\n>>> gcd(2, 3)\n1\n>>> gcd(3, 2)\n1\n>>> gcd(3,\
    \ 3)\n3\n>>> gcd(3, 4)\n1\n>>> gcd(4, 3)\n1\n>>> gcd(4, 4)\n4\n>>> gcd(4, 5)\n\
    1\n>>> gcd(5, 4)\n1\n>>> gcd(5, 5)\n5\n>>> gcd(5, 6)\n1\n>>> gcd(6, 5)\n1\n>>>\
    \ gcd(6, 6)\n6\n>>> gcd(6, 7)\n1\n>>> gcd(7, 6)\n1\n>>> gcd(7, 7)\n7\n>>> gcd(7,\
    \ 8)\n1\n>>> gcd(8, 7)\n1\n>>> gcd(8, 8)\n8\n>>> gcd(8, 9)\n1\n>>> gcd(9, 8)\n\
    1\n>>> gcd(9, 9)\n9\n>>> gcd(9, 10)\n1\n>>> gcd(10, 9)\n1\n>>> gcd(10, 10)\n10\n\
    >>> gcd(10, 11)\n1\n>>> gcd(11, 10)\n1\n>>> gcd(11, 11)\n11\n>>> gcd(11, 12)\n\
    1\n>>> gcd(12, 11)\n1\n>>> gcd(12, 12)\n12\n>>> gcd(12, 13)\n1\n>>> gcd(13, 12)\n\
    1\n>>> gcd(13, 13)\n13\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 16 in /tmp/tmpbmmuj8yf.php on
    line 16

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n <= 1) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1) {\n        return 1;\n\
    \    } elseif ($n == 2) {\n        return 1;\n    } else {\n        return fib($n\
    \ - 1) + fib($n - 2);\n    }\n}\n\n/* Return the factorial of a number.\n>>> factorial(5)\n\
    120\n>>> factorial(1)\n1\n>>> factorial(3)\n6*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1 || $n == 2) {\n     \
    \   return 1;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the\
    \ sum of the first n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n\
    1\n>>> fib_sum(8)\n54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1 || $n == 2) {\n     \
    \   return 1;\n    } else {\n        return fib($n - 1) + fib($n - 2);\n    }\n\
    }\n\n/* Return the sum of all even Fibonacci numbers less than n.\n>>> sum_even_fib(10)\n\
    10\n>>> sum_even_fib(50)\n44\n>>> sum_even_fib(100)\n44*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1) {\n        return 1;\n\
    \    } elseif ($n == 2) {\n        return 1;\n    } else {\n        return fib($n\
    \ - 1) + fib($n - 2);\n    }\n}\n\n/* Return the sum of the first n Fibonacci\
    \ numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n1\n>>> fib_sum(8)\n54*/\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the sum of the first\
    \ n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n1\n>>> fib_sum(8)\n\
    54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the sum of the first\
    \ n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n1\n>>> fib_sum(8)\n\
    54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n <= 2) {\n        return 1;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the sum of the first\
    \ n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n1\n>>> fib_sum(8)\n\
    54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the sum of the first\
    \ n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n1\n>>> fib_sum(8)\n\
    54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n <= 1) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n <= 1) {\n        return $n;\n\
    \    } else {\n        return fib($n - 1) + fib($n - 2);\n    }\n}\n\n/* Return\
    \ the sum of the first n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n\
    1\n>>> fib_sum(8)\n54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the sum of the first\
    \ n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n1\n>>> fib_sum(8)\n\
    54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1) {\n        return 1;\n\
    \    } elseif ($n == 2) {\n        return 1;\n    } else {\n        return fib($n\
    \ - 1) + fib($n - 2);\n    }\n}\n\n/* Return n-th Fibonacci number.\n>>> fib(10)\n\
    55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args) {\n    return\
    \ fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 55)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12) !== 144) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n <= 2) {\n        return 1;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the sum of the first\
    \ n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n1\n>>> fib_sum(8)\n\
    54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\necho fib(10);\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '55'
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the sum of the first\
    \ n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n1\n>>> fib_sum(8)\n\
    54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the sum of all numbers\
    \ in the array.\n>>> sum([1, 2, 3, 4, 5])\n15\n>>> sum([-1, -2, -3, -4, -5])\n\
    -15\n>>> sum([])\n0*/\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    } else {\n        return fib($n - 1) + fib($n - 2);\n    }\n}\n\n/* Return\
    \ n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1 || $n == 2) {\n     \
    \   return 1;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the\
    \ sum of the first n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n\
    1\n>>> fib_sum(8)\n54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1 || $n == 2) {\n     \
    \   return 1;\n    } else {\n        return fib($n - 1) + fib($n - 2);\n    }\n\
    }\n\n/* Return the sum of the first n Fibonacci numbers.\n>>> fib_sum(10)\n143\n\
    >>> fib_sum(1)\n1\n>>> fib_sum(8)\n54*/\nfunction candidate(...$args) {\n    return\
    \ fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 55)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12) !== 144) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n <= 2) {\n        return 1;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return sum of the first\
    \ n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n1\n>>> fib_sum(8)\n\
    54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 3) {\n        return 1;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1 || $n == 2) {\n     \
    \   return 1;\n    } else {\n        return fib($n - 1) + fib($n - 2);\n    }\n\
    }\n\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n\
    21*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1) {\n        return 1;\n\
    \    } elseif ($n == 2) {\n        return 1;\n    } else {\n        return fib($n\
    \ - 1) + fib($n - 2);\n    }\n}\n\n/* Return factorial of n.\n>>> fact(5)\n120\n\
    >>> fact(1)\n1\n>>> fact(3)\n6*/\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1) {\n        return 1;\n\
    \    }\n    if ($n == 2) {\n        return 1;\n    }\n    return fib($n - 1) +\
    \ fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1 || $n == 2) {\n     \
    \   return 1;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th\
    \ Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n <= 2) {\n        return 1;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1 || $n == 2) {\n     \
    \   return 1;\n    } else {\n        return fib($n - 1) + fib($n - 2);\n    }\n\
    }\n\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n\
    21*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n <= 2) {\n        return 1;\n\
    \    } else {\n        return fib($n - 1) + fib($n - 2);\n    }\n}\n\n/* Return\
    \ n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1) {\n        return 1;\n\
    \    } elseif ($n == 2) {\n        return 1;\n    } else {\n        return fib($n\
    \ - 1) + fib($n - 2);\n    }\n}\n\n/* Return n-th Fibonacci number.\n>>> fib(10)\n\
    55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args) {\n    return\
    \ fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 55)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12) !== 144) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1 || $n == 2) {\n     \
    \   return 1;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th\
    \ Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1) {\n        return 1;\n\
    \    } elseif ($n == 2) {\n        return 1;\n    } else {\n        return fib($n\
    \ - 1) + fib($n - 2);\n    }\n}\n\n/* Return n-th Fibonacci number.\n>>> fib(10)\n\
    55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args) {\n    return\
    \ fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10) !== 55)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== 1) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12) !== 144) { throw new Exception(\"Test\
    \ failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n <= 1) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the sum of the first\
    \ n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n1\n>>> fib_sum(8)\n\
    54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n <= 2) {\n        return 1;\n\
    \    } else {\n        return fib($n - 1) + fib($n - 2);\n    }\n}\n\n/* Return\
    \ the sum of the first n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n\
    1\n>>> fib_sum(8)\n54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1 || $n == 2) {\n     \
    \   return 1;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the\
    \ sum of the first n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n\
    1\n>>> fib_sum(8)\n54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n <= 1) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the sum of the first\
    \ n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n1\n>>> fib_sum(8)\n\
    54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    } else {\n        return fib($n - 1) + fib($n - 2);\n    }\n}\n\n/* Return\
    \ the sum of the first n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n\
    1\n>>> fib_sum(8)\n54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n == 1 || $n == 2) {\n     \
    \   return 1;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the\
    \ sum of the first n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n\
    1\n>>> fib_sum(8)\n54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    } else {\n        return fib($n - 1) + fib($n - 2);\n    }\n}\n\n/* Return\
    \ n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n <= 2) {\n        return 1;\n\
    \    } else {\n        return fib($n - 1) + fib($n - 2);\n    }\n}\n\n/* Return\
    \ n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction\
    \ candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n    if (candidate(11)\
    \ !== 89) { throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !==\
    \ 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n <= 1) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the sum of the first\
    \ n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n1\n>>> fib_sum(8)\n\
    54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n < 2) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return n-th Fibonacci number.\n\
    >>> fib(10)\n55\n>>> fib(1)\n1\n>>> fib(8)\n21*/\nfunction candidate(...$args)\
    \ {\n    return fib(...$args);\n}\n\nfunction test(): void {\n    if (candidate(10)\
    \ !== 55) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 21)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(11) !== 89) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(12) !== 144) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* Return n-th Fibonacci number.\n>>> fib(10)\n55\n>>> fib(1)\n\
    1\n>>> fib(8)\n21*/\nfunction fib($n) {\n    if ($n <= 1) {\n        return $n;\n\
    \    }\n    return fib($n - 1) + fib($n - 2);\n}\n\n/* Return the sum of the first\
    \ n Fibonacci numbers.\n>>> fib_sum(10)\n143\n>>> fib_sum(1)\n1\n>>> fib_sum(8)\n\
    54*/\nfunction candidate(...$args) {\n    return fib(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(10) !== 55) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 21) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(11) !== 89) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(12) !== 144) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777

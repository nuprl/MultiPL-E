language: php
name: HumanEval_47_median
results:
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n\
    \    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n / 2] + $l[$n\
    \ / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n}\n\n/* Return\
    \ the mean of elements in the array l.\n>>> mean(array(3, 1, 2, 4, 5))\n3.0\n\
    >>> mean(array(-10, 4, 6, 1000, 10, 20))\n210.0*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp1pflfv4b.php on line 16\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp1pflfv4b.php:31\nStack trace:\n#0 /tmp/tmp1pflfv4b.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp1pflfv4b.php on line 31\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        $m = ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        $m = $l[($n - 1) / 2];\n\
    \    }\n    return $m;\n}\n\n/* Return the mode of elements in the array l.\n\
    >>> mode(array(3, 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6,\
    \ 1000, 10, 20))\narray(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_8rtdkin.php:27\n\
    Stack trace:\n#0 /tmp/tmp_8rtdkin.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp_8rtdkin.php\
    \ on line 27\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n \
    \       return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return\
    \ $l[$n / 2];\n    }\n}\n\n/* Return the mode of elements in the array l.\n>>>\
    \ mode(array(3, 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6,\
    \ 1000, 10, 20))\narray(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmprhxrdr5f.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmprhxrdr5f.php:28\nStack trace:\n#0 /tmp/tmprhxrdr5f.php(34):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmprhxrdr5f.php on line 28\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n \
    \       return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return\
    \ $l[$n / 2];\n    }\n}\n\n/* Return the mean of elements in the array l.\n>>>\
    \ mean(array(3, 1, 2, 4, 5))\n3\n>>> mean(array(-10, 4, 6, 1000, 10, 20))\n200.0*/\n\
    function candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpsukip_zh.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpsukip_zh.php:28\nStack trace:\n#0 /tmp/tmpsukip_zh.php(34):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpsukip_zh.php on line 28\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3, 1, 2, 4,\
    \ 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\narray(-10,\
    \ 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpy2sr992v.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpy2sr992v.php:26\nStack trace:\n#0 /tmp/tmpy2sr992v.php(33):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpy2sr992v.php on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return 0;\n \
    \   }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n / 2] + $l[$n\
    \ / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n}\n\n/* Return\
    \ the mode of elements in the array l.\n>>> mode(array(3, 1, 2, 4, 5))\narray(1,\
    \ 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\narray(-10, 4, 6, 10,\
    \ 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmps12i_fc_.php on line 16\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmps12i_fc_.php:31\nStack trace:\n#0 /tmp/tmps12i_fc_.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmps12i_fc_.php on line 31\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3, 1, 2, 4,\
    \ 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\narray(-10,\
    \ 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpy2sr992v.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpy2sr992v.php:26\nStack trace:\n#0 /tmp/tmpy2sr992v.php(33):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpy2sr992v.php on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    $m = floor($n / 2);\n    if ($n % 2 ==\
    \ 0) {\n        return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return\
    \ $l[$m];\n    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n10*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps3w9gz9d.php:27\n\
    Stack trace:\n#0 /tmp/tmps3w9gz9d.php(34): test()\n#1 {main}\n  thrown in /tmp/tmps3w9gz9d.php\
    \ on line 27\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n\
    \    }\n    $m = floor($n / 2);\n    if ($n % 2 == 0) {\n        return ($l[$m\
    \ - 1] + $l[$m]) / 2;\n    } else {\n        return $l[$m];\n    }\n}\n\n/* Return\
    \ the mode of elements in the array l.\n>>> mode(array(3, 1, 2, 4, 5))\narray(1,\
    \ 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\narray(-10, 4, 6, 10,\
    \ 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2b96uk8n.php:30\n\
    Stack trace:\n#0 /tmp/tmp2b96uk8n.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp2b96uk8n.php\
    \ on line 30\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n \
    \       return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return\
    \ $l[floor($n / 2)];\n    }\n}\n\n/* Return the mode of elements in the array\
    \ l.\n>>> mode(array(3, 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10,\
    \ 4, 6, 1000, 10, 20))\narray(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpew0oqafv.php:28\n\
    Stack trace:\n#0 /tmp/tmpew0oqafv.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpew0oqafv.php\
    \ on line 28\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n \
    \       return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return\
    \ $l[($n - 1) / 2];\n    }\n}\n\n/* Return the mode of elements in the array l.\n\
    >>> mode(array(3, 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6,\
    \ 1000, 10, 20))\narray(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgka66uaj.php:28\n\
    Stack trace:\n#0 /tmp/tmpgka66uaj.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpgka66uaj.php\
    \ on line 28\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $l = array_values($l);\n    sort($l);\n    $n = count($l);\n\
    \    if ($n % 2 == 0) {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n \
    \   } else {\n        return $l[($n - 1) / 2];\n    }\n}\n\n/* Return the mean\
    \ of the elements in the array l.\n>>> mean(array(3, 1, 2, 4, 5))\n3.0\n>>> mean(array(-10,\
    \ 4, 6, 1000, 10, 20))\n210.0*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7f4jp3nt.php:29\n\
    Stack trace:\n#0 /tmp/tmp7f4jp3nt.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp7f4jp3nt.php\
    \ on line 29\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n \
    \       return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return\
    \ $l[floor($n / 2)];\n    }\n}\n\n/* Return the mode of elements in the array\
    \ l.\n>>> mode(array(3, 1, 2, 4, 5))\n3\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n\
    10*/\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpon121t51.php:28\n\
    Stack trace:\n#0 /tmp/tmpon121t51.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpon121t51.php\
    \ on line 28\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1) / 2];\n\
    \    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10))\narray(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n>>> mode(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 10))\narray(10)\n>>> mode(array(1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 10, 10))\narray(10)\n>>> mode(array(1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 10, 10, 10))\narray(10)\n>>> mode(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10,\
    \ 10, 10, 10))\narray(10)\n>>> mode(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10,\
    \ 10, 10, 10))\narray(10)\n>>> mode(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10,\
    \ 10, 10, 10, 10))\narray(10)\n>>> mode(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10,\
    \ 10, 10, 10, 10, 10, 10))\narray(10)\n>>> mode(array(1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 10, 10, 10, 10, 10, 10, 10, 10))\narray(10)\n>>> mode(array(1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10))\narray(10)\n>>> mode(array(1,\
    \ 2, 3,\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 16 in /tmp/tmp2awgpwnn.php on
    line 16

    '
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3, 1, 2, 4,\
    \ 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\narray(-10,\
    \ 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpy2sr992v.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpy2sr992v.php:26\nStack trace:\n#0 /tmp/tmpy2sr992v.php(33):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpy2sr992v.php on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n \
    \       $m = ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        $m = $l[($n\
    \ - 1) / 2];\n    }\n    return $m;\n}\n\n/* Return the mode of elements in the\
    \ array l.\n>>> mode(array(3, 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10,\
    \ 4, 6, 1000, 10, 20))\narray(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9tcw9ter.php:29\n\
    Stack trace:\n#0 /tmp/tmp9tcw9ter.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp9tcw9ter.php\
    \ on line 29\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    sort($l);\n    $len = count($l);\n    if ($len % 2 == 0) {\n\
    \        return ($l[$len / 2] + $l[$len / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[($len - 1) / 2];\n    }\n}\n\n/* Return the mode of elements in the\
    \ array l.\n>>> mode(array(3, 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10,\
    \ 4, 6, 1000, 10, 20))\narray(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2jnfk0la.php:28\n\
    Stack trace:\n#0 /tmp/tmp2jnfk0la.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp2jnfk0la.php\
    \ on line 28\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n\
    \    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n / 2] + $l[$n\
    \ / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n}\n\n/* Return\
    \ the mean of elements in the array l.\n>>> mean(array(3, 1, 2, 4, 5))\n3.0\n\
    >>> mean(array(-10, 4, 6, 1000, 10, 20))\n195.0*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmps9uwp6jv.php on line 16\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmps9uwp6jv.php:31\nStack trace:\n#0 /tmp/tmps9uwp6jv.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmps9uwp6jv.php on line 31\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n\tsort($l);\n\t$len = count($l);\n\tif ($len % 2 == 0) {\n\t\t\
    return ($l[$len / 2] + $l[$len / 2 - 1]) / 2;\n\t} else {\n\t\treturn $l[$len\
    \ / 2];\n\t}\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n\
    array(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpxno4qzl5.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpxno4qzl5.php:28\nStack trace:\n#0 /tmp/tmpxno4qzl5.php(34):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpxno4qzl5.php on line 28\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\n/* Return the mode of the elements in the array l.\n>>> mode(array(3, 1,\
    \ 2, 4, 5))\narray(1 => 1, 2 => 1, 3 => 1, 4 => 1, 5 => 1)\n>>> mode(array(3,\
    \ 1, 2, 4, 5, 1, 2, 3, 4, 5))\narray(1 => 2, 2 => 2, 3 => 2, 4 => 2, 5 => 2)\n\
    >>> mode(array(3, 1, 2, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5))\narray(1 => 3, 2\
    \ => 3, 3 => 3, 4 => 3, 5 => 3)\n>>> mode(array(3, 1, 2, 4, 5, 1, 2, 3, 4, 5,\
    \ 1, 2, 3, 4, 5, 1, 2, 3, 4, 5))\narray(1 => 4, 2 => 4, 3 => 4, 4 => 4, 5 => 4)\n\
    >>> mode(array(3, 1, 2, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1,\
    \ 2, 3, 4, 5))\narray(1 => 5, 2 => 5, 3 => 5, 4 => 5, 5 => 5)\n>>> mode(array(3,\
    \ 1, 2, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2,\
    \ 3, 4, 5))\narray(1 => 6, 2 => 6, 3 => 6, 4 => 6, 5 => 6)\n>>> mode(array(3,\
    \ 1, 2, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1,\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 16 in /tmp/tmp8zi6kf33.php on
    line 16

    '
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return 0;\n \
    \   }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n / 2] + $l[$n\
    \ / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n}\n\n/* Return\
    \ the mode of elements in the array l.\n>>> mode(array(3, 1, 2, 4, 5))\n3\n>>>\
    \ mode(array(-10, 4, 6, 1000, 10, 20))\n4*/\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmprhquyffr.php on line 16\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmprhquyffr.php:31\nStack trace:\n#0 /tmp/tmprhquyffr.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmprhquyffr.php on line 31\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1) / 2];\n\
    \    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n4*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqza7hjvg.php:26\n\
    Stack trace:\n#0 /tmp/tmpqza7hjvg.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpqza7hjvg.php\
    \ on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n\
    \    }\n    if ($n % 2 == 0) {\n        return ($l[$n / 2 - 1] + $l[$n / 2]) /\
    \ 2;\n    } else {\n        return $l[($n - 1) / 2];\n    }\n}\n\n/* Return the\
    \ mean of elements in the array l.\n>>> mean(array(3, 1, 2, 4, 5))\n3.0\n>>> mean(array(-10,\
    \ 4, 6, 1000, 10, 20))\n216.66666666666666*/\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5wd177zf.php:29\n\
    Stack trace:\n#0 /tmp/tmp5wd177zf.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp5wd177zf.php\
    \ on line 29\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\n/* Return the mean of elements in the array l.\n>>> mean(array(3, 1, 2, 4,\
    \ 5))\n3\n>>> mean(array(-10, 4, 6, 1000, 10, 20))\n150.0*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp5ix62met.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp5ix62met.php:26\nStack trace:\n#0 /tmp/tmp5ix62met.php(33):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp5ix62met.php on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n \
    \       return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return\
    \ $l[$n / 2];\n    }\n}\n\n/* Return the mode of the elements in the array l.\n\
    >>> mode(array(3, 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6,\
    \ 1000, 10, 20))\narray(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpdtfoz2bd.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpdtfoz2bd.php:28\nStack trace:\n#0 /tmp/tmpdtfoz2bd.php(34):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpdtfoz2bd.php on line 28\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    sort($l);\n    $length = count($l);\n    $mid = floor($length\
    \ / 2);\n    if ($length % 2 == 0) {\n        return ($l[$mid - 1] + $l[$mid])\
    \ / 2;\n    } else {\n        return $l[$mid];\n    }\n}\n\n/* Return the mode\
    \ of elements in the array l.\n>>> mode(array(3, 1, 2, 4, 5))\narray(1, 2, 3,\
    \ 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\narray(-10, 4, 6, 10, 20, 1000)*/\n\
    function candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppaoaxeqz.php:29\n\
    Stack trace:\n#0 /tmp/tmppaoaxeqz.php(35): test()\n#1 {main}\n  thrown in /tmp/tmppaoaxeqz.php\
    \ on line 29\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    $m = floor($n / 2);\n    if ($n % 2 ==\
    \ 0) {\n        return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return\
    \ $l[$m];\n    }\n}\n\n/* Return the mean of elements in the array l.\n>>> mean(array(3,\
    \ 1, 2, 4, 5))\n3.0\n>>> mean(array(-10, 4, 6, 1000, 10, 20))\n160.0*/\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp76a_a7o2.php:27\n\
    Stack trace:\n#0 /tmp/tmp76a_a7o2.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp76a_a7o2.php\
    \ on line 27\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1) / 2];\n\
    \    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n\
    array(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_m8godx5.php:26\n\
    Stack trace:\n#0 /tmp/tmp_m8godx5.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_m8godx5.php\
    \ on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1) / 2];\n\
    \    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n\
    array(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_m8godx5.php:26\n\
    Stack trace:\n#0 /tmp/tmp_m8godx5.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_m8godx5.php\
    \ on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\n/* Return the mode of the elements in the array l.\n>>> mode(array(3, 1,\
    \ 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n\
    array(-10, 4, 6, 10, 20, 1000)\n*/\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpvr76pl5v.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpvr76pl5v.php:27\nStack trace:\n#0 /tmp/tmpvr76pl5v.php(34):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpvr76pl5v.php on line 27\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    $m = floor($n / 2);\n    if ($n % 2 ==\
    \ 0) {\n        return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return\
    \ $l[$m];\n    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n\
    array(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx7s75_xs.php:27\n\
    Stack trace:\n#0 /tmp/tmpx7s75_xs.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpx7s75_xs.php\
    \ on line 27\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n \
    \       return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return\
    \ $l[floor($n / 2)];\n    }\n}\n\n/* Return the mean of elements in the array\
    \ l.\n>>> mean(array(3, 1, 2, 4, 5))\n3\n>>> mean(array(-10, 4, 6, 1000, 10, 20))\n\
    155.0*/\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcqwfkvq7.php:28\n\
    Stack trace:\n#0 /tmp/tmpcqwfkvq7.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpcqwfkvq7.php\
    \ on line 28\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1) / 2];\n\
    \    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n\
    array(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_m8godx5.php:26\n\
    Stack trace:\n#0 /tmp/tmp_m8godx5.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_m8godx5.php\
    \ on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n \
    \       return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return\
    \ $l[$n / 2];\n    }\n}\n\n/* Return the mode of elements in the array l.\n>>>\
    \ mode(array(3, 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6,\
    \ 1000, 10, 20))\narray(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmprhxrdr5f.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmprhxrdr5f.php:28\nStack trace:\n#0 /tmp/tmprhxrdr5f.php(34):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmprhxrdr5f.php on line 28\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3, 1, 2, 4,\
    \ 5))\n3\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n1000*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpzi_ce6he.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpzi_ce6he.php:26\nStack trace:\n#0 /tmp/tmpzi_ce6he.php(33):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpzi_ce6he.php on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1) / 2];\n\
    \    }\n}\n\n/* Return the mean of elements in the array l.\n>>> mean(array(3,\
    \ 1, 2, 4, 5))\n3.0\n>>> mean(array(-10, 4, 6, 1000, 10, 20))\n200.0*/\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp87gg3yfs.php:26\n\
    Stack trace:\n#0 /tmp/tmp87gg3yfs.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp87gg3yfs.php\
    \ on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n \
    \       return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return\
    \ $l[$n / 2];\n    }\n}\n\n/* Return the mode of the elements in the array l.\n\
    >>> mode(array(3, 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6,\
    \ 1000, 10, 20))\narray(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpdtfoz2bd.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpdtfoz2bd.php:28\nStack trace:\n#0 /tmp/tmpdtfoz2bd.php(34):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpdtfoz2bd.php on line 28\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return 0;\n \
    \   }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n / 2] + $l[$n\
    \ / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n}\n\n/* Return\
    \ the mode of elements in the array l.\n>>> mode(array(3, 1, 2, 4, 5))\narray(1,\
    \ 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\narray(-10, 4, 6, 10,\
    \ 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmps12i_fc_.php on line 16\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmps12i_fc_.php:31\nStack trace:\n#0 /tmp/tmps12i_fc_.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmps12i_fc_.php on line 31\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n\
    \    }\n    sort($l);\n    $m = $n / 2;\n    if ($n % 2 == 0) {\n        return\
    \ ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return $l[$m];\n    }\n}\n\
    \n/* Return the mode of elements in the array l.\n>>> mode(array(3, 1, 2, 4, 5))\n\
    array(3) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n  [2]=>\n  int(3)\n  [3]=>\n\
    \  int(4)\n  [4]=>\n  int(5)\n}\n>>> mode(array(3, 1, 2, 4, 5, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,\
    \ 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,\
    \ 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\
    \ 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 21 in /tmp/tmpyheybhyq.php on
    line 21

    '
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n\
    \    }\n    sort($l);\n    $m = floor($n / 2);\n    if ($n % 2 == 0) {\n     \
    \   return ($l[$m] + $l[$m - 1]) / 2;\n    } else {\n        return $l[$m];\n\
    \    }\n}\n\n/* Return mode of elements in the array l.\n>>> mode(array(3, 1,\
    \ 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n\
    array(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4cg7fccz.php:32\n\
    Stack trace:\n#0 /tmp/tmp4cg7fccz.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4cg7fccz.php\
    \ on line 32\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1) / 2];\n\
    \    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n10*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsp23fw6a.php:26\n\
    Stack trace:\n#0 /tmp/tmpsp23fw6a.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpsp23fw6a.php\
    \ on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\n/* Return the index of the median of elements in the array l.\n>>> median_index(array(3,\
    \ 1, 2, 4, 5))\n2\n>>> median_index(array(-10, 4, 6, 1000, 10, 20))\n3*/\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmplef_4ua3.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmplef_4ua3.php:26\nStack trace:\n#0 /tmp/tmplef_4ua3.php(33):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmplef_4ua3.php on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[(int) ($n / 2)];\n\
    \    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n\
    array(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp28pd3fpn.php:26\n\
    Stack trace:\n#0 /tmp/tmp28pd3fpn.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp28pd3fpn.php\
    \ on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    $m = floor($n / 2);\n    if ($n % 2 ==\
    \ 0) {\n        return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return\
    \ $l[$m];\n    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n\
    array(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx7s75_xs.php:27\n\
    Stack trace:\n#0 /tmp/tmpx7s75_xs.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpx7s75_xs.php\
    \ on line 27\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    sort($l);\n    $len = count($l);\n    if ($len % 2 == 0) {\n\
    \        return ($l[$len / 2] + $l[$len / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$len / 2];\n    }\n}\n\n/* Return the mode of elements in the array\
    \ l.\n>>> mode(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))\n1\n>>> mode(array(1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 10))\n10\n>>> mode(array(1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 10, 10))\n10\n>>> mode(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10, 10))\n\
    10\n>>> mode(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10, 10, 10))\n10\n>>> mode(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10, 10, 10, 10))\n10\n>>> mode(array(1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 10, 10, 10, 10, 10, 10))\n10\n>>> mode(array(1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 10, 10, 10, 10, 10, 10, 10))\n10\n>>> mode(array(1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10))\n10\n>>> mode(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10))\n10\n>>> mode(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10))\n10\n>>>\
    \ mode(array(1, 2\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 17 in /tmp/tmpisp_qk9q.php on
    line 17

    '
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1) / 2];\n\
    \    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n\
    array(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_m8godx5.php:26\n\
    Stack trace:\n#0 /tmp/tmp_m8godx5.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_m8godx5.php\
    \ on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $c = count($l);\n    $m = floor($c / 2);\n    if ($c % 2 ==\
    \ 0) {\n        return ($l[$m] + $l[$m - 1]) / 2;\n    } else {\n        return\
    \ $l[$m];\n    }\n}\n\n/* Return the mode of the elements in the array l.\n>>>\
    \ mode(array(3, 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6,\
    \ 1000, 10, 20))\narray(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpek6ihddk.php:27\n\
    Stack trace:\n#0 /tmp/tmpek6ihddk.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpek6ihddk.php\
    \ on line 27\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n == 0) return 0;\n    sort($l);\n\
    \    if ($n % 2 == 0) {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n \
    \   } else {\n        return $l[($n - 1) / 2];\n    }\n}\n\n/* Return mean of\
    \ elements in the array l.\n>>> mean(array(3, 1, 2, 4, 5))\n3\n>>> mean(array(-10,\
    \ 4, 6, 1000, 10, 20))\n155.0*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkx91isso.php:29\n\
    Stack trace:\n#0 /tmp/tmpkx91isso.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpkx91isso.php\
    \ on line 29\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\n/* Return the median of the elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpir6jbevn.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpir6jbevn.php:26\nStack trace:\n#0 /tmp/tmpir6jbevn.php(33):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpir6jbevn.php on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n \
    \       return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return\
    \ $l[$n / 2];\n    }\n}\n\n/* Return the average of elements in the array l.\n\
    >>> average(array(3, 1, 2, 4, 5))\n3.0\n>>> average(array(-10, 4, 6, 1000, 10,\
    \ 20))\n220.0*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp_qz_4il8.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp_qz_4il8.php:28\nStack trace:\n#0 /tmp/tmp_qz_4il8.php(34):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp_qz_4il8.php on line 28\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n == 0) return 0;\n    sort($l);\n\
    \    if ($n % 2 == 0) {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n \
    \   } else {\n        return $l[$n / 2];\n    }\n}\n\n/* Return the mean of elements\
    \ in the array l.\n>>> mean(array(3, 1, 2, 4, 5))\n3\n>>> mean(array(-10, 4, 6,\
    \ 1000, 10, 20))\n150.0*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpy9jojz7g.php on line 14\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpy9jojz7g.php:29\nStack trace:\n#0 /tmp/tmpy9jojz7g.php(35):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpy9jojz7g.php on line 29\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n \
    \       return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return\
    \ $l[$n / 2];\n    }\n}\n\n/* Return the mode of elements in the array l.\n>>>\
    \ mode(array(3, 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6,\
    \ 1000, 10, 20))\narray(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmprhxrdr5f.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmprhxrdr5f.php:28\nStack trace:\n#0 /tmp/tmprhxrdr5f.php(34):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmprhxrdr5f.php on line 28\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n \
    \       return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return\
    \ $l[$n / 2];\n    }\n}\n\n/* Return the mode of elements in the array l.\n>>>\
    \ mode(array(3, 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6,\
    \ 1000, 10, 20))\narray(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmprhxrdr5f.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmprhxrdr5f.php:28\nStack trace:\n#0 /tmp/tmprhxrdr5f.php(34):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmprhxrdr5f.php on line 28\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n\
    \    }\n    sort($l);\n    $m = floor($n / 2);\n    if ($n % 2 == 0) {\n     \
    \   return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return $l[$m];\n\
    \    }\n}\n\n/* Return the mean of the elements in the array l.\n>>> mean(array(3,\
    \ 1, 2, 4, 5))\n3.0\n>>> mean(array(-10, 4, 6, 1000, 10, 20))\n160.0*/\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp89ehvqw1.php:32\n\
    Stack trace:\n#0 /tmp/tmp89ehvqw1.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp89ehvqw1.php\
    \ on line 32\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n\
    \    }\n    sort($l);\n    $m = floor($n / 2);\n    if ($n % 2 == 0) {\n     \
    \   return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return $l[$m];\n\
    \    }\n}\n\n/* Return the median of the elements in the array l.\n>>> median_odd(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median_odd(array(-10, 4, 6, 1000, 10, 20))\n10\n*/\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp3829nwn.php:33\n\
    Stack trace:\n#0 /tmp/tmpp3829nwn.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpp3829nwn.php\
    \ on line 33\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        $m = ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        $m = $l[($n - 1) / 2];\n\
    \    }\n    return $m;\n}\n\n/* Return the average of the elements in the array\
    \ l.\n>>> average(array(3, 1, 2, 4, 5))\n3.0\n>>> average(array(-10, 4, 6, 1000,\
    \ 10, 20))\n220.0*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy429g0i6.php:27\n\
    Stack trace:\n#0 /tmp/tmpy429g0i6.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpy429g0i6.php\
    \ on line 27\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n \
    \       return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return\
    \ $l[$n / 2];\n    }\n}\n\n/* Return the mode of elements in the array l.\n>>>\
    \ mode(array(3, 1, 2, 4, 5))\n3\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n10*/\n\
    function candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmps6pl6_7y.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmps6pl6_7y.php:28\nStack trace:\n#0 /tmp/tmps6pl6_7y.php(34):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmps6pl6_7y.php on line 28\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3, 1, 2, 4,\
    \ 5))\n3\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n10*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpno1a6v9k.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpno1a6v9k.php:26\nStack trace:\n#0 /tmp/tmpno1a6v9k.php(33):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpno1a6v9k.php on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1) / 2];\n\
    \    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n\
    array(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_m8godx5.php:26\n\
    Stack trace:\n#0 /tmp/tmp_m8godx5.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_m8godx5.php\
    \ on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1) / 2];\n\
    \    }\n}\n\n/* Return the mode of the elements in the array l.\n>>> mode(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10))\n1\n>>> mode(array(1, 1, 2, 2, 3, 3, 4, 4, 5, 5))\n\
    1\n>>> mode(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10))\n10\n>>> mode(array(1, 1,\
    \ 2, 2, 3, 3, 4, 4, 5, 5, 10))\n1\n>>> mode(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 10, 10))\n10\n>>> mode(array(1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 10, 10))\n1\n>>>\
    \ mode(array(1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 10, 10, 10))\n10\n>>> mode(array(1,\
    \ 1, 2, 2, 3, 3, 4, 4, 5, 5, 10, 10, 10, 10))\n10\n>>> mode(array(1, 1, 2, 2,\
    \ 3, 3, 4, 4, 5, 5, 10, 10, 10, 10, 10))\n10\n>>> mode(array(1, 1, 2, 2, 3, 3,\
    \ 4, 4, 5, 5, 10, 10, 10, 10, 10, 10))\n10\n>>> mode(array(1, 1, 2, 2, 3, 3, 4,\
    \ 4, 5, 5, 10, 10, 10, 10, 10, 10, 10))\n10\n>>> mode(array(1, 1, 2, 2, 3, 3,\
    \ 4, 4, 5, 5, 10, 10, 10, 10, 10, 10, 10, 10))\n10\n>>> mode(array(1, 1, 2, 2,\
    \ 3\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 16 in /tmp/tmp0bdq8piy.php on
    line 16

    '
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n \
    \       return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return\
    \ $l[$n / 2];\n    }\n}\n\n/* Return the mode of elements in the array l.\n>>>\
    \ mode(array(3, 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6,\
    \ 1000, 10, 20))\narray(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmprhxrdr5f.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmprhxrdr5f.php:28\nStack trace:\n#0 /tmp/tmprhxrdr5f.php(34):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmprhxrdr5f.php on line 28\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3, 1, 2, 4,\
    \ 5))\n3\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n10*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpno1a6v9k.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpno1a6v9k.php:26\nStack trace:\n#0 /tmp/tmpno1a6v9k.php(33):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpno1a6v9k.php on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1) / 2];\n\
    \    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n10*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsp23fw6a.php:26\n\
    Stack trace:\n#0 /tmp/tmpsp23fw6a.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpsp23fw6a.php\
    \ on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n \
    \       return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return\
    \ $l[($n - 1) / 2];\n    }\n}\n\n/* Return the mode of elements in the array l.\n\
    >>> mode(array(3, 1, 2, 4, 5))\n1\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n\
    -10\n>>> mode(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))\n1*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1whos_jo.php:30\n\
    Stack trace:\n#0 /tmp/tmp1whos_jo.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp1whos_jo.php\
    \ on line 30\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n\
    \    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n / 2] + $l[$n\
    \ / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1) / 2];\n    }\n}\n\n\
    /* Return the mode of elements in the array l.\n>>> mode(array(3, 1, 2, 4, 5))\n\
    array(3) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n  [2]=>\n  int(3)\n  [3]=>\n\
    \  int(4)\n  [4]=>\n  int(5)\n}\n>>> mode(array(3, 1, 2, 4, 5, 1, 2, 3, 4, 5,\
    \ 1, 2, 3, 4, 5))\narray(2) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n}*/\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpip2acvia.php:47\n\
    Stack trace:\n#0 /tmp/tmpip2acvia.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpip2acvia.php\
    \ on line 47\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    $m = floor($n / 2);\n    if ($n % 2 ==\
    \ 0) {\n        return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return\
    \ $l[$m];\n    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n10*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps3w9gz9d.php:27\n\
    Stack trace:\n#0 /tmp/tmps3w9gz9d.php(34): test()\n#1 {main}\n  thrown in /tmp/tmps3w9gz9d.php\
    \ on line 27\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $c = count($l);\n    if ($c == 0) {\n        return null;\n\
    \    }\n    sort($l);\n    if ($c % 2 == 0) {\n        return ($l[$c / 2] + $l[$c\
    \ / 2 - 1]) / 2;\n    } else {\n        return $l[($c - 1) / 2];\n    }\n}\n\n\
    /* Return the mean of elements in the array l.\n>>> mean(array(3, 1, 2, 4, 5))\n\
    3.0\n>>> mean(array(-10, 4, 6, 1000, 10, 20))\n160.0*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdtnaibi2.php:31\n\
    Stack trace:\n#0 /tmp/tmpdtnaibi2.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpdtnaibi2.php\
    \ on line 31\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1) / 2];\n\
    \    }\n}\n\n/* Return the mean of the elements in the array l.\n>>> mean(array(3,\
    \ 1, 2, 4, 5))\n3.0\n>>> mean(array(-10, 4, 6, 1000, 10, 20))\n160.0*/\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9llvttjl.php:26\n\
    Stack trace:\n#0 /tmp/tmp9llvttjl.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp9llvttjl.php\
    \ on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n \
    \       return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return\
    \ $l[$n / 2];\n    }\n}\n\n/* Return the mode of elements in the array l.\n>>>\
    \ mode(array(3, 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6,\
    \ 1000, 10, 20))\narray(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmprhxrdr5f.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmprhxrdr5f.php:28\nStack trace:\n#0 /tmp/tmprhxrdr5f.php(34):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmprhxrdr5f.php on line 28\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    $m = floor($n / 2);\n    if ($n % 2 ==\
    \ 0) {\n        return ($l[$m] + $l[$m - 1]) / 2;\n    } else {\n        return\
    \ $l[$m];\n    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n\
    array(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4tu242xw.php:27\n\
    Stack trace:\n#0 /tmp/tmp4tu242xw.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp4tu242xw.php\
    \ on line 27\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n \
    \       return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return\
    \ $l[$n / 2];\n    }\n}\n\n/* Return the mode of elements in the array l.\n>>>\
    \ mode(array(3, 1, 2, 4, 5))\narray(3) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n\
    \  [2]=>\n  int(3)\n  [3]=>\n  int(4)\n  [4]=>\n  int(5)\n}\n>>> mode(array(-10,\
    \ 4, 6, 1000, 10, 20))\narray(1) {\n  [0]=>\n  int(1000)\n}*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpnfznhf9s.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpnfznhf9s.php:42\nStack trace:\n#0 /tmp/tmpnfznhf9s.php(48):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpnfznhf9s.php on line 42\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    $m = floor($n / 2);\n    if ($n % 2 ==\
    \ 0) {\n        return ($l[$m] + $l[$m - 1]) / 2;\n    } else {\n        return\
    \ $l[$m];\n    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n\
    array(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4tu242xw.php:27\n\
    Stack trace:\n#0 /tmp/tmp4tu242xw.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp4tu242xw.php\
    \ on line 27\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3, 1, 2, 4,\
    \ 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\narray(-10,\
    \ 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpy2sr992v.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpy2sr992v.php:26\nStack trace:\n#0 /tmp/tmpy2sr992v.php(33):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpy2sr992v.php on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $count = count($l);\n    $middle = floor($count / 2);\n  \
    \  sort($l);\n    if ($count % 2 == 0) {\n        return ($l[$middle - 1] + $l[$middle])\
    \ / 2;\n    } else {\n        return $l[$middle];\n    }\n}\n\n/* Return the mode\
    \ of elements in the array l.\n>>> mode(array(3, 1, 2, 4, 5))\n3\n>>> mode(array(-10,\
    \ 4, 6, 1000, 10, 20))\n10*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf1gw4zsb.php:29\n\
    Stack trace:\n#0 /tmp/tmpf1gw4zsb.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpf1gw4zsb.php\
    \ on line 29\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1) / 2];\n\
    \    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n\
    array(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_m8godx5.php:26\n\
    Stack trace:\n#0 /tmp/tmp_m8godx5.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_m8godx5.php\
    \ on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1) / 2];\n\
    \    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n\
    array(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_m8godx5.php:26\n\
    Stack trace:\n#0 /tmp/tmp_m8godx5.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_m8godx5.php\
    \ on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n \
    \       return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return\
    \ $l[$n / 2];\n    }\n}\n\n/* Return the mode of elements in the array l.\n>>>\
    \ mode(array(3, 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6,\
    \ 1000, 10, 20))\narray(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmprhxrdr5f.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmprhxrdr5f.php:28\nStack trace:\n#0 /tmp/tmprhxrdr5f.php(34):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmprhxrdr5f.php on line 28\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    $m = floor($n / 2);\n    if ($n % 2 ==\
    \ 0) {\n        return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return\
    \ $l[$m];\n    }\n}\n\n/* Return the mode of the elements in the array l.\n>>>\
    \ mode(array(3, 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6,\
    \ 1000, 10, 20))\narray(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4ik4uya6.php:27\n\
    Stack trace:\n#0 /tmp/tmp4ik4uya6.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp4ik4uya6.php\
    \ on line 27\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n\
    \    }\n    sort($l);\n    $m = floor($n / 2);\n    if ($n % 2 == 0) {\n     \
    \   return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return $l[$m];\n\
    \    }\n}\n\n/* Return the mean of elements in the array l.\n>>> mean(array(3,\
    \ 1, 2, 4, 5))\n3.0\n>>> mean(array(-10, 4, 6, 1000, 10, 20))\n160.0*/\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp13t2yvuq.php:32\n\
    Stack trace:\n#0 /tmp/tmp13t2yvuq.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp13t2yvuq.php\
    \ on line 32\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n == 0) return 0;\n    $m = floor($n\
    \ / 2);\n    if ($n % 2 == 0) {\n        return ($l[$m] + $l[$m - 1]) / 2;\n \
    \   } else {\n        return $l[$m];\n    }\n}\n\n/* Return the mode of elements\
    \ in the array l.\n>>> mode(array(3, 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10,\
    \ 4, 6, 1000, 10, 20))\narray(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyen6b45u.php:28\n\
    Stack trace:\n#0 /tmp/tmpyen6b45u.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpyen6b45u.php\
    \ on line 28\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n\t$n = count($l);\n\tif ($n % 2 == 0) {\n\t\treturn ($l[$n / 2]\
    \ + $l[$n / 2 - 1]) / 2;\n\t} else {\n\t\treturn $l[($n - 1) / 2];\n\t}\n}\n\n\
    /* Return the mode of elements in the array l.\n>>> mode(array(3, 1, 2, 4, 5))\n\
    array(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\narray(-10, 4,\
    \ 6, 10, 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwwpltaf_.php:26\n\
    Stack trace:\n#0 /tmp/tmpwwpltaf_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpwwpltaf_.php\
    \ on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    $m = $n / 2;\n    if ($n % 2 == 0) {\n\
    \        return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return $l[$m];\n\
    \    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n\
    array(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpocm6thee.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpocm6thee.php:27\nStack trace:\n#0 /tmp/tmpocm6thee.php(34):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpocm6thee.php on line 27\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return 0;\n \
    \   }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n / 2] + $l[$n\
    \ / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n}\n\n/* Return\
    \ the mode of elements in the array l.\n>>> mode(array(3, 1, 2, 4, 5))\narray(1,\
    \ 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\narray(-10, 4, 6, 10,\
    \ 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmps12i_fc_.php on line 16\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmps12i_fc_.php:31\nStack trace:\n#0 /tmp/tmps12i_fc_.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmps12i_fc_.php on line 31\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3, 1, 2, 4,\
    \ 5))\n3\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n10*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpno1a6v9k.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpno1a6v9k.php:26\nStack trace:\n#0 /tmp/tmpno1a6v9k.php(33):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpno1a6v9k.php on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n \
    \       return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return\
    \ $l[floor($n / 2)];\n    }\n}\n\n/* Return the mode of elements in the array\
    \ l.\n>>> mode(array(3, 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10,\
    \ 4, 6, 1000, 10, 20))\narray(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpew0oqafv.php:28\n\
    Stack trace:\n#0 /tmp/tmpew0oqafv.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpew0oqafv.php\
    \ on line 28\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    sort($l);\n    $count = count($l);\n    $mid = floor(($count-1)/2);\n\
    \    if($count % 2) {\n        $median = $l[$mid];\n    } else {\n        $low\
    \ = $l[$mid];\n        $high = $l[$mid+1];\n        $median = (($low+$high)/2);\n\
    \    }\n    return $median;\n}\n\n/* Return the mode of elements in the array\
    \ l.\n>>> mode(array(3, 1, 2, 4, 5))\narray(3)\n>>> mode(array(-10, 4, 6, 1000,\
    \ 10, 20))\narray(2) {\n  [0]=>\n  int(-10)\n  [1]=>\n  int(1000)\n}*/\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpug8uzozk.php:37\n\
    Stack trace:\n#0 /tmp/tmpug8uzozk.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpug8uzozk.php\
    \ on line 37\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1) / 2];\n\
    \    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\narray(3) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n  [2]=>\n  int(3)\n\
    \  [3]=>\n  int(4)\n  [4]=>\n  int(5)\n}\n>>> mode(array(-10, 4, 6, 1000, 10,\
    \ 20))\narray(2) {\n  [0]=>\n  int(10)\n  [1]=>\n  int(20)\n}*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd3i2afiu.php:42\n\
    Stack trace:\n#0 /tmp/tmpd3i2afiu.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpd3i2afiu.php\
    \ on line 42\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1) / 2];\n\
    \    }\n}\n\n/* Return the mean of elements in the array l.\n>>> mean(array(3,\
    \ 1, 2, 4, 5))\n3.0\n>>> mean(array(-10, 4, 6, 1000, 10, 20))\n200.0*/\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp87gg3yfs.php:26\n\
    Stack trace:\n#0 /tmp/tmp87gg3yfs.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp87gg3yfs.php\
    \ on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n\
    \    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n / 2] + $l[$n\
    \ / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n}\n\n/* Return\
    \ the mode of elements in the array l.\n>>> mode(array(3, 1, 2, 4, 5))\n3\n>>>\
    \ mode(array(-10, 4, 6, 1000, 10, 20))\n10*/\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpi5sgjivq.php on line 16\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpi5sgjivq.php:31\nStack trace:\n#0 /tmp/tmpi5sgjivq.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpi5sgjivq.php on line 31\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n \
    \       return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return\
    \ $l[floor($n / 2)];\n    }\n}\n\n/* Return the mode of elements in the array\
    \ l.\n>>> mode(array(3, 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10,\
    \ 4, 6, 1000, 10, 20))\narray(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpew0oqafv.php:28\n\
    Stack trace:\n#0 /tmp/tmpew0oqafv.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpew0oqafv.php\
    \ on line 28\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n\t$n = count($l);\n\tif ($n % 2 == 0) {\n\t\treturn ($l[$n / 2]\
    \ + $l[$n / 2 - 1]) / 2;\n\t} else {\n\t\treturn $l[$n / 2];\n\t}\n}\n\n/* Return\
    \ the median of elements in the array l.\n>>> median(array(3, 1, 2, 4, 5))\n3\n\
    >>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp6cr3mdqt.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp6cr3mdqt.php:26\nStack trace:\n#0 /tmp/tmp6cr3mdqt.php(33):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp6cr3mdqt.php on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $l = sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\n/* Return the mode of elements in the array\
    \ l.\n>>> mode(array(3, 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10,\
    \ 4, 6, 1000, 10, 20))\narray(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: count(): Argument #1 ($value) must be\
    \ of type Countable|array, bool given in /tmp/tmpcbgpbbez.php:9\nStack trace:\n\
    #0 /tmp/tmpcbgpbbez.php(23): median(true)\n#1 /tmp/tmpcbgpbbez.php(27): candidate(Array)\n\
    #2 /tmp/tmpcbgpbbez.php(34): test()\n#3 {main}\n  thrown in /tmp/tmpcbgpbbez.php\
    \ on line 9\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1) / 2];\n\
    \    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\narray(4, 6, 10, 1000,\
    \ 20)*/\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwz2wj83a.php:26\n\
    Stack trace:\n#0 /tmp/tmpwz2wj83a.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpwz2wj83a.php\
    \ on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n \
    \       return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return\
    \ $l[($n - 1) / 2];\n    }\n}\n\n/* Return the mode of elements in the array l.\n\
    >>> mode(array(3, 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6,\
    \ 1000, 10, 20))\narray(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgka66uaj.php:28\n\
    Stack trace:\n#0 /tmp/tmpgka66uaj.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpgka66uaj.php\
    \ on line 28\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n \
    \       return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return\
    \ $l[($n - 1) / 2];\n    }\n}\n\n/* Return the mode of elements in the array l.\n\
    >>> mode(array(3, 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6,\
    \ 1000, 10, 20))\narray(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgka66uaj.php:28\n\
    Stack trace:\n#0 /tmp/tmpgka66uaj.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpgka66uaj.php\
    \ on line 28\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n\
    \    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n / 2] + $l[$n\
    \ / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n}\n\n/* Return\
    \ the mode of elements in the array l.\n>>> mode(array(3, 1, 2, 4, 5))\narray(1,\
    \ 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\narray(-10, 4, 6, 10,\
    \ 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp4010scsi.php on line 16\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp4010scsi.php:31\nStack trace:\n#0 /tmp/tmp4010scsi.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp4010scsi.php on line 31\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3, 1, 2, 4,\
    \ 5))\n3\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n10*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpno1a6v9k.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpno1a6v9k.php:26\nStack trace:\n#0 /tmp/tmpno1a6v9k.php(33):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpno1a6v9k.php on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n\tsort($l);\n\t$n = count($l);\n\tif ($n % 2 == 0) {\n\t\treturn\
    \ ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n\t} else {\n\t\treturn $l[$n / 2];\n\t}\n\
    }\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3, 1, 2, 4,\
    \ 5))\n3\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\narray(1000, 10, 20)*/\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpd2vbbcxm.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpd2vbbcxm.php:28\nStack trace:\n#0 /tmp/tmpd2vbbcxm.php(34):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpd2vbbcxm.php on line 28\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1) / 2];\n\
    \    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n\
    array(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_m8godx5.php:26\n\
    Stack trace:\n#0 /tmp/tmp_m8godx5.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_m8godx5.php\
    \ on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[floor($n / 2)];\n\
    \    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n\
    array(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1hixd23o.php:26\n\
    Stack trace:\n#0 /tmp/tmp1hixd23o.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp1hixd23o.php\
    \ on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $l = sort($l);\n    $len = count($l);\n    if ($len % 2 ==\
    \ 0) {\n        return ($l[$len / 2] + $l[$len / 2 - 1]) / 2;\n    } else {\n\
    \        return $l[($len - 1) / 2];\n    }\n}\n\n/* Return the mode of elements\
    \ in the array l.\n>>> mode(array(3, 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10,\
    \ 4, 6, 1000, 10, 20))\narray(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: count(): Argument #1 ($value) must be\
    \ of type Countable|array, bool given in /tmp/tmp8qhmqe3g.php:9\nStack trace:\n\
    #0 /tmp/tmp8qhmqe3g.php(23): median(true)\n#1 /tmp/tmp8qhmqe3g.php(27): candidate(Array)\n\
    #2 /tmp/tmp8qhmqe3g.php(34): test()\n#3 {main}\n  thrown in /tmp/tmp8qhmqe3g.php\
    \ on line 9\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n \
    \       return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return\
    \ $l[$n / 2];\n    }\n}\n\n/* Return the mode of the elements in the array l.\n\
    >>> mode(array(3, 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6,\
    \ 1000, 10, 20))\narray(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpdtfoz2bd.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpdtfoz2bd.php:28\nStack trace:\n#0 /tmp/tmpdtfoz2bd.php(34):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpdtfoz2bd.php on line 28\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n\
    \    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n / 2] + $l[$n\
    \ / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n}\n\n/* Return\
    \ the mode of elements in the array l.\n>>> mode(array(3, 1, 2, 4, 5))\n3\n>>>\
    \ mode(array(-10, 4, 6, 1000, 10, 20))\narray(4, 6, 10, 20)*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmprpvpiahx.php on line 16\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmprpvpiahx.php:31\nStack trace:\n#0 /tmp/tmprpvpiahx.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmprpvpiahx.php on line 31\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\n/* Return the mean of elements in the array l.\n>>> mean(array(3, 1, 2, 4,\
    \ 5))\n3.0\n>>> mean(array(-10, 4, 6, 1000, 10, 20))\n150.0*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpwcs83x82.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpwcs83x82.php:26\nStack trace:\n#0 /tmp/tmpwcs83x82.php(33):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpwcs83x82.php on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        $m = ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        $m = $l[($n - 1) / 2];\n\
    \    }\n    return $m;\n}\n\n/* Return the mode of elements in the array l.\n\
    >>> mode(array(3, 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6,\
    \ 1000, 10, 20))\narray(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_8rtdkin.php:27\n\
    Stack trace:\n#0 /tmp/tmp_8rtdkin.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp_8rtdkin.php\
    \ on line 27\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3, 1, 2, 4,\
    \ 5))\n3\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n1000*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpzi_ce6he.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpzi_ce6he.php:26\nStack trace:\n#0 /tmp/tmpzi_ce6he.php(33):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpzi_ce6he.php on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\n/* Return the mode of elements in the array l.\n>>> mode(array(1, 2, 3, 3,\
    \ 4, 5))\n3\n>>> mode(array(1, 2, 3, 4, 5))\n1*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp7qciqp11.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp7qciqp11.php:26\nStack trace:\n#0 /tmp/tmp7qciqp11.php(33):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp7qciqp11.php on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    $m = floor($n / 2);\n    if ($n % 2 ==\
    \ 0) {\n        return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return\
    \ $l[$m];\n    }\n}\n\n/* Return the mean of elements in the array l.\n>>> mean(array(3,\
    \ 1, 2, 4, 5))\n3.0\n>>> mean(array(-10, 4, 6, 1000, 10, 20))\n220.0*/\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1a02yknf.php:27\n\
    Stack trace:\n#0 /tmp/tmp1a02yknf.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp1a02yknf.php\
    \ on line 27\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1) / 2];\n\
    \    }\n}\n\n/* Return the most frequent element in the array l.\n>>> mode(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\
    \ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,\n\
    function candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 16 in /tmp/tmpyitf5fn4.php on
    line 16

    '
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n \
    \       return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return\
    \ $l[floor($n / 2)];\n    }\n}\n\n/* Return the mode of the elements in the array\
    \ l.\n>>> mode(array(3, 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10,\
    \ 4, 6, 1000, 10, 20))\narray(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdjl89tly.php:28\n\
    Stack trace:\n#0 /tmp/tmpdjl89tly.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpdjl89tly.php\
    \ on line 28\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1) / 2];\n\
    \    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\narray(3) {\n  [0]=>\n  int(3)\n}\n>>> mode(array(-10, 4, 6, 1000,\
    \ 10, 20))\narray(2) {\n  [0]=>\n  int(10)\n  [1]=>\n  int(20)\n}*/\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmdetw5qb.php:34\n\
    Stack trace:\n#0 /tmp/tmpmdetw5qb.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpmdetw5qb.php\
    \ on line 34\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n \
    \       return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return\
    \ $l[$n / 2];\n    }\n}\n\n/* Return the mode of elements in the array l.\n>>>\
    \ mode(array(3, 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6,\
    \ 1000, 10, 20))\narray(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmprhxrdr5f.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmprhxrdr5f.php:28\nStack trace:\n#0 /tmp/tmprhxrdr5f.php(34):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmprhxrdr5f.php on line 28\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        $m = ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        $m = $l[($n - 1) / 2];\n\
    \    }\n    return $m;\n}\n\n/* Return the mode of elements in the array l.\n\
    >>> mode(array(3, 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6,\
    \ 1000, 10, 20))\narray(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_8rtdkin.php:27\n\
    Stack trace:\n#0 /tmp/tmp_8rtdkin.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp_8rtdkin.php\
    \ on line 27\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n\
    \    }\n    sort($l);\n    $m = floor($n / 2);\n    if ($n % 2 == 0) {\n     \
    \   return ($l[$m] + $l[$m - 1]) / 2;\n    } else {\n        return $l[$m];\n\
    \    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n\
    array(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2sj9d389.php:32\n\
    Stack trace:\n#0 /tmp/tmp2sj9d389.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp2sj9d389.php\
    \ on line 32\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n \
    \       return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return\
    \ $l[($n - 1) / 2];\n    }\n}\n\n/* Return the mode of elements in the array l.\n\
    >>> mode(array(3, 1, 2, 4, 5))\n3\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n\
    10*/\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwxvl5j0q.php:28\n\
    Stack trace:\n#0 /tmp/tmpwxvl5j0q.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpwxvl5j0q.php\
    \ on line 28\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1) / 2];\n\
    \    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n10*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsp23fw6a.php:26\n\
    Stack trace:\n#0 /tmp/tmpsp23fw6a.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpsp23fw6a.php\
    \ on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1) / 2];\n\
    \    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n\
    array(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_m8godx5.php:26\n\
    Stack trace:\n#0 /tmp/tmp_m8godx5.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_m8godx5.php\
    \ on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1) / 2];\n\
    \    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n\
    array(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_m8godx5.php:26\n\
    Stack trace:\n#0 /tmp/tmp_m8godx5.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_m8godx5.php\
    \ on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n\
    \    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n / 2] + $l[$n\
    \ / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n}\n\n/* Return\
    \ the mode of elements in the array l.\n>>> mode(array(3, 1, 2, 4, 5))\n3\n>>>\
    \ mode(array(-10, 4, 6, 1000, 10, 20))\n10*/\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpi5sgjivq.php on line 16\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpi5sgjivq.php:31\nStack trace:\n#0 /tmp/tmpi5sgjivq.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpi5sgjivq.php on line 31\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    $m = floor($n / 2);\n    if ($n % 2 ==\
    \ 0) {\n        return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return\
    \ $l[$m];\n    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n10*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps3w9gz9d.php:27\n\
    Stack trace:\n#0 /tmp/tmps3w9gz9d.php(34): test()\n#1 {main}\n  thrown in /tmp/tmps3w9gz9d.php\
    \ on line 27\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    $m = floor($n / 2);\n    if ($n % 2 ==\
    \ 0) {\n        return ($l[$m] + $l[$m - 1]) / 2;\n    } else {\n        return\
    \ $l[$m];\n    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\n1\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n-10\n>>> mode(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10))\n1*/\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppd9qpb83.php:29\n\
    Stack trace:\n#0 /tmp/tmppd9qpb83.php(36): test()\n#1 {main}\n  thrown in /tmp/tmppd9qpb83.php\
    \ on line 29\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return 0;\n \
    \   }\n    sort($l);\n    $m = $n / 2;\n    if ($n % 2 == 0) {\n        return\
    \ ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return $l[$m];\n    }\n}\n\
    \n/* Return the mode of elements in the array l.\n>>> mode(array(3, 1, 2, 4, 5))\n\
    3\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n10*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpdyl05bq8.php on line 17\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpdyl05bq8.php:32\nStack trace:\n#0 /tmp/tmpdyl05bq8.php(38):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpdyl05bq8.php on line 32\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $l = sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\n/* Return the mode of elements in the array\
    \ l.\n>>> mode(array(3, 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10,\
    \ 4, 6, 1000, 10, 20))\narray(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: count(): Argument #1 ($value) must be\
    \ of type Countable|array, bool given in /tmp/tmpcbgpbbez.php:9\nStack trace:\n\
    #0 /tmp/tmpcbgpbbez.php(23): median(true)\n#1 /tmp/tmpcbgpbbez.php(27): candidate(Array)\n\
    #2 /tmp/tmpcbgpbbez.php(34): test()\n#3 {main}\n  thrown in /tmp/tmpcbgpbbez.php\
    \ on line 9\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    sort($l);\n    $len = count($l);\n    if ($len % 2 == 0) {\n\
    \        return ($l[$len / 2] + $l[$len / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[($len - 1) / 2];\n    }\n}\n\n/* Return the mode of elements in the\
    \ array l.\n>>> mode(array(3, 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10,\
    \ 4, 6, 1000, 10, 20))\narray(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2jnfk0la.php:28\n\
    Stack trace:\n#0 /tmp/tmp2jnfk0la.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp2jnfk0la.php\
    \ on line 28\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n\
    \    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n / 2] + $l[$n\
    \ / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n}\n\n/* Return\
    \ the mode of elements in the array l.\n>>> mode(array(3, 1, 2, 4, 5))\narray(1,\
    \ 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\narray(-10, 4, 6, 10,\
    \ 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp4010scsi.php on line 16\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp4010scsi.php:31\nStack trace:\n#0 /tmp/tmp4010scsi.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp4010scsi.php on line 31\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n\t$n = count($l);\n\tif ($n == 0) {\n\t\treturn 0;\n\t}\n\tsort($l);\n\
    \tif ($n % 2 == 0) {\n\t\treturn ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n\t} else\
    \ {\n\t\treturn $l[$n / 2];\n\t}\n}\n\n/* Return the mode of the elements in the\
    \ array l.\n>>> mode(array(3, 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10,\
    \ 4, 6, 1000, 10, 20))\narray(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpkpxbrmzj.php on line 16\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpkpxbrmzj.php:31\nStack trace:\n#0 /tmp/tmpkpxbrmzj.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpkpxbrmzj.php on line 31\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3, 1, 2, 4,\
    \ 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\narray(-10,\
    \ 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpy2sr992v.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpy2sr992v.php:26\nStack trace:\n#0 /tmp/tmpy2sr992v.php(33):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpy2sr992v.php on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $s = sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\n/* Return mean of elements in the array l.\n\
    >>> mean(array(3, 1, 2, 4, 5))\n3\n>>> mean(array(-10, 4, 6, 1000, 10, 20))\n\
    215.0*/\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpxuy7klvg.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpxuy7klvg.php:28\nStack trace:\n#0 /tmp/tmpxuy7klvg.php(34):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpxuy7klvg.php on line 28\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    sort($l);\n    $len = count($l);\n    if ($len % 2 == 0) {\n\
    \        return ($l[$len / 2] + $l[$len / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[($len - 1) / 2];\n    }\n}\n\n/* Return the mode of the elements in\
    \ the array l.\n>>> mode(array(3, 1, 2, 4, 5))\n1\n>>> mode(array(-10, 4, 6, 1000,\
    \ 10, 20))\n-10*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz_6clyin.php:28\n\
    Stack trace:\n#0 /tmp/tmpz_6clyin.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpz_6clyin.php\
    \ on line 28\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n\t$n = count($l);\n\tif ($n % 2 == 0) {\n\t\treturn ($l[$n / 2]\
    \ + $l[$n / 2 - 1]) / 2;\n\t} else {\n\t\treturn $l[($n - 1) / 2];\n\t}\n}\n\n\
    /* Return the mode of elements in the array l.\n>>> mode(array(3, 1, 2, 4, 5))\n\
    3\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n10*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyc35d2rh.php:26\n\
    Stack trace:\n#0 /tmp/tmpyc35d2rh.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpyc35d2rh.php\
    \ on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\n/* Return the mean of elements in the array l.\n>>> mean(array(3, 1, 2, 4,\
    \ 5))\n3.0\n>>> mean(array(-10, 4, 6, 1000, 10, 20))\n200.0*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpw12p4xon.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpw12p4xon.php:26\nStack trace:\n#0 /tmp/tmpw12p4xon.php(33):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpw12p4xon.php on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n \
    \       return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return\
    \ $l[$n / 2];\n    }\n}\n\n/* Return the mode of elements in the array l.\n>>>\
    \ mode(array(3, 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6,\
    \ 1000, 10, 20))\narray(-10, 4, 6, 10, 20, 1000)\n>>> mode(array(1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\
    \ 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44,\
    \ 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,\
    \ 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82,\
    \ 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100))\n\
    array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,\
    \ 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,\
    \ 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,\
    \ 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,\n\
    function candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 17 in /tmp/tmp96relcgj.php on
    line 17

    '
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n \
    \       return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return\
    \ $l[($n - 1) / 2];\n    }\n}\n\n/* Return the mode of elements in the array l.\n\
    >>> mode(array(3, 1, 2, 4, 5))\n3\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n\
    4*/\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplivwgvl2.php:28\n\
    Stack trace:\n#0 /tmp/tmplivwgvl2.php(34): test()\n#1 {main}\n  thrown in /tmp/tmplivwgvl2.php\
    \ on line 28\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n \
    \       return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return\
    \ $l[$n / 2];\n    }\n}\n\n/* Return the mode of elements in the array l.\n>>>\
    \ mode(array(3, 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6,\
    \ 1000, 10, 20))\narray(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmprhxrdr5f.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmprhxrdr5f.php:28\nStack trace:\n#0 /tmp/tmprhxrdr5f.php(34):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmprhxrdr5f.php on line 28\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n\
    \    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n / 2] + $l[$n\
    \ / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n}\n\n/* Return\
    \ the mode of the elements in the array l.\n>>> mode(array(3, 1, 2, 4, 5))\narray(1,\
    \ 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\narray(-10, 4, 6, 10,\
    \ 20, 1000)\n>>> mode(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\
    \ 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,\
    \ 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,\
    \ 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72,\
    \ 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91,\
    \ 92, 93, 94, 95, 96, 97, 98, 99, 100))\narray(1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\
    \ 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,\
    \ 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48,\
    \ 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,\
    \ 68, 69,\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 20 in /tmp/tmpeblne2ty.php on
    line 20

    '
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    $m = floor($n / 2);\n    if ($n % 2 ==\
    \ 0) {\n        return ($l[$m] + $l[$m - 1]) / 2;\n    } else {\n        return\
    \ $l[$m];\n    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n\
    array(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4tu242xw.php:27\n\
    Stack trace:\n#0 /tmp/tmp4tu242xw.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp4tu242xw.php\
    \ on line 27\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n \
    \       return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return\
    \ $l[($n - 1) / 2];\n    }\n}\n\n/* Return the mode of elements in the array l.\n\
    >>> mode(array(3, 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6,\
    \ 1000, 10, 20))\narray(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgka66uaj.php:28\n\
    Stack trace:\n#0 /tmp/tmpgka66uaj.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpgka66uaj.php\
    \ on line 28\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n\
    \    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n / 2] + $l[$n\
    \ / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n}\n\n/* Return\
    \ the mode of elements in the array l.\n>>> mode(array(3, 1, 2, 4, 5))\n3\n>>>\
    \ mode(array(-10, 4, 6, 1000, 10, 20))\n10*/\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpi5sgjivq.php on line 16\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpi5sgjivq.php:31\nStack trace:\n#0 /tmp/tmpi5sgjivq.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpi5sgjivq.php on line 31\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    $m = floor($n / 2);\n    if ($n % 2 ==\
    \ 0) {\n        return ($l[$m] + $l[$m - 1]) / 2;\n    } else {\n        return\
    \ $l[$m];\n    }\n}\n\n/* Return the mean of elements in the array l.\n>>> mean(array(3,\
    \ 1, 2, 4, 5))\n3.0\n>>> mean(array(-10, 4, 6, 1000, 10, 20))\n160.0*/\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmd6avsa7.php:27\n\
    Stack trace:\n#0 /tmp/tmpmd6avsa7.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpmd6avsa7.php\
    \ on line 27\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n\
    \    }\n    sort($l);\n    $m = $n / 2;\n    if ($n % 2 == 0) {\n        return\
    \ ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return $l[$m];\n    }\n}\n\
    \n/* Return the mode of the elements in the array l.\n>>> mode(array(3, 1, 2,\
    \ 4, 5))\narray(3) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n  [2]=>\n  int(3)\n\
    \  [3]=>\n  int(4)\n  [4]=>\n  int(5)\n}\n>>> mode(array(3, 1, 2, 4, 5, 1, 2,\
    \ 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\
    \ 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\
    \ 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\
    \ 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\
    \ 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\
    \ 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 21 in /tmp/tmp3u_7ctyz.php on
    line 21

    '
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    $m = floor($n / 2);\n    if ($n % 2 ==\
    \ 0) {\n        return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return\
    \ $l[$m];\n    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n\
    array(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx7s75_xs.php:27\n\
    Stack trace:\n#0 /tmp/tmpx7s75_xs.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpx7s75_xs.php\
    \ on line 27\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1) / 2];\n\
    \    }\n}\n\n/* Return the mean of elements in the array l.\n>>> mean(array(3,\
    \ 1, 2, 4, 5))\n3.0\n>>> mean(array(-10, 4, 6, 1000, 10, 20))\n160.0*/\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmzwapym3.php:26\n\
    Stack trace:\n#0 /tmp/tmpmzwapym3.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpmzwapym3.php\
    \ on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1) / 2];\n\
    \    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n4*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqza7hjvg.php:26\n\
    Stack trace:\n#0 /tmp/tmpqza7hjvg.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpqza7hjvg.php\
    \ on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n\
    \    }\n    sort($l);\n    $m = floor($n / 2);\n    if ($n % 2 == 0) {\n     \
    \   return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return $l[$m];\n\
    \    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n\
    array(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps7d5rdfe.php:32\n\
    Stack trace:\n#0 /tmp/tmps7d5rdfe.php(38): test()\n#1 {main}\n  thrown in /tmp/tmps7d5rdfe.php\
    \ on line 32\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1) / 2];\n\
    \    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n\
    array(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_m8godx5.php:26\n\
    Stack trace:\n#0 /tmp/tmp_m8godx5.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_m8godx5.php\
    \ on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3, 1, 2, 4,\
    \ 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\narray(-10,\
    \ 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpy2sr992v.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpy2sr992v.php:26\nStack trace:\n#0 /tmp/tmpy2sr992v.php(33):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpy2sr992v.php on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1) / 2];\n\
    \    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n\
    array(-10, 4, 6, 10, 20, 1000)\n*/\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2sda2sed.php:27\n\
    Stack trace:\n#0 /tmp/tmp2sda2sed.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp2sda2sed.php\
    \ on line 27\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n \
    \       return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return\
    \ $l[$n / 2];\n    }\n}\n\n/* Return the mode of elements in the array l.\n>>>\
    \ mode(array(3, 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6,\
    \ 1000, 10, 20))\narray(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmprhxrdr5f.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmprhxrdr5f.php:28\nStack trace:\n#0 /tmp/tmprhxrdr5f.php(34):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmprhxrdr5f.php on line 28\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return 0;\n \
    \   }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n / 2] + $l[$n\
    \ / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n}\n\n/* Return\
    \ the mode of elements in the array l.\n>>> mode(array(3, 1, 2, 4, 5))\narray(1,\
    \ 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\narray(-10, 4, 6, 10,\
    \ 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmps12i_fc_.php on line 16\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmps12i_fc_.php:31\nStack trace:\n#0 /tmp/tmps12i_fc_.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmps12i_fc_.php on line 31\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    $m = $n / 2;\n    sort($l);\n    if ($n\
    \ % 2 == 0) {\n        return ($l[$m] + $l[$m - 1]) / 2;\n    } else {\n     \
    \   return $l[$m];\n    }\n}\n\n/* Return the mode of elements in the array l.\n\
    >>> mode(array(3, 1, 2, 4, 5))\n3\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n\
    10\n>>> mode(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))\n1*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp79obagl3.php on line 14\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp79obagl3.php:31\nStack trace:\n#0 /tmp/tmp79obagl3.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp79obagl3.php on line 31\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\n/* Return the mean of elements in the array l.\n>>> mean(array(3, 1, 2, 4,\
    \ 5))\n3.0\n>>> mean(array(-10, 4, 6, 1000, 10, 20))\n215.0*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp7mbkskj_.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp7mbkskj_.php:26\nStack trace:\n#0 /tmp/tmp7mbkskj_.php(33):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp7mbkskj_.php on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\n/* Return the mean of elements in the array l.\n>>> mean(array(3, 1, 2, 4,\
    \ 5))\n3.0\n>>> mean(array(-10, 4, 6, 1000, 10, 20))\n200.0*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpw12p4xon.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpw12p4xon.php:26\nStack trace:\n#0 /tmp/tmpw12p4xon.php(33):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpw12p4xon.php on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n\
    \    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n / 2] + $l[$n\
    \ / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n}\n\n/* Return\
    \ the mode of elements in the array l.\n>>> mode(array(3, 1, 2, 4, 5))\narray(1,\
    \ 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\narray(-10, 4, 6, 10,\
    \ 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp4010scsi.php on line 16\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp4010scsi.php:31\nStack trace:\n#0 /tmp/tmp4010scsi.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp4010scsi.php on line 31\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n \
    \       return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return\
    \ $l[$n / 2];\n    }\n}\n\n/* Return the mode of elements in the array l.\n>>>\
    \ mode(array(3, 1, 2, 4, 5))\n3\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n10*/\n\
    function candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmps6pl6_7y.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmps6pl6_7y.php:28\nStack trace:\n#0 /tmp/tmps6pl6_7y.php(34):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmps6pl6_7y.php on line 28\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n\
    \    }\n    sort($l);\n    $m = floor($n / 2);\n    if ($n % 2 == 0) {\n     \
    \   return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return $l[$m];\n\
    \    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n\
    array(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps7d5rdfe.php:32\n\
    Stack trace:\n#0 /tmp/tmps7d5rdfe.php(38): test()\n#1 {main}\n  thrown in /tmp/tmps7d5rdfe.php\
    \ on line 32\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n\t$n = count($l);\n\tif ($n == 0) {\n\t\treturn null;\n\t}\n\t\
    sort($l);\n\tif ($n % 2 == 0) {\n\t\treturn ($l[$n / 2 - 1] + $l[$n / 2]) / 2;\n\
    \t} else {\n\t\treturn $l[$n / 2];\n\t}\n}\n\n/* Return the mode of elements in\
    \ the array l.\n>>> mode(array(3, 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10,\
    \ 4, 6, 1000, 10, 20))\narray(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpqdmrsi6i.php on line 16\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpqdmrsi6i.php:31\nStack trace:\n#0 /tmp/tmpqdmrsi6i.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpqdmrsi6i.php on line 31\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3, 1, 2, 4,\
    \ 5))\narray(3) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n  [2]=>\n  int(3)\n \
    \ [3]=>\n  int(4)\n  [4]=>\n  int(5)\n}\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n\
    array(1) {\n  [0]=>\n  int(1000)\n}*/\nfunction candidate(...$args) {\n    return\
    \ median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpiddw7_85.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpiddw7_85.php:40\nStack trace:\n#0 /tmp/tmpiddw7_85.php(47):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpiddw7_85.php on line 40\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n\
    \    }\n    sort($l);\n    $m = floor($n / 2);\n    if ($n % 2 == 0) {\n     \
    \   return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return $l[$m];\n\
    \    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\narray(3) {\n  [0]=>\n  int(3)\n}\n>>> mode(array(-10, 4, 6, 1000,\
    \ 10, 20))\narray(2) {\n  [0]=>\n  int(10)\n  [1]=>\n  int(20)\n}*/\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5ro418oq.php:40\n\
    Stack trace:\n#0 /tmp/tmp5ro418oq.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp5ro418oq.php\
    \ on line 40\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\n/* Return the mean of elements in the array l.\n>>> mean(array(3, 1, 2, 4,\
    \ 5))\n3.0\n>>> mean(array(-10, 4, 6, 1000, 10, 20))\n210.0*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp5tpxt46u.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp5tpxt46u.php:26\nStack trace:\n#0 /tmp/tmp5tpxt46u.php(33):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp5tpxt46u.php on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1) / 2];\n\
    \    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n\
    array(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_m8godx5.php:26\n\
    Stack trace:\n#0 /tmp/tmp_m8godx5.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_m8godx5.php\
    \ on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\n/* Return the sum of the elements in the array l.\n>>> sum(array(1, 2, 3,\
    \ 4, 5))\n15\n>>> sum(array(1, 2, 3, 4, 5, 6))\n21\n>>> sum(array(1, 2, 3, 4,\
    \ 5, 6, 7))\n28*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpv7f0jdik.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpv7f0jdik.php:28\nStack trace:\n#0 /tmp/tmpv7f0jdik.php(35):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpv7f0jdik.php on line 28\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1) / 2];\n\
    \    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\narray(1 => 1, 2 => 1, 3 => 1, 4 => 1, 5 => 1)\n>>> mode(array(-10,\
    \ 4, 6, 1000, 10, 20))\narray(-10 => 1, 4 => 1, 6 => 1, 10 => 1, 20 => 1, 1000\
    \ => 1)\n>>> mode(array(1, 1, 2, 2, 3, 3, 4, 4, 5, 5))\narray(1 => 2, 2 => 2,\
    \ 3 => 2, 4 => 2, 5 => 2)\n>>> mode(array(1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6))\n\
    array(1 => 2, 2 => 2, 3 => 2, 4 => 2, 5 => 2, 6 => 1)\n>>> mode(array(1, 1, 2,\
    \ 2, 3, 3, 4, 4, 5, 5, 6, 6))\narray(1 => 2, 2 => 2, 3 => 2, 4 => 2, 5 => 2, 6\
    \ => 2)*/\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000,\
    \ 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7m63ia9j.php:32\n\
    Stack trace:\n#0 /tmp/tmp7m63ia9j.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp7m63ia9j.php\
    \ on line 32\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n\t$count = count($l);\n\tif ($count % 2 == 0) {\n\t\t$mid = $count\
    \ / 2;\n\t\treturn ($l[$mid] + $l[$mid - 1]) / 2;\n\t} else {\n\t\t$mid = floor($count\
    \ / 2);\n\t\treturn $l[$mid];\n\t}\n}\n\n/* Return the mode of elements in the\
    \ array l.\n>>> mode(array(3, 1, 2, 4, 5))\n3\n>>> mode(array(-10, 4, 6, 1000,\
    \ 10, 20))\n10*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjj6byank.php:28\n\
    Stack trace:\n#0 /tmp/tmpjj6byank.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpjj6byank.php\
    \ on line 28\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\n/* Return the mean of elements in the array l.\n>>> mean(array(3, 1, 2, 4,\
    \ 5))\n3\n>>> mean(array(-10, 4, 6, 1000, 10, 20))\n215.0*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp_ispbjaa.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp_ispbjaa.php:26\nStack trace:\n#0 /tmp/tmp_ispbjaa.php(33):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp_ispbjaa.php on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1) / 2];\n\
    \    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n\
    array(-10, 4, 6, 10, 20, 1000)\n>>> mode(array(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\nfunction candidate(...$args) {\n\
    \    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 16 in /tmp/tmpodoayei6.php on
    line 16

    '
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2) {\n        return $l[$n /\
    \ 2];\n    } else {\n        return ($l[$n / 2 - 1] + $l[$n / 2]) / 2;\n    }\n\
    }\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3, 1, 2, 4,\
    \ 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\narray(-10,\
    \ 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpdvorgjma.php on line 10\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpdvorgjma.php:26\nStack trace:\n#0 /tmp/tmpdvorgjma.php(33):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpdvorgjma.php on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $c = count($l);\n    if ($c == 0) {\n        return null;\n\
    \    }\n    sort($l);\n    $m = $c / 2;\n    if ($c % 2 == 0) {\n        return\
    \ ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return $l[$m];\n    }\n}\n\
    \n/* Return the mode of elements in the array l.\n>>> mode(array(3, 1, 2, 4, 5))\n\
    array(3) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n  [2]=>\n  int(3)\n  [3]=>\n\
    \  int(4)\n  [4]=>\n  int(5)\n}\n>>> mode(array(3, 1, 2, 4, 5, 2, 2, 2, 2, 2,\
    \ 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\
    \ 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\
    \ 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\
    \ 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\
    \ 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\
    \ 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 21 in /tmp/tmpwssxfc0g.php on
    line 21

    '
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n \
    \       return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return\
    \ $l[$n / 2];\n    }\n}\n\n/* Return the mean of elements in the array l.\n>>>\
    \ mean(array(3, 1, 2, 4, 5))\n3.0\n>>> mean(array(-10, 4, 6, 1000, 10, 20))\n\
    159.166666666667*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpfoihr4cr.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpfoihr4cr.php:28\nStack trace:\n#0 /tmp/tmpfoihr4cr.php(34):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpfoihr4cr.php on line 28\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    $m = floor($n / 2);\n    if ($n % 2 ==\
    \ 0) {\n        return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return\
    \ $l[$m];\n    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n\
    array(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx7s75_xs.php:27\n\
    Stack trace:\n#0 /tmp/tmpx7s75_xs.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpx7s75_xs.php\
    \ on line 27\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n\t$n = count($l);\n\tif ($n % 2 == 0) {\n\t\treturn ($l[$n / 2]\
    \ + $l[$n / 2 - 1]) / 2;\n\t} else {\n\t\treturn $l[$n / 2];\n\t}\n}\n\n/* Return\
    \ the median of the elements in the array l.\n>>> median(array(3, 1, 2, 4, 5))\n\
    3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n\
    \    }\n    sort($l);\n    if ($n % 2 == 0) {\n        return ($l[$n / 2] + $l[$n\
    \ / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n}\n\n/* Return\
    \ the mode of elements in the array l.\n>>> mode(array(3, 1, 2, 4, 5))\narray(1,\
    \ 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\narray(-10, 4, 6, 10,\
    \ 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp4010scsi.php on line 16\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp4010scsi.php:31\nStack trace:\n#0 /tmp/tmp4010scsi.php(37):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp4010scsi.php on line 31\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n\
    \    }\n    sort($l);\n    $m = $n / 2;\n    if ($n % 2 == 0) {\n        return\
    \ ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return $l[$m];\n    }\n}\n\
    \n/* Return the mean of elements in the array l.\n>>> mean(array(3, 1, 2, 4, 5))\n\
    3.0\n>>> mean(array(-10, 4, 6, 1000, 10, 20))\n150.0*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp7xgu26vj.php on line 17\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp7xgu26vj.php:32\nStack trace:\n#0 /tmp/tmp7xgu26vj.php(38):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp7xgu26vj.php on line 32\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $l = sort($l);\n    $n = count($l);\n    if ($n % 2 == 0)\
    \ {\n        return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n       \
    \ return $l[$n / 2];\n    }\n}\n\n/* Return the mode of elements in the array\
    \ l.\n>>> mode(array(3, 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10,\
    \ 4, 6, 1000, 10, 20))\narray(-10, 4, 6, 10, 20, 1000)\n*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: count(): Argument #1 ($value) must be\
    \ of type Countable|array, bool given in /tmp/tmp51u_8rfk.php:9\nStack trace:\n\
    #0 /tmp/tmp51u_8rfk.php(24): median(true)\n#1 /tmp/tmp51u_8rfk.php(28): candidate(Array)\n\
    #2 /tmp/tmp51u_8rfk.php(35): test()\n#3 {main}\n  thrown in /tmp/tmp51u_8rfk.php\
    \ on line 9\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    $m = $n / 2;\n    if ($n % 2 == 0) {\n\
    \        return ($l[$m] + $l[$m - 1]) / 2;\n    } else {\n        return $l[$m];\n\
    \    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n10*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp1eybiwx3.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp1eybiwx3.php:27\nStack trace:\n#0 /tmp/tmp1eybiwx3.php(34):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp1eybiwx3.php on line 27\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n \
    \       return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return\
    \ $l[$n / 2];\n    }\n}\n\n/* Return the mode of elements in the array l.\n>>>\
    \ mode(array(3, 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6,\
    \ 1000, 10, 20))\narray(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmprhxrdr5f.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmprhxrdr5f.php:28\nStack trace:\n#0 /tmp/tmprhxrdr5f.php(34):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmprhxrdr5f.php on line 28\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n \
    \       return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return\
    \ $l[$n / 2];\n    }\n}\n\n/* Return the mode of elements in the array l.\n>>>\
    \ mode(array(3, 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6,\
    \ 1000, 10, 20))\narray(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmprhxrdr5f.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmprhxrdr5f.php:28\nStack trace:\n#0 /tmp/tmprhxrdr5f.php(34):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmprhxrdr5f.php on line 28\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1) / 2];\n\
    \    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n\
    array(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_m8godx5.php:26\n\
    Stack trace:\n#0 /tmp/tmp_m8godx5.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_m8godx5.php\
    \ on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n\t$n = count($l);\n\t$m = $n / 2;\n\tif ($n % 2 == 0) {\n\t\t\
    return ($l[$m] + $l[$m - 1]) / 2;\n\t} else {\n\t\treturn $l[$m];\n\t}\n}\n\n\
    /* Return the mode of elements in the array l.\n>>> mode(array(3, 1, 2, 4, 5))\n\
    array(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\narray(-10, 4,\
    \ 6, 10, 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3, 1, 2, 4,\
    \ 5))\n3\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n10*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpno1a6v9k.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpno1a6v9k.php:26\nStack trace:\n#0 /tmp/tmpno1a6v9k.php(33):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpno1a6v9k.php on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    $m = $n / 2;\n    if ($n % 2 == 0) {\n\
    \        return ($l[$m] + $l[$m - 1]) / 2;\n    } else {\n        return $l[$m];\n\
    \    }\n}\n\n/* Return the mean of elements in the array l.\n>>> mean(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> mean(array(-10, 4, 6, 1000, 10, 20))\n200.0*/\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpaqj0amnj.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpaqj0amnj.php:27\nStack trace:\n#0 /tmp/tmpaqj0amnj.php(34):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpaqj0amnj.php on line 27\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n\t$n = count($l);\n\tif ($n == 0) return 0;\n\tsort($l);\n\tif\
    \ ($n % 2 == 0) {\n\t\treturn ($l[$n/2] + $l[$n/2-1]) / 2;\n\t} else {\n\t\treturn\
    \ $l[$n/2];\n\t}\n}\n\n/* Return the number of elements in the array l that are\
    \ greater than or equal to x.\n>>> count_ge(array(3, 1, 2, 4, 5), 3)\n3\n>>> count_ge(array(-10,\
    \ 4, 6, 1000, 10, 20), 15)\n3*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n\t$n = count($l);\n\tif ($n % 2 == 0) {\n\t\treturn ($l[$n / 2]\
    \ + $l[$n / 2 - 1]) / 2;\n\t} else {\n\t\treturn $l[$n / 2];\n\t}\n}\n\n/* Return\
    \ the mean of elements in the array l.\n>>> mean(array(3, 1, 2, 4, 5))\n3\n>>>\
    \ mean(array(-10, 4, 6, 1000, 10, 20))\n115.0*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpms7hle3f.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpms7hle3f.php:26\nStack trace:\n#0 /tmp/tmpms7hle3f.php(33):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpms7hle3f.php on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3, 1, 2, 4,\
    \ 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\narray(-10,\
    \ 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpy2sr992v.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpy2sr992v.php:26\nStack trace:\n#0 /tmp/tmpy2sr992v.php(33):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpy2sr992v.php on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1) / 2];\n\
    \    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n\
    array(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_m8godx5.php:26\n\
    Stack trace:\n#0 /tmp/tmp_m8godx5.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_m8godx5.php\
    \ on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\n/* Return the most common element in the array l.\n>>> mode(array(1, 2, 3,\
    \ 4, 5, 5, 5, 6, 7, 8, 9, 10))\n5\n>>> mode(array(1, 1, 2, 3, 3, 3, 4, 4, 4, 4,\
    \ 5, 5, 5, 5, 5))\n5\n>>> mode(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))\n1*/\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpjvupazyf.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpjvupazyf.php:28\nStack trace:\n#0 /tmp/tmpjvupazyf.php(35):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpjvupazyf.php on line 28\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    $m = floor($n / 2);\n    sort($l);\n\
    \    if ($n % 2 == 0) {\n        return ($l[$m] + $l[$m - 1]) / 2;\n    } else\
    \ {\n        return $l[$m];\n    }\n}\n\n/* Return the mode of elements in the\
    \ array l.\n>>> mode(array(3, 1, 2, 4, 5))\n3\n>>> mode(array(-10, 4, 6, 1000,\
    \ 10, 20))\n10\n>>> mode(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))\n1*/\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz2_f78zt.php:31\n\
    Stack trace:\n#0 /tmp/tmpz2_f78zt.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpz2_f78zt.php\
    \ on line 31\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n \
    \       return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return\
    \ $l[($n - 1) / 2];\n    }\n}\n\n/* Return the mode of elements in the array l.\n\
    >>> mode(array(3, 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6,\
    \ 1000, 10, 20))\narray(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgka66uaj.php:28\n\
    Stack trace:\n#0 /tmp/tmpgka66uaj.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpgka66uaj.php\
    \ on line 28\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\n/* Return the mean of elements in the array l.\n>>> mean(array(3, 1, 2, 4,\
    \ 5))\n3.0\n>>> mean(array(-10, 4, 6, 1000, 10, 20))\n180.0*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmplkngnj6s.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmplkngnj6s.php:26\nStack trace:\n#0 /tmp/tmplkngnj6s.php(33):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmplkngnj6s.php on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1) / 2];\n\
    \    }\n}\n\n/* Return the mean of elements in the array l.\n>>> mean(array(3,\
    \ 1, 2, 4, 5))\n3.0\n>>> mean(array(-10, 4, 6, 1000, 10, 20))\n195.0*/\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_8cbxv1_.php:26\n\
    Stack trace:\n#0 /tmp/tmp_8cbxv1_.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_8cbxv1_.php\
    \ on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\n/* Return the mode of the elements in the array l.\n>>> mode(array(3, 1,\
    \ 2, 4, 5))\n1\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n-10*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpjnz52bjp.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpjnz52bjp.php:26\nStack trace:\n#0 /tmp/tmpjnz52bjp.php(33):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpjnz52bjp.php on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n == 0) {\n        return null;\n\
    \    }\n    sort($l);\n    $m = $n / 2;\n    if ($n % 2 == 0) {\n        return\
    \ ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return $l[$m];\n    }\n}\n\
    \n/* Return the mode of elements in the array l.\n>>> mode(array(3, 1, 2, 4, 5))\n\
    3\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n10*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpeq2_u60d.php on line 17\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpeq2_u60d.php:32\nStack trace:\n#0 /tmp/tmpeq2_u60d.php(38):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpeq2_u60d.php on line 32\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1) / 2];\n\
    \    }\n}\n\n/* Return the mean of elements in the array l.\n>>> mean(array(3,\
    \ 1, 2, 4, 5))\n3.0\n>>> mean(array(-10, 4, 6, 1000, 10, 20))\n190.0*/\nfunction\
    \ candidate(...$args) {\n    return median(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5)) !==\
    \ 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpa7fxn5wo.php:26\n\
    Stack trace:\n#0 /tmp/tmpa7fxn5wo.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpa7fxn5wo.php\
    \ on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    $m = floor($n / 2);\n    if ($n % 2 ==\
    \ 0) {\n        return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return\
    \ $l[$m];\n    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n\
    array(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx7s75_xs.php:27\n\
    Stack trace:\n#0 /tmp/tmpx7s75_xs.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpx7s75_xs.php\
    \ on line 27\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n \
    \       return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return\
    \ $l[$n / 2];\n    }\n}\n\n/* Return the mode of elements in the array l.\n>>>\
    \ mode(array(3, 1, 2, 4, 5))\n3\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\narray(4,\
    \ 6, 10, 20)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmpxp2tag9h.php on line 13\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmpxp2tag9h.php:28\nStack trace:\n#0 /tmp/tmpxp2tag9h.php(34):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpxp2tag9h.php on line 28\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n\tsort($l);\n\t$len = count($l);\n\tif ($len % 2 == 0) {\n\t\t\
    return ($l[$len / 2] + $l[$len / 2 - 1]) / 2;\n\t} else {\n\t\treturn $l[($len\
    \ - 1) / 2];\n\t}\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n4*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmposfmy7ec.php:28\n\
    Stack trace:\n#0 /tmp/tmposfmy7ec.php(34): test()\n#1 {main}\n  thrown in /tmp/tmposfmy7ec.php\
    \ on line 28\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[($n - 1) / 2];\n\
    \    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\narray(1, 2, 3, 4, 5)\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n\
    array(-10, 4, 6, 10, 20, 1000)*/\nfunction candidate(...$args) {\n    return median(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10, 4, 6,\
    \ 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5))\
    \ !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6,\
    \ 5)) !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_m8godx5.php:26\n\
    Stack trace:\n#0 /tmp/tmp_m8godx5.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_m8godx5.php\
    \ on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n\
    \ / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return $l[$n / 2];\n    }\n\
    }\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3, 1, 2, 4,\
    \ 5))\n3\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n6*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nDeprecated: Implicit conversion from float 2.5 to int loses precision\
    \ in /tmp/tmp_j97e8qj.php on line 12\n\nFatal error: Uncaught Exception: Test\
    \ failed! in /tmp/tmp_j97e8qj.php:26\nStack trace:\n#0 /tmp/tmp_j97e8qj.php(33):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp_j97e8qj.php on line 26\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    $n = count($l);\n    $m = floor($n / 2);\n    if ($n % 2 ==\
    \ 0) {\n        return ($l[$m - 1] + $l[$m]) / 2;\n    } else {\n        return\
    \ $l[$m];\n    }\n}\n\n/* Return the mode of elements in the array l.\n>>> mode(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n10*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmps3w9gz9d.php:27\n\
    Stack trace:\n#0 /tmp/tmps3w9gz9d.php(34): test()\n#1 {main}\n  thrown in /tmp/tmps3w9gz9d.php\
    \ on line 27\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n \
    \       return ($l[$n / 2] + $l[$n / 2 - 1]) / 2;\n    } else {\n        return\
    \ $l[($n - 1) / 2];\n    }\n}\n\n/* Return the mode of elements in the array l.\n\
    >>> mode(array(3, 1, 2, 4, 5))\n3\n>>> mode(array(-10, 4, 6, 1000, 10, 20))\n\
    6*/\nfunction candidate(...$args) {\n    return median(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 1, 2, 4, 5)) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-10, 4, 6, 1000, 10, 20)) !== 8.0)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5)) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(6, 5))\
    \ !== 5.5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(8,\
    \ 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp11ulhj1n.php:28\n\
    Stack trace:\n#0 /tmp/tmp11ulhj1n.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp11ulhj1n.php\
    \ on line 28\n"
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* Return median of elements in the array l.\n>>> median(array(3,\
    \ 1, 2, 4, 5))\n3\n>>> median(array(-10, 4, 6, 1000, 10, 20))\n15.0*/\nfunction\
    \ median($l) {\n\t$n = count($l);\n\tif ($n % 2 == 0) {\n\t\treturn ($l[$n / 2]\
    \ + $l[$n / 2 - 1]) / 2;\n\t} else {\n\t\treturn $l[($n - 1) / 2];\n\t}\n}\n\n\
    /* Return the mean of the elements in the array l.\n>>> mean(array(3, 1, 2, 4,\
    \ 5))\n3.0\n>>> mean(array(-10, 4, 6, 1000, 10, 20))\n154.0*/\nfunction candidate(...$args)\
    \ {\n    return median(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 1, 2, 4, 5)) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-10,\
    \ 4, 6, 1000, 10, 20)) !== 8.0) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(5)) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(6, 5)) !== 5.5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(8, 1, 3, 9, 9, 2, 7)) !== 7) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcybka7lf.php:26\n\
    Stack trace:\n#0 /tmp/tmpcybka7lf.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpcybka7lf.php\
    \ on line 26\n"
  timestamp: 1660220777

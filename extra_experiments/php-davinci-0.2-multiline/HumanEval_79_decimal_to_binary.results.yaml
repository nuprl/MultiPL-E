language: php
name: HumanEval_79_decimal_to_binary
results:
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\n\necho decimal_to_binary(15);\n\
    echo \"<br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\necho decimal_to_binary(15);\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\necho decimal_to_binary(15);\necho \"<br>\"\
    ;\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"\\n\";\necho decimal_to_binary(32);\necho \"\\n\";\necho decimal_to_binary(100);\n\
    echo \"\\n\";\necho decimal_to_binary(255);\necho \"\\n\";\necho decimal_to_binary(1024);\n\
    echo \"\\n\";\necho decimal_to_binary(2048);\necho \"\\n\";\necho decimal_to_binary(4096);\n\
    echo \"\\n\";\necho decimal_to_binary(8192);\necho \"\\n\";\necho decimal_to_binary(16384);\n\
    echo \"\\n\";\necho decimal_to_binary(32768);\necho \"\\n\";\necho decimal_to_binary(65536);\n\
    echo \"\\n\";\necho decimal_to_binary(131072);\necho \"\\n\";\necho decimal_to_binary(262144);\n\
    echo \"\\n\";\necho decimal_to_binary(524288);\necho \"\\n\";\necho decimal_to_binary(1048576);\n\
    echo \"\\n\";\necho decimal_to_binary(2097152);\necho \"\\n\";\necho decimal_to_binary(4194304);\n\
    echo \"\\n\";\necho decimal_to_binary(8388608);\necho \"\\n\";\necho decimal_to_binary(16777216);\n\
    echo \"\\n\";\necho decimal_to_binary(33554432);\necho \"\\n\";\necho decimal_to_binary(67108864);\n\
    echo \"\\n\";\necho decimal_to_binary(134217728);\necho \"\\n\";\necho decimal_to_binary(268435456);\n\
    echo \"\\n\";\necho decimal_to_binary(536870912);\necho \"\\n\";\necho decimal_to_binary(1073741824);\n\
    echo \"\\n\";\necho decimal_to_binary(2147483648);\necho \"\\n\";\necho decimal_to_binary(4294967296);\n\
    echo \"\\n\";\necho decimal_to_binary(8589934592);\necho \"\\n\";\necho decimal_to_binary(\n\
    function candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpvlors_jf.php on line 74

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\".$binary.\"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"<br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n\t$binary = decbin($decimal);\n\
    \t$binary = \"db\".$binary.\"db\";\n\treturn $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"<br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"\\n\";\necho decimal_to_binary(32);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'db1111db

    db100000db

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\necho decimal_to_binary(15);\necho \"<br>\"\
    ;\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"<br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n\t$binary = decbin($decimal);\n\
    \treturn \"db\" . $binary . \"db\";\n}\necho decimal_to_binary(15) . \"\\n\";\n\
    echo decimal_to_binary(32) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(32)\
    \ !== \"db100000db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(103)\
    \ !== \"db1100111db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(15)\
    \ !== \"db1111db\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'db1111db

    db100000db

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    function candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\n\n/* You will be given a number in binary\
    \ format and your task is to convert it to decimal format.\nThe function should\
    \ return a number.\nExamples:\n>>> binary_to_decimal(\"db1111db\")\n15\n>>> binary_to_decimal(\"\
    db100000db\")\n32*/\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\".$binary.\"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    function candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = 'db' . $binary . 'db';\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo '<br>';\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n  \
    \  return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(32)\
    \ !== \"db100000db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(103)\
    \ !== \"db1100111db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(15)\
    \ !== \"db1111db\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\necho decimal_to_binary(15);\necho \"<br>\"\
    ;\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\necho decimal_to_binary(15);\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"<br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\" . $binary . \"db\";\n}\n\n/* You will be given a string and\
    \ your task is to remove all the extra characters\n(the extra characters are 'db'\
    \ at the beginning and at the end of the string).\nThe function should return\
    \ a string, with each character representing a binary\nnumber. Each character\
    \ in the string will be '0' or '1'.\nExamples:\n>>> remove_extra_characters(\"\
    db1111db\")\n\"1111\"\n>>> remove_extra_characters(\"db100000db\")\n\"100000\"\
    */\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = 'db' . $binary . 'db';\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo '<br>';\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n  \
    \  return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(32)\
    \ !== \"db100000db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(103)\
    \ !== \"db1100111db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(15)\
    \ !== \"db1111db\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\n\n/* You will be given a number in binary\
    \ format and your task is to convert it to decimal format.\nThe function should\
    \ return a number.\nExamples:\n>>> binary_to_decimal(\"db1111db\")\n15\n>>> binary_to_decimal(\"\
    db100000db\")\n32*/\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\" . $binary . \"db\";\n}\necho decimal_to_binary(15);\necho \"\
    <br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n    return\
    \ decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(32)\
    \ !== \"db100000db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(103)\
    \ !== \"db1100111db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(15)\
    \ !== \"db1111db\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\necho decimal_to_binary(15);\necho \"<br>\"\
    ;\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"\\n\";\necho decimal_to_binary(32);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'db1111db

    db100000db

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"<br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\" . $binary . \"db\";\n}\necho decimal_to_binary(15);\necho \"\
    <br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n    return\
    \ decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(32)\
    \ !== \"db100000db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(103)\
    \ !== \"db1100111db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(15)\
    \ !== \"db1111db\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\".$binary.\"db\";\n    return $binary;\n}\n\n/* You will be\
    \ given a number in binary format and your task is to convert it to decimal format.\n\
    The function should return an integer.\nThere will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\nThe extra characters are\
    \ there to help with the format.\nExamples:\n>>> binary_to_decimal(\"db1111db\"\
    )\n15\n>>> binary_to_decimal(\"db100000db\")\n32*/\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\".$binary.\"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"\\n\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n \
    \   return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'db1111db

    db100000db'
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\necho decimal_to_binary(15);\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\" . $binary . \"db\";\n}\n\n/* You will be given a number in\
    \ binary format and your task is to convert it to decimal format.\nThe function\
    \ should return a number.\nExamples:\n>>> binary_to_decimal(\"db1111db\")\n15\n\
    >>> binary_to_decimal(\"db100000db\")\n32*/\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"<br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\necho decimal_to_binary(15);\necho \"<br>\"\
    ;\necho decimal_to_binary(32);\necho \"<br>\";\necho decimal_to_binary(100);\n\
    echo \"<br>\";\necho decimal_to_binary(255);\necho \"<br>\";\necho decimal_to_binary(256);\n\
    echo \"<br>\";\necho decimal_to_binary(512);\necho \"<br>\";\necho decimal_to_binary(1024);\n\
    echo \"<br>\";\necho decimal_to_binary(2048);\necho \"<br>\";\necho decimal_to_binary(4096);\n\
    echo \"<br>\";\necho decimal_to_binary(8192);\necho \"<br>\";\necho decimal_to_binary(16384);\n\
    echo \"<br>\";\necho decimal_to_binary(32768);\necho \"<br>\";\necho decimal_to_binary(65536);\n\
    echo \"<br>\";\necho decimal_to_binary(131072);\necho \"<br>\";\necho decimal_to_binary(262144);\n\
    echo \"<br>\";\necho decimal_to_binary(524288);\necho \"<br>\";\necho decimal_to_binary(1048576);\n\
    echo \"<br>\";\necho decimal_to_binary(2097152);\necho \"<br>\";\necho decimal_to_binary(4194304);\n\
    echo \"<br>\";\necho decimal_to_binary(8388608);\necho \"<br>\";\necho decimal_to_binary(16777216);\n\
    echo \"<br>\";\necho decimal_to_binary(33554432);\necho \"<br>\";\necho decimal_to_binary(67108864);\n\
    echo \"<br>\";\necho decimal_to_binary(134217728);\necho \"<br>\";\necho decimal_to_binary(268435456);\n\
    echo \"<br>\";\necho decimal_to_binary(536870912);\necho \"<br>\";\necho decimal_to_binary(1073741824);\n\
    echo \"<br>\";\necho decimal_to_binary(2147483648);\necho \"<\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "db0db", expecting "," or ";"
    in /tmp/tmp364tv444.php on line 77

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\necho decimal_to_binary(15);\necho \"<br>\"\
    ;\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\".$binary.\"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"<br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\n\n/* You will be given a number in binary\
    \ format and your task is to convert it to decimal format.\nThe function should\
    \ return a number.\nExamples:\n>>> binary_to_decimal(\"db1111db\")\n15\n>>> binary_to_decimal(\"\
    db100000db\")\n32*/\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\n\n/* You will\
    \ be given a string in binary format and your task is to convert it to decimal\
    \ format.\nThe function should return an integer.\nThere will be an extra couple\
    \ of characters 'db' at the beginning and at the end of the string.\nThe extra\
    \ characters are there to help with the format.\nExamples:\n>>> binary_to_decimal(\"\
    db1111db\")\n15\n>>> binary_to_decimal(\"db100000db\")\n32*/\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"\\n\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n \
    \   return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'db1111db

    db100000db'
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"<br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\".$binary.\"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"\\n\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n \
    \   return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'db1111db

    db100000db'
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\necho decimal_to_binary(15);\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"\\n\";\necho decimal_to_binary(32);\necho \"\\n\";\necho decimal_to_binary(100);\n\
    echo \"\\n\";\necho decimal_to_binary(255);\necho \"\\n\";\necho decimal_to_binary(256);\n\
    echo \"\\n\";\necho decimal_to_binary(512);\necho \"\\n\";\necho decimal_to_binary(1024);\n\
    echo \"\\n\";\necho decimal_to_binary(2048);\necho \"\\n\";\necho decimal_to_binary(4096);\n\
    echo \"\\n\";\necho decimal_to_binary(8192);\necho \"\\n\";\necho decimal_to_binary(16384);\n\
    echo \"\\n\";\necho decimal_to_binary(32768);\necho \"\\n\";\necho decimal_to_binary(65536);\n\
    echo \"\\n\";\necho decimal_to_binary(131072);\necho \"\\n\";\necho decimal_to_binary(262144);\n\
    echo \"\\n\";\necho decimal_to_binary(524288);\necho \"\\n\";\necho decimal_to_binary(1048576);\n\
    echo \"\\n\";\necho decimal_to_binary(2097152);\necho \"\\n\";\necho decimal_to_binary(4194304);\n\
    echo \"\\n\";\necho decimal_to_binary(8388608);\necho \"\\n\";\necho decimal_to_binary(16777216);\n\
    echo \"\\n\";\necho decimal_to_binary(33554432);\necho \"\\n\";\necho decimal_to_binary(67108864);\n\
    echo \"\\n\";\necho decimal_to_binary(134217728);\necho \"\\n\";\necho decimal_to_binary(268435456);\n\
    echo \"\\n\";\necho decimal_to_binary(536870912);\necho \"\\n\";\necho decimal_to_binary(1073741824);\n\
    echo \"\\n\";\necho decimal_to_binary(2147483648);\necho \"\\n\";\necho decimal_to_binary(4294967296);\n\
    echo\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmps6e75wdn.php on line 75

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\necho decimal_to_binary(15);\necho \"<br>\"\
    ;\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\necho decimal_to_binary(15);\necho \"<br>\"\
    ;\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\".$binary.\"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"<br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = 'db' . $binary . 'db';\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    function candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\".$binary.\"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    function candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"<br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\".$binary.\"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"<br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\necho decimal_to_binary(15);\necho \"<br>\"\
    ;\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\" . $binary . \"db\";\n}\n\necho decimal_to_binary(15);\necho\
    \ \"\\n\";\necho decimal_to_binary(32);\necho \"\\n\";\necho decimal_to_binary(100);\n\
    echo \"\\n\";\necho decimal_to_binary(255);\necho \"\\n\";\necho decimal_to_binary(1);\n\
    echo \"\\n\";\necho decimal_to_binary(0);\necho \"\\n\";\necho decimal_to_binary(2);\n\
    echo \"\\n\";\necho decimal_to_binary(3);\necho \"\\n\";\necho decimal_to_binary(4);\n\
    echo \"\\n\";\necho decimal_to_binary(5);\necho \"\\n\";\necho decimal_to_binary(6);\n\
    echo \"\\n\";\necho decimal_to_binary(7);\necho \"\\n\";\necho decimal_to_binary(8);\n\
    echo \"\\n\";\necho decimal_to_binary(9);\necho \"\\n\";\necho decimal_to_binary(10);\n\
    echo \"\\n\";\necho decimal_to_binary(11);\necho \"\\n\";\necho decimal_to_binary(12);\n\
    echo \"\\n\";\necho decimal_to_binary(13);\necho \"\\n\";\necho decimal_to_binary(14);\n\
    echo \"\\n\";\necho decimal_to_binary(16);\necho \"\\n\";\necho decimal_to_binary(17);\n\
    echo \"\\n\";\necho decimal_to_binary(18);\necho \"\\n\";\necho decimal_to_binary(19);\n\
    echo \"\\n\";\necho decimal_to_binary(20);\necho \"\\n\";\necho decimal_to_binary(21);\n\
    echo \"\\n\";\necho decimal_to_binary(22);\necho \"\\n\";\necho decimal_to_binary(23);\n\
    echo \"\\n\";\necho decimal_to_binary(24);\necho \"\\n\";\necho decimal_to_binary(25);\n\
    echo \"\\n\";\necho decimal_to_binary(26);\necho \"\\n\";\necho decimal_to_binary(27);\n\
    echo \"\\n\";\necho decimal_to_binary(28);\necho \"\\n\";\necho decimal_to\nfunction\
    \ candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting "," or ";" in
    /tmp/tmpdzcvnjz5.php on line 82

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"<br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\n\n/* You will be given a number in binary\
    \ format and your task is to convert it to decimal format.\nThe function should\
    \ return a number.\nExamples:\n>>> binary_to_decimal(\"db1111db\")\n15\n>>> binary_to_decimal(\"\
    db100000db\")\n32*/\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\n\necho decimal_to_binary(15);\n\
    echo \"\\n\";\necho decimal_to_binary(32);\necho \"\\n\";\necho decimal_to_binary(100);\n\
    echo \"\\n\";\necho decimal_to_binary(255);\necho \"\\n\";\necho decimal_to_binary(0);\n\
    echo \"\\n\";\necho decimal_to_binary(1);\necho \"\\n\";\necho decimal_to_binary(2);\n\
    echo \"\\n\";\necho decimal_to_binary(3);\necho \"\\n\";\necho decimal_to_binary(4);\n\
    echo \"\\n\";\necho decimal_to_binary(5);\necho \"\\n\";\necho decimal_to_binary(6);\n\
    echo \"\\n\";\necho decimal_to_binary(7);\necho \"\\n\";\necho decimal_to_binary(8);\n\
    echo \"\\n\";\necho decimal_to_binary(9);\necho \"\\n\";\necho decimal_to_binary(10);\n\
    echo \"\\n\";\necho decimal_to_binary(11);\necho \"\\n\";\necho decimal_to_binary(12);\n\
    echo \"\\n\";\necho decimal_to_binary(13);\necho \"\\n\";\necho decimal_to_binary(14);\n\
    echo \"\\n\";\necho decimal_to_binary(15);\necho \"\\n\";\necho decimal_to_binary(16);\n\
    echo \"\\n\";\necho decimal_to_binary(17);\necho \"\\n\";\necho decimal_to_binary(18);\n\
    echo \"\\n\";\necho decimal_to_binary(19);\necho \"\\n\";\necho decimal_to_binary(20);\n\
    echo \"\\n\";\necho decimal_to_binary(21);\necho \"\\n\";\necho decimal_to_binary(22);\n\
    echo \"\\n\";\necho decimal_to_binary(23);\necho \"\\n\";\necho decimal_to_binary(24);\n\
    echo \"\\n\";\necho decimal_to_binary(25);\necho \"\\n\";\necho decimal_to_binary(26);\n\
    echo \"\\n\";\necho decimal_to_binary(27);\necho\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpw1hlwgsx.php on line 82

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\".$binary.\"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    function candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\".$binary.\"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"<br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"<br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"<br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"\\n\";\necho decimal_to_binary(32);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'db1111db

    db100000db

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"<br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\n\n/* You will be given a string, which\
    \ will be a binary number. Your task is to convert it to\ndecimal format. The\
    \ function should return a number.\nThere will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\nThe extra characters are\
    \ there to help with the format.\nExamples:\n>>> binary_to_decimal(\"db1111db\"\
    )\n15\n>>> binary_to_decimal(\"db100000db\")\n32*/\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\".$binary.\"db\";\n    return $binary;\n}\n\n/* You will be\
    \ given a number in binary format and your task is to convert it to decimal format.\n\
    The function should return a number.\nThere will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\nThe extra characters are\
    \ there to help with the format.\nExamples:\n>>> binary_to_decimal(\"db1111db\"\
    )\n15\n>>> binary_to_decimal(\"db100000db\")\n32*/\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"\\n\";\necho decimal_to_binary(32);\necho \"\\n\";\necho decimal_to_binary(0);\n\
    echo \"\\n\";\necho decimal_to_binary(1);\necho \"\\n\";\necho decimal_to_binary(2);\n\
    echo \"\\n\";\necho decimal_to_binary(3);\necho \"\\n\";\necho decimal_to_binary(4);\n\
    echo \"\\n\";\necho decimal_to_binary(5);\necho \"\\n\";\necho decimal_to_binary(6);\n\
    echo \"\\n\";\necho decimal_to_binary(7);\necho \"\\n\";\necho decimal_to_binary(8);\n\
    echo \"\\n\";\necho decimal_to_binary(9);\necho \"\\n\";\necho decimal_to_binary(10);\n\
    echo \"\\n\";\necho decimal_to_binary(11);\necho \"\\n\";\necho decimal_to_binary(12);\n\
    echo \"\\n\";\necho decimal_to_binary(13);\necho \"\\n\";\necho decimal_to_binary(14);\n\
    echo \"\\n\";\necho decimal_to_binary(15);\necho \"\\n\";\necho decimal_to_binary(16);\n\
    echo \"\\n\";\necho decimal_to_binary(17);\necho \"\\n\";\necho decimal_to_binary(18);\n\
    echo \"\\n\";\necho decimal_to_binary(19);\necho \"\\n\";\necho decimal_to_binary(20);\n\
    echo \"\\n\";\necho decimal_to_binary(21);\necho \"\\n\";\necho decimal_to_binary(22);\n\
    echo \"\\n\";\necho decimal_to_binary(23);\necho \"\\n\";\necho decimal_to_binary(24);\n\
    echo \"\\n\";\necho decimal_to_binary(25);\necho \"\\n\";\necho decimal_to_binary(26);\n\
    echo \"\\n\";\necho decimal_to_binary(27);\necho \"\\n\";\necho decimal_to_binary(28);\n\
    echo \"\\n\";\necho decimal_to_binary(29);\necho \"\\\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "db0db", expecting "," or ";"
    in /tmp/tmpra6lip3d.php on line 86

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\".$binary.\"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"\\n\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n \
    \   return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'db1111db

    db100000db'
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\" . $binary . \"db\";\n}\necho decimal_to_binary(15);\necho \"\
    <br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n    return\
    \ decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(32)\
    \ !== \"db100000db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(103)\
    \ !== \"db1100111db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(15)\
    \ !== \"db1111db\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\necho decimal_to_binary(15);\necho \"<br>\"\
    ;\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\".$binary.\"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    function candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"\\n\";\necho decimal_to_binary(32);\necho \"\\n\";\necho decimal_to_binary(100);\n\
    echo \"\\n\";\necho decimal_to_binary(1);\necho \"\\n\";\necho decimal_to_binary(0);\n\
    echo \"\\n\";\necho decimal_to_binary(255);\necho \"\\n\";\necho decimal_to_binary(256);\n\
    echo \"\\n\";\necho decimal_to_binary(512);\necho \"\\n\";\necho decimal_to_binary(1024);\n\
    echo \"\\n\";\necho decimal_to_binary(2048);\necho \"\\n\";\necho decimal_to_binary(4096);\n\
    echo \"\\n\";\necho decimal_to_binary(8192);\necho \"\\n\";\necho decimal_to_binary(16384);\n\
    echo \"\\n\";\necho decimal_to_binary(32768);\necho \"\\n\";\necho decimal_to_binary(65536);\n\
    echo \"\\n\";\necho decimal_to_binary(131072);\necho \"\\n\";\necho decimal_to_binary(262144);\n\
    echo \"\\n\";\necho decimal_to_binary(524288);\necho \"\\n\";\necho decimal_to_binary(1048576);\n\
    echo \"\\n\";\necho decimal_to_binary(2097152);\necho \"\\n\";\necho decimal_to_binary(4194304);\n\
    echo \"\\n\";\necho decimal_to_binary(8388608);\necho \"\\n\";\necho decimal_to_binary(16777216);\n\
    echo \"\\n\";\necho decimal_to_binary(33554432);\necho \"\\n\";\necho decimal_to_binary(67108864);\n\
    echo \"\\n\";\necho decimal_to_binary(134217728);\necho \"\\n\";\necho decimal_to_binary(268435456);\n\
    echo \"\\n\";\necho decimal_to_binary(536870912);\necho \"\\n\";\necho decimal_to_binary(1073741824);\n\
    echo \"\\n\";\necho decimal_\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting "," or ";" in
    /tmp/tmp4azx0rgp.php on line 76

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"<br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"<br>\";\necho decimal_to_binary(32);\necho \"<br>\";\necho decimal_to_binary(64);\n\
    echo \"<br>\";\necho decimal_to_binary(128);\necho \"<br>\";\necho decimal_to_binary(256);\n\
    echo \"<br>\";\necho decimal_to_binary(512);\necho \"<br>\";\necho decimal_to_binary(1024);\n\
    echo \"<br>\";\necho decimal_to_binary(2048);\necho \"<br>\";\necho decimal_to_binary(4096);\n\
    echo \"<br>\";\necho decimal_to_binary(8192);\necho \"<br>\";\necho decimal_to_binary(16384);\n\
    echo \"<br>\";\necho decimal_to_binary(32768);\necho \"<br>\";\necho decimal_to_binary(65536);\n\
    echo \"<br>\";\necho decimal_to_binary(131072);\necho \"<br>\";\necho decimal_to_binary(262144);\n\
    echo \"<br>\";\necho decimal_to_binary(524288);\necho \"<br>\";\necho decimal_to_binary(1048576);\n\
    echo \"<br>\";\necho decimal_to_binary(2097152);\necho \"<br>\";\necho decimal_to_binary(4194304);\n\
    echo \"<br>\";\necho decimal_to_binary(8388608);\necho \"<br>\";\necho decimal_to_binary(16777216);\n\
    echo \"<br>\";\necho decimal_to_binary(33554432);\necho \"<br>\";\necho decimal_to_binary(67108864);\n\
    echo \"<br>\";\necho decimal_to_binary(134217728);\necho \"<br>\";\necho decimal_to_binary(268435456);\n\
    echo \"<br>\";\necho decimal_to_binary(536870912);\necho \"<br>\";\necho decimal_to_binary(1073741824);\n\
    echo \"<br>\";\necho decimal_to_binary\nfunction candidate(...$args) {\n    return\
    \ decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(32)\
    \ !== \"db100000db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(103)\
    \ !== \"db1100111db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(15)\
    \ !== \"db1111db\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting "," or ";" in
    /tmp/tmp9aex6gvg.php on line 72

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\" . $binary . \"db\";\n}\necho decimal_to_binary(15);\necho \"\
    <br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n    return\
    \ decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(32)\
    \ !== \"db100000db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(103)\
    \ !== \"db1100111db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(15)\
    \ !== \"db1111db\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"\\n\";\necho decimal_to_binary(32);\necho \"\\n\";\necho decimal_to_binary(100);\n\
    echo \"\\n\";\necho decimal_to_binary(255);\necho \"\\n\";\necho decimal_to_binary(256);\n\
    echo \"\\n\";\necho decimal_to_binary(512);\necho \"\\n\";\necho decimal_to_binary(1024);\n\
    echo \"\\n\";\necho decimal_to_binary(2048);\necho \"\\n\";\necho decimal_to_binary(4096);\n\
    echo \"\\n\";\necho decimal_to_binary(8192);\necho \"\\n\";\necho decimal_to_binary(16384);\n\
    echo \"\\n\";\necho decimal_to_binary(32768);\necho \"\\n\";\necho decimal_to_binary(65536);\n\
    echo \"\\n\";\necho decimal_to_binary(131072);\necho \"\\n\";\necho decimal_to_binary(262144);\n\
    echo \"\\n\";\necho decimal_to_binary(524288);\necho \"\\n\";\necho decimal_to_binary(1048576);\n\
    echo \"\\n\";\necho decimal_to_binary(2097152);\necho \"\\n\";\necho decimal_to_binary(4194304);\n\
    echo \"\\n\";\necho decimal_to_binary(8388608);\necho \"\\n\";\necho decimal_to_binary(16777216);\n\
    echo \"\\n\";\necho decimal_to_binary(33554432);\necho \"\\n\";\necho decimal_to_binary(67108864);\n\
    echo \"\\n\";\necho decimal_to_binary(134217728);\necho \"\\n\";\necho decimal_to_binary(268435456);\n\
    echo \"\\n\";\necho decimal_to_binary(536870912);\necho \"\\n\";\necho decimal_to_binary(1073741824);\n\
    echo \"\\n\";\necho decimal_to_binary(2147483648);\necho \"\\n\";\necho decimal_to_binary(4294967296);\n\
    echo\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmps6e75wdn.php on line 75

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\".$binary.\"db\";\n    return $binary;\n}\n\n/* You will be\
    \ given a string in binary format and your task is to convert it to decimal format.\n\
    The function should return a number.\nThere will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\nThe extra characters are\
    \ there to help with the format.\nExamples:\n>>> binary_to_decimal(\"db1111db\"\
    )\n15\n>>> binary_to_decimal(\"db100000db\")\n32*/\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"<br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\necho decimal_to_binary(15);\necho \"<br>\"\
    ;\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\nfunction candidate(...$args) {\n    return\
    \ decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(32)\
    \ !== \"db100000db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(103)\
    \ !== \"db1100111db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(15)\
    \ !== \"db1111db\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\".$binary.\"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"<br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\".$binary.\"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"<br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\" . $binary . \"db\";\n}\necho decimal_to_binary(15);\necho \"\
    <br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n    return\
    \ decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(32)\
    \ !== \"db100000db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(103)\
    \ !== \"db1100111db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(15)\
    \ !== \"db1111db\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"<br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\necho decimal_to_binary(15);\necho \"<br>\"\
    ;\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\" . $binary . \"db\";\n}\n\n/* You will be given a number in\
    \ binary format and your task is to convert it to decimal format.\nThe function\
    \ should return a number.\nThere will be an extra couple of characters 'db' at\
    \ the beginning and at the end of the string.\nThe extra characters are there\
    \ to help with the format.\nExamples:\n>>> binary_to_decimal(\"db1111db\")\n15\n\
    >>> binary_to_decimal(\"db100000db\")\n32*/\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\necho decimal_to_binary(15);\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\n\n/* You will\
    \ be given a number in binary format and your task is to convert it to decimal\
    \ format.\nThe function should return a number.\nExamples:\n>>> binary_to_decimal(\"\
    db1111db\")\n15\n>>> binary_to_decimal(\"db100000db\")\n32*/\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = 'db' . $binary . 'db';\n    return $binary;\n}\necho decimal_to_binary(15)\
    \ . \"\\n\";\necho decimal_to_binary(32) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'db1111db

    db100000db

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = 'db' . $binary . 'db';\n    return $binary;\n}\n\n/*You will be\
    \ given a string in binary format and your task is to convert it to decimal format.\n\
    The function should return a number.\nExamples:\n>>> binary_to_decimal(\"db1111db\"\
    )\n15\n>>> binary_to_decimal(\"db100000db\")\n32*/\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"<br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\n\n/* You will\
    \ be given a string in binary format and your task is to convert it to decimal\
    \ format.\nThe function should return a number.\nExamples:\n>>> binary_to_decimal(\"\
    db1111db\")\n15\n>>> binary_to_decimal(\"db100000db\")\n32*/\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\".$binary.\"db\";\n    return $binary;\n}\n\n/* You will be\
    \ given a string, which will be in binary format. Your task is to convert it to\n\
    decimal format. The function should return a number.\nExamples:\n>>> binary_to_decimal(\"\
    db1111db\")\n15\n>>> binary_to_decimal(\"db100000db\")\n32*/\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\".$binary.\"db\";\n    return $binary;\n}\n\n/* You will be\
    \ given a string, which will be a binary number. Your task is to convert it to\n\
    decimal format. The function should return an integer.\nThere will be an extra\
    \ couple of characters 'db' at the beginning and at the end of the string.\nThe\
    \ extra characters are there to help with the format.\nExamples:\n>>> binary_to_decimal(\"\
    db1111db\")\n15\n>>> binary_to_decimal(\"db100000db\")\n32*/\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\" . $binary . \"db\";\n}\necho decimal_to_binary(15);\necho \"\
    <br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n    return\
    \ decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(32)\
    \ !== \"db100000db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(103)\
    \ !== \"db1100111db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(15)\
    \ !== \"db1111db\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\".$binary.\"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"<br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\n\n/*You will be given a string in the format\
    \ \"dbXXXXdb\" and your task is to convert it to\ndecimal format. The function\
    \ should return a number.\nExamples:\n>>> binary_to_decimal(\"db1111db\")\n15\n\
    >>> binary_to_decimal(\"db100000db\")\n32*/\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"<br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\n\n/* You will be given a string in binary\
    \ format and your task is to convert it to decimal format.\nThe function should\
    \ return a number.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> binary_to_decimal(\"db1111db\")\n15\n>>> binary_to_decimal(\"\
    db100000db\")\n32*/\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"\\n\";\necho decimal_to_binary(32);\necho \"\\n\";\necho decimal_to_binary(100);\n\
    echo \"\\n\";\necho decimal_to_binary(255);\necho \"\\n\";\necho decimal_to_binary(256);\n\
    echo \"\\n\";\necho decimal_to_binary(512);\necho \"\\n\";\necho decimal_to_binary(1024);\n\
    echo \"\\n\";\necho decimal_to_binary(2048);\necho \"\\n\";\necho decimal_to_binary(4096);\n\
    echo \"\\n\";\necho decimal_to_binary(8192);\necho \"\\n\";\necho decimal_to_binary(16384);\n\
    echo \"\\n\";\necho decimal_to_binary(32768);\necho \"\\n\";\necho decimal_to_binary(65536);\n\
    echo \"\\n\";\necho decimal_to_binary(131072);\necho \"\\n\";\necho decimal_to_binary(262144);\n\
    echo \"\\n\";\necho decimal_to_binary(524288);\necho \"\\n\";\necho decimal_to_binary(1048576);\n\
    echo \"\\n\";\necho decimal_to_binary(2097152);\necho \"\\n\";\necho decimal_to_binary(4194304);\n\
    echo \"\\n\";\necho decimal_to_binary(8388608);\necho \"\\n\";\necho decimal_to_binary(16777216);\n\
    echo \"\\n\";\necho decimal_to_binary(33554432);\necho \"\\n\";\necho decimal_to_binary(67108864);\n\
    echo \"\\n\";\necho decimal_to_binary(134217728);\necho \"\\n\";\necho decimal_to_binary(268435456);\n\
    echo \"\\n\";\necho decimal_to_binary(536870912);\necho \"\\n\";\necho decimal_to_binary(1073741824);\n\
    echo \"\\n\";\necho decimal_to_binary(2147483648);\necho \"\\n\";\necho decimal_to_binary(4294967296);\n\
    echo\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmps6e75wdn.php on line 75

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\" . $binary . \"db\";\n}\n\n/* You will be given a string of\
    \ binary numbers. Your task is to convert it to decimal format.\nThe function\
    \ should return a number.\nExamples:\n>>> binary_to_decimal(\"db1111db\")\n15\n\
    >>> binary_to_decimal(\"db100000db\")\n32*/\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\n\n/* You will\
    \ be given a string, containing a binary number. Your task is to convert it to\
    \ decimal format.\nThe function should return a number, which is the decimal representation\
    \ of the binary number.\nExamples:\n>>> binary_to_decimal(\"db1111db\")\n15\n\
    >>> binary_to_decimal(\"db100000db\")\n32*/\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\necho decimal_to_binary(15);\necho \"<br>\"\
    ;\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\" . $binary . \"db\";\n}\necho decimal_to_binary(15);\necho \"\
    <br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n    return\
    \ decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(32)\
    \ !== \"db100000db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(103)\
    \ !== \"db1100111db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(15)\
    \ !== \"db1111db\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"<br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\" . $binary . \"db\";\n}\n\n/* You will be given a string of\
    \ binary numbers and your task is to convert it to decimal format.\nThe function\
    \ should return a number.\nExamples:\n>>> binary_to_decimal(\"db1111db\")\n15\n\
    >>> binary_to_decimal(\"db100000db\")\n32*/\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\" . $binary . \"db\";\n}\necho decimal_to_binary(15);\necho \"\
    <br>\";\necho decimal_to_binary(32);\necho \"<br>\";\necho decimal_to_binary(100);\n\
    echo \"<br>\";\necho decimal_to_binary(255);\necho \"<br>\";\necho decimal_to_binary(256);\n\
    echo \"<br>\";\necho decimal_to_binary(512);\necho \"<br>\";\necho decimal_to_binary(1024);\n\
    echo \"<br>\";\necho decimal_to_binary(2048);\necho \"<br>\";\necho decimal_to_binary(4096);\n\
    echo \"<br>\";\necho decimal_to_binary(8192);\necho \"<br>\";\necho decimal_to_binary(16384);\n\
    echo \"<br>\";\necho decimal_to_binary(32768);\necho \"<br>\";\necho decimal_to_binary(65536);\n\
    echo \"<br>\";\necho decimal_to_binary(131072);\necho \"<br>\";\necho decimal_to_binary(262144);\n\
    echo \"<br>\";\necho decimal_to_binary(524288);\necho \"<br>\";\necho decimal_to_binary(1048576);\n\
    echo \"<br>\";\necho decimal_to_binary(2097152);\necho \"<br>\";\necho decimal_to_binary(4194304);\n\
    echo \"<br>\";\necho decimal_to_binary(8388608);\necho \"<br>\";\necho decimal_to_binary(16777216);\n\
    echo \"<br>\";\necho decimal_to_binary(33554432);\necho \"<br>\";\necho decimal_to_binary(67108864);\n\
    echo \"<br>\";\necho decimal_to_binary(134217728);\necho \"<br>\";\necho decimal_to_binary(268435456);\n\
    echo \"<br>\";\necho decimal_to_binary(536870912);\necho \"<br>\";\necho decimal_to_binary(1073741824);\n\
    echo \"<br>\";\necho decimal_to_binary(2147483648);\n\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db<br>db1100100db<br>db11111111db<br>db100000000db<br>db1000000000db<br>db10000000000db<br>db100000000000db<br>db1000000000000db<br>db10000000000000db<br>db100000000000000db<br>db1000000000000000db<br>db10000000000000000db<br>db100000000000000000db<br>db1000000000000000000db<br>db10000000000000000000db<br>db100000000000000000000db<br>db1000000000000000000000db<br>db10000000000000000000000db<br>db100000000000000000000000db<br>db1000000000000000000000000db<br>db10000000000000000000000000db<br>db100000000000000000000000000db<br>db1000000000000000000000000000db<br>db10000000000000000000000000000db<br>db100000000000000000000000000000db<br>db1000000000000000000000000000000db<br>db10000000000000000000000000000000db
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\n\n/* You will\
    \ be given a string in binary format and your task is to convert it to decimal\
    \ format.\nThe function should return a number.\nExamples:\n>>> binary_to_decimal(\"\
    db1111db\")\n15\n>>> binary_to_decimal(\"db100000db\")\n32*/\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\n\n/* You will be given a string in binary\
    \ format and your task is to convert it to decimal format.\nThe function should\
    \ return a number.\nExamples:\n>>> binary_to_decimal(\"db1111db\")\n15\n>>> binary_to_decimal(\"\
    db100000db\")\n32*/\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\n\n/* You will\
    \ be given a string in binary format and your task is to convert it to decimal\
    \ format.\nThe function should return a number.\nExamples:\n>>> binary_to_decimal(\"\
    db1111db\")\n15\n>>> binary_to_decimal(\"db100000db\")\n32*/\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\necho decimal_to_binary(15);\necho \"<br>\"\
    ;\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"<br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\" . $binary . \"db\";\n}\necho decimal_to_binary(15);\necho \"\
    \\n\";\necho decimal_to_binary(32);\necho \"\\n\";\necho decimal_to_binary(2);\n\
    echo \"\\n\";\necho decimal_to_binary(1);\necho \"\\n\";\necho decimal_to_binary(0);\n\
    echo \"\\n\";\necho decimal_to_binary(10);\necho \"\\n\";\necho decimal_to_binary(100);\n\
    echo \"\\n\";\necho decimal_to_binary(1000);\necho \"\\n\";\necho decimal_to_binary(10000);\n\
    echo \"\\n\";\necho decimal_to_binary(100000);\necho \"\\n\";\necho decimal_to_binary(1000000);\n\
    echo \"\\n\";\necho decimal_to_binary(10000000);\necho \"\\n\";\necho decimal_to_binary(100000000);\n\
    echo \"\\n\";\necho decimal_to_binary(1000000000);\necho \"\\n\";\necho decimal_to_binary(10000000000);\n\
    echo \"\\n\";\necho decimal_to_binary(100000000000);\necho \"\\n\";\necho decimal_to_binary(1000000000000);\n\
    echo \"\\n\";\necho decimal_to_binary(10000000000000);\necho \"\\n\";\necho decimal_to_binary(100000000000000);\n\
    echo \"\\n\";\necho decimal_to_binary(1000000000000000);\necho \"\\n\";\necho\
    \ decimal_to_binary(10000000000000000);\necho \"\\n\";\necho decimal_to_binary(100000000000000000);\n\
    echo \"\\n\";\necho decimal_to_binary(1000000000000000000);\necho \"\\n\";\necho\
    \ decimal_to_binary(10000000000000000000);\necho \"\\n\";\necho decimal_to_binary(100000000000000000000);\n\
    echo \"\\n\";\necho decimal_to_binary(1000000000000000000000);\necho \"\\n\";\n\
    echo decimal_to_binary(10000000000000000000000);\necho \"\\n\";\necho decimal_to_binary(100000000000000000000000);\n\
    echo \"\\n\";\necho decimal_to_binary(1000000000000000000000000);\necho \"\\n\"\
    ;\necho decimal_to_binary(10000000000000000000000000);\necho\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpsypmv8c5.php on line 76

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\n\n/*You will be given a string in binary\
    \ format and your task is to convert it to decimal format.\nThe function should\
    \ return a number.\nExamples:\n>>> binary_to_decimal(\"db1111db\")\n15\n>>> binary_to_decimal(\"\
    db100000db\")\n32*/\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\" . $binary . \"db\";\n}\necho decimal_to_binary(15);\necho \"\
    \\n\";\necho decimal_to_binary(32);\necho \"\\n\";\necho decimal_to_binary(0);\n\
    echo \"\\n\";\necho decimal_to_binary(1);\necho \"\\n\";\necho decimal_to_binary(2);\n\
    echo \"\\n\";\necho decimal_to_binary(3);\necho \"\\n\";\necho decimal_to_binary(4);\n\
    echo \"\\n\";\necho decimal_to_binary(5);\necho \"\\n\";\necho decimal_to_binary(6);\n\
    echo \"\\n\";\necho decimal_to_binary(7);\necho \"\\n\";\necho decimal_to_binary(8);\n\
    echo \"\\n\";\necho decimal_to_binary(9);\necho \"\\n\";\necho decimal_to_binary(10);\n\
    echo \"\\n\";\necho decimal_to_binary(11);\necho \"\\n\";\necho decimal_to_binary(12);\n\
    echo \"\\n\";\necho decimal_to_binary(13);\necho \"\\n\";\necho decimal_to_binary(14);\n\
    echo \"\\n\";\necho decimal_to_binary(15);\necho \"\\n\";\necho decimal_to_binary(16);\n\
    echo \"\\n\";\necho decimal_to_binary(17);\necho \"\\n\";\necho decimal_to_binary(18);\n\
    echo \"\\n\";\necho decimal_to_binary(19);\necho \"\\n\";\necho decimal_to_binary(20);\n\
    echo \"\\n\";\necho decimal_to_binary(21);\necho \"\\n\";\necho decimal_to_binary(22);\n\
    echo \"\\n\";\necho decimal_to_binary(23);\necho \"\\n\";\necho decimal_to_binary(24);\n\
    echo \"\\n\";\necho decimal_to_binary(25);\necho \"\\n\";\necho decimal_to_binary(26);\n\
    echo \"\\n\";\necho decimal_to_binary(27);\necho \"\\n\";\necho decimal_to_binary(28);\n\
    echo \"\\n\";\necho decimal_to_binary(29);\necho \"\\n\";\necho decimal_to_\n\
    function candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting "," or ";" in
    /tmp/tmp6s1h6uy0.php on line 81

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\".$binary.\"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"\\n\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n \
    \   return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'db1111db

    db100000db'
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\nfunction candidate(...$args) {\n    return\
    \ decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(32)\
    \ !== \"db100000db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(103)\
    \ !== \"db1100111db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(15)\
    \ !== \"db1111db\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\necho decimal_to_binary(15);\necho \"<br>\"\
    ;\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\necho decimal_to_binary(15);\necho \"<br>\"\
    ;\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"\\n\";\necho decimal_to_binary(32);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'db1111db

    db100000db

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\necho decimal_to_binary(15);\necho \"<br>\"\
    ;\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"<br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\" . $binary . \"db\";\n}\necho decimal_to_binary(15);\necho \"\
    <br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n    return\
    \ decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(32)\
    \ !== \"db100000db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(103)\
    \ !== \"db1100111db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(15)\
    \ !== \"db1111db\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"\\n\";\necho decimal_to_binary(32);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'db1111db

    db100000db

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    function candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\".$binary.\"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"\\n\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n \
    \   return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'db1111db

    db100000db'
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\".$binary.\"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    function candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"\\n\";\necho decimal_to_binary(32);\necho \"\\n\";\necho decimal_to_binary(5);\n\
    echo \"\\n\";\necho decimal_to_binary(10);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'db1111db

    db100000db

    db101db

    db1010db

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"\\n\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n \
    \   return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'db1111db

    db100000db'
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"<br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\necho decimal_to_binary(15);\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\necho decimal_to_binary(15);\necho \"<br>\"\
    ;\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\".$binary.\"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"<br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\" . $binary . \"db\";\n}\necho decimal_to_binary(15);\necho \"\
    <br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n    return\
    \ decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(32)\
    \ !== \"db100000db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(103)\
    \ !== \"db1100111db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(15)\
    \ !== \"db1111db\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\" . $binary . \"db\";\n}\necho decimal_to_binary(15);\necho \"\
    <br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n    return\
    \ decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(32)\
    \ !== \"db100000db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(103)\
    \ !== \"db1100111db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(15)\
    \ !== \"db1111db\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\necho decimal_to_binary(15);\necho \"<br>\"\
    ;\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"\\n\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n \
    \   return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'db1111db

    db100000db'
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n  $binary = decbin($decimal);\n\
    \  return \"db\".$binary.\"db\";\n}\n\n/* You will be given a string in binary\
    \ format and your task is to convert it to decimal format.\nThe function should\
    \ return an integer.\nThere will be an extra couple of characters 'db' at the\
    \ beginning and at the end of the string.\nThe extra characters are there to help\
    \ with the format.\nExamples:\n>>> binary_to_decimal(\"db1111db\")\n15\n>>> binary_to_decimal(\"\
    db100000db\")\n32*/\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\n\n/* You will\
    \ be given a string of binary numbers, and your task is to convert it to decimal\
    \ format.\nThe function should return a number, with each character representing\
    \ a binary number.\nEach character in the string will be '0' or '1'.\nThere will\
    \ be an extra couple of characters 'db' at the beginning and at the end of the\
    \ string.\nThe extra characters are there to help with the format.\nExamples:\n\
    >>> binary_to_decimal(\"db1111db\")\n15\n>>> binary_to_decimal(\"db100000db\"\
    )\n32*/\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"\\n\";\necho decimal_to_binary(32);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'db1111db

    db100000db

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\".$binary.\"db\";\n    return $binary;\n}\n\n/* You will be\
    \ given a string in binary format and your task is to convert it to decimal format.\n\
    The function should return a number.\nThere will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\nThe extra characters are\
    \ there to help with the format.\nExamples:\n>>> binary_to_decimal(\"db1111db\"\
    )\n15\n>>> binary_to_decimal(\"db100000db\")\n32*/\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"\\n\";\necho decimal_to_binary(32);\necho \"\\n\";\necho decimal_to_binary(100);\n\
    echo \"\\n\";\necho decimal_to_binary(255);\necho \"\\n\";\necho decimal_to_binary(256);\n\
    echo \"\\n\";\necho decimal_to_binary(512);\necho \"\\n\";\necho decimal_to_binary(1024);\n\
    echo \"\\n\";\necho decimal_to_binary(2048);\necho \"\\n\";\necho decimal_to_binary(4096);\n\
    echo \"\\n\";\necho decimal_to_binary(8192);\necho \"\\n\";\necho decimal_to_binary(16384);\n\
    echo \"\\n\";\necho decimal_to_binary(32768);\necho \"\\n\";\necho decimal_to_binary(65536);\n\
    echo \"\\n\";\necho decimal_to_binary(131072);\necho \"\\n\";\necho decimal_to_binary(262144);\n\
    echo \"\\n\";\necho decimal_to_binary(524288);\necho \"\\n\";\necho decimal_to_binary(1048576);\n\
    echo \"\\n\";\necho decimal_to_binary(2097152);\necho \"\\n\";\necho decimal_to_binary(4194304);\n\
    echo \"\\n\";\necho decimal_to_binary(8388608);\necho \"\\n\";\necho decimal_to_binary(16777216);\n\
    echo \"\\n\";\necho decimal_to_binary(33554432);\necho \"\\n\";\necho decimal_to_binary(67108864);\n\
    echo \"\\n\";\necho decimal_to_binary(134217728);\necho \"\\n\";\necho decimal_to_binary(268435456);\n\
    echo \"\\n\";\necho decimal_to_binary(536870912);\necho \"\\n\";\necho decimal_to_binary(1073741824);\n\
    echo \"\\n\";\necho decimal_to_binary(2147483648);\necho \"\\n\";\necho decimal_to_binary(4294967296);\n\
    echo\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmps6e75wdn.php on line 75

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"<br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\" . $binary . \"db\";\n}\necho decimal_to_binary(15);\necho \"\
    <br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n    return\
    \ decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(32)\
    \ !== \"db100000db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(103)\
    \ !== \"db1100111db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(15)\
    \ !== \"db1111db\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\necho decimal_to_binary(15);\necho \"\\\
    n\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n    return\
    \ decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(32)\
    \ !== \"db100000db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(103)\
    \ !== \"db1100111db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(15)\
    \ !== \"db1111db\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'db1111db

    db100000db'
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\".$binary.\"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    function candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"<br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\n\n/* You will\
    \ be given a string of binary numbers. Your task is to convert it to decimal format.\n\
    The function should return a number.\nExamples:\n>>> binary_to_decimal(\"db1111db\"\
    )\n15\n>>> binary_to_decimal(\"db100000db\")\n32*/\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\necho decimal_to_binary(15);\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\n\necho decimal_to_binary(15);\necho \"\
    <br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n    return\
    \ decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(32)\
    \ !== \"db100000db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(103)\
    \ !== \"db1100111db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(15)\
    \ !== \"db1111db\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"\\n\";\necho decimal_to_binary(32);\necho \"\\n\";\necho decimal_to_binary(0);\n\
    echo \"\\n\";\necho decimal_to_binary(1);\necho \"\\n\";\necho decimal_to_binary(2);\n\
    echo \"\\n\";\necho decimal_to_binary(3);\necho \"\\n\";\necho decimal_to_binary(4);\n\
    echo \"\\n\";\necho decimal_to_binary(5);\necho \"\\n\";\necho decimal_to_binary(6);\n\
    echo \"\\n\";\necho decimal_to_binary(7);\necho \"\\n\";\necho decimal_to_binary(8);\n\
    echo \"\\n\";\necho decimal_to_binary(9);\necho \"\\n\";\necho decimal_to_binary(10);\n\
    echo \"\\n\";\necho decimal_to_binary(11);\necho \"\\n\";\necho decimal_to_binary(12);\n\
    echo \"\\n\";\necho decimal_to_binary(13);\necho \"\\n\";\necho decimal_to_binary(14);\n\
    echo \"\\n\";\necho decimal_to_binary(15);\necho \"\\n\";\necho decimal_to_binary(16);\n\
    echo \"\\n\";\necho decimal_to_binary(17);\necho \"\\n\";\necho decimal_to_binary(18);\n\
    echo \"\\n\";\necho decimal_to_binary(19);\necho \"\\n\";\necho decimal_to_binary(20);\n\
    echo \"\\n\";\necho decimal_to_binary(21);\necho \"\\n\";\necho decimal_to_binary(22);\n\
    echo \"\\n\";\necho decimal_to_binary(23);\necho \"\\n\";\necho decimal_to_binary(24);\n\
    echo \"\\n\";\necho decimal_to_binary(25);\necho \"\\n\";\necho decimal_to_binary(26);\n\
    echo \"\\n\";\necho decimal_to_binary(27);\necho \"\\n\";\necho decimal_to_binary(28);\n\
    echo \"\\n\";\necho decimal_to_binary(29);\necho \"\\\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "db0db", expecting "," or ";"
    in /tmp/tmpra6lip3d.php on line 86

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\" . $binary . \"db\";\n}\n\necho decimal_to_binary(15);\nfunction\
    \ candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\necho decimal_to_binary(15);\necho \"<br>\"\
    ;\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = 'db' . $binary . 'db';\n    return $binary;\n}\n\n/* You will be\
    \ given a number in binary format and your task is to convert it to decimal format.\n\
    The function should return a number.\nExamples:\n>>> binary_to_decimal(\"db1111db\"\
    )\n15\n>>> binary_to_decimal(\"db100000db\")\n32*/\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"\\n\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n \
    \   return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'db1111db

    db100000db'
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"<br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n  $binary = decbin($decimal);\n\
    \  $binary = \"db\".$binary.\"db\";\n  return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"<br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\" . $binary . \"db\";\n}\n\n/* You will be given a string in\
    \ binary format and your task is to convert it to decimal format.\nThe function\
    \ should return a number.\nExamples:\n>>> binary_to_decimal(\"db1111db\")\n15\n\
    >>> binary_to_decimal(\"db100000db\")\n32*/\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\necho decimal_to_binary(15);\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\n\n/* You will be given a string, which\
    \ will contain a binary number. Your task is to convert\nit to decimal format.\
    \ The function should return an integer.\nExamples:\n>>> binary_to_decimal(\"\
    db1111db\")\n15\n>>> binary_to_decimal(\"db100000db\")\n32*/\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db$binary\".\"db\";\n}\necho decimal_to_binary(15);\necho \"<br>\"\
    ;\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\".$binary.\"db\";\n    return $binary;\n}\n\n/* You will be\
    \ given a number in binary format and your task is to convert it to decimal format.\n\
    The function should return a number.\nExamples:\n>>> binary_to_decimal(\"db1111db\"\
    )\n15\n>>> binary_to_decimal(\"db100000db\")\n32*/\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n\t$binary = decbin($decimal);\n\
    \treturn \"db\".$binary.\"db\";\n}\necho decimal_to_binary(15);\necho \"<br>\"\
    ;\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"\\n\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n \
    \   return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'db1111db

    db100000db'
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"\\n\";\necho decimal_to_binary(32);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'db1111db

    db100000db

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\n\n/* You will\
    \ be given a number in binary format and your task is to convert it to decimal\
    \ format.\nThe function should return a number, with each character representing\
    \ a binary number.\nEach character in the string will be '0' or '1'.\nThere will\
    \ be an extra couple of characters 'db' at the beginning and at the end of the\
    \ string.\nThe extra characters are there to help with the format.\nExamples:\n\
    >>> binary_to_decimal(\"db1111db\")\n15\n>>> binary_to_decimal(\"db100000db\"\
    )\n32*/\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\necho decimal_to_binary(15);\necho \"\\\
    n\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n    return\
    \ decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(32)\
    \ !== \"db100000db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(103)\
    \ !== \"db1100111db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(15)\
    \ !== \"db1111db\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'db1111db

    db100000db'
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\necho decimal_to_binary(15);\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db$binary\".\"db\";\n}\n\n/* You will be given a string of characters,\
    \ and your task is to return a string with the same\ncharacters, but in reverse\
    \ order.\nExamples:\n>>> reverse_string(\"Hello World!\")\n\"!dlroW olleH\"\n\
    >>> reverse_string(\"\")\n\"\"*/\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\nfunction candidate(...$args) {\n    return\
    \ decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(32)\
    \ !== \"db100000db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(103)\
    \ !== \"db1100111db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(15)\
    \ !== \"db1111db\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\n\n/*You will\
    \ be given a string, which will be a binary number. Your task is to convert it\
    \ to\ndecimal format. The function should return a number.\nExamples:\n>>> binary_to_decimal(\"\
    db1111db\")\n15\n>>> binary_to_decimal(\"db100000db\")\n32*/\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\" . $binary . \"db\";\n}\necho decimal_to_binary(15);\necho \"\
    <br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n    return\
    \ decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(32)\
    \ !== \"db100000db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(103)\
    \ !== \"db1100111db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(15)\
    \ !== \"db1111db\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\necho decimal_to_binary(15);\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"<br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = 'db' . $binary . 'db';\n    return $binary;\n}\n\n/* You will be\
    \ given a string in binary format and your task is to convert it to decimal format.\n\
    The function should return a number.\nExamples:\n>>> binary_to_decimal(\"db1111db\"\
    )\n15\n>>> binary_to_decimal(\"db100000db\")\n32*/\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\".$binary.\"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"<br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\".$binary.\"db\";\n    return $binary;\n}\n\necho decimal_to_binary(15);\n\
    echo \"\\n\";\necho decimal_to_binary(32);\necho \"\\n\";\necho decimal_to_binary(2);\n\
    echo \"\\n\";\necho decimal_to_binary(1);\necho \"\\n\";\necho decimal_to_binary(0);\n\
    echo \"\\n\";\necho decimal_to_binary(255);\necho \"\\n\";\necho decimal_to_binary(256);\n\
    echo \"\\n\";\necho decimal_to_binary(65535);\necho \"\\n\";\necho decimal_to_binary(65536);\n\
    echo \"\\n\";\necho decimal_to_binary(4294967295);\necho \"\\n\";\necho decimal_to_binary(4294967296);\n\
    echo \"\\n\";\necho decimal_to_binary(18446744073709551615);\necho \"\\n\";\n\
    echo decimal_to_binary(18446744073709551616);\necho \"\\n\";\necho decimal_to_binary(18446744073709551617);\n\
    echo \"\\n\";\necho decimal_to_binary(18446744073709551618);\necho \"\\n\";\n\
    echo decimal_to_binary(18446744073709551619);\necho \"\\n\";\necho decimal_to_binary(18446744073709551620);\n\
    echo \"\\n\";\necho decimal_to_binary(18446744073709551621);\necho \"\\n\";\n\
    echo decimal_to_binary(18446744073709551622);\necho \"\\n\";\necho decimal_to_binary(18446744073709551623);\n\
    echo \"\\n\";\necho decimal_to_binary(18446744073709551624);\necho \"\\n\";\n\
    echo decimal_to_binary(18446744073709551625);\necho \"\\n\";\necho decimal_to_binary(18446744073709551626);\n\
    echo \"\\n\";\necho decimal_to_binary(18446744073709551627);\necho \"\\n\";\n\
    echo decimal_to_binary\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting "," or ";" in
    /tmp/tmp9k6qmw79.php on line 67

    '
  timestamp: 1660220778
- exit_code: 255
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    // Your code here\n\
    }\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp88l0o2l9.php:20\n\
    Stack trace:\n#0 /tmp/tmp88l0o2l9.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp88l0o2l9.php\
    \ on line 20\n"
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"<br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\".$binary.\"db\";\n    return $binary;\n}\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\".$binary.\"db\";\n    return $binary;\n}\n\n/* You will be\
    \ given a string in binary format and your task is to convert it to decimal format.\n\
    The function should return a number.\nThere will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\nThe extra characters are\
    \ there to help with the format.\nExamples:\n>>> binary_to_decimal(\"db1111db\"\
    )\n15\n>>> binary_to_decimal(\"db100000db\")\n32*/\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\necho decimal_to_binary(15);\necho \"<br>\"\
    ;\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    function candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\necho decimal_to_binary(15);\necho \"<br>\"\
    ;\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"<br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\" . $binary . \"db\";\n}\n\n/* You will be given a string of\
    \ characters, representing a binary number. Your task is to convert\nit to decimal\
    \ format. The function should return an integer.\nThere will be an extra couple\
    \ of characters 'db' at the beginning and at the end of the string.\nThe extra\
    \ characters are there to help with the format.\nExamples:\n>>> binary_to_decimal(\"\
    db1111db\")\n15\n>>> binary_to_decimal(\"db100000db\")\n32*/\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\n\n/* You will\
    \ be given a string, which will contain a binary number. Your task is to convert\
    \ it\nto decimal format. The function should return a number.\nThere will be an\
    \ extra couple of characters 'db' at the beginning and at the end of the string.\n\
    The extra characters are there to help with the format.\nExamples:\n>>> binary_to_decimal(\"\
    db1111db\")\n15\n>>> binary_to_decimal(\"db100000db\")\n32*/\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\".$binary.\"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"\\n\";\necho decimal_to_binary(32);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'db1111db

    db100000db

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\" . $binary . \"db\";\n}\necho decimal_to_binary(15);\necho \"\
    <br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n    return\
    \ decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(32)\
    \ !== \"db100000db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(103)\
    \ !== \"db1100111db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(15)\
    \ !== \"db1111db\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"<br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\" . $binary . \"db\";\n}\necho decimal_to_binary(15);\necho \"\
    <br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n    return\
    \ decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(32)\
    \ !== \"db100000db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(103)\
    \ !== \"db1100111db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(15)\
    \ !== \"db1111db\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\n\n/* You will\
    \ be given a string, which will contain a binary number. Your task is to convert\n\
    it to decimal format. The function should return a number.\nExamples:\n>>> binary_to_decimal(\"\
    db1111db\")\n15\n>>> binary_to_decimal(\"db100000db\")\n32*/\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"<br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\necho decimal_to_binary(15);\necho \"<br>\"\
    ;\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\".$binary.\"db\";\n    return $binary;\n}\n\n/* You will be\
    \ given a binary string and your task is to convert it to decimal format.\nThe\
    \ function should return a number, which is the decimal representation of the\
    \ binary string.\nExamples:\n>>> binary_to_decimal(\"db1111db\")\n15\n>>> binary_to_decimal(\"\
    db100000db\")\n32*/\nfunction candidate(...$args) {\n    return decimal_to_binary(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(0) !== \"db0db\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15) !== \"db1111db\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\necho decimal_to_binary(15);\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n\t$binary = decbin($decimal);\n\
    \t$binary = \"db\" . $binary . \"db\";\n\treturn $binary;\n}\n\n/* You will be\
    \ given a string in binary format and your task is to convert it to decimal format.\n\
    The function should return a number.\nThere will be an extra couple of characters\
    \ 'db' at the beginning and at the end of the string.\nThe extra characters are\
    \ there to help with the format.\nExamples:\n>>> binary_to_decimal(\"db1111db\"\
    )\n15\n>>> binary_to_decimal(\"db100000db\")\n32*/\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"\\n\";\necho decimal_to_binary(32);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'db1111db

    db100000db

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\".$binary.\"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    function candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\" . $binary . \"db\";\n}\n\n/* You will be given a string in\
    \ binary format and your task is to convert it to decimal format.\nThe function\
    \ should return an integer.\nThere will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\nThe extra characters are there\
    \ to help with the format.\nExamples:\n>>> binary_to_decimal(\"db1111db\")\n15\n\
    >>> binary_to_decimal(\"db100000db\")\n32*/\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\" . $binary . \"db\";\n}\necho decimal_to_binary(15);\necho \"\
    \\n\";\necho decimal_to_binary(32);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'db1111db

    db100000db

    '
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\" . $binary . \"db\";\n}\n\n/* You will be given a string of\
    \ characters, representing a binary number.\nYour task is to convert it to decimal\
    \ format. The function should return a number.\nExamples:\n>>> binary_to_decimal(\"\
    db1111db\")\n15\n>>> binary_to_decimal(\"db100000db\")\n32*/\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"<br>\";\necho decimal_to_binary(32);\nfunction candidate(...$args) {\n\
    \    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db<br>db100000db
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\nfunction candidate(...$args) {\n    return\
    \ decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n    if (candidate(0)\
    \ !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(32)\
    \ !== \"db100000db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(103)\
    \ !== \"db1100111db\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(15)\
    \ !== \"db1111db\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220778
- exit_code: 0
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    return \"db\".$binary.\"db\";\n}\necho decimal_to_binary(15);\nfunction candidate(...$args)\
    \ {\n    return decimal_to_binary(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(0) !== \"db0db\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(32) !== \"db100000db\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: db1111db
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* You will be given a number in decimal form and your task is\
    \ to convert it to\nbinary format. The function should return a string, with each\
    \ character representing a binary\nnumber. Each character in the string will be\
    \ '0' or '1'.\nThere will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\nThe extra characters are there to help with the\
    \ format.\nExamples:\n>>> decimal_to_binary(15)\n\"db1111db\"\n>>> decimal_to_binary(32)\n\
    \"db100000db\"*/\nfunction decimal_to_binary($decimal) {\n    $binary = decbin($decimal);\n\
    \    $binary = \"db\" . $binary . \"db\";\n    return $binary;\n}\necho decimal_to_binary(15);\n\
    echo \"\\n\";\necho decimal_to_binary(32);\necho \"\\n\";\necho decimal_to_binary(100);\n\
    echo \"\\n\";\necho decimal_to_binary(255);\necho \"\\n\";\necho decimal_to_binary(1000);\n\
    echo \"\\n\";\necho decimal_to_binary(1024);\necho \"\\n\";\necho decimal_to_binary(2048);\n\
    echo \"\\n\";\necho decimal_to_binary(4096);\necho \"\\n\";\necho decimal_to_binary(8192);\n\
    echo \"\\n\";\necho decimal_to_binary(16384);\necho \"\\n\";\necho decimal_to_binary(32768);\n\
    echo \"\\n\";\necho decimal_to_binary(65536);\necho \"\\n\";\necho decimal_to_binary(131072);\n\
    echo \"\\n\";\necho decimal_to_binary(262144);\necho \"\\n\";\necho decimal_to_binary(524288);\n\
    echo \"\\n\";\necho decimal_to_binary(1048576);\necho \"\\n\";\necho decimal_to_binary(2097152);\n\
    echo \"\\n\";\necho decimal_to_binary(4194304);\necho \"\\n\";\necho decimal_to_binary(8388608);\n\
    echo \"\\n\";\necho decimal_to_binary(16777216);\necho \"\\n\";\necho decimal_to_binary(33554432);\n\
    echo \"\\n\";\necho decimal_to_binary(67108864);\necho \"\\n\";\necho decimal_to_binary(134217728);\n\
    echo \"\\n\";\necho decimal_to_binary(268435456);\necho \"\\n\";\necho decimal_to_binary(536870912);\n\
    echo \"\\n\";\necho decimal_to_binary(1073741824);\necho \"\\n\";\necho decimal_to_binary(2147483648);\n\
    echo \"\\n\";\necho decimal_to_binary(4294967296);\necho \"\\n\";\necho decimal_to_binary(85899345\n\
    function candidate(...$args) {\n    return decimal_to_binary(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(0) !== \"db0db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(32) !== \"db100000db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(103) !== \"db1100111db\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15) !== \"db1111db\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmptoxb89zb.php
    on line 74

    '
  timestamp: 1660220778

language: php
name: HumanEval_103_rounded_avg
results:
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp00das68d.php:35\nStack trace:\n#0 /tmp/tmp00das68d.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp00das68d.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5);\necho rounded_avg(7, 5);\necho rounded_avg(10, 20);\necho rounded_avg(20,\
    \ 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkw92vgn9.php:35\n\
    Stack trace:\n#0 /tmp/tmpkw92vgn9.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpkw92vgn9.php\
    \ on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = $sum / ($m - $n + 1);\n\t$avg = round($avg);\n\treturn decbin($avg);\n\
    }\necho rounded_avg(1, 5);\necho rounded_avg(7, 5);\necho rounded_avg(10, 20);\n\
    echo rounded_avg(20, 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb0qm8r_x.php:36\n\
    Stack trace:\n#0 /tmp/tmpb0qm8r_x.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpb0qm8r_x.php\
    \ on line 36\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8g4d0i0a.php:31\n\
    Stack trace:\n#0 /tmp/tmp8g4d0i0a.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp8g4d0i0a.php\
    \ on line 31\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwliru832.php:33\n\
    Stack trace:\n#0 /tmp/tmpwliru832.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpwliru832.php\
    \ on line 33\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$avg = round(($n + $m) / 2);\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5);\necho rounded_avg(7, 5);\necho rounded_avg(10, 20);\necho rounded_avg(20,\
    \ 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpytgg6tld.php:31\n\
    Stack trace:\n#0 /tmp/tmpytgg6tld.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpytgg6tld.php\
    \ on line 31\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp00das68d.php:35\nStack trace:\n#0 /tmp/tmp00das68d.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp00das68d.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp00das68d.php:35\nStack trace:\n#0 /tmp/tmp00das68d.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp00das68d.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5);\necho rounded_avg(7, 5);\necho rounded_avg(10, 20);\necho rounded_avg(20,\
    \ 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkw92vgn9.php:35\n\
    Stack trace:\n#0 /tmp/tmpkw92vgn9.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpkw92vgn9.php\
    \ on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn '0b' . decbin($avg);\n}\n\n\
    echo rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10,\
    \ 20) . PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp8bhhss4z.php:38\nStack trace:\n#0 /tmp/tmp8bhhss4z.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmp8bhhss4z.php on line 38\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\n\n/*\n    https://www.codewars.com/kata/5a959662373c2e761d00010a/train/php\n\
    */\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp59w4rtuy.php:35\n\
    Stack trace:\n#0 /tmp/tmp59w4rtuy.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp59w4rtuy.php\
    \ on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5)\
    \ . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) .\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpwba_b87c.php:35\nStack trace:\n#0 /tmp/tmpwba_b87c.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpwba_b87c.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5);\necho rounded_avg(7, 5);\necho rounded_avg(10, 20);\necho rounded_avg(20,\
    \ 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkw92vgn9.php:35\n\
    Stack trace:\n#0 /tmp/tmpkw92vgn9.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpkw92vgn9.php\
    \ on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\n\necho rounded_avg(1, 5);\necho rounded_avg(7, 5);\necho rounded_avg(10,\
    \ 20);\necho rounded_avg(20, 33);\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv440b374.php:36\n\
    Stack trace:\n#0 /tmp/tmpv440b374.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpv440b374.php\
    \ on line 36\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\n\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp2yh3qzg2.php:36\nStack trace:\n#0 /tmp/tmp2yh3qzg2.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmp2yh3qzg2.php on line 36\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5)\
    \ . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) .\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp3a3tiqis.php:36\nStack trace:\n#0 /tmp/tmp3a3tiqis.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmp3a3tiqis.php on line 36\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) .\
    \ PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpji12iegr.php:35\nStack trace:\n#0 /tmp/tmpji12iegr.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpji12iegr.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\n\necho rounded_avg(1, 5);\necho rounded_avg(7, 5);\necho rounded_avg(10,\
    \ 20);\necho rounded_avg(20, 33);\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv440b374.php:36\n\
    Stack trace:\n#0 /tmp/tmpv440b374.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpv440b374.php\
    \ on line 36\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5);\necho rounded_avg(7, 5);\necho rounded_avg(10, 20);\necho rounded_avg(20,\
    \ 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkw92vgn9.php:35\n\
    Stack trace:\n#0 /tmp/tmpkw92vgn9.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpkw92vgn9.php\
    \ on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\n\n/*\n * Test code\n */\necho rounded_avg(1, 5) . PHP_EOL;\n\
    echo rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20,\
    \ 33) . PHP_EOL;\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpq86inyf3.php:39\nStack trace:\n#0 /tmp/tmpq86inyf3.php(53): test()\n\
    #1 {main}\n  thrown in /tmp/tmpq86inyf3.php on line 39\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\n\necho rounded_avg(1,\
    \ 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) .\
    \ PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpw8gx150k.php:36\nStack trace:\n#0 /tmp/tmpw8gx150k.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmpw8gx150k.php on line 36\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp00das68d.php:35\nStack trace:\n#0 /tmp/tmp00das68d.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp00das68d.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return decbin($avg);\n}\n\necho\
    \ rounded_avg(1, 5);\necho \"\\n\";\necho rounded_avg(7, 5);\necho \"\\n\";\n\
    echo rounded_avg(10, 20);\necho \"\\n\";\necho rounded_avg(20, 33);\necho \"\\\
    n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmppqjny8j8.php:40\nStack trace:\n#0 /tmp/tmppqjny8j8.php(54): test()\n\
    #1 {main}\n  thrown in /tmp/tmppqjny8j8.php on line 40\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp00das68d.php:35\nStack trace:\n#0 /tmp/tmp00das68d.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp00das68d.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\n\necho rounded_avg(1,\
    \ 5);\necho rounded_avg(7, 5);\necho rounded_avg(10, 20);\necho rounded_avg(20,\
    \ 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbzam9_30.php:36\n\
    Stack trace:\n#0 /tmp/tmpbzam9_30.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpbzam9_30.php\
    \ on line 36\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) .\
    \ PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpji12iegr.php:35\nStack trace:\n#0 /tmp/tmpji12iegr.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpji12iegr.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn '0b' . decbin($avg);\n}\n\n\
    echo rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10,\
    \ 20) . PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp8bhhss4z.php:38\nStack trace:\n#0 /tmp/tmp8bhhss4z.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmp8bhhss4z.php on line 38\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp00das68d.php:35\nStack trace:\n#0 /tmp/tmp00das68d.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp00das68d.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\n\n/*\n * Test code\n */\necho rounded_avg(1, 5) . PHP_EOL;\n\
    echo rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20,\
    \ 33) . PHP_EOL;\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpq86inyf3.php:39\nStack trace:\n#0 /tmp/tmpq86inyf3.php(53): test()\n\
    #1 {main}\n  thrown in /tmp/tmpq86inyf3.php on line 39\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5);\necho rounded_avg(7, 5);\necho rounded_avg(10, 20);\necho rounded_avg(20,\
    \ 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkw92vgn9.php:35\n\
    Stack trace:\n#0 /tmp/tmpkw92vgn9.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpkw92vgn9.php\
    \ on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp00das68d.php:35\nStack trace:\n#0 /tmp/tmp00das68d.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp00das68d.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\n\n/*\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 27 in /tmp/tmpb976kg_6.php on
    line 27

    '
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp00das68d.php:35\nStack trace:\n#0 /tmp/tmp00das68d.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp00das68d.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp00das68d.php:35\nStack trace:\n#0 /tmp/tmp00das68d.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp00das68d.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $avg = round(($n + $m) / 2);\n    return decbin($avg);\n\
    }\n\n/*\n * Test code\n */\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp164tq4rx.php:35\nStack trace:\n#0 /tmp/tmp164tq4rx.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp164tq4rx.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) .\
    \ PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpji12iegr.php:35\nStack trace:\n#0 /tmp/tmpji12iegr.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpji12iegr.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\t$avg = round(($n + $m)\
    \ / 2);\n\tif ($n > $m) {\n\t\treturn -1;\n\t}\n\treturn decbin($avg);\n}\necho\
    \ rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10,\
    \ 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpsp9rwgo1.php:31\nStack trace:\n#0 /tmp/tmpsp9rwgo1.php(45): test()\n\
    #1 {main}\n  thrown in /tmp/tmpsp9rwgo1.php on line 31\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\n\necho rounded_avg(1,\
    \ 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) .\
    \ PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpw8gx150k.php:36\nStack trace:\n#0 /tmp/tmpw8gx150k.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmpw8gx150k.php on line 36\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5);\necho \"\\n\";\necho rounded_avg(7, 5);\necho \"\\n\";\necho rounded_avg(10,\
    \ 20);\necho \"\\n\";\necho rounded_avg(20, 33);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpykcuq8md.php:39\nStack trace:\n#0 /tmp/tmpykcuq8md.php(53): test()\n\
    #1 {main}\n  thrown in /tmp/tmpykcuq8md.php on line 39\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5)\
    \ . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) .\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpwba_b87c.php:35\nStack trace:\n#0 /tmp/tmpwba_b87c.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpwba_b87c.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\n\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp2yh3qzg2.php:36\nStack trace:\n#0 /tmp/tmp2yh3qzg2.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmp2yh3qzg2.php on line 36\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn \"0b\" . decbin($avg);\n}\n\
    echo rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10,\
    \ 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpj5j82m17.php:37\nStack trace:\n#0 /tmp/tmpj5j82m17.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpj5j82m17.php on line 37\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5);\necho rounded_avg(7, 5);\necho rounded_avg(10, 20);\necho rounded_avg(20,\
    \ 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkw92vgn9.php:35\n\
    Stack trace:\n#0 /tmp/tmpkw92vgn9.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpkw92vgn9.php\
    \ on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn \"0b\" . decbin($avg);\n}\n\
    echo rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10,\
    \ 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpj5j82m17.php:37\nStack trace:\n#0 /tmp/tmpj5j82m17.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpj5j82m17.php on line 37\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\n\necho rounded_avg(1, 5);\necho \"\\n\";\necho rounded_avg(7,\
    \ 5);\necho \"\\n\";\necho rounded_avg(10, 20);\necho \"\\n\";\necho rounded_avg(20,\
    \ 33);\necho \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpqj_ne37e.php:40\nStack trace:\n#0 /tmp/tmpqj_ne37e.php(54): test()\n\
    #1 {main}\n  thrown in /tmp/tmpqj_ne37e.php on line 40\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5)\
    \ . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) .\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpwba_b87c.php:35\nStack trace:\n#0 /tmp/tmpwba_b87c.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpwba_b87c.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp00das68d.php:35\nStack trace:\n#0 /tmp/tmp00das68d.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp00das68d.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\n\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp2yh3qzg2.php:36\nStack trace:\n#0 /tmp/tmp2yh3qzg2.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmp2yh3qzg2.php on line 36\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp00das68d.php:35\nStack trace:\n#0 /tmp/tmp00das68d.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp00das68d.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return decbin($avg);\n}\n\n/* You\
    \ are given a string s, and an integer k.\nReturn the length of the longest substring\
    \ in s that contains at most k distinct characters.\nFor instance, given the string:\n\
    aabcdefff and k = 3, then the longest substring with 3 distinct characters would\
    \ be defff.\nThe answer should be 5.\nHere's a starting point:\ndef longest_substring_with_k_distinct_characters(s,\
    \ k):\n  # Fill this in.\n\nprint longest_substring_with_k_distinct_characters('aabcdefff',\
    \ 3)\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 27 in /tmp/tmp__sh_7qe.php on
    line 27

    '
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\t$avg = round(($n + $m)\
    \ / 2);\n\tif ($n > $m) {\n\t\treturn -1;\n\t}\n\treturn decbin($avg);\n}\necho\
    \ rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10,\
    \ 20) . PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpgpqd8_kl.php:31\nStack trace:\n#0 /tmp/tmpgpqd8_kl.php(45): test()\n\
    #1 {main}\n  thrown in /tmp/tmpgpqd8_kl.php on line 31\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp00das68d.php:35\nStack trace:\n#0 /tmp/tmp00das68d.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp00das68d.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\n\necho rounded_avg(1,\
    \ 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) .\
    \ PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpw8gx150k.php:36\nStack trace:\n#0 /tmp/tmpw8gx150k.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmpw8gx150k.php on line 36\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp00das68d.php:35\nStack trace:\n#0 /tmp/tmp00das68d.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp00das68d.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\nprint_r(rounded_avg(1, 5));\necho \"\\n\";\nprint_r(rounded_avg(7,\
    \ 5));\necho \"\\n\";\nprint_r(rounded_avg(10, 20));\necho \"\\n\";\nprint_r(rounded_avg(20,\
    \ 33));\necho \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpdj2bthms.php:41\nStack trace:\n#0 /tmp/tmpdj2bthms.php(53): test()\n\
    #1 {main}\n  thrown in /tmp/tmpdj2bthms.php on line 41\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) .\
    \ PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpji12iegr.php:35\nStack trace:\n#0 /tmp/tmpji12iegr.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpji12iegr.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return decbin($avg);\n}\n\necho\
    \ rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10,\
    \ 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpbm_nb1nb.php:36\nStack trace:\n#0 /tmp/tmpbm_nb1nb.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmpbm_nb1nb.php on line 36\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\n\n/*\n * Test code\n */\necho rounded_avg(1, 5) . \"\\n\"\
    ;\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho\
    \ rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmplxttst_q.php:39\nStack trace:\n#0 /tmp/tmplxttst_q.php(53): test()\n\
    #1 {main}\n  thrown in /tmp/tmplxttst_q.php on line 39\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $avg = round(($n + $m) / 2);\n    return decbin($avg);\n\
    }\n\n/*\n * Test code\n */\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpft34p878.php:36\nStack trace:\n#0 /tmp/tmpft34p878.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmpft34p878.php on line 36\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp00das68d.php:35\nStack trace:\n#0 /tmp/tmp00das68d.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp00das68d.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5);\necho rounded_avg(7, 5);\necho rounded_avg(10, 20);\necho rounded_avg(20,\
    \ 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkw92vgn9.php:35\n\
    Stack trace:\n#0 /tmp/tmpkw92vgn9.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpkw92vgn9.php\
    \ on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn \"0b\" . decbin($avg);\n}\n\
    echo rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10,\
    \ 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpj5j82m17.php:37\nStack trace:\n#0 /tmp/tmpj5j82m17.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpj5j82m17.php on line 37\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5);\necho rounded_avg(7, 5);\necho rounded_avg(10, 20);\necho rounded_avg(20,\
    \ 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkw92vgn9.php:35\n\
    Stack trace:\n#0 /tmp/tmpkw92vgn9.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpkw92vgn9.php\
    \ on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\n\n/*\n * Test code\n */\necho rounded_avg(1, 5) . \"\\n\"\
    ;\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho\
    \ rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmplxttst_q.php:39\nStack trace:\n#0 /tmp/tmplxttst_q.php(53): test()\n\
    #1 {main}\n  thrown in /tmp/tmplxttst_q.php on line 39\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp00das68d.php:35\nStack trace:\n#0 /tmp/tmp00das68d.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp00das68d.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) .\
    \ PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpji12iegr.php:35\nStack trace:\n#0 /tmp/tmpji12iegr.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpji12iegr.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) return -1;\n\
    \t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t}\n\t$avg =\
    \ round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp1husa37k.php:33\nStack trace:\n#0 /tmp/tmp1husa37k.php(47): test()\n\
    #1 {main}\n  thrown in /tmp/tmp1husa37k.php on line 33\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5);\necho rounded_avg(7, 5);\necho rounded_avg(10, 20);\necho rounded_avg(20,\
    \ 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkw92vgn9.php:35\n\
    Stack trace:\n#0 /tmp/tmpkw92vgn9.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpkw92vgn9.php\
    \ on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8g4d0i0a.php:31\n\
    Stack trace:\n#0 /tmp/tmp8g4d0i0a.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp8g4d0i0a.php\
    \ on line 31\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return decbin($avg);\n}\n\necho\
    \ rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10,\
    \ 20) . PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpdqzd_7gk.php:36\nStack trace:\n#0 /tmp/tmpdqzd_7gk.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmpdqzd_7gk.php on line 36\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8g4d0i0a.php:31\n\
    Stack trace:\n#0 /tmp/tmp8g4d0i0a.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp8g4d0i0a.php\
    \ on line 31\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp00das68d.php:35\nStack trace:\n#0 /tmp/tmp00das68d.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp00das68d.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) return -1;\n\
    \t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t}\n\t$avg =\
    \ round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp1husa37k.php:33\nStack trace:\n#0 /tmp/tmp1husa37k.php(47): test()\n\
    #1 {main}\n  thrown in /tmp/tmp1husa37k.php on line 33\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpvqevq66l.php:37\nStack trace:\n#0 /tmp/tmpvqevq66l.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpvqevq66l.php on line 37\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\n\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp2yh3qzg2.php:36\nStack trace:\n#0 /tmp/tmp2yh3qzg2.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmp2yh3qzg2.php on line 36\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) .\
    \ PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpji12iegr.php:35\nStack trace:\n#0 /tmp/tmpji12iegr.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpji12iegr.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $avg = round(($n + $m) / 2);\n    return decbin($avg);\n\
    }\n\n/*\n * Test code\n */\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp164tq4rx.php:35\nStack trace:\n#0 /tmp/tmp164tq4rx.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp164tq4rx.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5)\
    \ . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) .\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpwba_b87c.php:35\nStack trace:\n#0 /tmp/tmpwba_b87c.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpwba_b87c.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp00das68d.php:35\nStack trace:\n#0 /tmp/tmp00das68d.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp00das68d.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n  $sum = 0;\n  if ($n >\
    \ $m) {\n    return -1;\n  }\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) .\
    \ PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpb58gne1e.php:35\nStack trace:\n#0 /tmp/tmpb58gne1e.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpb58gne1e.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5);\necho rounded_avg(7, 5);\necho rounded_avg(10, 20);\necho rounded_avg(20,\
    \ 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkw92vgn9.php:35\n\
    Stack trace:\n#0 /tmp/tmpkw92vgn9.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpkw92vgn9.php\
    \ on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\n\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp2yh3qzg2.php:36\nStack trace:\n#0 /tmp/tmp2yh3qzg2.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmp2yh3qzg2.php on line 36\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp00das68d.php:35\nStack trace:\n#0 /tmp/tmp00das68d.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp00das68d.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    if ($n\
    \ > $m) {\n        return -1;\n    } else {\n        for ($i = $n; $i <= $m; $i++)\
    \ {\n            $sum += $i;\n        }\n        $avg = round($sum / ($m - $n\
    \ + 1));\n        return decbin($avg);\n    }\n}\necho rounded_avg(1, 5) . \"\\\
    n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\n\
    echo rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpsyldedwo.php:36\nStack trace:\n#0 /tmp/tmpsyldedwo.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmpsyldedwo.php on line 36\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp00das68d.php:35\nStack trace:\n#0 /tmp/tmp00das68d.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp00das68d.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp00das68d.php:35\nStack trace:\n#0 /tmp/tmp00das68d.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp00das68d.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = $sum / ($m - $n + 1);\n\t$avg = round($avg);\n\treturn decbin($avg);\n\
    }\necho rounded_avg(1, 5);\necho rounded_avg(7, 5);\necho rounded_avg(10, 20);\n\
    echo rounded_avg(20, 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpb0qm8r_x.php:36\n\
    Stack trace:\n#0 /tmp/tmpb0qm8r_x.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpb0qm8r_x.php\
    \ on line 36\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\n\necho rounded_avg(1,\
    \ 5);\necho rounded_avg(7, 5);\necho rounded_avg(10, 20);\necho rounded_avg(20,\
    \ 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbzam9_30.php:36\n\
    Stack trace:\n#0 /tmp/tmpbzam9_30.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpbzam9_30.php\
    \ on line 36\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5);\necho \"\\n\";\necho rounded_avg(7, 5);\necho \"\\n\";\necho rounded_avg(10,\
    \ 20);\necho \"\\n\";\necho rounded_avg(20, 33);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpykcuq8md.php:39\nStack trace:\n#0 /tmp/tmpykcuq8md.php(53): test()\n\
    #1 {main}\n  thrown in /tmp/tmpykcuq8md.php on line 39\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\n\n/*\n * Test code\n */\necho rounded_avg(1, 5) . \"\\n\"\
    ;\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho\
    \ rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmplxttst_q.php:39\nStack trace:\n#0 /tmp/tmplxttst_q.php(53): test()\n\
    #1 {main}\n  thrown in /tmp/tmplxttst_q.php on line 39\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\n\n/*\n * Test code\n */\necho rounded_avg(1, 5) . PHP_EOL;\n\
    echo rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20,\
    \ 33) . PHP_EOL;\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpq86inyf3.php:39\nStack trace:\n#0 /tmp/tmpq86inyf3.php(53): test()\n\
    #1 {main}\n  thrown in /tmp/tmpq86inyf3.php on line 39\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\t$avg = round(($n + $m)\
    \ / 2);\n\tif ($n > $m) {\n\t\treturn -1;\n\t}\n\treturn decbin($avg);\n}\necho\
    \ rounded_avg(1, 5);\necho rounded_avg(7, 5);\necho rounded_avg(10, 20);\necho\
    \ rounded_avg(20, 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprn0e001a.php:31\n\
    Stack trace:\n#0 /tmp/tmprn0e001a.php(45): test()\n#1 {main}\n  thrown in /tmp/tmprn0e001a.php\
    \ on line 31\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8g4d0i0a.php:31\n\
    Stack trace:\n#0 /tmp/tmp8g4d0i0a.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp8g4d0i0a.php\
    \ on line 31\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5);\necho rounded_avg(7, 5);\necho rounded_avg(10, 20);\necho rounded_avg(20,\
    \ 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkw92vgn9.php:35\n\
    Stack trace:\n#0 /tmp/tmpkw92vgn9.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpkw92vgn9.php\
    \ on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) .\
    \ PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpji12iegr.php:35\nStack trace:\n#0 /tmp/tmpji12iegr.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpji12iegr.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp00das68d.php:35\nStack trace:\n#0 /tmp/tmp00das68d.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp00das68d.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp00das68d.php:35\nStack trace:\n#0 /tmp/tmp00das68d.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp00das68d.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5)\
    \ . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) .\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp3a3tiqis.php:36\nStack trace:\n#0 /tmp/tmp3a3tiqis.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmp3a3tiqis.php on line 36\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp00das68d.php:35\nStack trace:\n#0 /tmp/tmp00das68d.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp00das68d.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp00das68d.php:35\nStack trace:\n#0 /tmp/tmp00das68d.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp00das68d.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $avg = round(($n + $m) / 2);\n  return decbin($avg);\n}\n\necho\
    \ rounded_avg(1, 5);\necho \"\\n\";\necho rounded_avg(7, 5);\necho \"\\n\";\n\
    echo rounded_avg(10, 20);\necho \"\\n\";\necho rounded_avg(20, 33);\necho \"\\\
    n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp5jmzpk2l.php:36\nStack trace:\n#0 /tmp/tmp5jmzpk2l.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmp5jmzpk2l.php on line 36\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) .\
    \ PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpji12iegr.php:35\nStack trace:\n#0 /tmp/tmpji12iegr.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpji12iegr.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5).\"\\n\";\necho rounded_avg(7, 5).\"\\n\";\necho rounded_avg(10, 20).\"\\\
    n\";\necho rounded_avg(20, 33).\"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpfyx6q7ad.php:35\nStack trace:\n#0 /tmp/tmpfyx6q7ad.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpfyx6q7ad.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return decbin($avg);\n}\n\necho\
    \ rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10,\
    \ 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpbm_nb1nb.php:36\nStack trace:\n#0 /tmp/tmpbm_nb1nb.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmpbm_nb1nb.php on line 36\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\n\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp2yh3qzg2.php:36\nStack trace:\n#0 /tmp/tmp2yh3qzg2.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmp2yh3qzg2.php on line 36\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$avg = round(($n + $m) / 2);\n\treturn decbin($avg);\n}\n\necho\
    \ rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10,\
    \ 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp17wa4uxp.php:32\nStack trace:\n#0 /tmp/tmp17wa4uxp.php(46): test()\n\
    #1 {main}\n  thrown in /tmp/tmp17wa4uxp.php on line 32\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8g4d0i0a.php:31\n\
    Stack trace:\n#0 /tmp/tmp8g4d0i0a.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp8g4d0i0a.php\
    \ on line 31\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5);\necho \"\\n\";\necho rounded_avg(7, 5);\necho \"\\n\";\necho rounded_avg(10,\
    \ 20);\necho \"\\n\";\necho rounded_avg(20, 33);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpykcuq8md.php:39\nStack trace:\n#0 /tmp/tmpykcuq8md.php(53): test()\n\
    #1 {main}\n  thrown in /tmp/tmpykcuq8md.php on line 39\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp00das68d.php:35\nStack trace:\n#0 /tmp/tmp00das68d.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp00das68d.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpvqevq66l.php:37\nStack trace:\n#0 /tmp/tmpvqevq66l.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpvqevq66l.php on line 37\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5);\necho rounded_avg(7, 5);\necho rounded_avg(10, 20);\necho rounded_avg(20,\
    \ 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkw92vgn9.php:35\n\
    Stack trace:\n#0 /tmp/tmpkw92vgn9.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpkw92vgn9.php\
    \ on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8g4d0i0a.php:31\n\
    Stack trace:\n#0 /tmp/tmp8g4d0i0a.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp8g4d0i0a.php\
    \ on line 31\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn \"0b\" . decbin($avg);\n}\n\
    echo rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10,\
    \ 20) . PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmp_168c_ai.php:37\nStack trace:\n#0 /tmp/tmp_168c_ai.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp_168c_ai.php on line 37\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5);\necho rounded_avg(7, 5);\necho rounded_avg(10, 20);\necho rounded_avg(20,\
    \ 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkw92vgn9.php:35\n\
    Stack trace:\n#0 /tmp/tmpkw92vgn9.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpkw92vgn9.php\
    \ on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp00das68d.php:35\nStack trace:\n#0 /tmp/tmp00das68d.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp00das68d.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5);\necho rounded_avg(7, 5);\necho rounded_avg(10, 20);\necho rounded_avg(20,\
    \ 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkw92vgn9.php:35\n\
    Stack trace:\n#0 /tmp/tmpkw92vgn9.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpkw92vgn9.php\
    \ on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\n\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp2yh3qzg2.php:36\nStack trace:\n#0 /tmp/tmp2yh3qzg2.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmp2yh3qzg2.php on line 36\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\necho rounded_avg(1, 5);\necho rounded_avg(7, 5);\necho rounded_avg(10,\
    \ 20);\necho rounded_avg(20, 33);\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0gj5xill.php:35\n\
    Stack trace:\n#0 /tmp/tmp0gj5xill.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp0gj5xill.php\
    \ on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp00das68d.php:35\nStack trace:\n#0 /tmp/tmp00das68d.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp00das68d.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp00das68d.php:35\nStack trace:\n#0 /tmp/tmp00das68d.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp00das68d.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) return\
    \ -1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \    }\n    $avg = round($sum / ($m - $n + 1));\n    return \"0b\" . decbin($avg);\n\
    }\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzy9w5s48.php:31\n\
    Stack trace:\n#0 /tmp/tmpzy9w5s48.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpzy9w5s48.php\
    \ on line 31\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmppshjxi_j.php:38\nStack trace:\n#0 /tmp/tmppshjxi_j.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmppshjxi_j.php on line 38\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\n\necho rounded_avg(1, 5);\necho rounded_avg(7, 5);\necho rounded_avg(10,\
    \ 20);\necho rounded_avg(20, 33);\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv440b374.php:36\n\
    Stack trace:\n#0 /tmp/tmpv440b374.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpv440b374.php\
    \ on line 36\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp00das68d.php:35\nStack trace:\n#0 /tmp/tmp00das68d.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp00das68d.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp00das68d.php:35\nStack trace:\n#0 /tmp/tmp00das68d.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp00das68d.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8g4d0i0a.php:31\n\
    Stack trace:\n#0 /tmp/tmp8g4d0i0a.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp8g4d0i0a.php\
    \ on line 31\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn \"0b\" . decbin($avg);\n}\n\
    echo rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10,\
    \ 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpj5j82m17.php:37\nStack trace:\n#0 /tmp/tmpj5j82m17.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpj5j82m17.php on line 37\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) .\
    \ PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpji12iegr.php:35\nStack trace:\n#0 /tmp/tmpji12iegr.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpji12iegr.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n\
    \    return decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp2yt2vqlx.php:36\nStack trace:\n#0 /tmp/tmp2yt2vqlx.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmp2yt2vqlx.php on line 36\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpvqevq66l.php:37\nStack trace:\n#0 /tmp/tmpvqevq66l.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpvqevq66l.php on line 37\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $avg = round(($n + $m) / 2);\n    return decbin($avg);\n\
    }\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi3pret99.php:27\n\
    Stack trace:\n#0 /tmp/tmpi3pret99.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpi3pret99.php\
    \ on line 27\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$sum = round($sum / ($m - $n + 1));\n\treturn decbin($sum);\n}\necho rounded_avg(1,\
    \ 5);\necho rounded_avg(7, 5);\necho rounded_avg(10, 20);\necho rounded_avg(20,\
    \ 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkxqeztg4.php:35\n\
    Stack trace:\n#0 /tmp/tmpkxqeztg4.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpkxqeztg4.php\
    \ on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp00das68d.php:35\nStack trace:\n#0 /tmp/tmp00das68d.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp00das68d.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5);\necho rounded_avg(7, 5);\necho rounded_avg(10, 20);\necho rounded_avg(20,\
    \ 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkw92vgn9.php:35\n\
    Stack trace:\n#0 /tmp/tmpkw92vgn9.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpkw92vgn9.php\
    \ on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8g4d0i0a.php:31\n\
    Stack trace:\n#0 /tmp/tmp8g4d0i0a.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp8g4d0i0a.php\
    \ on line 31\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp00das68d.php:35\nStack trace:\n#0 /tmp/tmp00das68d.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp00das68d.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = $sum / ($m - $n + 1);\n\t$avg = round($avg);\n\treturn decbin($avg);\n\
    }\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpxyf5hgsb.php:36\nStack trace:\n#0 /tmp/tmpxyf5hgsb.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmpxyf5hgsb.php on line 36\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5);\necho rounded_avg(7, 5);\necho rounded_avg(10, 20);\necho rounded_avg(20,\
    \ 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkw92vgn9.php:35\n\
    Stack trace:\n#0 /tmp/tmpkw92vgn9.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpkw92vgn9.php\
    \ on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp00das68d.php:35\nStack trace:\n#0 /tmp/tmp00das68d.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp00das68d.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp00das68d.php:35\nStack trace:\n#0 /tmp/tmp00das68d.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp00das68d.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5);\necho rounded_avg(7, 5);\necho rounded_avg(10, 20);\necho rounded_avg(20,\
    \ 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkw92vgn9.php:35\n\
    Stack trace:\n#0 /tmp/tmpkw92vgn9.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpkw92vgn9.php\
    \ on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp00das68d.php:35\nStack trace:\n#0 /tmp/tmp00das68d.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp00das68d.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdojbcyi6.php:31\n\
    Stack trace:\n#0 /tmp/tmpdojbcyi6.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpdojbcyi6.php\
    \ on line 31\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5);\necho rounded_avg(7, 5);\necho rounded_avg(10, 20);\necho rounded_avg(20,\
    \ 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkw92vgn9.php:35\n\
    Stack trace:\n#0 /tmp/tmpkw92vgn9.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpkw92vgn9.php\
    \ on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn \"0b\" . decbin($avg);\n}\n\
    echo rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10,\
    \ 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpj5j82m17.php:37\nStack trace:\n#0 /tmp/tmpj5j82m17.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpj5j82m17.php on line 37\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8g4d0i0a.php:31\n\
    Stack trace:\n#0 /tmp/tmp8g4d0i0a.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp8g4d0i0a.php\
    \ on line 31\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return decbin($avg);\n}\n\necho\
    \ rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10,\
    \ 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpbm_nb1nb.php:36\nStack trace:\n#0 /tmp/tmpbm_nb1nb.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmpbm_nb1nb.php on line 36\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\n\n/*\n * Test code\n */\necho rounded_avg(1, 5) . \"\\n\"\
    ;\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho\
    \ rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmplxttst_q.php:39\nStack trace:\n#0 /tmp/tmplxttst_q.php(53): test()\n\
    #1 {main}\n  thrown in /tmp/tmplxttst_q.php on line 39\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\n\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp2yh3qzg2.php:36\nStack trace:\n#0 /tmp/tmp2yh3qzg2.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmp2yh3qzg2.php on line 36\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5);\necho rounded_avg(7, 5);\necho rounded_avg(10, 20);\necho rounded_avg(20,\
    \ 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkw92vgn9.php:35\n\
    Stack trace:\n#0 /tmp/tmpkw92vgn9.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpkw92vgn9.php\
    \ on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return decbin($avg);\n}\n\necho\
    \ rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10,\
    \ 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpbm_nb1nb.php:36\nStack trace:\n#0 /tmp/tmpbm_nb1nb.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmpbm_nb1nb.php on line 36\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp00das68d.php:35\nStack trace:\n#0 /tmp/tmp00das68d.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp00das68d.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5);\necho rounded_avg(7, 5);\necho rounded_avg(10, 20);\necho rounded_avg(20,\
    \ 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkw92vgn9.php:35\n\
    Stack trace:\n#0 /tmp/tmpkw92vgn9.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpkw92vgn9.php\
    \ on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8g4d0i0a.php:31\n\
    Stack trace:\n#0 /tmp/tmp8g4d0i0a.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp8g4d0i0a.php\
    \ on line 31\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5);\necho rounded_avg(7, 5);\necho rounded_avg(10, 20);\necho rounded_avg(20,\
    \ 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkw92vgn9.php:35\n\
    Stack trace:\n#0 /tmp/tmpkw92vgn9.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpkw92vgn9.php\
    \ on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5);\necho rounded_avg(7, 5);\necho rounded_avg(10, 20);\necho rounded_avg(20,\
    \ 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkw92vgn9.php:35\n\
    Stack trace:\n#0 /tmp/tmpkw92vgn9.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpkw92vgn9.php\
    \ on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\n\n/*\n * Test code\n */\necho rounded_avg(1, 5) . \"\\n\"\
    ;\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho\
    \ rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmplxttst_q.php:39\nStack trace:\n#0 /tmp/tmplxttst_q.php(53): test()\n\
    #1 {main}\n  thrown in /tmp/tmplxttst_q.php on line 39\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\necho rounded_avg(1, 5);\necho rounded_avg(7, 5);\necho rounded_avg(10,\
    \ 20);\necho rounded_avg(20, 33);\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0gj5xill.php:35\n\
    Stack trace:\n#0 /tmp/tmp0gj5xill.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp0gj5xill.php\
    \ on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5);\necho rounded_avg(7, 5);\necho rounded_avg(10, 20);\necho rounded_avg(20,\
    \ 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkw92vgn9.php:35\n\
    Stack trace:\n#0 /tmp/tmpkw92vgn9.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpkw92vgn9.php\
    \ on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5);\necho rounded_avg(7, 5);\necho rounded_avg(10, 20);\necho rounded_avg(20,\
    \ 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkw92vgn9.php:35\n\
    Stack trace:\n#0 /tmp/tmpkw92vgn9.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpkw92vgn9.php\
    \ on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return decbin($avg);\n}\n\necho\
    \ rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10,\
    \ 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpbm_nb1nb.php:36\nStack trace:\n#0 /tmp/tmpbm_nb1nb.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmpbm_nb1nb.php on line 36\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp00das68d.php:35\nStack trace:\n#0 /tmp/tmp00das68d.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp00das68d.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8g4d0i0a.php:31\n\
    Stack trace:\n#0 /tmp/tmp8g4d0i0a.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp8g4d0i0a.php\
    \ on line 31\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5);\necho rounded_avg(7, 5);\necho rounded_avg(10, 20);\necho rounded_avg(20,\
    \ 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkw92vgn9.php:35\n\
    Stack trace:\n#0 /tmp/tmpkw92vgn9.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpkw92vgn9.php\
    \ on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) .\
    \ PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpji12iegr.php:35\nStack trace:\n#0 /tmp/tmpji12iegr.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpji12iegr.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\n\necho rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7, 5)\
    \ . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20, 33) .\
    \ PHP_EOL;\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpgrjl6956.php:36\nStack trace:\n#0 /tmp/tmpgrjl6956.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmpgrjl6956.php on line 36\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5);\necho rounded_avg(7, 5);\necho rounded_avg(10, 20);\necho rounded_avg(20,\
    \ 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkw92vgn9.php:35\n\
    Stack trace:\n#0 /tmp/tmpkw92vgn9.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpkw92vgn9.php\
    \ on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\n\n/*\n * Test code\n */\n\necho rounded_avg(1, 5) . \"\\n\"\
    ;\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho\
    \ rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp20trzq23.php:40\nStack trace:\n#0 /tmp/tmp20trzq23.php(54): test()\n\
    #1 {main}\n  thrown in /tmp/tmp20trzq23.php on line 40\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\n\necho rounded_avg(1,\
    \ 5);\necho rounded_avg(7, 5);\necho rounded_avg(10, 20);\necho rounded_avg(20,\
    \ 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbzam9_30.php:36\n\
    Stack trace:\n#0 /tmp/tmpbzam9_30.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpbzam9_30.php\
    \ on line 36\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp00das68d.php:35\nStack trace:\n#0 /tmp/tmp00das68d.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp00das68d.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5);\necho rounded_avg(7, 5);\necho rounded_avg(10, 20);\necho rounded_avg(20,\
    \ 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkw92vgn9.php:35\n\
    Stack trace:\n#0 /tmp/tmpkw92vgn9.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpkw92vgn9.php\
    \ on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5);\necho rounded_avg(7, 5);\necho rounded_avg(10, 20);\necho rounded_avg(20,\
    \ 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkw92vgn9.php:35\n\
    Stack trace:\n#0 /tmp/tmpkw92vgn9.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpkw92vgn9.php\
    \ on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5);\necho rounded_avg(7, 5);\necho rounded_avg(10, 20);\necho rounded_avg(20,\
    \ 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkw92vgn9.php:35\n\
    Stack trace:\n#0 /tmp/tmpkw92vgn9.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpkw92vgn9.php\
    \ on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp00das68d.php:35\nStack trace:\n#0 /tmp/tmp00das68d.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp00das68d.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5);\necho \"\\n\";\necho rounded_avg(7, 5);\necho \"\\n\";\necho rounded_avg(10,\
    \ 20);\necho \"\\n\";\necho rounded_avg(20, 33);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpykcuq8md.php:39\nStack trace:\n#0 /tmp/tmpykcuq8md.php(53): test()\n\
    #1 {main}\n  thrown in /tmp/tmpykcuq8md.php on line 39\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp00das68d.php:35\nStack trace:\n#0 /tmp/tmp00das68d.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp00das68d.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5).\"\\n\";\necho rounded_avg(7, 5).\"\\n\";\necho rounded_avg(10, 20).\"\\\
    n\";\necho rounded_avg(20, 33).\"\\n\";\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpfyx6q7ad.php:35\nStack trace:\n#0 /tmp/tmpfyx6q7ad.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpfyx6q7ad.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5);\necho rounded_avg(7, 5);\necho rounded_avg(10, 20);\necho rounded_avg(20,\
    \ 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkw92vgn9.php:35\n\
    Stack trace:\n#0 /tmp/tmpkw92vgn9.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpkw92vgn9.php\
    \ on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmppshjxi_j.php:38\nStack trace:\n#0 /tmp/tmppshjxi_j.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmppshjxi_j.php on line 38\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\n\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp2yh3qzg2.php:36\nStack trace:\n#0 /tmp/tmp2yh3qzg2.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmp2yh3qzg2.php on line 36\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn \"0b\" . decbin($avg);\n}\n\
    echo rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10,\
    \ 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpj5j82m17.php:37\nStack trace:\n#0 /tmp/tmpj5j82m17.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpj5j82m17.php on line 37\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) return -1;\n\
    \t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t}\n\t$avg =\
    \ round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp1husa37k.php:33\nStack trace:\n#0 /tmp/tmp1husa37k.php(47): test()\n\
    #1 {main}\n  thrown in /tmp/tmp1husa37k.php on line 33\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp00das68d.php:35\nStack trace:\n#0 /tmp/tmp00das68d.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp00das68d.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) .\
    \ PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpji12iegr.php:35\nStack trace:\n#0 /tmp/tmpji12iegr.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpji12iegr.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $avg = round(($n + $m) / 2);\n    return decbin($avg);\n\
    }\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpi3pret99.php:27\n\
    Stack trace:\n#0 /tmp/tmpi3pret99.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpi3pret99.php\
    \ on line 27\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp00das68d.php:35\nStack trace:\n#0 /tmp/tmp00das68d.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp00das68d.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5);\necho rounded_avg(7, 5);\necho rounded_avg(10, 20);\necho rounded_avg(20,\
    \ 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkw92vgn9.php:35\n\
    Stack trace:\n#0 /tmp/tmpkw92vgn9.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpkw92vgn9.php\
    \ on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\n\necho rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7, 5)\
    \ . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20, 33) .\
    \ PHP_EOL;\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpgrjl6956.php:36\nStack trace:\n#0 /tmp/tmpgrjl6956.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmpgrjl6956.php on line 36\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5);\necho rounded_avg(7, 5);\necho rounded_avg(10, 20);\necho rounded_avg(20,\
    \ 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkw92vgn9.php:35\n\
    Stack trace:\n#0 /tmp/tmpkw92vgn9.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpkw92vgn9.php\
    \ on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5)\
    \ . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) .\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpwba_b87c.php:35\nStack trace:\n#0 /tmp/tmpwba_b87c.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpwba_b87c.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5);\necho rounded_avg(7, 5);\necho rounded_avg(10, 20);\necho rounded_avg(20,\
    \ 33);\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkw92vgn9.php:35\n\
    Stack trace:\n#0 /tmp/tmpkw92vgn9.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpkw92vgn9.php\
    \ on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "0b11\n-1\n0b1111\n0b11011\n\nFatal error: Uncaught Exception: Test failed!\
    \ in /tmp/tmpvqevq66l.php:37\nStack trace:\n#0 /tmp/tmpvqevq66l.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpvqevq66l.php on line 37\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8g4d0i0a.php:31\n\
    Stack trace:\n#0 /tmp/tmp8g4d0i0a.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp8g4d0i0a.php\
    \ on line 31\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\n\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp2yh3qzg2.php:36\nStack trace:\n#0 /tmp/tmp2yh3qzg2.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmp2yh3qzg2.php on line 36\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\n\necho rounded_avg(1, 5);\necho rounded_avg(7, 5);\necho rounded_avg(10,\
    \ 20);\necho rounded_avg(20, 33);\nfunction candidate(...$args) {\n    return\
    \ rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1, 5)\
    \ !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11-1111111011\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv440b374.php:36\n\
    Stack trace:\n#0 /tmp/tmpv440b374.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpv440b374.php\
    \ on line 36\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . PHP_EOL;\necho rounded_avg(7, 5) . PHP_EOL;\necho rounded_avg(10, 20) .\
    \ PHP_EOL;\necho rounded_avg(20, 33) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmpji12iegr.php:35\nStack trace:\n#0 /tmp/tmpji12iegr.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmpji12iegr.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp00das68d.php:35\nStack trace:\n#0 /tmp/tmp00das68d.php(49): test()\n\
    #1 {main}\n  thrown in /tmp/tmp00das68d.php on line 35\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8g4d0i0a.php:31\n\
    Stack trace:\n#0 /tmp/tmp8g4d0i0a.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp8g4d0i0a.php\
    \ on line 31\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) {\n\t\treturn\
    \ -1;\n\t}\n\t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t\
    }\n\t$avg = round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\n\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "11\n-1\n1111\n11011\n\nFatal error: Uncaught Exception: Test failed! in\
    \ /tmp/tmp2yh3qzg2.php:36\nStack trace:\n#0 /tmp/tmp2yh3qzg2.php(50): test()\n\
    #1 {main}\n  thrown in /tmp/tmp2yh3qzg2.php on line 36\n"
  timestamp: 1660220658
- exit_code: 255
  program: "<?php\n/* You are given two positive integers n and m, and your task is\
    \ to compute the\naverage of the integers from n through m (including n and m).\
    \ \nRound the answer to the nearest integer and convert that to binary.\nIf n\
    \ is greater than m, return -1.\nExample:\n>>> rounded_avg(1, 5)\n\"0b11\"\n>>>\
    \ rounded_avg(7, 5)\n-1\n>>> rounded_avg(10, 20)\n\"0b1111\"\n>>> rounded_avg(20,\
    \ 33)\n\"0b11010\"*/\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8g4d0i0a.php:31\n\
    Stack trace:\n#0 /tmp/tmp8g4d0i0a.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp8g4d0i0a.php\
    \ on line 31\n"
  timestamp: 1660220658

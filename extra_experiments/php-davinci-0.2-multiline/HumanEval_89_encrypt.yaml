name: HumanEval_89_encrypt
language: php
prompt: "<?php\n/* Create a function encrypt that takes a string as an argument and\n\
  returns a string encrypted with the alphabet being rotated. \nThe alphabet should\
  \ be rotated in a manner such that the letters \nshift down by two multiplied to\
  \ two places.\nFor example:\n>>> encrypt(\"hi\")\n\"lm\"\n>>> encrypt(\"asdfghjkl\"\
  )\n\"ewhjklnop\"\n>>> encrypt(\"gf\")\n\"kj\"\n>>> encrypt(\"et\")\n\"ix\"*/\nfunction\
  \ encrypt($s) {\n"
tests: "function candidate(...$args) {\n    return encrypt(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(\"hi\") !== \"lm\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"asdfghjkl\") !== \"ewhjklnop\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"gf\") !== \"kj\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"et\") !== \"ix\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"faewfawefaewg\") !== \"\
  jeiajeaijeiak\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
  hellomyfriend\") !== \"lippsqcjvmirh\") { throw new Exception(\"Test failed!\");\
  \ }\n    if (candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\") !== \"\
  hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\") { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(\"a\") !== \"e\") { throw new Exception(\"Test failed!\"\
  ); }\n}\n\ntest();"
completions: ["\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$new_alphabet = substr($alphabet,\
    \ 2) . substr($alphabet, 0, 2);\n\t$new_string = \"\";\n\tfor ($i = 0; $i < strlen($s);\
    \ $i++) {\n\t\t$index = strpos($alphabet, $s[$i]);\n\t\t$new_string .= $new_alphabet[$index];\n\
    \t}\n\treturn $new_string;\n}\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"\
    asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\"\
    ) . \"\\n\";", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$encrypted =\
    \ \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$index = strpos($alphabet,\
    \ $s[$i]);\n\t\t$encrypted .= $alphabet[($index + 2) % 26];\n\t}\n\treturn $encrypted;\n\
    }\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho\
    \ encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";", "\t$alphabet =\
    \ array(\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\"\
    ,\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\"\
    ,\"z\");\n\t$new_string = \"\";\n\tfor ($i=0; $i < strlen($s); $i++) { \n\t\t\
    $new_string .= $alphabet[array_search($s[$i], $alphabet)+2];\n\t}\n\treturn $new_string;\n\
    }\necho encrypt(\"hi\");\necho encrypt(\"asdfghjkl\");\necho encrypt(\"gf\");\n\
    echo encrypt(\"et\");", "    $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n   \
    \ $new_alphabet = \"\";\n    $new_string = \"\";\n    $new_index = 0;\n    for\
    \ ($i = 0; $i < strlen($alphabet); $i++) {\n        $new_index = ($i + 2) * 2;\n\
    \        if ($new_index >= strlen($alphabet)) {\n            $new_index = $new_index\
    \ - strlen($alphabet);\n        }\n        $new_alphabet = $new_alphabet . $alphabet[$new_index];\n\
    \    }\n    for ($i = 0; $i < strlen($s); $i++) {\n        $new_string = $new_string\
    \ . $new_alphabet[strpos($alphabet, $s[$i])];\n    }\n    return $new_string;\n\
    }\n\n/* Create a function decrypt that takes a string as an argument and\nreturns\
    \ a string decrypted with the alphabet being rotated. \nThe alphabet should be\
    \ rotated in a manner such that the letters \nshift up by two multiplied to two\
    \ places.\nFor example:\n>>> decrypt(\"lm\")\n\"hi\"\n>>> decrypt(\"ewhjklnop\"\
    )\n\"asdfghjkl\"\n>>> decrypt(\"kj\")\n\"gf\"\n>>> decrypt(\"ix\")\n\"et\"*/",
  "\t$alphabet = array(\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\"\
    ,\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\"\
    ,\"x\",\"y\",\"z\");\n\t$new_alphabet = array();\n\t$new_string = \"\";\n\t$count\
    \ = 0;\n\t$count2 = 0;\n\t$count3 = 0;\n\t$count4 = 0;\n\t$count5 = 0;\n\t$count6\
    \ = 0;\n\t$count7 = 0;\n\t$count8 = 0;\n\t$count9 = 0;\n\t$count10 = 0;\n\t$count11\
    \ = 0;\n\t$count12 = 0;\n\t$count13 = 0;\n\t$count14 = 0;\n\t$count15 = 0;\n\t\
    $count16 = 0;\n\t$count17 = 0;\n\t$count18 = 0;\n\t$count19 = 0;\n\t$count20 =\
    \ 0;\n\t$count21 = 0;\n\t$count22 = 0;\n\t$count23 = 0;\n\t$count24 = 0;\n\t$count25\
    \ = 0;\n\t$count26 = 0;\n\t$count27 = 0;\n\t$count28 = 0;\n\t$count29 = 0;\n\t\
    $count30 = 0;\n\t$count31 = 0;\n\t$count32 = 0;\n\t$count33 = 0;\n\t$count34 =\
    \ 0;\n\t$count35 = 0;\n\t$count36 = 0;\n\t$count37 = 0;\n\t$count38 = 0;\n\t$count39\
    \ = 0;\n\t$count40 = 0;\n\t$count41 = 0;\n\t$count42 = 0;\n\t$count43 = 0;\n\t\
    $count44 = 0;\n\t$count45 = 0;\n\t$count46 = 0;\n\t$count47 = 0;\n\t$count48 =\
    \ 0;\n\t$count49 = 0;\n\t$count50 = 0;\n\t$count51 = 0;\n\t$count52 = 0;\n\t$count53\
    \ = 0;\n\t$count54 = 0;\n\t", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\
    \t$new_alphabet = substr($alphabet, 2) . substr($alphabet, 0, 2);\n\t$encrypted\
    \ = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$index = strpos($alphabet,\
    \ $s[$i]);\n\t\t$encrypted .= $new_alphabet[$index];\n\t}\n\treturn $encrypted;\n\
    }\n\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\n\
    echo encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";", "\t$alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n\t$encrypted = \"\";\n\tfor ($i = 0; $i <\
    \ strlen($s); $i++) {\n\t\t$encrypted .= $alphabet[(strpos($alphabet, $s[$i])\
    \ + 2) % strlen($alphabet)];\n\t}\n\treturn $encrypted;\n}\n\n/* Create a function\
    \ decrypt that takes a string as an argument and\nreturns a string decrypted with\
    \ the alphabet being rotated. \nThe alphabet should be rotated in a manner such\
    \ that the letters \nshift up by two multiplied to two places.\nFor example:\n\
    >>> decrypt(\"lm\")\n\"hi\"\n>>> decrypt(\"ewhjklnop\")\n\"asdfghjkl\"\n>>> decrypt(\"\
    kj\")\n\"gf\"\n>>> decrypt(\"ix\")\n\"et\"*/", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\t$new_alphabet = substr($alphabet, 2) . substr($alphabet, 0, 2);\n\t$new_string\
    \ = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$index = strpos($alphabet,\
    \ $s[$i]);\n\t\t$new_string .= $new_alphabet[$index];\n\t}\n\treturn $new_string;\n\
    }\n\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\n\
    echo encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";", "    $alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    $encrypted = \"\";\n    for ($i = 0;\
    \ $i < strlen($s); $i++) {\n        $index = strpos($alphabet, $s[$i]);\n    \
    \    $encrypted .= $alphabet[($index + 2) % 26];\n    }\n    return $encrypted;\n\
    }\n\n/* Create a function decrypt that takes a string as an argument and\nreturns\
    \ a string decrypted with the alphabet being rotated. \nThe alphabet should be\
    \ rotated in a manner such that the letters \nshift up by two multiplied to two\
    \ places.\nFor example:\n>>> decrypt(\"lm\")\n\"hi\"\n>>> decrypt(\"ewhjklnop\"\
    )\n\"asdfghjkl\"\n>>> decrypt(\"kj\")\n\"gf\"\n>>> decrypt(\"ix\")\n\"et\"*/",
  "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$encrypted = \"\";\n\tfor ($i\
    \ = 0; $i < strlen($s); $i++) {\n\t\t$index = strpos($alphabet, $s[$i]);\n\t\t\
    $encrypted .= $alphabet[($index + 2) % 26];\n\t}\n\treturn $encrypted;\n}\n\n\
    /* Create a function decrypt that takes a string as an argument and\nreturns a\
    \ string decrypted with the alphabet being rotated. \nThe alphabet should be rotated\
    \ in a manner such that the letters \nshift up by two multiplied to two places.\n\
    For example:\n>>> decrypt(\"lm\")\n\"hi\"\n>>> decrypt(\"ewhjklnop\")\n\"asdfghjkl\"\
    \n>>> decrypt(\"kj\")\n\"gf\"\n>>> decrypt(\"ix\")\n\"et\"*/", "\t$alphabet =\
    \ \"abcdefghijklmnopqrstuvwxyz\";\n\t$encrypted = \"\";\n\tfor ($i = 0; $i < strlen($s);\
    \ $i++) {\n\t\t$index = strpos($alphabet, $s[$i]);\n\t\t$encrypted .= $alphabet[($index\
    \ + 2) % 26];\n\t}\n\treturn $encrypted;\n}\n\n/* Create a function decrypt that\
    \ takes a string as an argument and\nreturns a string decrypted with the alphabet\
    \ being rotated. \nThe alphabet should be rotated in a manner such that the letters\
    \ \nshift up by two multiplied to two places.\nFor example:\n>>> decrypt(\"lm\"\
    )\n\"hi\"\n>>> decrypt(\"ewhjklnop\")\n\"asdfghjkl\"\n>>> decrypt(\"kj\")\n\"\
    gf\"\n>>> decrypt(\"ix\")\n\"et\"*/", "\t$alphabet = array(\"a\",\"b\",\"c\",\"\
    d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"\
    q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\");\n\t$new_string = \"\
    \";\n\tfor ($i=0; $i < strlen($s); $i++) { \n\t\t$letter = $s[$i];\n\t\t$index\
    \ = array_search($letter, $alphabet);\n\t\t$new_index = $index + 2*2;\n\t\tif\
    \ ($new_index > 25) {\n\t\t\t$new_index = $new_index - 26;\n\t\t}\n\t\t$new_string\
    \ .= $alphabet[$new_index];\n\t}\n\treturn $new_string;\n}\necho encrypt(\"hi\"\
    ) . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\
    \\n\";\necho encrypt(\"et\") . \"\\n\";", "    $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    $new_alphabet = substr($alphabet, 2) . substr($alphabet, 0, 2);\n    $new_string\
    \ = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n        $new_string .= $new_alphabet[strpos($alphabet,\
    \ $s[$i])];\n    }\n    return $new_string;\n}\n\n/* Create a function decrypt\
    \ that takes a string as an argument and\nreturns a string decrypted with the\
    \ alphabet being rotated. \nThe alphabet should be rotated in a manner such that\
    \ the letters \nshift up by two multiplied to two places.\nFor example:\n>>> decrypt(\"\
    lm\")\n\"hi\"\n>>> decrypt(\"ewhjklnop\")\n\"asdfghjkl\"\n>>> decrypt(\"kj\")\n\
    \"gf\"\n>>> decrypt(\"ix\")\n\"et\"*/", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\t$new_alphabet = \"cdefghijklmnopqrstuvwxyzab\";\n\t$new_string = \"\";\n\t\
    for ($i = 0; $i < strlen($s); $i++) {\n\t\t$new_string .= $new_alphabet[strpos($alphabet,\
    \ $s[$i])];\n\t}\n\treturn $new_string;\n}\necho encrypt(\"hi\") . \"\\n\";\n\
    echo encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho\
    \ encrypt(\"et\") . \"\\n\";", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\
    \t$encrypted = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$index = strpos($alphabet,\
    \ $s[$i]);\n\t\t$encrypted .= $alphabet[($index + 2) % 26];\n\t}\n\treturn $encrypted;\n\
    }\n\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\n\
    echo encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";", "    $alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    $encrypted = \"\";\n    for ($i = 0;\
    \ $i < strlen($s); $i++) {\n        $index = strpos($alphabet, $s[$i]);\n    \
    \    $encrypted .= $alphabet[($index + 2) % 26];\n    }\n    return $encrypted;\n\
    }\n\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\n\
    echo encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";", "\t$alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n\t$encrypt = \"\";\n\tfor ($i = 0; $i < strlen($s);\
    \ $i++) {\n\t\t$index = strpos($alphabet, $s[$i]);\n\t\t$encrypt .= $alphabet[($index\
    \ + 2) % 26];\n\t}\n\treturn $encrypt;\n}\necho encrypt(\"hi\") . \"\\n\";\necho\
    \ encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho encrypt(\"\
    et\") . \"\\n\";", "\t$alphabet = 'abcdefghijklmnopqrstuvwxyz';\n\t$new_alphabet\
    \ = substr($alphabet, 2) . substr($alphabet, 0, 2);\n\t$new_string = '';\n\tfor\
    \ ($i = 0; $i < strlen($s); $i++) {\n\t\t$new_string .= $new_alphabet[strpos($alphabet,\
    \ $s[$i])];\n\t}\n\treturn $new_string;\n}\necho encrypt(\"hi\") . \"\\n\";\n\
    echo encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho\
    \ encrypt(\"et\") . \"\\n\";", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\
    \t$new_alphabet = substr($alphabet, 2) . substr($alphabet, 0, 2);\n\t$encrypted\
    \ = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$encrypted .= $new_alphabet[strpos($alphabet,\
    \ $s[$i])];\n\t}\n\treturn $encrypted;\n}\necho encrypt(\"hi\") . \"\\n\";\necho\
    \ encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho encrypt(\"\
    et\") . \"\\n\";", "    $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    $encrypted\
    \ = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n        $index = strpos($alphabet,\
    \ $s[$i]);\n        $encrypted .= $alphabet[($index + 2) % 26];\n    }\n    return\
    \ $encrypted;\n}\n\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\"\
    ) . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";",
  "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$new_alphabet = \"\";\n\t$new_string\
    \ = \"\";\n\t$new_alphabet = substr($alphabet, 2) . substr($alphabet, 0, 2);\n\
    \tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$new_string .= $new_alphabet[strpos($alphabet,\
    \ $s[$i])];\n\t}\n\treturn $new_string;\n}\necho encrypt(\"hi\") . \"\\n\";\n\
    echo encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho\
    \ encrypt(\"et\") . \"\\n\";", "\t$s = strtolower($s);\n\t$s = str_split($s);\n\
    \t$s = array_map(function($x) {\n\t\tif ($x == 'z') {\n\t\t\treturn 'b';\n\t\t\
    } elseif ($x == 'y') {\n\t\t\treturn 'a';\n\t\t} else {\n\t\t\treturn chr(ord($x)\
    \ + 2);\n\t\t}\n\t}, $s);\n\treturn implode($s);\n}\n\n/* Create a function decrypt\
    \ that takes a string as an argument and\nreturns a string decrypted with the\
    \ alphabet being rotated. \nThe alphabet should be rotated in a manner such that\
    \ the letters \nshift up by two multiplied to two places.\nFor example:\n>>> decrypt(\"\
    lm\")\n\"hi\"\n>>> decrypt(\"ewhjklnop\")\n\"asdfghjkl\"\n>>> decrypt(\"kj\")\n\
    \"gf\"\n>>> decrypt(\"ix\")\n\"et\"*/", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\t$new_alphabet = \"cdefghijklmnopqrstuvwxyzab\";\n\t$encrypted = \"\";\n\t\
    for ($i = 0; $i < strlen($s); $i++) {\n\t\t$encrypted .= $new_alphabet[strpos($alphabet,\
    \ $s[$i])];\n\t}\n\treturn $encrypted;\n}\necho encrypt(\"hi\") . \"\\n\";\necho\
    \ encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho encrypt(\"\
    et\") . \"\\n\";", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$new_alphabet\
    \ = substr($alphabet, 2) . substr($alphabet, 0, 2);\n\t$result = \"\";\n\tfor\
    \ ($i = 0; $i < strlen($s); $i++) {\n\t\t$result .= $new_alphabet[strpos($alphabet,\
    \ $s[$i])];\n\t}\n\treturn $result;\n}\necho encrypt(\"hi\") . \"\\n\";\necho\
    \ encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho encrypt(\"\
    et\") . \"\\n\";", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$encrypted\
    \ = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$index = strpos($alphabet,\
    \ $s[$i]);\n\t\t$encrypted .= $alphabet[($index + 2) % 26];\n\t}\n\treturn $encrypted;\n\
    }\n\n/* Create a function decrypt that takes a string as an argument and\nreturns\
    \ a string decrypted with the alphabet being rotated. \nThe alphabet should be\
    \ rotated in a manner such that the letters \nshift up by two multiplied to two\
    \ places.\nFor example:\n>>> decrypt(\"lm\")\n\"hi\"\n>>> decrypt(\"ewhjklnop\"\
    )\n\"asdfghjkl\"\n>>> decrypt(\"kj\")\n\"gf\"\n>>> decrypt(\"ix\")\n\"et\"*/",
  "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$new_alphabet = substr($alphabet,\
    \ 2) . substr($alphabet, 0, 2);\n\t$new_string = \"\";\n\tfor ($i = 0; $i < strlen($s);\
    \ $i++) {\n\t\t$new_string .= $new_alphabet[strpos($alphabet, $s[$i])];\n\t}\n\
    \treturn $new_string;\n}\n\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\"\
    ) . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\"\
    ;\n", "\t$alphabet = array(\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"\
    i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"\
    v\",\"w\",\"x\",\"y\",\"z\");\n\t$new_alphabet = array();\n\t$new_string = \"\"\
    ;\n\t$i = 0;\n\t$j = 0;\n\twhile ($i < count($alphabet)) {\n\t\tif ($i < 24) {\n\
    \t\t\t$new_alphabet[$i] = $alphabet[$i + 2];\n\t\t} else {\n\t\t\t$new_alphabet[$i]\
    \ = $alphabet[$j];\n\t\t\t$j++;\n\t\t}\n\t\t$i++;\n\t}\n\t$i = 0;\n\twhile ($i\
    \ < strlen($s)) {\n\t\t$new_string .= $new_alphabet[array_search($s[$i], $alphabet)];\n\
    \t\t$i++;\n\t}\n\treturn $new_string;\n}\n\necho encrypt(\"hi\") . \"\\n\";\n\
    echo encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho\
    \ encrypt(\"et\") . \"\\n\";", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\
    \t$new_alphabet = \"cdefghijklmnopqrstuvwxyzab\";\n\t$new_string = \"\";\n\tfor\
    \ ($i = 0; $i < strlen($s); $i++) {\n\t\t$new_string .= $new_alphabet[strpos($alphabet,\
    \ $s[$i])];\n\t}\n\treturn $new_string;\n}\n\n/* Create a function decrypt that\
    \ takes a string as an argument and\nreturns a string decrypted with the alphabet\
    \ being rotated. \nThe alphabet should be rotated in a manner such that the letters\
    \ \nshift up by two multiplied to two places.\nFor example:\n>>> decrypt(\"lm\"\
    )\n\"hi\"\n>>> decrypt(\"ewhjklnop\")\n\"asdfghjkl\"\n>>> decrypt(\"kj\")\n\"\
    gf\"\n>>> decrypt(\"ix\")\n\"et\"*/", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\t$newAlphabet = \"\";\n\t$newString = \"\";\n\t$newAlphabet = substr($alphabet,\
    \ 2) . substr($alphabet, 0, 2);\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t\
    $newString .= $newAlphabet[strpos($alphabet, $s[$i])];\n\t}\n\treturn $newString;\n\
    }\necho encrypt(\"hi\");\necho encrypt(\"asdfghjkl\");\necho encrypt(\"gf\");\n\
    echo encrypt(\"et\");", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$new_alphabet\
    \ = substr($alphabet, 2).substr($alphabet, 0, 2);\n\t$new_string = \"\";\n\tfor\
    \ ($i = 0; $i < strlen($s); $i++) {\n\t\t$new_string .= $new_alphabet[strpos($alphabet,\
    \ $s[$i])];\n\t}\n\treturn $new_string;\n}\necho encrypt(\"hi\");\necho \"\\n\"\
    ;\necho encrypt(\"asdfghjkl\");\necho \"\\n\";\necho encrypt(\"gf\");\necho \"\
    \\n\";\necho encrypt(\"et\");\necho \"\\n\";", "\t$s = strtolower($s);\n\t$alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n\t$newAlphabet = substr($alphabet, 2, 24)\
    \ . substr($alphabet, 0, 2);\n\t$newString = \"\";\n\tfor ($i = 0; $i < strlen($s);\
    \ $i++) {\n\t\t$newString .= $newAlphabet[strpos($alphabet, $s[$i])];\n\t}\n\t\
    return $newString;\n}\n\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\"\
    ) . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";",
  "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$new_alphabet = substr($alphabet,\
    \ 2) . substr($alphabet, 0, 2);\n\t$result = \"\";\n\tfor ($i = 0; $i < strlen($s);\
    \ $i++) {\n\t\t$result .= $new_alphabet[strpos($alphabet, $s[$i])];\n\t}\n\treturn\
    \ $result;\n}\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") .\
    \ \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";",
  "    $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    $new_string = \"\";\n    for\
    \ ($i = 0; $i < strlen($s); $i++) {\n        $index = strpos($alphabet, $s[$i]);\n\
    \        $new_string .= $alphabet[($index + 2) % 26];\n    }\n    return $new_string;\n\
    }\n\n/* Create a function decrypt that takes a string as an argument and\nreturns\
    \ a string decrypted with the alphabet being rotated. \nThe alphabet should be\
    \ rotated in a manner such that the letters \nshift up by two multiplied to two\
    \ places.\nFor example:\n>>> decrypt(\"lm\")\n\"hi\"\n>>> decrypt(\"ewhjklnop\"\
    )\n\"asdfghjkl\"\n>>> decrypt(\"kj\")\n\"gf\"\n>>> decrypt(\"ix\")\n\"et\"*/",
  "    $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    $new_string = \"\";\n    for\
    \ ($i = 0; $i < strlen($s); $i++) {\n        $new_string .= $alphabet[(strpos($alphabet,\
    \ $s[$i]) + (2 * 2)) % 26];\n    }\n    return $new_string;\n}\n\necho encrypt(\"\
    hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\"\
    ) . \"\\n\";\necho encrypt(\"et\") . \"\\n\";\n", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\t$new_alphabet = \"cdefghijklmnopqrstuvwxyzab\";\n\t$new_string = \"\";\n\t\
    for ($i = 0; $i < strlen($s); $i++) {\n\t\t$new_string .= $new_alphabet[strpos($alphabet,\
    \ $s[$i])];\n\t}\n\treturn $new_string;\n}\n\n/* Create a function decrypt that\
    \ takes a string as an argument and\nreturns a string decrypted with the alphabet\
    \ being rotated. \nThe alphabet should be rotated in a manner such that the letters\
    \ \nshift up by two multiplied to two places.\nFor example:\n>>> decrypt(\"lm\"\
    )\n\"hi\"\n>>> decrypt(\"ewhjklnop\")\n\"asdfghjkl\"\n>>> decrypt(\"kj\")\n\"\
    gf\"\n>>> decrypt(\"ix\")\n\"et\"*/", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\t$new_alphabet = \"cdefghijklmnopqrstuvwxyzab\";\n\t$new_string = \"\";\n\t\
    for ($i = 0; $i < strlen($s); $i++) {\n\t\t$new_string .= $new_alphabet[strpos($alphabet,\
    \ $s[$i])];\n\t}\n\treturn $new_string;\n}\n\n/* Create a function decrypt that\
    \ takes a string as an argument and\nreturns a string decrypted with the alphabet\
    \ being rotated. \nThe alphabet should be rotated in a manner such that the letters\
    \ \nshift up by two multiplied to two places.\nFor example:\n>>> decrypt(\"lm\"\
    )\n\"hi\"\n>>> decrypt(\"ewhjklnop\")\n\"asdfghjkl\"\n>>> decrypt(\"kj\")\n\"\
    gf\"\n>>> decrypt(\"ix\")\n\"et\"*/", "    $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    $encrypt = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n        $index\
    \ = strpos($alphabet, $s[$i]);\n        $encrypt .= $alphabet[($index + 2) % 26];\n\
    \    }\n    return $encrypt;\n}\necho encrypt(\"hi\");\necho \"\\n\";\necho encrypt(\"\
    asdfghjkl\");\necho \"\\n\";\necho encrypt(\"gf\");\necho \"\\n\";\necho encrypt(\"\
    et\");\necho \"\\n\";", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$new_alphabet\
    \ = substr($alphabet, 2).substr($alphabet, 0, 2);\n\t$new_s = \"\";\n\tfor ($i\
    \ = 0; $i < strlen($s); $i++) {\n\t\t$new_s .= $new_alphabet[strpos($alphabet,\
    \ $s[$i])];\n\t}\n\treturn $new_s;\n}\necho encrypt(\"hi\").\"\\n\";\necho encrypt(\"\
    asdfghjkl\").\"\\n\";\necho encrypt(\"gf\").\"\\n\";\necho encrypt(\"et\").\"\\\
    n\";", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$new_alphabet = \"\"\
    ;\n\t$new_string = \"\";\n\t$i = 0;\n\twhile ($i < strlen($alphabet)) {\n\t\t\
    $new_alphabet = $new_alphabet . substr($alphabet, $i + 2, 1);\n\t\t$i = $i + 1;\n\
    \t}\n\t$new_alphabet = $new_alphabet . substr($alphabet, 0, 2);\n\t$i = 0;\n\t\
    while ($i < strlen($s)) {\n\t\t$new_string = $new_string . substr($new_alphabet,\
    \ strpos($alphabet, substr($s, $i, 1)), 1);\n\t\t$i = $i + 1;\n\t}\n\treturn $new_string;\n\
    }\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho\
    \ encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";", "\t$s = strtolower($s);\n\
    \t$s = str_split($s);\n\t$new_s = \"\";\n\tforeach ($s as $letter) {\n\t\t$new_s\
    \ .= chr(ord($letter) + 2);\n\t}\n\treturn $new_s;\n}\n\necho encrypt(\"hi\")\
    \ . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\
    \\n\";\necho encrypt(\"et\") . \"\\n\";\n", "\t$alphabet = range('a', 'z');\n\t\
    $encrypted = [];\n\tforeach (str_split($s) as $letter) {\n\t\t$index = array_search($letter,\
    \ $alphabet);\n\t\t$encrypted[] = $alphabet[($index + 4) % 26];\n\t}\n\treturn\
    \ implode('', $encrypted);\n}\n\necho encrypt(\"hi\") . PHP_EOL;\necho encrypt(\"\
    asdfghjkl\") . PHP_EOL;\necho encrypt(\"gf\") . PHP_EOL;\necho encrypt(\"et\"\
    ) . PHP_EOL;", "    $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    $encrypted\
    \ = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n        $index = strpos($alphabet,\
    \ $s[$i]);\n        $encrypted .= $alphabet[($index + (2 * 2)) % 26];\n    }\n\
    \    return $encrypted;\n}\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\"\
    ) . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";",
  "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$new_alphabet = substr($alphabet,\
    \ 2) . substr($alphabet, 0, 2);\n\t$new_string = \"\";\n\tfor ($i = 0; $i < strlen($s);\
    \ $i++) {\n\t\t$new_string .= $new_alphabet[strpos($alphabet, $s[$i])];\n\t}\n\
    \treturn $new_string;\n}\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\"\
    ) . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";",
  "\t$alphabet = array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"\
    i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"\
    t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\");\n\t$encrypted = \"\";\n\tfor ($i\
    \ = 0; $i < strlen($s); $i++) {\n\t\t$index = array_search($s[$i], $alphabet);\n\
    \t\t$encrypted .= $alphabet[($index + 4) % 26];\n\t}\n\treturn $encrypted;\n}\n\
    echo encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho\
    \ encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";", "\t$alphabet =\
    \ \"abcdefghijklmnopqrstuvwxyz\";\n\t$new_alphabet = substr($alphabet, 2) . substr($alphabet,\
    \ 0, 2);\n\t$new_string = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t\
    $new_string .= $new_alphabet[strpos($alphabet, $s[$i])];\n\t}\n\treturn $new_string;\n\
    }\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho\
    \ encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";", "\t$alphabet =\
    \ \"abcdefghijklmnopqrstuvwxyz\";\n\t$encrypted = \"\";\n\tfor ($i = 0; $i < strlen($s);\
    \ $i++) {\n\t\t$index = strpos($alphabet, $s[$i]);\n\t\t$encrypted .= $alphabet[($index\
    \ + 2) % 26];\n\t}\n\treturn $encrypted;\n}\n\necho encrypt(\"hi\") . \"\\n\"\
    ;\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho\
    \ encrypt(\"et\") . \"\\n\";\n", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\t$encrypted = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$index =\
    \ strpos($alphabet, $s[$i]);\n\t\t$encrypted .= $alphabet[($index + 2) % 26];\n\
    \t}\n\treturn $encrypted;\n}\n\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"\
    asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\"\
    ) . \"\\n\";\n", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$encrypted\
    \ = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$index = strpos($alphabet,\
    \ $s[$i]);\n\t\t$encrypted .= $alphabet[($index + 2) % 26];\n\t}\n\treturn $encrypted;\n\
    }\n\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\n\
    echo encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";\n", "    $alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    $new_alphabet = substr($alphabet, 2)\
    \ . substr($alphabet, 0, 2);\n    $new_string = \"\";\n    for ($i = 0; $i < strlen($s);\
    \ $i++) {\n        $new_string .= $new_alphabet[strpos($alphabet, $s[$i])];\n\
    \    }\n    return $new_string;\n}\necho encrypt(\"hi\");\necho encrypt(\"asdfghjkl\"\
    );\necho encrypt(\"gf\");\necho encrypt(\"et\");", "\t$s = strtolower($s);\n\t\
    $s = str_split($s);\n\t$alpha = range('a', 'z');\n\t$alpha = array_merge($alpha,\
    \ $alpha);\n\tforeach ($s as $key => $value) {\n\t\t$s[$key] = $alpha[array_search($value,\
    \ $alpha) + 2];\n\t}\n\treturn implode($s);\n}\necho encrypt(\"hi\");\necho encrypt(\"\
    asdfghjkl\");\necho encrypt(\"gf\");\necho encrypt(\"et\");", "\t$alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\";\n\t$encrypted = \"\";\n\tfor ($i = 0; $i < strlen($s);\
    \ $i++) {\n\t\t$index = strpos($alphabet, $s[$i]);\n\t\t$encrypted .= $alphabet[($index\
    \ + 2) % 26];\n\t}\n\treturn $encrypted;\n}\n\necho encrypt(\"hi\") . \"\\n\"\
    ;\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho\
    \ encrypt(\"et\") . \"\\n\";\n", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\t$alphabet = str_split($alphabet);\n\t$s = str_split($s);\n\t$new_s = \"\"\
    ;\n\tforeach ($s as $letter) {\n\t\t$index = array_search($letter, $alphabet);\n\
    \t\t$new_s .= $alphabet[($index + 2) % 26];\n\t}\n\treturn $new_s;\n}\n\necho\
    \ encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"\
    gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";", "    $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    $new_alphabet = \"cdefghijklmnopqrstuvwxyzab\";\n    $new_string = \"\"\
    ;\n    for ($i = 0; $i < strlen($s); $i++) {\n        $new_string .= $new_alphabet[strpos($alphabet,\
    \ $s[$i])];\n    }\n    return $new_string;\n}\n\necho encrypt(\"hi\") . \"\\\
    n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\n\
    echo encrypt(\"et\") . \"\\n\";\n", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\t$encrypted = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$index =\
    \ strpos($alphabet, $s[$i]);\n\t\t$encrypted .= $alphabet[($index + 2) % 26];\n\
    \t}\n\treturn $encrypted;\n}\n\n/* Create a function decrypt that takes a string\
    \ as an argument and\nreturns a string decrypted with the alphabet being rotated.\
    \ \nThe alphabet should be rotated in a manner such that the letters \nshift up\
    \ by two multiplied to two places.\nFor example:\n>>> decrypt(\"lm\")\n\"hi\"\n\
    >>> decrypt(\"ewhjklnop\")\n\"asdfghjkl\"\n>>> decrypt(\"kj\")\n\"gf\"\n>>> decrypt(\"\
    ix\")\n\"et\"*/", "    $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    $encrypted\
    \ = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n        $index = strpos($alphabet,\
    \ $s[$i]);\n        $encrypted .= $alphabet[($index + 2) % 26];\n    }\n    return\
    \ $encrypted;\n}\n\n/* Create a function decrypt that takes a string as an argument\
    \ and\nreturns a string decrypted with the alphabet being rotated. \nThe alphabet\
    \ should be rotated in a manner such that the letters \nshift up by two multiplied\
    \ to two places.\nFor example:\n>>> decrypt(\"lm\")\n\"hi\"\n>>> decrypt(\"ewhjklnop\"\
    )\n\"asdfghjkl\"\n>>> decrypt(\"kj\")\n\"gf\"\n>>> decrypt(\"ix\")\n\"et\"*/",
  "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$encrypted = \"\";\n\tfor ($i\
    \ = 0; $i < strlen($s); $i++) {\n\t\t$index = strpos($alphabet, $s[$i]);\n\t\t\
    $encrypted .= $alphabet[($index + 2) % 26];\n\t}\n\treturn $encrypted;\n}\n\n\
    echo encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho\
    \ encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";", "    $alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    $new_string = \"\";\n    for ($i = 0;\
    \ $i < strlen($s); $i++) {\n        $index = strpos($alphabet, $s[$i]);\n    \
    \    $new_index = ($index + (2 * 2)) % 26;\n        $new_string .= $alphabet[$new_index];\n\
    \    }\n    return $new_string;\n}\n\n/* Create a function decrypt that takes\
    \ a string as an argument and\nreturns a string decrypted with the alphabet being\
    \ rotated. \nThe alphabet should be rotated in a manner such that the letters\
    \ \nshift up by two multiplied to two places.\nFor example:\n>>> decrypt(\"lm\"\
    )\n\"hi\"\n>>> decrypt(\"ewhjklnop\")\n\"asdfghjkl\"\n>>> decrypt(\"kj\")\n\"\
    gf\"\n>>> decrypt(\"ix\")\n\"et\"*/", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\t$new_alphabet = substr($alphabet, 2) . substr($alphabet, 0, 2);\n\t$new_string\
    \ = \"\";\n\t$s = strtolower($s);\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\
    \t$new_string .= $new_alphabet[strpos($alphabet, $s[$i])];\n\t}\n\treturn $new_string;\n\
    }\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho\
    \ encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";", "    $alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    $encrypted = \"\";\n    for ($i = 0;\
    \ $i < strlen($s); $i++) {\n        $index = strpos($alphabet, $s[$i]);\n    \
    \    $encrypted .= $alphabet[($index + 2) % 26];\n    }\n    return $encrypted;\n\
    }\n\n/* Create a function decrypt that takes a string as an argument and\nreturns\
    \ a string decrypted with the alphabet being rotated. \nThe alphabet should be\
    \ rotated in a manner such that the letters \nshift up by two multiplied to two\
    \ places.\nFor example:\n>>> decrypt(\"lm\")\n\"hi\"\n>>> decrypt(\"ewhjklnop\"\
    )\n\"asdfghjkl\"\n>>> decrypt(\"kj\")\n\"gf\"\n>>> decrypt(\"ix\")\n\"et\"*/",
  "\t$alphabet = array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"\
    i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"\
    t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\");\n\t$encrypted = \"\";\n\t$s =\
    \ strtolower($s);\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$index = array_search($s[$i],\
    \ $alphabet);\n\t\tif ($index < 24) {\n\t\t\t$encrypted .= $alphabet[$index +\
    \ 2];\n\t\t} else {\n\t\t\t$encrypted .= $alphabet[$index - 24];\n\t\t}\n\t}\n\
    \treturn $encrypted;\n}\n\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\"\
    ) . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";",
  "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$encrypted = \"\";\n\tfor ($i\
    \ = 0; $i < strlen($s); $i++) {\n\t\t$index = strpos($alphabet, $s[$i]);\n\t\t\
    $encrypted .= $alphabet[($index + 2) * 2];\n\t}\n\treturn $encrypted;\n}\n\necho\
    \ encrypt(\"hi\");\necho \"\\n\";\necho encrypt(\"asdfghjkl\");\necho \"\\n\"\
    ;\necho encrypt(\"gf\");\necho \"\\n\";\necho encrypt(\"et\");\necho \"\\n\";",
  "    $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    $new_alphabet = substr($alphabet,\
    \ 2) . substr($alphabet, 0, 2);\n    $encrypted = \"\";\n    for ($i = 0; $i <\
    \ strlen($s); $i++) {\n        $index = strpos($alphabet, $s[$i]);\n        $encrypted\
    \ .= $new_alphabet[$index];\n    }\n    return $encrypted;\n}\necho encrypt(\"\
    hi\");\necho \"\\n\";\necho encrypt(\"asdfghjkl\");\necho \"\\n\";\necho encrypt(\"\
    gf\");\necho \"\\n\";\necho encrypt(\"et\");\necho \"\\n\";", "\t$alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\";\n\t$encrypted = \"\";\n\tfor ($i = 0; $i < strlen($s);\
    \ $i++) {\n\t\t$index = strpos($alphabet, $s[$i]);\n\t\t$encrypted .= $alphabet[($index\
    \ + 2) * 2];\n\t}\n\treturn $encrypted;\n}\n\necho encrypt(\"hi\") . \"\\n\";\n\
    echo encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho\
    \ encrypt(\"et\") . \"\\n\";\n", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\t$encrypted = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$index =\
    \ strpos($alphabet, $s[$i]);\n\t\t$encrypted .= $alphabet[($index + 2) % 26];\n\
    \t}\n\treturn $encrypted;\n}\necho encrypt(\"hi\");\necho encrypt(\"asdfghjkl\"\
    );\necho encrypt(\"gf\");\necho encrypt(\"et\");", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\t$new_alphabet = substr($alphabet, 2) . substr($alphabet, 0, 2);\n\t$result\
    \ = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$result .= $new_alphabet[strpos($alphabet,\
    \ $s[$i])];\n\t}\n\treturn $result;\n}\n\n/* Create a function decrypt that takes\
    \ a string as an argument and\nreturns a string decrypted with the alphabet being\
    \ rotated. \nThe alphabet should be rotated in a manner such that the letters\
    \ \nshift up by two multiplied to two places.\nFor example:\n>>> decrypt(\"lm\"\
    )\n\"hi\"\n>>> decrypt(\"ewhjklnop\")\n\"asdfghjkl\"\n>>> decrypt(\"kj\")\n\"\
    gf\"\n>>> decrypt(\"ix\")\n\"et\"*/", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\t$new_alphabet = substr($alphabet, 2) . substr($alphabet, 0, 2);\n\t$encrypted\
    \ = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$encrypted .= $new_alphabet[strpos($alphabet,\
    \ $s[$i])];\n\t}\n\treturn $encrypted;\n}\n\necho encrypt(\"hi\") . \"\\n\";\n\
    echo encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho\
    \ encrypt(\"et\") . \"\\n\";", "    $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    $encrypted = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n       \
    \ $index = strpos($alphabet, $s[$i]);\n        $encrypted .= $alphabet[($index\
    \ + 2) % 26];\n    }\n    return $encrypted;\n}\n\n/* Create a function decrypt\
    \ that takes a string as an argument and\nreturns a string decrypted with the\
    \ alphabet being rotated. \nThe alphabet should be rotated in a manner such that\
    \ the letters \nshift up by two multiplied to two places.\nFor example:\n>>> decrypt(\"\
    lm\")\n\"hi\"\n>>> decrypt(\"ewhjklnop\")\n\"asdfghjkl\"\n>>> decrypt(\"kj\")\n\
    \"gf\"\n>>> decrypt(\"ix\")\n\"et\"*/", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\t$new_alphabet = substr($alphabet, 2) . substr($alphabet, 0, 2);\n\t$new_string\
    \ = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$new_string .= $new_alphabet[strpos($alphabet,\
    \ $s[$i])];\n\t}\n\treturn $new_string;\n}\n\necho encrypt(\"hi\") . \"\\n\";\n\
    echo encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho\
    \ encrypt(\"et\") . \"\\n\";", "    $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    $newAlphabet = substr($alphabet, 2) . substr($alphabet, 0, 2);\n    $newString\
    \ = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n        $newString .= $newAlphabet[strpos($alphabet,\
    \ $s[$i])];\n    }\n    return $newString;\n}\necho encrypt(\"hi\") . \"\\n\"\
    ;\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho\
    \ encrypt(\"et\") . \"\\n\";", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\
    \t$new_string = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$new_string\
    \ .= $alphabet[(strpos($alphabet, $s[$i]) + 2) % 26];\n\t}\n\treturn $new_string;\n\
    }\n\necho encrypt(\"hi\");\necho encrypt(\"asdfghjkl\");\necho encrypt(\"gf\"\
    );\necho encrypt(\"et\");", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t\
    $new_alphabet = substr($alphabet, 2) . substr($alphabet, 0, 2);\n\t$new_string\
    \ = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$new_string .= $new_alphabet[strpos($alphabet,\
    \ $s[$i])];\n\t}\n\treturn $new_string;\n}\n\n/* Create a function decrypt that\
    \ takes a string as an argument and\nreturns a string decrypted with the alphabet\
    \ being rotated. \nThe alphabet should be rotated in a manner such that the letters\
    \ \nshift up by two multiplied to two places.\nFor example:\n>>> decrypt(\"lm\"\
    )\n\"hi\"\n>>> decrypt(\"ewhjklnop\")\n\"asdfghjkl\"\n>>> decrypt(\"kj\")\n\"\
    gf\"\n>>> decrypt(\"ix\")\n\"et\"*/", "    $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    $encrypted = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n       \
    \ $index = strpos($alphabet, $s[$i]);\n        $encrypted .= $alphabet[($index\
    \ + 2) % 26];\n    }\n    return $encrypted;\n}\n\n/* Create a function decrypt\
    \ that takes a string as an argument and\nreturns a string decrypted with the\
    \ alphabet being rotated. \nThe alphabet should be rotated in a manner such that\
    \ the letters \nshift up by two multiplied to two places.\nFor example:\n>>> decrypt(\"\
    lm\")\n\"hi\"\n>>> decrypt(\"ewhjklnop\")\n\"asdfghjkl\"\n>>> decrypt(\"kj\")\n\
    \"gf\"\n>>> decrypt(\"ix\")\n\"et\"*/", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\t$encrypted = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$index =\
    \ strpos($alphabet, $s[$i]);\n\t\t$encrypted .= $alphabet[($index + 2) % 26];\n\
    \t}\n\treturn $encrypted;\n}\n\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"\
    asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\"\
    ) . \"\\n\";\n", "\t$s = strtolower($s);\n\t$s = str_split($s);\n\t$new_s = array();\n\
    \tforeach ($s as $letter) {\n\t\t$new_s[] = chr(ord($letter) + 4);\n\t}\n\treturn\
    \ implode($new_s);\n}\n\n/* Create a function decrypt that takes a string as an\
    \ argument and\nreturns a string decrypted with the alphabet being rotated. \n\
    The alphabet should be rotated in a manner such that the letters \nshift up by\
    \ two multiplied to two places.\nFor example:\n>>> decrypt(\"lm\")\n\"hi\"\n>>>\
    \ decrypt(\"ewhjklnop\")\n\"asdfghjkl\"\n>>> decrypt(\"kj\")\n\"gf\"\n>>> decrypt(\"\
    ix\")\n\"et\"*/", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$newAlphabet\
    \ = substr($alphabet, 2) . substr($alphabet, 0, 2);\n\t$newString = \"\";\n\t\
    for ($i = 0; $i < strlen($s); $i++) {\n\t\t$newString .= $newAlphabet[strpos($alphabet,\
    \ $s[$i])];\n\t}\n\treturn $newString;\n}\necho encrypt(\"hi\") . \"\\n\";\necho\
    \ encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho encrypt(\"\
    et\") . \"\\n\";", "\t$alphabet = array(\"a\", \"b\", \"c\", \"d\", \"e\", \"\
    f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"\
    q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\");\n\t$new_string\
    \ = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$new_string .= $alphabet[(array_search($s[$i],\
    \ $alphabet) + 2) % 26];\n\t}\n\treturn $new_string;\n}\n\necho encrypt(\"hi\"\
    ) . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\
    \\n\";\necho encrypt(\"et\") . \"\\n\";", "\t$alphabet = array(\"a\", \"b\", \"\
    c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"\
    n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"\
    y\", \"z\");\n\t$encrypted = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\
    \t$index = array_search($s[$i], $alphabet);\n\t\tif ($index >= 0 && $index <=\
    \ 23) {\n\t\t\t$encrypted .= $alphabet[$index + 2];\n\t\t} elseif ($index == 24)\
    \ {\n\t\t\t$encrypted .= $alphabet[0];\n\t\t} elseif ($index == 25) {\n\t\t\t\
    $encrypted .= $alphabet[1];\n\t\t}\n\t}\n\treturn $encrypted;\n}\n\necho encrypt(\"\
    hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\"\
    ) . \"\\n\";\necho encrypt(\"et\") . \"\\n\";", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\t$encrypted = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$index =\
    \ strpos($alphabet, $s[$i]);\n\t\t$encrypted .= $alphabet[($index + 2) * 2];\n\
    \t}\n\treturn $encrypted;\n}\n\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"\
    asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\"\
    ) . \"\\n\";\n", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$new_alphabet\
    \ = substr($alphabet, 2) . substr($alphabet, 0, 2);\n\t$encrypted = \"\";\n\t\
    for ($i = 0; $i < strlen($s); $i++) {\n\t\t$encrypted .= $new_alphabet[strpos($alphabet,\
    \ $s[$i])];\n\t}\n\treturn $encrypted;\n}\necho encrypt(\"hi\") . \"\\n\";\necho\
    \ encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho encrypt(\"\
    et\") . \"\\n\";", "    $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    $newAlphabet\
    \ = \"cdefghijklmnopqrstuvwxyzab\";\n    $newString = \"\";\n    for ($i = 0;\
    \ $i < strlen($s); $i++) {\n        $newString .= $newAlphabet[strpos($alphabet,\
    \ $s[$i])];\n    }\n    return $newString;\n}\necho encrypt(\"hi\");\necho encrypt(\"\
    asdfghjkl\");\necho encrypt(\"gf\");\necho encrypt(\"et\");", "    $s = str_split($s);\n\
    \    $new_s = \"\";\n    for ($i = 0; $i < count($s); $i++) {\n        $new_s\
    \ .= chr(ord($s[$i]) + 2 * 2);\n    }\n    return $new_s;\n}\n\n/* Create a function\
    \ decrypt that takes a string as an argument and\nreturns a string decrypted with\
    \ the alphabet being rotated. \nThe alphabet should be rotated in a manner such\
    \ that the letters \nshift up by two multiplied to two places.\nFor example:\n\
    >>> decrypt(\"lm\")\n\"hi\"\n>>> decrypt(\"ewhjklnop\")\n\"asdfghjkl\"\n>>> decrypt(\"\
    kj\")\n\"gf\"\n>>> decrypt(\"ix\")\n\"et\"*/", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\t$new_string = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$index\
    \ = strpos($alphabet, $s[$i]);\n\t\t$new_index = ($index + 2) * 2;\n\t\t$new_string\
    \ .= $alphabet[$new_index];\n\t}\n\treturn $new_string;\n}\n\necho encrypt(\"\
    hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\"\
    ) . \"\\n\";\necho encrypt(\"et\") . \"\\n\";\n", "\t$alphabet = range('a', 'z');\n\
    \t$encrypted = '';\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$index = array_search($s[$i],\
    \ $alphabet);\n\t\t$encrypted .= $alphabet[($index + 4) % 26];\n\t}\n\treturn\
    \ $encrypted;\n}\n\n/* Create a function decrypt that takes a string as an argument\
    \ and\nreturns a string decrypted with the alphabet being rotated. \nThe alphabet\
    \ should be rotated in a manner such that the letters \nshift up by two multiplied\
    \ to two places.\nFor example:\n>>> decrypt(\"lm\")\n\"hi\"\n>>> decrypt(\"ewhjklnop\"\
    )\n\"asdfghjkl\"\n>>> decrypt(\"kj\")\n\"gf\"\n>>> decrypt(\"ix\")\n\"et\"*/",
  "\t$s = strtolower($s);\n\t$s = str_split($s);\n\t$new_s = array();\n\tforeach ($s\
    \ as $letter) {\n\t\t$new_s[] = chr(ord($letter) + 2 * 2);\n\t}\n\treturn implode($new_s);\n\
    }\n\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\n\
    echo encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";\n", "\t$arr =\
    \ str_split($s);\n\t$result = \"\";\n\tforeach ($arr as $letter) {\n\t\t$result\
    \ .= chr(ord($letter) + 4);\n\t}\n\treturn $result;\n}\necho encrypt(\"hi\") .\
    \ \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\\
    n\";\necho encrypt(\"et\") . \"\\n\";", "\t$alphabet = array(\"a\",\"b\",\"c\"\
    ,\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\"\
    ,\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\");\n\t$new_string\
    \ = \"\";\n\tfor ($i=0; $i < strlen($s); $i++) { \n\t\t$index = array_search($s[$i],\
    \ $alphabet);\n\t\tif ($index < 24) {\n\t\t\t$new_string .= $alphabet[$index +\
    \ 2];\n\t\t} else {\n\t\t\t$new_string .= $alphabet[$index - 24];\n\t\t}\n\t}\n\
    \treturn $new_string;\n}\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\"\
    ) . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";",
  "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$new_alphabet = substr($alphabet,\
    \ 2) . substr($alphabet, 0, 2);\n\t$new_string = \"\";\n\tfor ($i = 0; $i < strlen($s);\
    \ $i++) {\n\t\t$new_string .= $new_alphabet[strpos($alphabet, $s[$i])];\n\t}\n\
    \treturn $new_string;\n}\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\"\
    ) . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";",
  "\t$arr = str_split($s);\n\t$new_arr = [];\n\tforeach ($arr as $letter) {\n\t\t\
    $new_arr[] = chr(ord($letter) + 2 * 2);\n\t}\n\treturn implode($new_arr);\n}\n\
    \n/* Create a function decrypt that takes a string as an argument and\nreturns\
    \ a string decrypted with the alphabet being rotated. \nThe alphabet should be\
    \ rotated in a manner such that the letters \nshift up by two multiplied to two\
    \ places.\nFor example:\n>>> decrypt(\"lm\")\n\"hi\"\n>>> decrypt(\"ewhjklnop\"\
    )\n\"asdfghjkl\"\n>>> decrypt(\"kj\")\n\"gf\"\n>>> decrypt(\"ix\")\n\"et\"*/",
  "\t$alphabet = array(\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\"\
    ,\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\"\
    ,\"x\",\"y\",\"z\");\n\t$new_string = \"\";\n\tfor ($i=0; $i < strlen($s); $i++)\
    \ { \n\t\t$index = array_search($s[$i], $alphabet);\n\t\t$new_string .= $alphabet[($index\
    \ + 2) * 2];\n\t}\n\treturn $new_string;\n}\necho encrypt(\"hi\");\necho encrypt(\"\
    asdfghjkl\");\necho encrypt(\"gf\");\necho encrypt(\"et\");\n", "\t$alphabet =\
    \ \"abcdefghijklmnopqrstuvwxyz\";\n\t$new_alphabet = substr($alphabet, 2) . substr($alphabet,\
    \ 0, 2);\n\t$encrypted = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t\
    $encrypted .= $new_alphabet[strpos($alphabet, $s[$i])];\n\t}\n\treturn $encrypted;\n\
    }\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho\
    \ encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";", "\t$alphabet =\
    \ \"abcdefghijklmnopqrstuvwxyz\";\n\t$alphabet_array = str_split($alphabet);\n\
    \t$s_array = str_split($s);\n\t$encrypted_string = \"\";\n\tfor ($i = 0; $i <\
    \ count($s_array); $i++) {\n\t\t$letter = $s_array[$i];\n\t\t$index = array_search($letter,\
    \ $alphabet_array);\n\t\t$new_index = ($index + (2 * 2)) % 26;\n\t\t$encrypted_string\
    \ .= $alphabet_array[$new_index];\n\t}\n\treturn $encrypted_string;\n}\necho encrypt(\"\
    hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\"\
    ) . \"\\n\";\necho encrypt(\"et\") . \"\\n\";", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\t$new_alphabet = substr($alphabet, 2) . substr($alphabet, 0, 2);\n\t$new_string\
    \ = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$new_string .= $new_alphabet[strpos($alphabet,\
    \ $s[$i])];\n\t}\n\treturn $new_string;\n}\n\necho encrypt(\"hi\") . \"\\n\";\n\
    echo encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho\
    \ encrypt(\"et\") . \"\\n\";\n", "    $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    $encrypted = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n       \
    \ $index = strpos($alphabet, $s[$i]);\n        $encrypted .= $alphabet[($index\
    \ + 2) * 2];\n    }\n    return $encrypted;\n}\necho encrypt(\"hi\");\necho encrypt(\"\
    asdfghjkl\");\necho encrypt(\"gf\");\necho encrypt(\"et\");", "    $alphabet =\
    \ \"abcdefghijklmnopqrstuvwxyz\";\n    $newAlphabet = substr($alphabet, 2) . substr($alphabet,\
    \ 0, 2);\n    $newString = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n\
    \        $newString .= $newAlphabet[strpos($alphabet, $s[$i])];\n    }\n    return\
    \ $newString;\n}\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\"\
    ) . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";",
  "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$encrypted = \"\";\n\tfor ($i\
    \ = 0; $i < strlen($s); $i++) {\n\t\t$index = strpos($alphabet, $s[$i]);\n\t\t\
    $encrypted .= $alphabet[($index + 2) % 26];\n\t}\n\treturn $encrypted;\n}\n\n\
    echo encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho\
    \ encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";\n", "    $alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    $encrypted = \"\";\n    for ($i = 0;\
    \ $i < strlen($s); $i++) {\n        $index = strpos($alphabet, $s[$i]);\n    \
    \    $encrypted .= $alphabet[($index + 2) % 26];\n    }\n    return $encrypted;\n\
    }\necho encrypt(\"hi\");\necho encrypt(\"asdfghjkl\");\necho encrypt(\"gf\");\n\
    echo encrypt(\"et\");", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$newAlphabet\
    \ = substr($alphabet, 2) . substr($alphabet, 0, 2);\n\t$encrypted = \"\";\n\t\
    for ($i = 0; $i < strlen($s); $i++) {\n\t\t$encrypted .= $newAlphabet[strpos($alphabet,\
    \ $s[$i])];\n\t}\n\treturn $encrypted;\n}\necho encrypt(\"hi\") . \"\\n\";\necho\
    \ encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho encrypt(\"\
    et\") . \"\\n\";", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$encrypted\
    \ = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$index = strpos($alphabet,\
    \ $s[$i]);\n\t\t$encrypted .= $alphabet[($index + 2) % 26];\n\t}\n\treturn $encrypted;\n\
    }\n\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\n\
    echo encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";", "    $alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    $encrypted = \"\";\n    for ($i = 0;\
    \ $i < strlen($s); $i++) {\n        $index = strpos($alphabet, $s[$i]);\n    \
    \    $encrypted .= $alphabet[($index + 2) % 26];\n    }\n    return $encrypted;\n\
    }\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho\
    \ encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";", "\t$s = strtolower($s);\n\
    \t$s = str_split($s);\n\t$new_s = \"\";\n\tforeach ($s as $letter) {\n\t\t$new_s\
    \ .= chr(ord($letter) + 2 * 2);\n\t}\n\treturn $new_s;\n}\necho encrypt(\"hi\"\
    ) . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\
    \\n\";\necho encrypt(\"et\") . \"\\n\";", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\t$new_string = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$letter\
    \ = $s[$i];\n\t\t$index = strpos($alphabet, $letter);\n\t\t$new_index = ($index\
    \ + 2) * 2;\n\t\t$new_letter = $alphabet[$new_index];\n\t\t$new_string .= $new_letter;\n\
    \t}\n\treturn $new_string;\n}\n\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"\
    asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\"\
    ) . \"\\n\";\n", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$alphabet =\
    \ str_split($alphabet);\n\t$s = str_split($s);\n\t$new_s = \"\";\n\tforeach ($s\
    \ as $letter) {\n\t\t$index = array_search($letter, $alphabet);\n\t\t$new_s .=\
    \ $alphabet[($index + 2) % 26];\n\t}\n\treturn $new_s;\n}\n\n/* Create a function\
    \ decrypt that takes a string as an argument and\nreturns a string decrypted with\
    \ the alphabet being rotated. \nThe alphabet should be rotated in a manner such\
    \ that the letters \nshift up by two multiplied to two places.\nFor example:\n\
    >>> decrypt(\"lm\")\n\"hi\"\n>>> decrypt(\"ewhjklnop\")\n\"asdfghjkl\"\n>>> decrypt(\"\
    kj\")\n\"gf\"\n>>> decrypt(\"ix\")\n\"et\"*/", "\t$alphabet = array(\"a\",\"b\"\
    ,\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\"\
    ,\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\");\n\t$new_string\
    \ = \"\";\n\tfor ($i=0; $i < strlen($s); $i++) { \n\t\t$new_string .= $alphabet[(array_search($s[$i],\
    \ $alphabet) + 4) % 26];\n\t}\n\treturn $new_string;\n}\necho encrypt(\"hi\")\
    \ . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\
    \\n\";\necho encrypt(\"et\") . \"\\n\";", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\t$encrypted = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$index =\
    \ strpos($alphabet, $s[$i]);\n\t\t$encrypted .= $alphabet[($index + 2) % 26];\n\
    \t}\n\treturn $encrypted;\n}\n\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"\
    asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\"\
    ) . \"\\n\";", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$new_alphabet\
    \ = substr($alphabet, 2, strlen($alphabet)) . substr($alphabet, 0, 2);\n\t$encrypted\
    \ = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$encrypted .= $new_alphabet[strpos($alphabet,\
    \ $s[$i])];\n\t}\n\treturn $encrypted;\n}\necho encrypt(\"hi\") . \"\\n\";\necho\
    \ encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho encrypt(\"\
    et\") . \"\\n\";", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$encrypted\
    \ = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$letter = $s[$i];\n\t\t\
    $index = strpos($alphabet, $letter);\n\t\t$new_index = ($index + 2) * 2;\n\t\t\
    $encrypted .= $alphabet[$new_index];\n\t}\n\treturn $encrypted;\n}\necho encrypt(\"\
    hi\");\necho \"\\n\";\necho encrypt(\"asdfghjkl\");\necho \"\\n\";\necho encrypt(\"\
    gf\");\necho \"\\n\";\necho encrypt(\"et\");\necho \"\\n\";", "\t$alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\";\n\t$encrypted = \"\";\n\tfor ($i = 0; $i < strlen($s);\
    \ $i++) {\n\t\t$index = strpos($alphabet, $s[$i]);\n\t\t$encrypted .= $alphabet[($index\
    \ + 2) * 2];\n\t}\n\treturn $encrypted;\n}\necho encrypt(\"hi\") . \"\\n\";\n\
    echo encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho\
    \ encrypt(\"et\") . \"\\n\";", "\t$a = str_split($s);\n\t$b = array();\n\tforeach\
    \ ($a as $value) {\n\t\t$b[] = chr(ord($value) + 4);\n\t}\n\treturn implode($b);\n\
    }\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho\
    \ encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";", "\t$alphabet =\
    \ array(\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\"\
    ,\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\"\
    ,\"z\");\n\t$new_alphabet = array();\n\t$new_string = \"\";\n\tfor ($i=0; $i <\
    \ count($alphabet); $i++) { \n\t\tif ($i < 24) {\n\t\t\t$new_alphabet[$i] = $alphabet[$i+2];\n\
    \t\t}\n\t\telse {\n\t\t\t$new_alphabet[$i] = $alphabet[$i-24];\n\t\t}\n\t}\n\t\
    for ($i=0; $i < strlen($s); $i++) { \n\t\t$new_string .= $new_alphabet[array_search($s[$i],\
    \ $alphabet)];\n\t}\n\treturn $new_string;\n}\necho encrypt(\"hi\") . \"\\n\"\
    ;\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho\
    \ encrypt(\"et\") . \"\\n\";", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\
    \t$alphabet_array = str_split($alphabet);\n\t$s_array = str_split($s);\n\t$encrypted_array\
    \ = array();\n\tforeach ($s_array as $letter) {\n\t\t$index = array_search($letter,\
    \ $alphabet_array);\n\t\t$encrypted_array[] = $alphabet_array[$index + 2];\n\t\
    }\n\t$encrypted_string = implode($encrypted_array);\n\treturn $encrypted_string;\n\
    }\n\n/* Create a function decrypt that takes a string as an argument and\nreturns\
    \ a string decrypted with the alphabet being rotated. \nThe alphabet should be\
    \ rotated in a manner such that the letters \nshift up by two multiplied to two\
    \ places.\nFor example:\n>>> decrypt(\"lm\")\n\"hi\"\n>>> decrypt(\"ewhjklnop\"\
    )\n\"asdfghjkl\"\n>>> decrypt(\"kj\")\n\"gf\"\n>>> decrypt(\"ix\")\n\"et\"*/",
  "    $alphabet = array('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z');\n\
    \    $newString = '';\n    for ($i = 0; $i < strlen($s); $i++) {\n        $newString\
    \ .= $alphabet[(array_search($s[$i], $alphabet) + 4) % 26];\n    }\n    return\
    \ $newString;\n}\necho encrypt(\"hi\");\necho encrypt(\"asdfghjkl\");\necho encrypt(\"\
    gf\");\necho encrypt(\"et\");", "    $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    $encrypted = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n       \
    \ $encrypted .= $alphabet[(strpos($alphabet, $s[$i]) + 2) % 26];\n    }\n    return\
    \ $encrypted;\n}\necho encrypt(\"hi\");\necho encrypt(\"asdfghjkl\");\necho encrypt(\"\
    gf\");\necho encrypt(\"et\");", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\t$encrypted = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$index =\
    \ strpos($alphabet, $s[$i]);\n\t\t$encrypted .= $alphabet[($index + 2) % 26];\n\
    \t}\n\treturn $encrypted;\n}\n\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"\
    asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\"\
    ) . \"\\n\";\n", "\t$alphabet = array(\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\"\
    ,\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\"\
    ,\"u\",\"v\",\"w\",\"x\",\"y\",\"z\");\n\t$new_string = \"\";\n\t$s = strtolower($s);\n\
    \tfor ($i=0; $i < strlen($s); $i++) { \n\t\t$index = array_search($s[$i], $alphabet);\n\
    \t\t$new_string .= $alphabet[($index + 2) % 26];\n\t}\n\treturn $new_string;\n\
    }\n\necho encrypt(\"hi\");\necho \"\\n\";\necho encrypt(\"asdfghjkl\");\necho\
    \ \"\\n\";\necho encrypt(\"gf\");\necho \"\\n\";\necho encrypt(\"et\");\necho\
    \ \"\\n\";", "\t$s = strtolower($s);\n\t$arr = str_split($s);\n\t$new_arr = [];\n\
    \tforeach ($arr as $key => $value) {\n\t\tif ($value == 'z') {\n\t\t\t$new_arr[]\
    \ = 'b';\n\t\t} elseif ($value == 'y') {\n\t\t\t$new_arr[] = 'a';\n\t\t} else\
    \ {\n\t\t\t$new_arr[] = ++$value;\n\t\t\t$new_arr[] = ++$value;\n\t\t}\n\t}\n\t\
    return implode($new_arr);\n}\necho encrypt(\"hi\");\necho \"\\n\";\necho encrypt(\"\
    asdfghjkl\");\necho \"\\n\";\necho encrypt(\"gf\");\necho \"\\n\";\necho encrypt(\"\
    et\");\necho \"\\n\";", "    $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n   \
    \ $encrypted = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n        $index\
    \ = strpos($alphabet, $s[$i]);\n        $encrypted .= $alphabet[($index + 2) %\
    \ 26];\n    }\n    return $encrypted;\n}\necho encrypt(\"hi\") . \"\\n\";\necho\
    \ encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho encrypt(\"\
    et\") . \"\\n\";", "    $s = str_split($s);\n    $alphabet = range('a', 'z');\n\
    \    $new_alphabet = array_slice($alphabet, 2, 26);\n    $new_alphabet = array_merge($new_alphabet,\
    \ array_slice($alphabet, 0, 2));\n    $new_s = [];\n    foreach ($s as $letter)\
    \ {\n        $new_s[] = $new_alphabet[array_search($letter, $alphabet)];\n   \
    \ }\n    return implode('', $new_s);\n}\n\necho encrypt(\"hi\");\necho encrypt(\"\
    asdfghjkl\");\necho encrypt(\"gf\");\necho encrypt(\"et\");", "\t$alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\";\n\t$new_alphabet = substr($alphabet, 2) . substr($alphabet,\
    \ 0, 2);\n\t$new_string = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t\
    $new_string .= $new_alphabet[strpos($alphabet, $s[$i])];\n\t}\n\treturn $new_string;\n\
    }\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho\
    \ encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";", "\t$alphabet =\
    \ \"abcdefghijklmnopqrstuvwxyz\";\n\t$new_alphabet = substr($alphabet, 2) . substr($alphabet,\
    \ 0, 2);\n\t$new_string = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t\
    $new_string .= $new_alphabet[strpos($alphabet, $s[$i])];\n\t}\n\treturn $new_string;\n\
    }\n\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\n\
    echo encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";", "\t$alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n\t$new_alphabet = substr($alphabet, 2).substr($alphabet,\
    \ 0, 2);\n\t$new_string = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t\
    $new_string .= $new_alphabet[strpos($alphabet, $s[$i])];\n\t}\n\treturn $new_string;\n\
    }\n\necho encrypt(\"hi\").\"\\n\";\necho encrypt(\"asdfghjkl\").\"\\n\";\necho\
    \ encrypt(\"gf\").\"\\n\";\necho encrypt(\"et\").\"\\n\";", "\t$alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\";\n\t$new_alphabet = substr($alphabet, 2) . substr($alphabet,\
    \ 0, 2);\n\t$new_string = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t\
    $new_string .= $new_alphabet[strpos($alphabet, $s[$i])];\n\t}\n\treturn $new_string;\n\
    }\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho\
    \ encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";", "\t$alphabet =\
    \ \"abcdefghijklmnopqrstuvwxyz\";\n\t$encrypted = \"\";\n\tfor ($i = 0; $i < strlen($s);\
    \ $i++) {\n\t\t$index = strpos($alphabet, $s[$i]);\n\t\t$encrypted .= $alphabet[($index\
    \ + 2) * 2];\n\t}\n\treturn $encrypted;\n}\n\n/* Create a function decrypt that\
    \ takes a string as an argument and\nreturns a string decrypted with the alphabet\
    \ being rotated. \nThe alphabet should be rotated in a manner such that the letters\
    \ \nshift up by two multiplied to two places.\nFor example:\n>>> decrypt(\"lm\"\
    )\n\"hi\"\n>>> decrypt(\"ewhjklnop\")\n\"asdfghjkl\"\n>>> decrypt(\"kj\")\n\"\
    gf\"\n>>> decrypt(\"ix\")\n\"et\"*/", "\t$s = strtolower($s);\n\t$s = str_split($s);\n\
    \t$new_s = \"\";\n\tforeach ($s as $letter) {\n\t\t$new_s .= chr(ord($letter)\
    \ + 2);\n\t}\n\treturn $new_s;\n}\necho encrypt(\"hi\");\necho \"\\n\";\necho\
    \ encrypt(\"asdfghjkl\");\necho \"\\n\";\necho encrypt(\"gf\");\necho \"\\n\"\
    ;\necho encrypt(\"et\");\necho \"\\n\";", "\t$str = \"\";\n\t$len = strlen($s);\n\
    \tfor ($i = 0; $i < $len; $i++) {\n\t\t$str .= chr(ord($s[$i]) + 2 * 2);\n\t}\n\
    \treturn $str;\n}\necho encrypt(\"hi\");\necho \"\\n\";\necho encrypt(\"asdfghjkl\"\
    );\necho \"\\n\";\necho encrypt(\"gf\");\necho \"\\n\";\necho encrypt(\"et\");\n\
    echo \"\\n\";", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$new_alphabet\
    \ = \"\";\n\t$new_string = \"\";\n\tfor ($i = 0; $i < strlen($alphabet); $i++)\
    \ {\n\t\t$new_alphabet .= $alphabet[($i + 2) % strlen($alphabet)];\n\t}\n\tfor\
    \ ($i = 0; $i < strlen($s); $i++) {\n\t\t$new_string .= $new_alphabet[strpos($alphabet,\
    \ $s[$i])];\n\t}\n\treturn $new_string;\n}\necho encrypt(\"hi\") . \"\\n\";\n\
    echo encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho\
    \ encrypt(\"et\") . \"\\n\";", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\
    \t$new_alphabet = substr($alphabet, 2) . substr($alphabet, 0, 2);\n\t$encrypted\
    \ = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$encrypted .= $new_alphabet[strpos($alphabet,\
    \ $s[$i])];\n\t}\n\treturn $encrypted;\n}\n\n/* Create a function decrypt that\
    \ takes a string as an argument and\nreturns a string decrypted with the alphabet\
    \ being rotated. \nThe alphabet should be rotated in a manner such that the letters\
    \ \nshift up by two multiplied to two places.\nFor example:\n>>> decrypt(\"lm\"\
    )\n\"hi\"\n>>> decrypt(\"ewhjklnop\")\n\"asdfghjkl\"\n>>> decrypt(\"kj\")\n\"\
    gf\"\n>>> decrypt(\"ix\")\n\"et\"*/", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\t$new_alphabet = \"cdefghijklmnopqrstuvwxyzab\";\n\t$new_string = \"\";\n\t\
    for ($i = 0; $i < strlen($s); $i++) {\n\t\t$new_string .= $new_alphabet[strpos($alphabet,\
    \ $s[$i])];\n\t}\n\treturn $new_string;\n}\n\n/* Create a function decrypt that\
    \ takes a string as an argument and\nreturns a string decrypted with the alphabet\
    \ being rotated. \nThe alphabet should be rotated in a manner such that the letters\
    \ \nshift up by two multiplied to two places.\nFor example:\n>>> decrypt(\"lm\"\
    )\n\"hi\"\n>>> decrypt(\"ewhjklnop\")\n\"asdfghjkl\"\n>>> decrypt(\"kj\")\n\"\
    gf\"\n>>> decrypt(\"ix\")\n\"et\"*/", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\t$new_alphabet = \"\";\n\t$new_string = \"\";\n\tfor ($i = 0; $i < strlen($alphabet);\
    \ $i++) {\n\t\t$new_alphabet .= $alphabet[($i + 2) % strlen($alphabet)];\n\t}\n\
    \tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$new_string .= $new_alphabet[strpos($alphabet,\
    \ $s[$i])];\n\t}\n\treturn $new_string;\n}\n\necho encrypt(\"hi\") . \"\\n\";\n\
    echo encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho\
    \ encrypt(\"et\") . \"\\n\";", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\
    \t$alphabetArray = str_split($alphabet);\n\t$sArray = str_split($s);\n\t$encrypted\
    \ = \"\";\n\tfor ($i = 0; $i < count($sArray); $i++) {\n\t\t$index = array_search($sArray[$i],\
    \ $alphabetArray);\n\t\t$encrypted .= $alphabetArray[($index + 2) % 26];\n\t}\n\
    \treturn $encrypted;\n}\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\"\
    ) . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";",
  "\t$s = strtolower($s);\n\t$s = str_split($s);\n\t$alphabet = range('a', 'z');\n\
    \t$new_alphabet = array_slice($alphabet, 2, 26);\n\t$new_alphabet = array_merge($new_alphabet,\
    \ array_slice($alphabet, 0, 2));\n\t$new_s = [];\n\tforeach ($s as $letter) {\n\
    \t\t$new_s[] = $new_alphabet[array_search($letter, $alphabet)];\n\t}\n\treturn\
    \ implode($new_s);\n}\n\n/* Create a function decrypt that takes a string as an\
    \ argument and\nreturns a string decrypted with the alphabet being rotated. \n\
    The alphabet should be rotated in a manner such that the letters \nshift up by\
    \ two multiplied to two places.\nFor example:\n>>> decrypt(\"lm\")\n\"hi\"\n>>>\
    \ decrypt(\"ewhjklnop\")\n\"asdfghjkl\"\n>>> decrypt(\"kj\")\n\"gf\"\n>>> decrypt(\"\
    ix\")\n\"et\"*/", "\t$alphabet = range('a', 'z');\n\t$new_alphabet = array_merge(array_slice($alphabet,\
    \ 2), array_slice($alphabet, 0, 2));\n\t$new_string = \"\";\n\tfor ($i = 0; $i\
    \ < strlen($s); $i++) {\n\t\t$new_string .= $new_alphabet[array_search($s[$i],\
    \ $alphabet)];\n\t}\n\treturn $new_string;\n}\necho encrypt(\"hi\") . \"\\n\"\
    ;\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho\
    \ encrypt(\"et\") . \"\\n\";", "\t$alphabet = array(\"a\", \"b\", \"c\", \"d\"\
    , \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\"\
    , \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    );\n\t$new_string = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$index\
    \ = array_search($s[$i], $alphabet);\n\t\t$new_string .= $alphabet[($index + (2\
    \ * 2)) % 26];\n\t}\n\treturn $new_string;\n}\necho encrypt(\"hi\") . \"\\n\"\
    ;\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho\
    \ encrypt(\"et\") . \"\\n\";", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\
    \t$newAlphabet = substr($alphabet, 2) . substr($alphabet, 0, 2);\n\t$encrypted\
    \ = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$encrypted .= $newAlphabet[strpos($alphabet,\
    \ $s[$i])];\n\t}\n\treturn $encrypted;\n}\n\n/* Create a function decrypt that\
    \ takes a string as an argument and\nreturns a string decrypted with the alphabet\
    \ being rotated. \nThe alphabet should be rotated in a manner such that the letters\
    \ \nshift up by two multiplied to two places.\nFor example:\n>>> decrypt(\"lm\"\
    )\n\"hi\"\n>>> decrypt(\"ewhjklnop\")\n\"asdfghjkl\"\n>>> decrypt(\"kj\")\n\"\
    gf\"\n>>> decrypt(\"ix\")\n\"et\"*/", "\t$s = strtolower($s);\n\t$s = str_split($s);\n\
    \t$new_s = array();\n\tforeach ($s as $letter) {\n\t\t$new_s[] = chr(ord($letter)\
    \ + 2 * 2);\n\t}\n\treturn implode($new_s);\n}\n\necho encrypt(\"hi\") . \"\\\
    n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\n\
    echo encrypt(\"et\") . \"\\n\";\n\n/* Create a function decrypt that takes a string\
    \ as an argument and\nreturns a string decrypted with the alphabet being rotated.\
    \ \nThe alphabet should be rotated in a manner such that the letters \nshift up\
    \ by two multiplied to two places.\nFor example:\n>>> decrypt(\"lm\")\n\"hi\"\n\
    >>> decrypt(\"ewhjklnop\")\n\"asdfghjkl\"\n>>> decrypt(\"kj\")\n\"gf\"\n>>> decrypt(\"\
    ix\")\n\"et\"*/", "    $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    $encrypted\
    \ = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n        $index = strpos($alphabet,\
    \ $s[$i]);\n        $encrypted .= $alphabet[($index + 2) % 26];\n    }\n    return\
    \ $encrypted;\n}\n\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\"\
    ) . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";",
  "    $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    $encrypted = \"\";\n    for\
    \ ($i = 0; $i < strlen($s); $i++) {\n        $index = strpos($alphabet, $s[$i]);\n\
    \        $encrypted .= $alphabet[($index + 2) * 2];\n    }\n    return $encrypted;\n\
    }\n\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\n\
    echo encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";", "    $alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    $encrypted = \"\";\n    for ($i = 0;\
    \ $i < strlen($s); $i++) {\n        $index = strpos($alphabet, $s[$i]);\n    \
    \    $encrypted .= $alphabet[($index + 2) % 26];\n    }\n    return $encrypted;\n\
    }\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho\
    \ encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";", "    $alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n    $encrypted = \"\";\n    for ($i = 0;\
    \ $i < strlen($s); $i++) {\n        $index = strpos($alphabet, $s[$i]);\n    \
    \    $encrypted .= $alphabet[($index + 2) % 26];\n    }\n    return $encrypted;\n\
    }\n\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\n\
    echo encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";", "\t$alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n\t$encryptedString = \"\";\n\tfor ($i = 0;\
    \ $i < strlen($s); $i++) {\n\t\t$index = strpos($alphabet, $s[$i]);\n\t\t$encryptedString\
    \ .= $alphabet[($index + 2) % 26];\n\t}\n\treturn $encryptedString;\n}\n\necho\
    \ encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"\
    gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";", "\t$alphabet = array(\"a\"\
    , \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\"\
    , \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\"\
    , \"x\", \"y\", \"z\");\n\t$new_string = \"\";\n\tfor ($i = 0; $i < strlen($s);\
    \ $i++) {\n\t\t$new_string .= $alphabet[(array_search($s[$i], $alphabet) + 2)\
    \ % 26];\n\t}\n\treturn $new_string;\n}\necho encrypt(\"hi\") . \"\\n\";\necho\
    \ encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho encrypt(\"\
    et\") . \"\\n\";", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$new_alphabet\
    \ = substr($alphabet, 2) . substr($alphabet, 0, 2);\n\t$encrypted = \"\";\n\t\
    for ($i = 0; $i < strlen($s); $i++) {\n\t\t$encrypted .= $new_alphabet[strpos($alphabet,\
    \ $s[$i])];\n\t}\n\treturn $encrypted;\n}\n\n/* Create a function decrypt that\
    \ takes a string as an argument and\nreturns a string decrypted with the alphabet\
    \ being rotated. \nThe alphabet should be rotated in a manner such that the letters\
    \ \nshift up by two multiplied to two places.\nFor example:\n>>> decrypt(\"lm\"\
    )\n\"hi\"\n>>> decrypt(\"ewhjklnop\")\n\"asdfghjkl\"\n>>> decrypt(\"kj\")\n\"\
    gf\"\n>>> decrypt(\"ix\")\n\"et\"*/", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\t$new_alphabet = substr($alphabet, 2, 24) . substr($alphabet, 0, 2);\n\t$encrypted\
    \ = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$encrypted .= $new_alphabet[strpos($alphabet,\
    \ $s[$i])];\n\t}\n\treturn $encrypted;\n}\necho encrypt(\"hi\") . \"\\n\";\necho\
    \ encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho encrypt(\"\
    et\") . \"\\n\";", "\t$alphabet = array(\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"\
    g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"\
    t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\");\n\t$encrypted = \"\";\n\t$s = strtolower($s);\n\
    \tfor ($i=0; $i < strlen($s); $i++) { \n\t\t$index = array_search($s[$i], $alphabet);\n\
    \t\t$encrypted .= $alphabet[($index + 2) % 26];\n\t}\n\treturn $encrypted;\n}\n\
    \necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho\
    \ encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";\n", "\t$alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n\t$new_alphabet = substr($alphabet, 2) .\
    \ substr($alphabet, 0, 2);\n\t$new_string = \"\";\n\tfor ($i = 0; $i < strlen($s);\
    \ $i++) {\n\t\t$new_string .= $new_alphabet[strpos($alphabet, $s[$i])];\n\t}\n\
    \treturn $new_string;\n}\n\n/* Create a function decrypt that takes a string as\
    \ an argument and\nreturns a string decrypted with the alphabet being rotated.\
    \ \nThe alphabet should be rotated in a manner such that the letters \nshift up\
    \ by two multiplied to two places.\nFor example:\n>>> decrypt(\"lm\")\n\"hi\"\n\
    >>> decrypt(\"ewhjklnop\")\n\"asdfghjkl\"\n>>> decrypt(\"kj\")\n\"gf\"\n>>> decrypt(\"\
    ix\")\n\"et\"*/", "    $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    $new_alphabet\
    \ = substr($alphabet, 2) . substr($alphabet, 0, 2);\n    $encrypted = \"\";\n\
    \    for ($i = 0; $i < strlen($s); $i++) {\n        $encrypted .= $new_alphabet[strpos($alphabet,\
    \ $s[$i])];\n    }\n    return $encrypted;\n}\n\n/* Create a function decrypt\
    \ that takes a string as an argument and\nreturns a string decrypted with the\
    \ alphabet being rotated. \nThe alphabet should be rotated in a manner such that\
    \ the letters \nshift up by two multiplied to two places.\nFor example:\n>>> decrypt(\"\
    lm\")\n\"hi\"\n>>> decrypt(\"ewhjklnop\")\n\"asdfghjkl\"\n>>> decrypt(\"kj\")\n\
    \"gf\"\n>>> decrypt(\"ix\")\n\"et\"*/", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\t$alphabet = str_split($alphabet);\n\t$s = str_split($s);\n\t$new_s = \"\"\
    ;\n\tforeach ($s as $letter) {\n\t\t$index = array_search($letter, $alphabet);\n\
    \t\t$new_index = ($index + 2) * 2;\n\t\t$new_s .= $alphabet[$new_index];\n\t}\n\
    \treturn $new_s;\n}\n\necho encrypt(\"hi\");\necho encrypt(\"asdfghjkl\");\necho\
    \ encrypt(\"gf\");\necho encrypt(\"et\");", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\t$encrypted = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$encrypted\
    \ .= $alphabet[(strpos($alphabet, $s[$i]) + 2) % 26];\n\t}\n\treturn $encrypted;\n\
    }\n\n/* Create a function decrypt that takes a string as an argument and\nreturns\
    \ a string decrypted with the alphabet being rotated. \nThe alphabet should be\
    \ rotated in a manner such that the letters \nshift up by two multiplied to two\
    \ places.\nFor example:\n>>> decrypt(\"lm\")\n\"hi\"\n>>> decrypt(\"ewhjklnop\"\
    )\n\"asdfghjkl\"\n>>> decrypt(\"kj\")\n\"gf\"\n>>> decrypt(\"ix\")\n\"et\"*/",
  "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$new_alphabet = substr($alphabet,\
    \ 2) . substr($alphabet, 0, 2);\n\t$result = \"\";\n\tfor ($i = 0; $i < strlen($s);\
    \ $i++) {\n\t\t$result .= $new_alphabet[strpos($alphabet, $s[$i])];\n\t}\n\treturn\
    \ $result;\n}\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") .\
    \ \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";",
  "    $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    $newAlphabet = \"cdefghijklmnopqrstuvwxyzab\"\
    ;\n    $newString = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n       \
    \ $newString .= $newAlphabet[strpos($alphabet, $s[$i])];\n    }\n    return $newString;\n\
    }\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho\
    \ encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";", "\t$alphabet =\
    \ \"abcdefghijklmnopqrstuvwxyz\";\n\t$new_alphabet = substr($alphabet, 2) . substr($alphabet,\
    \ 0, 2);\n\t$new_string = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t\
    $new_string .= $new_alphabet[strpos($alphabet, $s[$i])];\n\t}\n\treturn $new_string;\n\
    }\n\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\n\
    echo encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";", "\t$s = strtolower($s);\n\
    \t$s = str_split($s);\n\t$alpha = range('a', 'z');\n\t$alpha = array_merge($alpha,\
    \ $alpha);\n\t$alpha = array_slice($alpha, 2, 26);\n\t$alpha = array_combine(range('a',\
    \ 'z'), $alpha);\n\tforeach ($s as $key => $value) {\n\t\t$s[$key] = $alpha[$value];\n\
    \t}\n\treturn implode($s);\n}\necho encrypt(\"hi\");\necho \"\\n\";\necho encrypt(\"\
    asdfghjkl\");\necho \"\\n\";\necho encrypt(\"gf\");\necho \"\\n\";\necho encrypt(\"\
    et\");\necho \"\\n\";", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$new_alphabet\
    \ = substr($alphabet, 2) . substr($alphabet, 0, 2);\n\t$encrypted = \"\";\n\t\
    for ($i = 0; $i < strlen($s); $i++) {\n\t\t$encrypted .= $new_alphabet[strpos($alphabet,\
    \ $s[$i])];\n\t}\n\treturn $encrypted;\n}\necho encrypt(\"hi\");\necho encrypt(\"\
    asdfghjkl\");\necho encrypt(\"gf\");\necho encrypt(\"et\");", "\t$alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\";\n\t$new_alphabet = substr($alphabet, 2) . substr($alphabet,\
    \ 0, 2);\n\t$encrypted = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t\
    $encrypted .= $new_alphabet[strpos($alphabet, $s[$i])];\n\t}\n\treturn $encrypted;\n\
    }\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho\
    \ encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";", "\t$s = strtolower($s);\n\
    \t$s = str_split($s);\n\t$new_s = \"\";\n\tforeach ($s as $letter) {\n\t\t$new_s\
    \ .= chr(ord($letter) + 2);\n\t}\n\treturn $new_s;\n}\n\necho encrypt(\"hi\")\
    \ . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\
    \\n\";\necho encrypt(\"et\") . \"\\n\";\n", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\t$new_alphabet = substr($alphabet, 2) . substr($alphabet, 0, 2);\n\t$new_string\
    \ = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$new_string .= $new_alphabet[strpos($alphabet,\
    \ $s[$i])];\n\t}\n\treturn $new_string;\n}\necho encrypt(\"hi\") . \"\\n\";\n\
    echo encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho\
    \ encrypt(\"et\") . \"\\n\";", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\
    \t$alphabet_array = str_split($alphabet);\n\t$s_array = str_split($s);\n\t$encrypted_array\
    \ = array();\n\tforeach ($s_array as $letter) {\n\t\t$index = array_search($letter,\
    \ $alphabet_array);\n\t\t$new_index = $index + 2;\n\t\tif ($new_index > 25) {\n\
    \t\t\t$new_index = $new_index - 26;\n\t\t}\n\t\t$encrypted_array[] = $alphabet_array[$new_index];\n\
    \t}\n\t$encrypted_string = implode(\"\", $encrypted_array);\n\treturn $encrypted_string;\n\
    }\n\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\n\
    echo encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";", "\t$alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n\t$encrypted = \"\";\n\tfor ($i = 0; $i <\
    \ strlen($s); $i++) {\n\t\t$index = strpos($alphabet, $s[$i]);\n\t\t$encrypted\
    \ .= $alphabet[($index + 2) % 26];\n\t}\n\treturn $encrypted;\n}\n\necho encrypt(\"\
    hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\"\
    ) . \"\\n\";\necho encrypt(\"et\") . \"\\n\";", "\t$s = strtolower($s);\n\t$s\
    \ = str_split($s);\n\t$new_s = \"\";\n\tforeach ($s as $letter) {\n\t\t$new_s\
    \ .= chr(ord($letter) + 2 * 2);\n\t}\n\treturn $new_s;\n}\n\necho encrypt(\"hi\"\
    ) . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\
    \\n\";\necho encrypt(\"et\") . \"\\n\";\n", "\t$alphabet = array(\"a\",\"b\",\"\
    c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"\
    p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\");\n\t$new_string\
    \ = \"\";\n\t$s = strtolower($s);\n\tfor ($i=0; $i < strlen($s); $i++) { \n\t\t\
    $index = array_search($s[$i], $alphabet);\n\t\t$new_index = ($index + 2) * 2;\n\
    \t\tif ($new_index > 25) {\n\t\t\t$new_index = $new_index - 26;\n\t\t}\n\t\t$new_string\
    \ .= $alphabet[$new_index];\n\t}\n\treturn $new_string;\n}\necho encrypt(\"hi\"\
    ) . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\
    \\n\";\necho encrypt(\"et\") . \"\\n\";", "\t$s = strtolower($s);\n\t$s = str_split($s);\n\
    \t$alphabet = range('a', 'z');\n\t$new_alphabet = array_slice($alphabet, 2, 26);\n\
    \t$new_alphabet = array_merge($new_alphabet, array_slice($alphabet, 0, 2));\n\t\
    $new_string = \"\";\n\tforeach ($s as $letter) {\n\t\t$new_string .= $new_alphabet[array_search($letter,\
    \ $alphabet)];\n\t}\n\treturn $new_string;\n}\n\necho encrypt(\"hi\") . \"\\n\"\
    ;\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho\
    \ encrypt(\"et\") . \"\\n\";\n", "    $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    $encrypted = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n       \
    \ $index = strpos($alphabet, $s[$i]);\n        $encrypted .= $alphabet[($index\
    \ + 2) % 26];\n    }\n    return $encrypted;\n}\necho encrypt(\"hi\") . \"\\n\"\
    ;\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho\
    \ encrypt(\"et\") . \"\\n\";", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\
    \t$newAlphabet = \"cdefghijklmnopqrstuvwxyzab\";\n\t$newString = \"\";\n\tfor\
    \ ($i = 0; $i < strlen($s); $i++) {\n\t\t$newString .= $newAlphabet[strpos($alphabet,\
    \ $s[$i])];\n\t}\n\treturn $newString;\n}\n\n/* Create a function decrypt that\
    \ takes a string as an argument and\nreturns a string decrypted with the alphabet\
    \ being rotated. \nThe alphabet should be rotated in a manner such that the letters\
    \ \nshift up by two multiplied to two places.\nFor example:\n>>> decrypt(\"lm\"\
    )\n\"hi\"\n>>> decrypt(\"ewhjklnop\")\n\"asdfghjkl\"\n>>> decrypt(\"kj\")\n\"\
    gf\"\n>>> decrypt(\"ix\")\n\"et\"*/", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\t$encrypted = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$pos = strpos($alphabet,\
    \ $s[$i]);\n\t\t$pos = ($pos + 2) * 2;\n\t\tif ($pos > 25) {\n\t\t\t$pos = $pos\
    \ - 26;\n\t\t}\n\t\t$encrypted .= $alphabet[$pos];\n\t}\n\treturn $encrypted;\n\
    }\n\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\n\
    echo encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";", "\t$alphabet\
    \ = array(\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"\
    l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"\
    y\",\"z\");\n\t$s = str_split($s);\n\t$result = \"\";\n\tforeach ($s as $letter)\
    \ {\n\t\t$index = array_search($letter, $alphabet);\n\t\t$result .= $alphabet[($index\
    \ + 4) % 26];\n\t}\n\treturn $result;\n}\n\necho encrypt(\"hi\") . \"\\n\";\n\
    echo encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho\
    \ encrypt(\"et\") . \"\\n\";", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\
    \t$new_alphabet = \"cdefghijklmnopqrstuvwxyzab\";\n\t$encrypted = \"\";\n\tfor\
    \ ($i = 0; $i < strlen($s); $i++) {\n\t\t$index = strpos($alphabet, $s[$i]);\n\
    \t\t$encrypted .= $new_alphabet[$index];\n\t}\n\treturn $encrypted;\n}\n\n/* Create\
    \ a function decrypt that takes a string as an argument and\nreturns a string\
    \ decrypted with the alphabet being rotated. \nThe alphabet should be rotated\
    \ in a manner such that the letters \nshift up by two multiplied to two places.\n\
    For example:\n>>> decrypt(\"lm\")\n\"hi\"\n>>> decrypt(\"ewhjklnop\")\n\"asdfghjkl\"\
    \n>>> decrypt(\"kj\")\n\"gf\"\n>>> decrypt(\"ix\")\n\"et\"*/", "\t$alphabet =\
    \ \"abcdefghijklmnopqrstuvwxyz\";\n\t$newAlphabet = substr($alphabet, 2) . substr($alphabet,\
    \ 0, 2);\n\t$newString = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t\
    $newString .= $newAlphabet[strpos($alphabet, $s[$i])];\n\t}\n\treturn $newString;\n\
    }\n\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\n\
    echo encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";", "\t$alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n\t$alphabet = str_split($alphabet);\n\t$s\
    \ = str_split($s);\n\t$new_s = \"\";\n\tfor ($i = 0; $i < count($s); $i++) {\n\
    \t\t$index = array_search($s[$i], $alphabet);\n\t\t$index += 2 * 2;\n\t\tif ($index\
    \ > 25) {\n\t\t\t$index -= 26;\n\t\t}\n\t\t$new_s .= $alphabet[$index];\n\t}\n\
    \treturn $new_s;\n}\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\"\
    ) . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";",
  "\t$alphabet = array(\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\"\
    ,\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\"\
    ,\"x\",\"y\",\"z\");\n\t$alphabet_length = count($alphabet);\n\t$encrypted_string\
    \ = \"\";\n\tfor ($i=0; $i < strlen($s); $i++) { \n\t\t$current_letter = $s[$i];\n\
    \t\t$current_letter_index = array_search($current_letter, $alphabet);\n\t\t$new_letter_index\
    \ = ($current_letter_index + 2) % $alphabet_length;\n\t\t$encrypted_string .=\
    \ $alphabet[$new_letter_index];\n\t}\n\treturn $encrypted_string;\n}\necho encrypt(\"\
    hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\"\
    ) . \"\\n\";\necho encrypt(\"et\") . \"\\n\";", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\t$newAlphabet = \"cdefghijklmnopqrstuvwxyzab\";\n\t$newString = \"\";\n\t\
    for ($i = 0; $i < strlen($s); $i++) {\n\t\t$newString .= $newAlphabet[strpos($alphabet,\
    \ $s[$i])];\n\t}\n\treturn $newString;\n}\n\necho encrypt(\"hi\") . \"\\n\";\n\
    echo encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho\
    \ encrypt(\"et\") . \"\\n\";", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\
    \t$alphabet_array = str_split($alphabet);\n\t$s_array = str_split($s);\n\t$encrypted_string\
    \ = \"\";\n\tforeach ($s_array as $letter) {\n\t\t$index = array_search($letter,\
    \ $alphabet_array);\n\t\t$encrypted_string .= $alphabet_array[$index + 2];\n\t\
    }\n\treturn $encrypted_string;\n}\necho encrypt(\"hi\");\necho \"\\n\";\necho\
    \ encrypt(\"asdfghjkl\");\necho \"\\n\";\necho encrypt(\"gf\");\necho \"\\n\"\
    ;\necho encrypt(\"et\");\necho \"\\n\";", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\t$new_alphabet = substr($alphabet, 2) . substr($alphabet, 0, 2);\n\t$result\
    \ = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$result .= $new_alphabet[strpos($alphabet,\
    \ $s[$i])];\n\t}\n\treturn $result;\n}\n\necho encrypt(\"hi\") . \"\\n\";\necho\
    \ encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho encrypt(\"\
    et\") . \"\\n\";\n", "    $s = str_split($s);\n    $new_s = [];\n    foreach ($s\
    \ as $char) {\n        $new_s[] = chr(ord($char) + 2 * 2);\n    }\n    return\
    \ implode($new_s);\n}\n\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\"\
    ) . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";",
  "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$encrypted = \"\";\n\t$s = strtolower($s);\n\
    \tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$index = strpos($alphabet, $s[$i]);\n\
    \t\t$encrypted .= $alphabet[($index + 2) % 26];\n\t}\n\treturn $encrypted;\n}\n\
    \n/* Create a function decrypt that takes a string as an argument and\nreturns\
    \ a string decrypted with the alphabet being rotated. \nThe alphabet should be\
    \ rotated in a manner such that the letters \nshift up by two multiplied to two\
    \ places.\nFor example:\n>>> decrypt(\"lm\")\n\"hi\"\n>>> decrypt(\"ewhjklnop\"\
    )\n\"asdfghjkl\"\n>>> decrypt(\"kj\")\n\"gf\"\n>>> decrypt(\"ix\")\n\"et\"*/",
  "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$new_alphabet = substr($alphabet,\
    \ 2) . substr($alphabet, 0, 2);\n\t$new_string = \"\";\n\tfor ($i = 0; $i < strlen($s);\
    \ $i++) {\n\t\t$new_string .= $new_alphabet[strpos($alphabet, $s[$i])];\n\t}\n\
    \treturn $new_string;\n}\n\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\"\
    ) . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";",
  "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$encrypted = \"\";\n\tfor ($i\
    \ = 0; $i < strlen($s); $i++) {\n\t\t$encrypted .= $alphabet[(strpos($alphabet,\
    \ $s[$i]) + 2) % 26];\n\t}\n\treturn $encrypted;\n}\n\n/* Create a function decrypt\
    \ that takes a string as an argument and\nreturns a string decrypted with the\
    \ alphabet being rotated. \nThe alphabet should be rotated in a manner such that\
    \ the letters \nshift up by two multiplied to two places.\nFor example:\n>>> decrypt(\"\
    lm\")\n\"hi\"\n>>> decrypt(\"ewhjklnop\")\n\"asdfghjkl\"\n>>> decrypt(\"kj\")\n\
    \"gf\"\n>>> decrypt(\"ix\")\n\"et\"*/", "\t$arr = str_split($s);\n\t$new_arr =\
    \ [];\n\tforeach ($arr as $letter) {\n\t\t$new_arr[] = chr(ord($letter) + 2 *\
    \ 2);\n\t}\n\treturn implode($new_arr);\n}\n\necho encrypt(\"hi\") . PHP_EOL;\n\
    echo encrypt(\"asdfghjkl\") . PHP_EOL;\necho encrypt(\"gf\") . PHP_EOL;\necho\
    \ encrypt(\"et\") . PHP_EOL;", "\t$s = strtolower($s);\n\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\t$new_string = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$new_string\
    \ .= $alphabet[(strpos($alphabet, $s[$i]) + 2) % 26];\n\t}\n\treturn $new_string;\n\
    }\n\n/* Create a function decrypt that takes a string as an argument and\nreturns\
    \ a string decrypted with the alphabet being rotated. \nThe alphabet should be\
    \ rotated in a manner such that the letters \nshift down by two multiplied to\
    \ two places.\nFor example:\n>>> decrypt(\"lm\")\n\"hi\"\n>>> decrypt(\"ewhjklnop\"\
    )\n\"asdfghjkl\"\n>>> decrypt(\"kj\")\n\"gf\"\n>>> decrypt(\"ix\")\n\"et\"*/",
  "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$encrypted = \"\";\n\tfor ($i\
    \ = 0; $i < strlen($s); $i++) {\n\t\t$encrypted .= $alphabet[(strpos($alphabet,\
    \ $s[$i]) + 2 * 2) % 26];\n\t}\n\treturn $encrypted;\n}\necho encrypt(\"hi\")\
    \ . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\
    \\n\";\necho encrypt(\"et\") . \"\\n\";", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\t$alphabet_array = str_split($alphabet);\n\t$s_array = str_split($s);\n\t\
    $encrypted_array = array();\n\tforeach ($s_array as $letter) {\n\t\t$letter_index\
    \ = array_search($letter, $alphabet_array);\n\t\t$encrypted_letter_index = $letter_index\
    \ + 2 * 2;\n\t\t$encrypted_letter = $alphabet_array[$encrypted_letter_index];\n\
    \t\tarray_push($encrypted_array, $encrypted_letter);\n\t}\n\t$encrypted_string\
    \ = implode(\"\", $encrypted_array);\n\treturn $encrypted_string;\n}\necho encrypt(\"\
    hi\");\necho \"\\n\";\necho encrypt(\"asdfghjkl\");\necho \"\\n\";\necho encrypt(\"\
    gf\");\necho \"\\n\";\necho encrypt(\"et\");\necho \"\\n\";", "\t$alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\";\n\t$encrypted = \"\";\n\tfor ($i = 0; $i < strlen($s);\
    \ $i++) {\n\t\t$index = strpos($alphabet, $s[$i]);\n\t\t$encrypted .= $alphabet[($index\
    \ + 2) % 26];\n\t}\n\treturn $encrypted;\n}\n\necho encrypt(\"hi\") . \"\\n\"\
    ;\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho\
    \ encrypt(\"et\") . \"\\n\";", "  $arr = str_split($s);\n  $arr2 = array();\n\
    \  foreach ($arr as $letter) {\n    $arr2[] = chr(ord($letter) + 2 * 2);\n  }\n\
    \  return implode($arr2);\n}\n\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"\
    asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\"\
    ) . \"\\n\";\n", "\t$alphabet = array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"\
    , \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\"\
    , \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\");\n\t$new_string\
    \ = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$new_string .= $alphabet[(array_search($s[$i],\
    \ $alphabet) + 2) % 26];\n\t}\n\treturn $new_string;\n}\n\necho encrypt(\"hi\"\
    ) . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\
    \\n\";\necho encrypt(\"et\") . \"\\n\";", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\t$alphabet_array = str_split($alphabet);\n\t$s_array = str_split($s);\n\t\
    $new_string = \"\";\n\tforeach ($s_array as $letter) {\n\t\t$index = array_search($letter,\
    \ $alphabet_array);\n\t\t$new_index = ($index + 2) * 2;\n\t\t$new_string .= $alphabet_array[$new_index];\n\
    \t}\n\treturn $new_string;\n}\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"\
    asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\"\
    ) . \"\\n\";", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$encrypted =\
    \ \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$index = strpos($alphabet,\
    \ $s[$i]);\n\t\t$encrypted .= $alphabet[($index + 2) % 26];\n\t}\n\treturn $encrypted;\n\
    }\n\necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\n\
    echo encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";\n", "\t$alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n\t$encrypt = \"\";\n\tfor ($i = 0; $i < strlen($s);\
    \ $i++) {\n\t\t$index = strpos($alphabet, $s[$i]);\n\t\t$encrypt .= $alphabet[($index\
    \ + 2) % 26];\n\t}\n\treturn $encrypt;\n}\n\n/* Create a function decrypt that\
    \ takes a string as an argument and\nreturns a string decrypted with the alphabet\
    \ being rotated. \nThe alphabet should be rotated in a manner such that the letters\
    \ \nshift up by two multiplied to two places.\nFor example:\n>>> decrypt(\"lm\"\
    )\n\"hi\"\n>>> decrypt(\"ewhjklnop\")\n\"asdfghjkl\"\n>>> decrypt(\"kj\")\n\"\
    gf\"\n>>> decrypt(\"ix\")\n\"et\"*/", "\t$s = strtolower($s);\n\t$s = str_split($s);\n\
    \t$new_s = \"\";\n\tforeach ($s as $letter) {\n\t\t$new_s .= chr(ord($letter)\
    \ + 2);\n\t}\n\treturn $new_s;\n}\n", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\t$new_alphabet = substr($alphabet, 2) . substr($alphabet, 0, 2);\n\t$new_string\
    \ = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$new_string .= $new_alphabet[strpos($alphabet,\
    \ $s[$i])];\n\t}\n\treturn $new_string;\n}\n\necho encrypt(\"hi\") . \"\\n\";\n\
    echo encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho\
    \ encrypt(\"et\") . \"\\n\";", "\t$alphabet = array(\"a\",\"b\",\"c\",\"d\",\"\
    e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"\
    r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\");\n\t$new_alphabet = array();\n\
    \t$new_string = \"\";\n\t$new_index = 0;\n\tfor ($i = 0; $i < count($alphabet);\
    \ $i++) {\n\t\tif ($i < 2) {\n\t\t\t$new_index = count($alphabet) - 2 + $i;\n\t\
    \t} else {\n\t\t\t$new_index = $i - 2;\n\t\t}\n\t\t$new_alphabet[$i] = $alphabet[$new_index];\n\
    \t}\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$new_string .= $new_alphabet[array_search($s[$i],\
    \ $alphabet)];\n\t}\n\treturn $new_string;\n}\necho encrypt(\"hi\") . \"\\n\"\
    ;\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho\
    \ encrypt(\"et\") . \"\\n\";", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\
    \t$encrypted = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$index = strpos($alphabet,\
    \ $s[$i]);\n\t\t$encrypted .= $alphabet[($index + 2) % 26];\n\t}\n\treturn $encrypted;\n\
    }\n\n/* Create a function decrypt that takes a string as an argument and\nreturns\
    \ a string decrypted with the alphabet being rotated. \nThe alphabet should be\
    \ rotated in a manner such that the letters \nshift up by two multiplied to two\
    \ places.\nFor example:\n>>> decrypt(\"lm\")\n\"hi\"\n>>> decrypt(\"ewhjklnop\"\
    )\n\"asdfghjkl\"\n>>> decrypt(\"kj\")\n\"gf\"\n>>> decrypt(\"ix\")\n\"et\"*/",
  "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$encrypted = \"\";\n\t$s = strtolower($s);\n\
    \tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$letter = $s[$i];\n\t\t$position\
    \ = strpos($alphabet, $letter);\n\t\t$newPosition = ($position + 2) * 2;\n\t\t\
    $encrypted = $encrypted . $alphabet[$newPosition];\n\t}\n\treturn $encrypted;\n\
    }\n\n/* Create a function decrypt that takes a string as an argument and\nreturns\
    \ a string decrypted with the alphabet being rotated. \nThe alphabet should be\
    \ rotated in a manner such that the letters \nshift up by two multiplied to two\
    \ places.\nFor example:\n>>> decrypt(\"lm\")\n\"hi\"\n>>> decrypt(\"ewhjklnop\"\
    )\n\"asdfghjkl\"\n>>> decrypt(\"kj\")\n\"gf\"\n>>> decrypt(\"ix\")\n\"et\"*/",
  "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$new_alphabet = \"cdefghijklmnopqrstuvwxyzab\"\
    ;\n\t$new_string = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$new_string\
    \ .= $new_alphabet[strpos($alphabet, $s[$i])];\n\t}\n\treturn $new_string;\n}\n\
    \necho encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho\
    \ encrypt(\"gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";\n", "\t$alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\n\t$new_alphabet = \"cdefghijklmnopqrstuvwxyzab\"\
    ;\n\t$encrypted = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$encrypted\
    \ .= $new_alphabet[strpos($alphabet, $s[$i])];\n\t}\n\treturn $encrypted;\n}\n\
    \necho encrypt(\"hi\");\necho encrypt(\"asdfghjkl\");\necho encrypt(\"gf\");\n\
    echo encrypt(\"et\");", "\t$alphabet = 'abcdefghijklmnopqrstuvwxyz';\n\t$new_alphabet\
    \ = substr($alphabet, 2) . substr($alphabet, 0, 2);\n\t$new_string = '';\n\tfor\
    \ ($i = 0; $i < strlen($s); $i++) {\n\t\t$new_string .= $new_alphabet[strpos($alphabet,\
    \ $s[$i])];\n\t}\n\treturn $new_string;\n}\necho encrypt(\"hi\") . \"\\n\";\n\
    echo encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho\
    \ encrypt(\"et\") . \"\\n\";", "    $alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n    $new_alphabet = substr($alphabet, 2) . substr($alphabet, 0, 2);\n    $encrypted\
    \ = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n        $encrypted .= $new_alphabet[strpos($alphabet,\
    \ $s[$i])];\n    }\n    return $encrypted;\n}\necho encrypt(\"hi\") . \"\\n\"\
    ;\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\\n\";\necho\
    \ encrypt(\"et\") . \"\\n\";", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\
    \t$new_alphabet = substr($alphabet, 2) . substr($alphabet, 0, 2);\n\t$new_string\
    \ = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$new_string .= $new_alphabet[strpos($alphabet,\
    \ $s[$i])];\n\t}\n\treturn $new_string;\n}\necho encrypt(\"hi\");\necho encrypt(\"\
    asdfghjkl\");\necho encrypt(\"gf\");\necho encrypt(\"et\");", "\t$alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\";\n\t$new_alphabet = substr($alphabet, 2) . substr($alphabet,\
    \ 0, 2);\n\t$new_string = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t\
    $new_string .= $new_alphabet[strpos($alphabet, $s[$i])];\n\t}\n\treturn $new_string;\n\
    }\n\n/* Create a function decrypt that takes a string as an argument and\nreturns\
    \ a string decrypted with the alphabet being rotated. \nThe alphabet should be\
    \ rotated in a manner such that the letters \nshift up by two multiplied to two\
    \ places.\nFor example:\n>>> decrypt(\"lm\")\n\"hi\"\n>>> decrypt(\"ewhjklnop\"\
    )\n\"asdfghjkl\"\n>>> decrypt(\"kj\")\n\"gf\"\n>>> decrypt(\"ix\")\n\"et\"*/",
  "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$encrypted = \"\";\n\tfor ($i\
    \ = 0; $i < strlen($s); $i++) {\n\t\t$index = strpos($alphabet, $s[$i]);\n\t\t\
    $encrypted .= $alphabet[($index + 2) % 26];\n\t}\n\treturn $encrypted;\n}\necho\
    \ encrypt(\"hi\") . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"\
    gf\") . \"\\n\";\necho encrypt(\"et\") . \"\\n\";", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\t$new_alphabet = \"\";\n\t$new_string = \"\";\n\tfor ($i = 0; $i < strlen($alphabet);\
    \ $i++) {\n\t\t$new_alphabet .= $alphabet[($i + 2) % strlen($alphabet)];\n\t}\n\
    \tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$new_string .= $new_alphabet[strpos($alphabet,\
    \ $s[$i])];\n\t}\n\treturn $new_string;\n}\n\n/* Create a function decrypt that\
    \ takes a string as an argument and\nreturns a string decrypted with the alphabet\
    \ being rotated. \nThe alphabet should be rotated in a manner such that the letters\
    \ \nshift up by two multiplied to two places.\nFor example:\n>>> decrypt(\"lm\"\
    )\n\"hi\"\n>>> decrypt(\"ewhjklnop\")\n\"asdfghjkl\"\n>>> decrypt(\"kj\")\n\"\
    gf\"\n>>> decrypt(\"ix\")\n\"et\"*/", "\t$alphabet = array(\"a\",\"b\",\"c\",\"\
    d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"\
    q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\");\n\t$new_string = \"\
    \";\n\tfor ($i=0; $i < strlen($s); $i++) { \n\t\t$new_string .= $alphabet[(array_search($s[$i],\
    \ $alphabet) + 4) % 26];\n\t}\n\treturn $new_string;\n}\n\necho encrypt(\"hi\"\
    ) . \"\\n\";\necho encrypt(\"asdfghjkl\") . \"\\n\";\necho encrypt(\"gf\") . \"\
    \\n\";\necho encrypt(\"et\") . \"\\n\";\n", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;\n\t$new_alphabet = substr($alphabet, 2).substr($alphabet, 0, 2);\n\t$new_string\
    \ = \"\";\n\tfor ($i = 0; $i < strlen($s); $i++) {\n\t\t$new_string .= $new_alphabet[strpos($alphabet,\
    \ $s[$i])];\n\t}\n\treturn $new_string;\n}\n\necho encrypt(\"hi\");\necho encrypt(\"\
    asdfghjkl\");\necho encrypt(\"gf\");\necho encrypt(\"et\");\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

language: php
name: HumanEval_124_valid_date
results:
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    if (preg_match(\"/^([0-9]{2})-([0-9]{2})-([0-9]{4})$/\"\
    , $date, $parts)) {\n        if (checkdate($parts[1], $parts[2], $parts[3])) {\n\
    \            return true;\n        }\n    }\n    return false;\n}\n\necho valid_date(\"\
    03-11-2000\");\necho valid_date(\"15-01-2012\");\necho valid_date(\"04-0-2040\"\
    );\necho valid_date(\"06-04-2020\");\necho valid_date(\"06/04/2020\");\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n  if(empty($date)) {\n    return false;\n  }\n \
    \ $date_arr = explode(\"-\", $date);\n  if(count($date_arr) != 3) {\n    return\
    \ false;\n  }\n  $month = $date_arr[0];\n  $day = $date_arr[1];\n  $year = $date_arr[2];\n\
    \  if($month < 1 || $month > 12) {\n    return false;\n  }\n  if($day < 1 || $day\
    \ > 31) {\n    return false;\n  }\n  if($month == 2) {\n    if($day > 29) {\n\
    \      return false;\n    }\n  }\n  if($month == 4 || $month == 6 || $month ==\
    \ 9 || $month == 11) {\n    if($day > 30) {\n      return false;\n    }\n  }\n\
    \  if(strlen($year) != 4) {\n    return false;\n  }\n  return true;\n}\necho valid_date(\"\
    03-11-2000\") . \"\\n\";\necho valid_date(\"15-01-2012\") . \"\\n\";\necho valid_date(\"\
    04-0-2040\") . \"\\n\";\necho valid_date(\"06-04-2020\") . \"\\n\";\necho valid_date(\"\
    06/04/2020\") . \"\\n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) return false;\n    if (strlen($date[0]) != 2 || strlen($date[1]) != 2\
    \ || strlen($date[2]) != 4) return false;\n    if ($date[0] < 1 || $date[0] >\
    \ 12) return false;\n    if ($date[0] == 2) {\n        if ($date[2] % 4 == 0)\
    \ {\n            if ($date[1] < 1 || $date[1] > 29) return false;\n        } else\
    \ {\n            if ($date[1] < 1 || $date[1] > 28) return false;\n        }\n\
    \    } elseif ($date[0] == 1 || $date[0] == 3 || $date[0] == 5 || $date[0] ==\
    \ 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12) {\n        if ($date[1]\
    \ < 1 || $date[1] > 31) return false;\n    } else {\n        if ($date[1] < 1\
    \ || $date[1] > 30) return false;\n    }\n    return true;\n}\n\n/*\n * Write\
    \ a function that takes a string and returns the number of vowels in the string.\n\
    \ * >>> count_vowels(\"hello\")\n * 2\n * >>> count_vowels(\"world\")\n * 1\n\
    \ * >>> count_vowels(\"\")\n * 0\n * >>> count_vowels(\"aeiou\")\n * 5\n * >>>\
    \ count_vowels(\"abcdefghijklmnopqrstuvwxyz\")\n * 5\n * >>> count_vowels(\"bcdfghjkl\"\
    )\n * 0\n */\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if ($date[0] < 1 || $date[0] > 12)\
    \ {\n        return false;\n    }\n    if ($date[1] < 1 || $date[1] > 31) {\n\
    \        return false;\n    }\n    if ($date[0] == 2 && $date[1] > 29) {\n   \
    \     return false;\n    }\n    if ($date[0] == 4 || $date[0] == 6 || $date[0]\
    \ == 9 || $date[0] == 11) {\n        if ($date[1] > 30) {\n            return\
    \ false;\n        }\n    }\n    if ($date[2] < 1) {\n        return false;\n \
    \   }\n    return true;\n}\n\n/*\nWrite a function that takes an array of numbers\
    \ and returns the sum of the two lowest positive numbers.\n\n>>> sum_two_smallest_numbers([5,\
    \ 8, 12, 18, 22])\n13\n>>> sum_two_smallest_numbers([7, 15, 12, 18, 22])\n19\n\
    >>> sum_two_smallest_numbers([25, 42, 12, 18, 22])\n30\n*/\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($day < 1 || $day > 31) {\n        return false;\n    }\n    if\
    \ ($month == 2) {\n        if ($day > 29) {\n            return false;\n     \
    \   }\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n        if ($day > 30) {\n            return false;\n        }\n    }\n \
    \   if ($year < 1) {\n        return false;\n    }\n    return true;\n}\n\necho\
    \ valid_date(\"03-11-2000\");\necho valid_date(\"15-01-2012\");\necho valid_date(\"\
    04-0-2040\");\necho valid_date(\"06-04-2020\");\necho valid_date(\"06/04/2020\"\
    );\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($day < 1 || $day > 31) {\n        return false;\n    }\n    if\
    \ ($month == 2) {\n        if ($day > 29) {\n            return false;\n     \
    \   }\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n        if ($day > 30) {\n            return false;\n        }\n    }\n \
    \   if ($year < 1) {\n        return false;\n    }\n    return true;\n}\n\necho\
    \ valid_date(\"03-11-2000\") . \"\\n\";\necho valid_date(\"15-01-2012\") . \"\\\
    n\";\necho valid_date(\"04-0-2040\") . \"\\n\";\necho valid_date(\"06-04-2020\"\
    ) . \"\\n\";\necho valid_date(\"06/04/2020\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($day < 1 || $day > 31) {\n        return false;\n    }\n    if\
    \ ($month == 2) {\n        if ($day > 29) {\n            return false;\n     \
    \   }\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n        if ($day > 30) {\n            return false;\n        }\n    }\n \
    \   if ($year < 0) {\n        return false;\n    }\n    return true;\n}\n\necho\
    \ valid_date(\"03-11-2000\") ? \"true\" : \"false\";\necho \"\\n\";\necho valid_date(\"\
    15-01-2012\") ? \"true\" : \"false\";\necho \"\\n\";\necho valid_date(\"04-0-2040\"\
    ) ? \"true\" : \"false\";\necho \"\\n\";\necho valid_date(\"06-04-2020\") ? \"\
    true\" : \"false\";\necho \"\\n\";\necho valid_date(\"06/04/2020\") ? \"true\"\
    \ : \"false\";\necho \"\\n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    false

    false

    true

    false

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if ($date[0] < 1 || $date[0] > 12)\
    \ {\n        return false;\n    }\n    if ($date[0] == 2) {\n        if ($date[1]\
    \ < 1 || $date[1] > 29) {\n            return false;\n        }\n    } elseif\
    \ ($date[0] == 1 || $date[0] == 3 || $date[0] == 5 || $date[0] == 7 || $date[0]\
    \ == 8 || $date[0] == 10 || $date[0] == 12) {\n        if ($date[1] < 1 || $date[1]\
    \ > 31) {\n            return false;\n        }\n    } else {\n        if ($date[1]\
    \ < 1 || $date[1] > 30) {\n            return false;\n        }\n    }\n    if\
    \ ($date[2] < 1) {\n        return false;\n    }\n    return true;\n}\n\necho\
    \ valid_date(\"03-11-2000\");\necho \"<br>\";\necho valid_date(\"15-01-2012\"\
    );\necho \"<br>\";\necho valid_date(\"04-0-2040\");\necho \"<br>\";\necho valid_date(\"\
    06-04-2020\");\necho \"<br>\";\necho valid_date(\"06/04/2020\");\necho \"<br>\"\
    ;\necho valid_date(\"06-04-2020\");\necho \"<br>\";\necho valid_date(\"06-04-2020\"\
    );\necho \"<br>\";\necho valid_date(\"06-04-2020\");\necho \"<br>\";\necho valid_date(\"\
    06-04-2020\");\necho \"<br>\";\necho valid_date(\"06-04-2020\");\necho \"<br>\"\
    ;\necho valid_date(\"06-04-2020\");\necho \"<br>\";\necho valid_date(\"06-04-2020\"\
    );\necho \"<br>\";\necho valid_date(\"06-04-2020\");\necho \"<br>\";\necho valid_date(\"\
    06-04-2020\");\necho \"<br>\";\necho valid_date\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting "," or ";" in
    /tmp/tmp0_3div3f.php on line 75

    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if (!is_numeric($date[0]) || !is_numeric($date[1])\
    \ || !is_numeric($date[2])) {\n        return false;\n    }\n    if ($date[0]\
    \ < 1 || $date[0] > 12) {\n        return false;\n    }\n    if ($date[0] == 2)\
    \ {\n        if ($date[1] < 1 || $date[1] > 29) {\n            return false;\n\
    \        }\n    } elseif ($date[0] == 1 || $date[0] == 3 || $date[0] == 5 || $date[0]\
    \ == 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12) {\n        if ($date[1]\
    \ < 1 || $date[1] > 31) {\n            return false;\n        }\n    } else {\n\
    \        if ($date[1] < 1 || $date[1] > 30) {\n            return false;\n   \
    \     }\n    }\n    return true;\n}\n\necho valid_date(\"03-11-2000\") . \"\\\
    n\";\necho valid_date(\"15-01-2012\") . \"\\n\";\necho valid_date(\"04-0-2040\"\
    ) . \"\\n\";\necho valid_date(\"06-04-2020\") . \"\\n\";\necho valid_date(\"06/04/2020\"\
    ) . \"\\n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    if(empty($date)){\n        return false;\n \
    \   }\n    $date = explode('-', $date);\n    if(count($date) != 3){\n        return\
    \ false;\n    }\n    if(!checkdate($date[0], $date[1], $date[2])){\n        return\
    \ false;\n    }\n    return true;\n}\n\n/*\n * Write a function that takes a string\
    \ and returns the number of vowels in the string.\n * >>> count_vowels(\"Hello\
    \ World\")\n * 3\n * >>> count_vowels(\"Python\")\n * 2\n * >>> count_vowels(\"\
    Theistareykjarbunga\")\n * 8\n * >>> count_vowels(\"grrrrgh!\")\n * 0\n * >>>\
    \ count_vowels(\"Github is the second best thing that happend to programmers,\
    \ after the keyboard!\")\n * 22\n * >>> count_vowels(\"A nice day to code!\")\n\
    \ * 8\n */\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($month == 2) {\n        if ($day < 1 || $day > 29) {\n       \
    \     return false;\n        }\n    } else if ($month == 1 || $month == 3 || $month\
    \ == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n    \
    \    if ($day < 1 || $day > 31) {\n            return false;\n        }\n    }\
    \ else {\n        if ($day < 1 || $day > 30) {\n            return false;\n  \
    \      }\n    }\n    if ($year < 1) {\n        return false;\n    }\n    return\
    \ true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if ($date[0] < 1 || $date[0] > 12)\
    \ {\n        return false;\n    }\n    if ($date[0] == 2) {\n        if ($date[1]\
    \ < 1 || $date[1] > 29) {\n            return false;\n        }\n    } elseif\
    \ ($date[0] == 1 || $date[0] == 3 || $date[0] == 5 || $date[0] == 7 || $date[0]\
    \ == 8 || $date[0] == 10 || $date[0] == 12) {\n        if ($date[1] < 1 || $date[1]\
    \ > 31) {\n            return false;\n        }\n    } else {\n        if ($date[1]\
    \ < 1 || $date[1] > 30) {\n            return false;\n        }\n    }\n    if\
    \ (strlen($date[2]) != 4) {\n        return false;\n    }\n    return true;\n\
    }\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if (strlen($date[0]) != 2 || strlen($date[1])\
    \ != 2 || strlen($date[2]) != 4) {\n        return false;\n    }\n    if ($date[0]\
    \ < 1 || $date[0] > 12) {\n        return false;\n    }\n    if ($date[0] == 2)\
    \ {\n        if ($date[1] < 1 || $date[1] > 29) {\n            return false;\n\
    \        }\n    } elseif ($date[0] == 1 || $date[0] == 3 || $date[0] == 5 || $date[0]\
    \ == 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12) {\n        if ($date[1]\
    \ < 1 || $date[1] > 31) {\n            return false;\n        }\n    } else {\n\
    \        if ($date[1] < 1 || $date[1] > 30) {\n            return false;\n   \
    \     }\n    }\n    return true;\n}\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n  $date = explode(\"-\", $date);\n  if (count($date)\
    \ != 3) {\n    return false;\n  }\n  if (!is_numeric($date[0]) || !is_numeric($date[1])\
    \ || !is_numeric($date[2])) {\n    return false;\n  }\n  if ($date[0] < 1 || $date[0]\
    \ > 12) {\n    return false;\n  }\n  if ($date[0] == 1 || $date[0] == 3 || $date[0]\
    \ == 5 || $date[0] == 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12)\
    \ {\n    if ($date[1] < 1 || $date[1] > 31) {\n      return false;\n    }\n  }\n\
    \  if ($date[0] == 4 || $date[0] == 6 || $date[0] == 9 || $date[0] == 11) {\n\
    \    if ($date[1] < 1 || $date[1] > 30) {\n      return false;\n    }\n  }\n \
    \ if ($date[0] == 2) {\n    if ($date[1] < 1 || $date[1] > 29) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\necho valid_date(\"03-11-2000\") . \"\\\
    n\";\necho valid_date(\"15-01-2012\") . \"\\n\";\necho valid_date(\"04-0-2040\"\
    ) . \"\\n\";\necho valid_date(\"06-04-2020\") . \"\\n\";\necho valid_date(\"06/04/2020\"\
    ) . \"\\n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n  $date = explode(\"-\", $date);\n  if (count($date)\
    \ != 3) {\n    return false;\n  }\n  $month = $date[0];\n  $day = $date[1];\n\
    \  $year = $date[2];\n  if ($month < 1 || $month > 12) {\n    return false;\n\
    \  }\n  if ($month == 2) {\n    if ($day < 1 || $day > 29) {\n      return false;\n\
    \    }\n  } else if ($month == 1 || $month == 3 || $month == 5 || $month == 7\
    \ || $month == 8 || $month == 10 || $month == 12) {\n    if ($day < 1 || $day\
    \ > 31) {\n      return false;\n    }\n  } else {\n    if ($day < 1 || $day >\
    \ 30) {\n      return false;\n    }\n  }\n  if ($year < 1) {\n    return false;\n\
    \  }\n  return true;\n}\necho valid_date(\"03-11-2000\") . \"\\n\";\necho valid_date(\"\
    15-01-2012\") . \"\\n\";\necho valid_date(\"04-0-2040\") . \"\\n\";\necho valid_date(\"\
    06-04-2020\") . \"\\n\";\necho valid_date(\"06/04/2020\") . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n\t$date = explode(\"-\", $date);\n\tif (count($date)\
    \ != 3) {\n\t\treturn false;\n\t}\n\t$day = $date[1];\n\t$month = $date[0];\n\t\
    $year = $date[2];\n\tif ($month < 1 || $month > 12) {\n\t\treturn false;\n\t}\n\
    \tif ($day < 1 || $day > 31) {\n\t\treturn false;\n\t}\n\tif ($month == 2) {\n\
    \t\tif ($day > 29) {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif ($month == 4 || $month\
    \ == 6 || $month == 9 || $month == 11) {\n\t\tif ($day > 30) {\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\treturn true;\n}\n\necho valid_date(\"03-11-2000\") . \"\\n\";\n\
    echo valid_date(\"15-01-2012\") . \"\\n\";\necho valid_date(\"04-0-2040\") . \"\
    \\n\";\necho valid_date(\"06-04-2020\") . \"\\n\";\necho valid_date(\"06/04/2020\"\
    ) . \"\\n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    if (preg_match(\"/^([0-9]{2})-([0-9]{2})-([0-9]{4})$/\"\
    , $date, $parts)) {\n        if (checkdate($parts[1], $parts[2], $parts[3])) {\n\
    \            return true;\n        }\n    }\n    return false;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n  $date_arr = explode(\"-\", $date);\n  if (count($date_arr)\
    \ != 3) {\n    return false;\n  }\n  $month = $date_arr[0];\n  $day = $date_arr[1];\n\
    \  $year = $date_arr[2];\n  if ($month < 1 || $month > 12) {\n    return false;\n\
    \  }\n  if ($day < 1 || $day > 31) {\n    return false;\n  }\n  if ($month ==\
    \ 2) {\n    if ($day > 29) {\n      return false;\n    }\n  }\n  if ($month ==\
    \ 4 || $month == 6 || $month == 9 || $month == 11) {\n    if ($day > 30) {\n \
    \     return false;\n    }\n  }\n  if ($year < 1) {\n    return false;\n  }\n\
    \  return true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n  $date = explode(\"-\", $date);\n  if (count($date)\
    \ != 3) {\n    return false;\n  }\n  $month = $date[0];\n  $day = $date[1];\n\
    \  $year = $date[2];\n  if ($month < 1 || $month > 12) {\n    return false;\n\
    \  }\n  if ($day < 1 || $day > 31) {\n    return false;\n  }\n  if ($month ==\
    \ 2) {\n    if ($day > 29) {\n      return false;\n    }\n  }\n  if ($month ==\
    \ 4 || $month == 6 || $month == 9 || $month == 11) {\n    if ($day > 30) {\n \
    \     return false;\n    }\n  }\n  if ($year < 1) {\n    return false;\n  }\n\
    \  return true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n  if (preg_match(\"/^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$/\"\
    ,$date)) {\n    $date = explode(\"-\",$date);\n    $month = $date[0];\n    $day\
    \ = $date[1];\n    $year = $date[2];\n    if ($month == 2) {\n      if ($day >\
    \ 29) {\n        return false;\n      }\n    }\n    if ($month == 4 || $month\
    \ == 6 || $month == 9 || $month == 11) {\n      if ($day > 30) {\n        return\
    \ false;\n      }\n    }\n    if ($month == 1 || $month == 3 || $month == 5 ||\
    \ $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n      if ($day\
    \ > 31) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return\
    \ false;\n}\necho valid_date(\"03-11-2000\") . \"\\n\";\necho valid_date(\"15-01-2012\"\
    ) . \"\\n\";\necho valid_date(\"04-0-2040\") . \"\\n\";\necho valid_date(\"06-04-2020\"\
    ) . \"\\n\";\necho valid_date(\"06/04/2020\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date_array = explode(\"-\", $date);\n    if\
    \ (count($date_array) != 3) {\n        return false;\n    }\n    $day = $date_array[1];\n\
    \    $month = $date_array[0];\n    $year = $date_array[2];\n    if ($day < 1 ||\
    \ $day > 31) {\n        return false;\n    }\n    if ($month < 1 || $month > 12)\
    \ {\n        return false;\n    }\n    if ($year < 1) {\n        return false;\n\
    \    }\n    if ($month == 2) {\n        if ($day > 29) {\n            return false;\n\
    \        }\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month\
    \ == 11) {\n        if ($day > 30) {\n            return false;\n        }\n \
    \   }\n    return true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date_arr = explode(\"-\", $date);\n    if (count($date_arr)\
    \ != 3) return false;\n    $month = $date_arr[0];\n    $day = $date_arr[1];\n\
    \    $year = $date_arr[2];\n    if ($month < 1 || $month > 12) return false;\n\
    \    if ($month == 2) {\n        if ($day < 1 || $day > 29) return false;\n  \
    \  } elseif ($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month\
    \ == 8 || $month == 10 || $month == 12) {\n        if ($day < 1 || $day > 31)\
    \ return false;\n    } else {\n        if ($day < 1 || $day > 30) return false;\n\
    \    }\n    if ($year < 1) return false;\n    return true;\n}\n\n$date = \"03-11-2000\"\
    ;\necho valid_date($date);\necho \"\\n\";\n$date = \"15-01-2012\";\necho valid_date($date);\n\
    echo \"\\n\";\n$date = \"04-0-2040\";\necho valid_date($date);\necho \"\\n\";\n\
    $date = \"06-04-2020\";\necho valid_date($date);\necho \"\\n\";\n$date = \"06/04/2020\"\
    ;\necho valid_date($date);\necho \"\\n\";\nfunction candidate(...$args) {\n  \
    \  return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if (!checkdate($date[0], $date[1],\
    \ $date[2])) {\n        return false;\n    }\n    return true;\n}\n\n/*\n * Write\
    \ a function that takes a string and returns the number of vowels in the string.\n\
    \ * >>> count_vowels(\"hello\")\n * 2\n * >>> count_vowels(\"world\")\n * 1\n\
    \ * >>> count_vowels(\"\")\n * 0\n */\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($day < 1 || $day > 31) {\n        return false;\n    }\n    if\
    \ ($month == 2) {\n        if ($day > 29) {\n            return false;\n     \
    \   }\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n        if ($day > 30) {\n            return false;\n        }\n    }\n \
    \   if ($year < 1) {\n        return false;\n    }\n    return true;\n}\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n  $date = explode(\"-\", $date);\n  if (count($date)\
    \ != 3) {\n    return false;\n  }\n  $month = $date[0];\n  $day = $date[1];\n\
    \  $year = $date[2];\n  if (is_numeric($month) && is_numeric($day) && is_numeric($year))\
    \ {\n    if ($month > 0 && $month < 13) {\n      if ($day > 0 && $day < 32) {\n\
    \        if ($month == 2) {\n          if ($day > 0 && $day < 30) {\n        \
    \    return true;\n          }\n        }\n        elseif ($month == 4 || $month\
    \ == 6 || $month == 9 || $month == 11) {\n          if ($day > 0 && $day < 31)\
    \ {\n            return true;\n          }\n        }\n        else {\n      \
    \    return true;\n        }\n      }\n    }\n  }\n  return false;\n}\n\necho\
    \ valid_date(\"03-11-2000\") . \"\\n\";\necho valid_date(\"15-01-2012\") . \"\\\
    n\";\necho valid_date(\"04-0-2040\") . \"\\n\";\necho valid_date(\"06-04-2020\"\
    ) . \"\\n\";\necho valid_date(\"06/04/2020\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if (!is_numeric($date[0]) || !is_numeric($date[1])\
    \ || !is_numeric($date[2])) {\n        return false;\n    }\n    if ($date[0]\
    \ < 1 || $date[0] > 12) {\n        return false;\n    }\n    if ($date[0] == 2)\
    \ {\n        if ($date[1] < 1 || $date[1] > 29) {\n            return false;\n\
    \        }\n    } elseif ($date[0] == 1 || $date[0] == 3 || $date[0] == 5 || $date[0]\
    \ == 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12) {\n        if ($date[1]\
    \ < 1 || $date[1] > 31) {\n            return false;\n        }\n    } else {\n\
    \        if ($date[1] < 1 || $date[1] > 30) {\n            return false;\n   \
    \     }\n    }\n    return true;\n}\n\necho valid_date(\"03-11-2000\") . \"\\\
    n\";\necho valid_date(\"15-01-2012\") . \"\\n\";\necho valid_date(\"04-0-2040\"\
    ) . \"\\n\";\necho valid_date(\"06-04-2020\") . \"\\n\";\necho valid_date(\"06/04/2020\"\
    ) . \"\\n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n  if (preg_match(\"/^([0-9]{2})-([0-9]{2})-([0-9]{4})$/\"\
    , $date, $parts)) {\n    if (checkdate($parts[1], $parts[2], $parts[3])) {\n \
    \     return true;\n    }\n  }\n  return false;\n}\necho valid_date(\"03-11-2000\"\
    ).\"\\n\";\necho valid_date(\"15-01-2012\").\"\\n\";\necho valid_date(\"04-0-2040\"\
    ).\"\\n\";\necho valid_date(\"06-04-2020\").\"\\n\";\necho valid_date(\"06/04/2020\"\
    ).\"\\n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) return false;\n    if (!is_numeric($date[0]) || !is_numeric($date[1])\
    \ || !is_numeric($date[2])) return false;\n    if ($date[0] < 1 || $date[0] >\
    \ 12) return false;\n    if ($date[0] == 2) {\n        if ($date[2] % 4 == 0)\
    \ {\n            if ($date[1] < 1 || $date[1] > 29) return false;\n        } else\
    \ {\n            if ($date[1] < 1 || $date[1] > 28) return false;\n        }\n\
    \    } elseif ($date[0] == 1 || $date[0] == 3 || $date[0] == 5 || $date[0] ==\
    \ 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12) {\n        if ($date[1]\
    \ < 1 || $date[1] > 31) return false;\n    } else {\n        if ($date[1] < 1\
    \ || $date[1] > 30) return false;\n    }\n    return true;\n}\n\necho valid_date(\"\
    03-11-2000\") ? \"true\\n\" : \"false\\n\";\necho valid_date(\"15-01-2012\") ?\
    \ \"true\\n\" : \"false\\n\";\necho valid_date(\"04-0-2040\") ? \"true\\n\" :\
    \ \"false\\n\";\necho valid_date(\"06-04-2020\") ? \"true\\n\" : \"false\\n\"\
    ;\necho valid_date(\"06/04/2020\") ? \"true\\n\" : \"false\\n\";\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    false

    false

    true

    false

    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n  $date = explode(\"-\", $date);\n  if (count($date)\
    \ != 3) {\n    return false;\n  }\n  $month = $date[0];\n  $day = $date[1];\n\
    \  $year = $date[2];\n  if ($month < 1 || $month > 12) {\n    return false;\n\
    \  }\n  if ($day < 1 || $day > 31) {\n    return false;\n  }\n  if ($month ==\
    \ 2) {\n    if ($day > 29) {\n      return false;\n    }\n  }\n  if ($month ==\
    \ 4 || $month == 6 || $month == 9 || $month == 11) {\n    if ($day > 30) {\n \
    \     return false;\n    }\n  }\n  if ($year < 1) {\n    return false;\n  }\n\
    \  return true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if (!is_numeric($date[0]) || !is_numeric($date[1])\
    \ || !is_numeric($date[2])) {\n        return false;\n    }\n    if ($date[0]\
    \ < 1 || $date[0] > 12) {\n        return false;\n    }\n    if ($date[0] == 2)\
    \ {\n        if ($date[1] < 1 || $date[1] > 29) {\n            return false;\n\
    \        }\n    } elseif ($date[0] == 1 || $date[0] == 3 || $date[0] == 5 || $date[0]\
    \ == 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12) {\n        if ($date[1]\
    \ < 1 || $date[1] > 31) {\n            return false;\n        }\n    } else {\n\
    \        if ($date[1] < 1 || $date[1] > 30) {\n            return false;\n   \
    \     }\n    }\n    return true;\n}\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n  $date = explode(\"-\", $date);\n  if (count($date)\
    \ != 3) {\n    return false;\n  }\n  $month = $date[0];\n  $day = $date[1];\n\
    \  $year = $date[2];\n  if ($month < 1 || $month > 12) {\n    return false;\n\
    \  }\n  if ($day < 1 || $day > 31) {\n    return false;\n  }\n  if ($month ==\
    \ 2) {\n    if ($day > 29) {\n      return false;\n    }\n  }\n  if ($month ==\
    \ 4 || $month == 6 || $month == 9 || $month == 11) {\n    if ($day > 30) {\n \
    \     return false;\n    }\n  }\n  if ($year < 0) {\n    return false;\n  }\n\
    \  return true;\n}\necho valid_date(\"03-11-2000\");\necho \"\\n\";\necho valid_date(\"\
    15-01-2012\");\necho \"\\n\";\necho valid_date(\"04-0-2040\");\necho \"\\n\";\n\
    echo valid_date(\"06-04-2020\");\necho \"\\n\";\necho valid_date(\"06/04/2020\"\
    );\necho \"\\n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date_array = explode(\"-\", $date);\n    if\
    \ (count($date_array) != 3) {\n        return false;\n    }\n    $month = $date_array[0];\n\
    \    $day = $date_array[1];\n    $year = $date_array[2];\n    if ($month < 1 ||\
    \ $month > 12) {\n        return false;\n    }\n    if ($month == 2) {\n     \
    \   if ($day < 1 || $day > 29) {\n            return false;\n        }\n    }\
    \ else if ($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month\
    \ == 8 || $month == 10 || $month == 12) {\n        if ($day < 1 || $day > 31)\
    \ {\n            return false;\n        }\n    } else {\n        if ($day < 1\
    \ || $day > 30) {\n            return false;\n        }\n    }\n    if ($year\
    \ < 1) {\n        return false;\n    }\n    return true;\n}\n\necho valid_date(\"\
    03-11-2000\") ? \"true\" : \"false\";\necho \"\\n\";\necho valid_date(\"15-01-2012\"\
    ) ? \"true\" : \"false\";\necho \"\\n\";\necho valid_date(\"04-0-2040\") ? \"\
    true\" : \"false\";\necho \"\\n\";\necho valid_date(\"06-04-2020\") ? \"true\"\
    \ : \"false\";\necho \"\\n\";\necho valid_date(\"06/04/2020\") ? \"true\" : \"\
    false\";\necho \"\\n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    false

    false

    true

    false

    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date_arr = explode(\"-\", $date);\n    if (count($date_arr)\
    \ != 3) {\n        return false;\n    }\n    $month = $date_arr[0];\n    $day\
    \ = $date_arr[1];\n    $year = $date_arr[2];\n    if ($month < 1 || $month > 12)\
    \ {\n        return false;\n    }\n    if ($day < 1 || $day > 31) {\n        return\
    \ false;\n    }\n    if ($month == 2) {\n        if ($day > 29) {\n          \
    \  return false;\n        }\n    }\n    if ($month == 4 || $month == 6 || $month\
    \ == 9 || $month == 11) {\n        if ($day > 30) {\n            return false;\n\
    \        }\n    }\n    if (strlen($year) != 4) {\n        return false;\n    }\n\
    \    return true;\n}\n\necho valid_date(\"03-11-2000\") . \"\\n\";\necho valid_date(\"\
    15-01-2012\") . \"\\n\";\necho valid_date(\"04-0-2040\") . \"\\n\";\necho valid_date(\"\
    06-04-2020\") . \"\\n\";\necho valid_date(\"06/04/2020\") . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($month == 2) {\n        if ($day < 1 || $day > 29) {\n       \
    \     return false;\n        }\n    } else if ($month == 1 || $month == 3 || $month\
    \ == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n    \
    \    if ($day < 1 || $day > 31) {\n            return false;\n        }\n    }\
    \ else {\n        if ($day < 1 || $day > 30) {\n            return false;\n  \
    \      }\n    }\n    if ($year < 1) {\n        return false;\n    }\n    return\
    \ true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n  $date = explode(\"-\", $date);\n  if (count($date)\
    \ != 3) {\n    return false;\n  }\n  if ($date[0] < 1 || $date[0] > 12) {\n  \
    \  return false;\n  }\n  if ($date[0] == 2) {\n    if ($date[1] < 1 || $date[1]\
    \ > 29) {\n      return false;\n    }\n  } elseif ($date[0] == 1 || $date[0] ==\
    \ 3 || $date[0] == 5 || $date[0] == 7 || $date[0] == 8 || $date[0] == 10 || $date[0]\
    \ == 12) {\n    if ($date[1] < 1 || $date[1] > 31) {\n      return false;\n  \
    \  }\n  } else {\n    if ($date[1] < 1 || $date[1] > 30) {\n      return false;\n\
    \    }\n  }\n  if ($date[2] < 1) {\n    return false;\n  }\n  return true;\n}\n\
    function candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month > 12 || $month < 1) {\n        return false;\n\
    \    }\n    if ($day > 31 || $day < 1) {\n        return false;\n    }\n    if\
    \ ($month == 2) {\n        if ($day > 29) {\n            return false;\n     \
    \   }\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n        if ($day > 30) {\n            return false;\n        }\n    }\n \
    \   if ($year < 1) {\n        return false;\n    }\n    return true;\n}\necho\
    \ valid_date(\"03-11-2000\").\"\\n\";\necho valid_date(\"15-01-2012\").\"\\n\"\
    ;\necho valid_date(\"04-0-2040\").\"\\n\";\necho valid_date(\"06-04-2020\").\"\
    \\n\";\necho valid_date(\"06/04/2020\").\"\\n\";\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n  $date_array = explode(\"-\", $date);\n  if (count($date_array)\
    \ != 3) {\n    return false;\n  }\n  $month = $date_array[0];\n  $day = $date_array[1];\n\
    \  $year = $date_array[2];\n  if ($month < 1 || $month > 12) {\n    return false;\n\
    \  }\n  if ($day < 1 || $day > 31) {\n    return false;\n  }\n  if ($month ==\
    \ 2) {\n    if ($day > 29) {\n      return false;\n    }\n  }\n  if ($month ==\
    \ 4 || $month == 6 || $month == 9 || $month == 11) {\n    if ($day > 30) {\n \
    \     return false;\n    }\n  }\n  if ($year < 1) {\n    return false;\n  }\n\
    \  return true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n  if(empty($date)){\n    return false;\n  }\n  $date\
    \ = explode(\"-\", $date);\n  if(count($date) != 3){\n    return false;\n  }\n\
    \  if(!is_numeric($date[0]) || !is_numeric($date[1]) || !is_numeric($date[2])){\n\
    \    return false;\n  }\n  if($date[0] > 12 || $date[0] < 1){\n    return false;\n\
    \  }\n  if($date[0] == 2){\n    if($date[1] > 29 || $date[1] < 1){\n      return\
    \ false;\n    }\n  }\n  if($date[0] == 1 || $date[0] == 3 || $date[0] == 5 ||\
    \ $date[0] == 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12){\n    if($date[1]\
    \ > 31 || $date[1] < 1){\n      return false;\n    }\n  }\n  if($date[0] == 4\
    \ || $date[0] == 6 || $date[0] == 9 || $date[0] == 11){\n    if($date[1] > 30\
    \ || $date[1] < 1){\n      return false;\n    }\n  }\n  return true;\n}\necho\
    \ valid_date(\"03-11-2000\");\necho valid_date(\"15-01-2012\");\necho valid_date(\"\
    04-0-2040\");\necho valid_date(\"06-04-2020\");\necho valid_date(\"06/04/2020\"\
    );\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($day < 1 || $day > 31) {\n        return false;\n    }\n    if\
    \ ($month == 2) {\n        if ($day > 29) {\n            return false;\n     \
    \   }\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n        if ($day > 30) {\n            return false;\n        }\n    }\n \
    \   if ($year < 1) {\n        return false;\n    }\n    return true;\n}\n\necho\
    \ valid_date(\"03-11-2000\");\necho valid_date(\"15-01-2012\");\necho valid_date(\"\
    04-0-2040\");\necho valid_date(\"06-04-2020\");\necho valid_date(\"06/04/2020\"\
    );\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if (checkdate($date[0], $date[1],\
    \ $date[2])) {\n        return true;\n    }\n    return false;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($day < 1 || $day > 31) {\n        return false;\n    }\n    if\
    \ ($month == 2) {\n        if ($day > 29) {\n            return false;\n     \
    \   }\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n        if ($day > 30) {\n            return false;\n        }\n    }\n \
    \   if ($year < 0) {\n        return false;\n    }\n    return true;\n}\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    if (empty($date)) {\n        return false;\n\
    \    }\n    $date = explode('-', $date);\n    if (count($date) != 3) {\n     \
    \   return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n    $year\
    \ = $date[2];\n    if (!is_numeric($month) || !is_numeric($day) || !is_numeric($year))\
    \ {\n        return false;\n    }\n    if ($month < 1 || $month > 12) {\n    \
    \    return false;\n    }\n    if ($month == 2) {\n        if ($day < 1 || $day\
    \ > 29) {\n            return false;\n        }\n    } elseif ($month == 1 ||\
    \ $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10 ||\
    \ $month == 12) {\n        if ($day < 1 || $day > 31) {\n            return false;\n\
    \        }\n    } else {\n        if ($day < 1 || $day > 30) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\necho valid_date(\"03-11-2000\"\
    ) ? 'true' : 'false';\necho \"\\n\";\necho valid_date(\"15-01-2012\") ? 'true'\
    \ : 'false';\necho \"\\n\";\necho valid_date(\"04-0-2040\") ? 'true' : 'false';\n\
    echo \"\\n\";\necho valid_date(\"06-04-2020\") ? 'true' : 'false';\necho \"\\\
    n\";\necho valid_date(\"06/04/2020\") ? 'true' : 'false';\necho \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    false

    false

    true

    false

    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n\t$date_arr = explode(\"-\", $date);\n\tif (count($date_arr)\
    \ != 3) {\n\t\treturn false;\n\t}\n\t$month = $date_arr[0];\n\t$day = $date_arr[1];\n\
    \t$year = $date_arr[2];\n\tif ($month < 1 || $month > 12) {\n\t\treturn false;\n\
    \t}\n\tif ($day < 1 || $day > 31) {\n\t\treturn false;\n\t}\n\tif ($month == 2)\
    \ {\n\t\tif ($day > 29) {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif ($month == 4\
    \ || $month == 6 || $month == 9 || $month == 11) {\n\t\tif ($day > 30) {\n\t\t\
    \treturn false;\n\t\t}\n\t}\n\tif ($year < 1000 || $year > 9999) {\n\t\treturn\
    \ false;\n\t}\n\treturn true;\n}\n\necho valid_date(\"03-11-2000\").\"\\n\";\n\
    echo valid_date(\"15-01-2012\").\"\\n\";\necho valid_date(\"04-0-2040\").\"\\\
    n\";\necho valid_date(\"06-04-2020\").\"\\n\";\necho valid_date(\"06/04/2020\"\
    ).\"\\n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if ($date[0] < 1 || $date[0] > 12)\
    \ {\n        return false;\n    }\n    if ($date[0] == 2) {\n        if ($date[1]\
    \ < 1 || $date[1] > 29) {\n            return false;\n        }\n    } elseif\
    \ ($date[0] == 1 || $date[0] == 3 || $date[0] == 5 || $date[0] == 7 || $date[0]\
    \ == 8 || $date[0] == 10 || $date[0] == 12) {\n        if ($date[1] < 1 || $date[1]\
    \ > 31) {\n            return false;\n        }\n    } else {\n        if ($date[1]\
    \ < 1 || $date[1] > 30) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n\necho valid_date(\"03-11-2000\") . \"\\n\";\necho valid_date(\"15-01-2012\"\
    ) . \"\\n\";\necho valid_date(\"04-0-2040\") . \"\\n\";\necho valid_date(\"06-04-2020\"\
    ) . \"\\n\";\necho valid_date(\"06/04/2020\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($day < 1 || $day > 31) {\n        return false;\n    }\n    if\
    \ ($month == 2) {\n        if ($day > 29) {\n            return false;\n     \
    \   }\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n        if ($day > 30) {\n            return false;\n        }\n    }\n \
    \   if ($year < 1) {\n        return false;\n    }\n    return true;\n}\n\necho\
    \ valid_date(\"03-11-2000\") . \"\\n\";\necho valid_date(\"15-01-2012\") . \"\\\
    n\";\necho valid_date(\"04-0-2040\") . \"\\n\";\necho valid_date(\"06-04-2020\"\
    ) . \"\\n\";\necho valid_date(\"06/04/2020\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if ($date[0] < 1 || $date[0] > 12)\
    \ {\n        return false;\n    }\n    if ($date[0] == 2) {\n        if ($date[1]\
    \ < 1 || $date[1] > 29) {\n            return false;\n        }\n    } else if\
    \ ($date[0] == 1 || $date[0] == 3 || $date[0] == 5 || $date[0] == 7 || $date[0]\
    \ == 8 || $date[0] == 10 || $date[0] == 12) {\n        if ($date[1] < 1 || $date[1]\
    \ > 31) {\n            return false;\n        }\n    } else {\n        if ($date[1]\
    \ < 1 || $date[1] > 30) {\n            return false;\n        }\n    }\n    if\
    \ ($date[2] < 1) {\n        return false;\n    }\n    return true;\n}\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n  $date = explode(\"-\", $date);\n  if (count($date)\
    \ != 3) return false;\n  $month = $date[0];\n  $day = $date[1];\n  $year = $date[2];\n\
    \  if ($month < 1 || $month > 12) return false;\n  if ($day < 1 || $day > 31)\
    \ return false;\n  if ($month == 2 && $day > 29) return false;\n  if ($month ==\
    \ 4 || $month == 6 || $month == 9 || $month == 11) {\n    if ($day > 30) return\
    \ false;\n  }\n  if ($year < 1) return false;\n  return true;\n}\necho valid_date(\"\
    03-11-2000\").\"\\n\";\necho valid_date(\"15-01-2012\").\"\\n\";\necho valid_date(\"\
    04-0-2040\").\"\\n\";\necho valid_date(\"06-04-2020\").\"\\n\";\necho valid_date(\"\
    06/04/2020\").\"\\n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if (!checkdate($date[0], $date[1],\
    \ $date[2])) {\n        return false;\n    }\n    return true;\n}\n\n/*\n * You\
    \ have to write a function which validates a given date string and returns true\
    \ if the date is valid otherwise false.\nThe date is valid if all of the following\
    \ rules are satisfied:\n1. The date string is not empty.\n2. The date string is\
    \ in the format: dd-mm-yyyy\n3. The date is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the date is not less than 1 or higher than\
    \ 30 days for months 4,6,9,11. And, the date is not less than 1 or higher than\
    \ 29 for the month 2.\n4. The months should not be less than 1 or higher than\
    \ 12.\n>>> valid_date(\"03-11-2000\")\ntrue\n>>> valid_date(\"15-01-2012\")\n\
    false\n>>> valid_date(\"04-0-2040\")\nfalse\n>>> valid_date(\"06-04-2020\")\n\
    true\n>>> valid_date(\"06/04/2020\")\nfalse\n*/\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if(count($date)\
    \ != 3) return false;\n    if(!is_numeric($date[0]) || !is_numeric($date[1]) ||\
    \ !is_numeric($date[2])) return false;\n    if($date[0] < 1 || $date[0] > 12)\
    \ return false;\n    if($date[1] < 1 || $date[1] > 31) return false;\n    if($date[0]\
    \ == 2 && $date[1] > 29) return false;\n    if(in_array($date[0], [4,6,9,11])\
    \ && $date[1] > 30) return false;\n    return true;\n}\n\n/*\n * Write a function\
    \ that takes a string and returns the number of vowels in the string.\n * >>>\
    \ count_vowels(\"hello\")\n * 2\n * >>> count_vowels(\"world\")\n * 3\n * >>>\
    \ count_vowels(\"\")\n * 0\n * >>> count_vowels(\"a\")\n * 1\n * >>> count_vowels(\"\
    b\")\n * 0\n * >>> count_vowels(\"ab\")\n * 1\n * >>> count_vowels(\"abc\")\n\
    \ * 1\n * >>> count_vowels(\"abcd\")\n * 1\n * >>> count_vowels(\"abcde\")\n *\
    \ 2\n * >>> count_vowels(\"abcdef\")\n * 2\n * >>> count_vowels(\"abcdefg\")\n\
    \ * 2\n * >>> count_vowels(\"abcdefgh\")\n * 3\n * >>> count_vowels(\"abcdefghi\"\
    )\n * 3\n * >>> count_vowels(\"abcdefghij\")\n * 3\n * >>> count_vowels(\"abcdefghijk\"\
    )\n * 4\n * >>> count_vowels(\"abcdefghijkl\")\n * 4\n * >>> count_vowels(\"abcdefghijklm\"\
    )\n * 4\n * >>> count_vowels(\"abcdefghijklmn\")\n * 4\n * >>> count_vowels(\"\
    abcdefghijklmno\")\n * 5\n * >>> count_vowels(\"abcdefghijklmnop\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 30 in /tmp/tmplky2t1k7.php on
    line 30

    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if (!checkdate($date[0], $date[1],\
    \ $date[2])) {\n        return false;\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($day < 1 || $day > 31) {\n        return false;\n    }\n    if\
    \ ($month == 2) {\n        if ($day > 29) {\n            return false;\n     \
    \   }\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n        if ($day > 30) {\n            return false;\n        }\n    }\n \
    \   if ($year < 0) {\n        return false;\n    }\n    return true;\n}\n\n$date\
    \ = \"03-11-2000\";\necho valid_date($date);\necho \"<br>\";\n$date = \"15-01-2012\"\
    ;\necho valid_date($date);\necho \"<br>\";\n$date = \"04-0-2040\";\necho valid_date($date);\n\
    echo \"<br>\";\n$date = \"06-04-2020\";\necho valid_date($date);\necho \"<br>\"\
    ;\n$date = \"06/04/2020\";\necho valid_date($date);\necho \"<br>\";\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br><br>1<br><br>
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($day < 1 || $day > 31) {\n        return false;\n    }\n    if\
    \ ($month == 2) {\n        if ($day > 29) {\n            return false;\n     \
    \   }\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n        if ($day > 30) {\n            return false;\n        }\n    }\n \
    \   if ($year < 1) {\n        return false;\n    }\n    return true;\n}\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n\t$date = explode(\"-\", $date);\n\tif (count($date)\
    \ != 3) {\n\t\treturn false;\n\t}\n\t$month = $date[0];\n\t$day = $date[1];\n\t\
    $year = $date[2];\n\tif ($month < 1 || $month > 12) {\n\t\treturn false;\n\t}\n\
    \tif ($month == 2) {\n\t\tif ($day < 1 || $day > 29) {\n\t\t\treturn false;\n\t\
    \t}\n\t} else if ($month == 1 || $month == 3 || $month == 5 || $month == 7 ||\
    \ $month == 8 || $month == 10 || $month == 12) {\n\t\tif ($day < 1 || $day > 31)\
    \ {\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\tif ($day < 1 || $day > 30) {\n\
    \t\t\treturn false;\n\t\t}\n\t}\n\tif ($year < 1) {\n\t\treturn false;\n\t}\n\t\
    return true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ == 3) {\n        $month = $date[0];\n        $day = $date[1];\n        $year\
    \ = $date[2];\n        if (is_numeric($month) && is_numeric($day) && is_numeric($year))\
    \ {\n            if ($month >= 1 && $month <= 12) {\n                if ($month\
    \ == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month ==\
    \ 10 || $month == 12) {\n                    if ($day >= 1 && $day <= 31) {\n\
    \                        return true;\n                    }\n               \
    \ } elseif ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n   \
    \                 if ($day >= 1 && $day <= 30) {\n                        return\
    \ true;\n                    }\n                } elseif ($month == 2) {\n   \
    \                 if ($day >= 1 && $day <= 29) {\n                        return\
    \ true;\n                    }\n                }\n            }\n        }\n\
    \    }\n    return false;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n  $date_arr = explode(\"-\", $date);\n  if (count($date_arr)\
    \ != 3) {\n    return false;\n  }\n  $month = $date_arr[0];\n  $day = $date_arr[1];\n\
    \  $year = $date_arr[2];\n  if ($month < 1 || $month > 12) {\n    return false;\n\
    \  }\n  if ($day < 1 || $day > 31) {\n    return false;\n  }\n  if ($month ==\
    \ 2) {\n    if ($day > 29) {\n      return false;\n    }\n  }\n  if ($month ==\
    \ 4 || $month == 6 || $month == 9 || $month == 11) {\n    if ($day > 30) {\n \
    \     return false;\n    }\n  }\n  if ($year < 0) {\n    return false;\n  }\n\
    \  return true;\n}\n\necho valid_date(\"03-11-2000\") . \"\\n\";\necho valid_date(\"\
    15-01-2012\") . \"\\n\";\necho valid_date(\"04-0-2040\") . \"\\n\";\necho valid_date(\"\
    06-04-2020\") . \"\\n\";\necho valid_date(\"06/04/2020\") . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if ($date[0] < 1 || $date[0] > 12)\
    \ {\n        return false;\n    }\n    if ($date[0] == 2) {\n        if ($date[1]\
    \ < 1 || $date[1] > 29) {\n            return false;\n        }\n    } elseif\
    \ ($date[0] == 1 || $date[0] == 3 || $date[0] == 5 || $date[0] == 7 || $date[0]\
    \ == 8 || $date[0] == 10 || $date[0] == 12) {\n        if ($date[1] < 1 || $date[1]\
    \ > 31) {\n            return false;\n        }\n    } else {\n        if ($date[1]\
    \ < 1 || $date[1] > 30) {\n            return false;\n        }\n    }\n    if\
    \ ($date[2] < 1) {\n        return false;\n    }\n    return true;\n}\n\necho\
    \ valid_date(\"03-11-2000\") . PHP_EOL;\necho valid_date(\"15-01-2012\") . PHP_EOL;\n\
    echo valid_date(\"04-0-2040\") . PHP_EOL;\necho valid_date(\"06-04-2020\") . PHP_EOL;\n\
    echo valid_date(\"06/04/2020\") . PHP_EOL;\nfunction candidate(...$args) {\n \
    \   return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n  $date = explode(\"-\", $date);\n  if (count($date)\
    \ != 3) {\n    return false;\n  }\n  $month = $date[0];\n  $day = $date[1];\n\
    \  $year = $date[2];\n  if ($month < 1 || $month > 12) {\n    return false;\n\
    \  }\n  if ($day < 1 || $day > 31) {\n    return false;\n  }\n  if ($month ==\
    \ 2) {\n    if ($day > 29) {\n      return false;\n    }\n  }\n  if ($month ==\
    \ 4 || $month == 6 || $month == 9 || $month == 11) {\n    if ($day > 30) {\n \
    \     return false;\n    }\n  }\n  if ($year < 1) {\n    return false;\n  }\n\
    \  return true;\n}\n\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n  $date = explode(\"-\", $date);\n  if (count($date)\
    \ != 3) {\n    return false;\n  }\n  if ($date[0] < 1 || $date[0] > 12) {\n  \
    \  return false;\n  }\n  if ($date[0] == 2) {\n    if ($date[1] < 1 || $date[1]\
    \ > 29) {\n      return false;\n    }\n  } elseif ($date[0] == 1 || $date[0] ==\
    \ 3 || $date[0] == 5 || $date[0] == 7 || $date[0] == 8 || $date[0] == 10 || $date[0]\
    \ == 12) {\n    if ($date[1] < 1 || $date[1] > 31) {\n      return false;\n  \
    \  }\n  } else {\n    if ($date[1] < 1 || $date[1] > 30) {\n      return false;\n\
    \    }\n  }\n  if ($date[2] < 1) {\n    return false;\n  }\n  return true;\n}\n\
    function candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n  $date = explode(\"-\", $date);\n  if (count($date)\
    \ != 3) {\n    return false;\n  }\n  $month = $date[0];\n  $day = $date[1];\n\
    \  $year = $date[2];\n  if ($month < 1 || $month > 12) {\n    return false;\n\
    \  }\n  if ($day < 1 || $day > 31) {\n    return false;\n  }\n  if ($month ==\
    \ 2) {\n    if ($day > 29) {\n      return false;\n    }\n  }\n  if ($month ==\
    \ 4 || $month == 6 || $month == 9 || $month == 11) {\n    if ($day > 30) {\n \
    \     return false;\n    }\n  }\n  if ($year < 0) {\n    return false;\n  }\n\
    \  return true;\n}\necho valid_date(\"03-11-2000\") . \"\\n\";\necho valid_date(\"\
    15-01-2012\") . \"\\n\";\necho valid_date(\"04-0-2040\") . \"\\n\";\necho valid_date(\"\
    06-04-2020\") . \"\\n\";\necho valid_date(\"06/04/2020\") . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($day < 1 || $day > 31) {\n        return false;\n    }\n    if\
    \ ($month == 2) {\n        if ($day > 29) {\n            return false;\n     \
    \   }\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n        if ($day > 30) {\n            return false;\n        }\n    }\n \
    \   if ($year < 1) {\n        return false;\n    }\n    return true;\n}\n\necho\
    \ valid_date(\"03-11-2000\") ? \"true\" : \"false\";\necho \"\\n\";\necho valid_date(\"\
    15-01-2012\") ? \"true\" : \"false\";\necho \"\\n\";\necho valid_date(\"04-0-2040\"\
    ) ? \"true\" : \"false\";\necho \"\\n\";\necho valid_date(\"06-04-2020\") ? \"\
    true\" : \"false\";\necho \"\\n\";\necho valid_date(\"06/04/2020\") ? \"true\"\
    \ : \"false\";\necho \"\\n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    false

    false

    true

    false

    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n  $date_arr = explode(\"-\", $date);\n  if (count($date_arr)\
    \ != 3) {\n    return false;\n  }\n  $month = $date_arr[0];\n  $day = $date_arr[1];\n\
    \  $year = $date_arr[2];\n  if ($month < 1 || $month > 12) {\n    return false;\n\
    \  }\n  if ($day < 1 || $day > 31) {\n    return false;\n  }\n  if ($month ==\
    \ 2) {\n    if ($day > 29) {\n      return false;\n    }\n  }\n  if ($month ==\
    \ 4 || $month == 6 || $month == 9 || $month == 11) {\n    if ($day > 30) {\n \
    \     return false;\n    }\n  }\n  if ($year < 1) {\n    return false;\n  }\n\
    \  return true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n  $date = explode(\"-\", $date);\n  if (count($date)\
    \ != 3) return false;\n  if (strlen($date[0]) != 2 || strlen($date[1]) != 2 ||\
    \ strlen($date[2]) != 4) return false;\n  if ($date[0] < 1 || $date[0] > 12) return\
    \ false;\n  if ($date[0] == 2) {\n    if ($date[2] % 4 == 0) {\n      if ($date[1]\
    \ < 1 || $date[1] > 29) return false;\n    } else {\n      if ($date[1] < 1 ||\
    \ $date[1] > 28) return false;\n    }\n  } else if ($date[0] == 1 || $date[0]\
    \ == 3 || $date[0] == 5 || $date[0] == 7 || $date[0] == 8 || $date[0] == 10 ||\
    \ $date[0] == 12) {\n    if ($date[1] < 1 || $date[1] > 31) return false;\n  }\
    \ else {\n    if ($date[1] < 1 || $date[1] > 30) return false;\n  }\n  return\
    \ true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    if (preg_match(\"/^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$/\"\
    ,$date)) {\n        $date = explode(\"-\", $date);\n        $day = $date[1];\n\
    \        $month = $date[0];\n        $year = $date[2];\n        if ($month ==\
    \ 2) {\n            if ($day > 29) {\n                return false;\n        \
    \    }\n        } elseif ($month == 4 || $month == 6 || $month == 9 || $month\
    \ == 11) {\n            if ($day > 30) {\n                return false;\n    \
    \        }\n        } elseif ($month == 1 || $month == 3 || $month == 5 || $month\
    \ == 7 || $month == 8 || $month == 10 || $month == 12) {\n            if ($day\
    \ > 31) {\n                return false;\n            }\n        }\n        return\
    \ true;\n    } else {\n        return false;\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if (!checkdate($date[0], $date[1],\
    \ $date[2])) {\n        return false;\n    }\n    return true;\n}\n\n/*\n * You\
    \ have to write a function which validates a given date string and returns true\
    \ if the date is valid otherwise false.\nThe date is valid if all of the following\
    \ rules are satisfied:\n1. The date string is not empty.\n2. The date string is\
    \ in the format: dd-mm-yyyy.\n3. The date string is not in the format: dd-mm-yy.\n\
    4. The date string is not in the format: dd-mm-yyyyyy.\n5. The date string is\
    \ not in the format: dd-mm-yyyy-mm-dd.\n6. The date string is not in the format:\
    \ dd-mm-yyyy-mm.\n7. The date string is not in the format: dd-mm-yyyy-dd.\n8.\
    \ The date string is not in the format: dd-mm-yyyy-dd-mm.\n9. The date string\
    \ is not in the format: dd-mm-yyyy-dd-mm-yyyy.\n10. The date string is not in\
    \ the format: dd-mm-yyyy-dd-mm-yyyy-mm.\n11. The date string is not in the format:\
    \ dd-mm-yyyy-dd-mm-yyyy-dd.\n12. The date string is not in the format: dd-mm-yyyy-dd-mm-yyyy-mm-dd.\n\
    13. The date string is not in the format: dd-mm-yyyy-dd-mm-yyyy-dd-mm.\n14. The\
    \ date string is not in the format: dd-mm-yyyy-dd-mm-yyyy-dd-mm-yyyy.\n15. The\
    \ date string is not in the format: dd-mm-yyyy-dd-mm-yyyy-dd-mm-yyyy-mm.\n16.\
    \ The date string is not in the format: dd-mm-yyyy-dd-mm-yyyy-dd-mm-yyyy-dd.\n\
    function candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 30 in /tmp/tmpon2pnx9y.php on
    line 30

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date_arr = explode(\"-\", $date);\n    if (count($date_arr)\
    \ != 3) {\n        return false;\n    }\n    if (strlen($date_arr[0]) != 2 ||\
    \ strlen($date_arr[1]) != 2 || strlen($date_arr[2]) != 4) {\n        return false;\n\
    \    }\n    $month = $date_arr[0];\n    $day = $date_arr[1];\n    $year = $date_arr[2];\n\
    \    if ($month < 1 || $month > 12) {\n        return false;\n    }\n    if ($month\
    \ == 2) {\n        if ($day < 1 || $day > 29) {\n            return false;\n \
    \       }\n    } else if ($month == 1 || $month == 3 || $month == 5 || $month\
    \ == 7 || $month == 8 || $month == 10 || $month == 12) {\n        if ($day < 1\
    \ || $day > 31) {\n            return false;\n        }\n    } else {\n      \
    \  if ($day < 1 || $day > 30) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n\n/*\nWrite a function which takes a string and returns\
    \ the length of the longest word.\n>>> longest_word(\"I love dogs\")\n4\n>>> longest_word(\"\
    I love dogs very much\")\n5\n>>> longest_word(\"I love dogs very much!\")\n5\n\
    >>> longest_word(\"I love dogs very much!!!\")\n5\n>>> longest_word(\"I love dogs\
    \ very much!!!!\")\n5\n>>> longest_word(\"I love dogs very much!!!!!\")\n5\n>>>\
    \ longest_word(\"I love dogs very much!!!!!!\")\n5\n>>> longest_word(\"I love\
    \ dogs very much!!!!!!!\")\n5\n>>> longest_word(\"I love dogs very much!!!!!!!!\"\
    )\n5\n>>> longest_word(\"I love dogs very much!!!!!!!!!\")\n5\n>>> longest_word(\"\
    I love dogs very much!!!!!!!!!!\")\n5\n>>> longest_word(\"I love dogs very much!!!!!!!!!!!\"\
    )\n5\n>>> longest_word(\"I love dogs very much!!!!!!!!!!!!\")\n5\n>>> longest_word(\"\
    I love dogs very much!!!!!!!!\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 49 in /tmp/tmpxla0lbhg.php on
    line 49

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    if (empty($date)) {\n        return false;\n\
    \    }\n    $date = explode('-', $date);\n    if (count($date) != 3) {\n     \
    \   return false;\n    }\n    if (!checkdate($date[0], $date[1], $date[2])) {\n\
    \        return false;\n    }\n    return true;\n}\n\n/*\n * Write a function\
    \ that takes a string and returns the number of vowels in the string.\n * >>>\
    \ count_vowels(\"hello\")\n * 2\n * >>> count_vowels(\"world\")\n * 3\n * >>>\
    \ count_vowels(\"\")\n * 0\n * >>> count_vowels(\"a\")\n * 1\n * >>> count_vowels(\"\
    b\")\n * 0\n * >>> count_vowels(\"ab\")\n * 1\n * >>> count_vowels(\"aeiou\")\n\
    \ * 5\n * >>> count_vowels(\"bcd\")\n * 0\n * >>> count_vowels(\"aeiouaeiou\"\
    )\n * 10\n * >>> count_vowels(\"aeiouaeiouaeiou\")\n * 15\n * >>> count_vowels(\"\
    aeiouaeiouaeiouaeiou\")\n * 20\n * >>> count_vowels(\"abcdefghijklmnopqrstuvwxyz\"\
    )\n * 5\n * >>> count_vowels(\"bcdfghjkl\")\n * 0\n * >>> count_vowels(\"aeiou\"\
    )\n * 5\n * >>> count_vowels(\"aeioua\")\n * 6\n * >>> count_vowels(\"aeiouaeiou\"\
    )\n * 10\n * >>> count_vowels(\"aeiouaeiouaeiou\")\n * 15\n * >>> count_vowels(\"\
    aeiouaeiouaeiouaeiou\")\n * 20\n * >>> count_vowels(\"abcdefghijklmnopqrstuvwxyz\"\
    )\n * 5\n * >>> count_vowels(\"bcdfghjkl\")\n * 0\n * >>> count_vowels(\"aeiou\"\
    )\n * 5\n * >>> count_vowels(\"aeioua\")\n * 6\nfunction candidate(...$args) {\n\
    \    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 33 in /tmp/tmp17m78g_9.php on
    line 33

    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if ($date[0] < 1 || $date[0] > 12)\
    \ {\n        return false;\n    }\n    if ($date[0] == 2) {\n        if ($date[2]\
    \ % 4 == 0) {\n            if ($date[1] < 1 || $date[1] > 29) {\n            \
    \    return false;\n            }\n        } else {\n            if ($date[1]\
    \ < 1 || $date[1] > 28) {\n                return false;\n            }\n    \
    \    }\n    } elseif ($date[0] == 1 || $date[0] == 3 || $date[0] == 5 || $date[0]\
    \ == 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12) {\n        if ($date[1]\
    \ < 1 || $date[1] > 31) {\n            return false;\n        }\n    } else {\n\
    \        if ($date[1] < 1 || $date[1] > 30) {\n            return false;\n   \
    \     }\n    }\n    return true;\n}\n\necho valid_date(\"03-11-2000\");\necho\
    \ valid_date(\"15-01-2012\");\necho valid_date(\"04-0-2040\");\necho valid_date(\"\
    06-04-2020\");\necho valid_date(\"06/04/2020\");\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if (strlen($date[0]) != 2 || strlen($date[1])\
    \ != 2 || strlen($date[2]) != 4) {\n        return false;\n    }\n    if ($date[0]\
    \ < 1 || $date[0] > 12) {\n        return false;\n    }\n    if ($date[0] == 2)\
    \ {\n        if ($date[1] < 1 || $date[1] > 29) {\n            return false;\n\
    \        }\n    } elseif ($date[0] == 1 || $date[0] == 3 || $date[0] == 5 || $date[0]\
    \ == 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12) {\n        if ($date[1]\
    \ < 1 || $date[1] > 31) {\n            return false;\n        }\n    } else {\n\
    \        if ($date[1] < 1 || $date[1] > 30) {\n            return false;\n   \
    \     }\n    }\n    return true;\n}\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if ($date[1] < 1 || $date[1] > 12)\
    \ {\n        return false;\n    }\n    if ($date[1] == 1 || $date[1] == 3 || $date[1]\
    \ == 5 || $date[1] == 7 || $date[1] == 8 || $date[1] == 10 || $date[1] == 12)\
    \ {\n        if ($date[0] < 1 || $date[0] > 31) {\n            return false;\n\
    \        }\n    }\n    if ($date[1] == 4 || $date[1] == 6 || $date[1] == 9 ||\
    \ $date[1] == 11) {\n        if ($date[0] < 1 || $date[0] > 30) {\n          \
    \  return false;\n        }\n    }\n    if ($date[1] == 2) {\n        if ($date[0]\
    \ < 1 || $date[0] > 29) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfhrtvv_q.php:50\n\
    Stack trace:\n#0 /tmp/tmpfhrtvv_q.php(67): test()\n#1 {main}\n  thrown in /tmp/tmpfhrtvv_q.php\
    \ on line 50\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    if(preg_match(\"/^([0-9]{2})-([0-9]{2})-([0-9]{4})$/\"\
    , $date, $matches)) {\n        if(checkdate($matches[1], $matches[2], $matches[3]))\
    \ {\n            return true;\n        }\n    }\n    return false;\n}\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($day < 1 || $day > 31) {\n        return false;\n    }\n    if\
    \ ($month == 2) {\n        if ($day > 29) {\n            return false;\n     \
    \   }\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n        if ($day > 30) {\n            return false;\n        }\n    }\n \
    \   if ($year < 1) {\n        return false;\n    }\n    return true;\n}\n\necho\
    \ valid_date(\"03-11-2000\");\necho valid_date(\"15-01-2012\");\necho valid_date(\"\
    04-0-2040\");\necho valid_date(\"06-04-2020\");\necho valid_date(\"06/04/2020\"\
    );\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if ($date[0] < 1 || $date[0] > 12)\
    \ {\n        return false;\n    }\n    if ($date[0] == 2) {\n        if ($date[2]\
    \ % 4 == 0) {\n            if ($date[1] < 1 || $date[1] > 29) {\n            \
    \    return false;\n            }\n        } else {\n            if ($date[1]\
    \ < 1 || $date[1] > 28) {\n                return false;\n            }\n    \
    \    }\n    } elseif ($date[0] == 1 || $date[0] == 3 || $date[0] == 5 || $date[0]\
    \ == 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12) {\n        if ($date[1]\
    \ < 1 || $date[1] > 31) {\n            return false;\n        }\n    } else {\n\
    \        if ($date[1] < 1 || $date[1] > 30) {\n            return false;\n   \
    \     }\n    }\n    return true;\n}\n\necho valid_date(\"03-11-2000\") . \"\\\
    n\";\necho valid_date(\"15-01-2012\") . \"\\n\";\necho valid_date(\"04-0-2040\"\
    ) . \"\\n\";\necho valid_date(\"06-04-2020\") . \"\\n\";\necho valid_date(\"06/04/2020\"\
    ) . \"\\n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    if(empty($date)){\n        return false;\n \
    \   }\n    $date_arr = explode(\"-\", $date);\n    if(count($date_arr) != 3){\n\
    \        return false;\n    }\n    $month = $date_arr[0];\n    $day = $date_arr[1];\n\
    \    $year = $date_arr[2];\n    if($month < 1 || $month > 12){\n        return\
    \ false;\n    }\n    if($day < 1 || $day > 31){\n        return false;\n    }\n\
    \    if($month == 2){\n        if($day > 29){\n            return false;\n   \
    \     }\n    }\n    if($month == 4 || $month == 6 || $month == 9 || $month ==\
    \ 11){\n        if($day > 30){\n            return false;\n        }\n    }\n\
    \    return true;\n}\n\necho valid_date(\"03-11-2000\") . \"\\n\";\necho valid_date(\"\
    15-01-2012\") . \"\\n\";\necho valid_date(\"04-0-2040\") . \"\\n\";\necho valid_date(\"\
    06-04-2020\") . \"\\n\";\necho valid_date(\"06/04/2020\") . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($day < 1 || $day > 31) {\n        return false;\n    }\n    if\
    \ ($month == 2) {\n        if ($day > 29) {\n            return false;\n     \
    \   }\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n        if ($day > 30) {\n            return false;\n        }\n    }\n \
    \   if ($year < 1) {\n        return false;\n    }\n    return true;\n}\n\necho\
    \ valid_date(\"03-11-2000\") . \"\\n\";\necho valid_date(\"15-01-2012\") . \"\\\
    n\";\necho valid_date(\"04-0-2040\") . \"\\n\";\necho valid_date(\"06-04-2020\"\
    ) . \"\\n\";\necho valid_date(\"06/04/2020\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $day = $date[1];\n    $month = $date[0];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($day < 1 || $day > 31) {\n        return false;\n    }\n    if\
    \ ($month == 2) {\n        if ($day > 29) {\n            return false;\n     \
    \   }\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n        if ($day > 30) {\n            return false;\n        }\n    }\n \
    \   return true;\n}\n\necho valid_date(\"03-11-2000\") . PHP_EOL;\necho valid_date(\"\
    15-01-2012\") . PHP_EOL;\necho valid_date(\"04-0-2040\") . PHP_EOL;\necho valid_date(\"\
    06-04-2020\") . PHP_EOL;\necho valid_date(\"06/04/2020\") . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    if (preg_match(\"/^([0-9]{2})-([0-9]{2})-([0-9]{4})$/\"\
    , $date, $parts)) {\n        if ($parts[1] >= 1 && $parts[1] <= 12) {\n      \
    \      if ($parts[2] >= 1 && $parts[2] <= 31) {\n                return true;\n\
    \            }\n        }\n    }\n    return false;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp5q2gadh.php:41\n\
    Stack trace:\n#0 /tmp/tmpp5q2gadh.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpp5q2gadh.php\
    \ on line 41\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ == 3) {\n        if (checkdate($date[0], $date[1], $date[2])) {\n          \
    \  return true;\n        }\n    }\n    return false;\n}\n\necho valid_date(\"\
    03-11-2000\") ? 'true' : 'false';\necho \"\\n\";\necho valid_date(\"15-01-2012\"\
    ) ? 'true' : 'false';\necho \"\\n\";\necho valid_date(\"04-0-2040\") ? 'true'\
    \ : 'false';\necho \"\\n\";\necho valid_date(\"06-04-2020\") ? 'true' : 'false';\n\
    echo \"\\n\";\necho valid_date(\"06/04/2020\") ? 'true' : 'false';\necho \"\\\
    n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    false

    false

    true

    false

    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if (!checkdate($date[0], $date[1],\
    \ $date[2])) {\n        return false;\n    }\n    return true;\n}\n\necho valid_date(\"\
    03-11-2000\") ? 'true' : 'false';\necho \"\\n\";\necho valid_date(\"15-01-2012\"\
    ) ? 'true' : 'false';\necho \"\\n\";\necho valid_date(\"04-0-2040\") ? 'true'\
    \ : 'false';\necho \"\\n\";\necho valid_date(\"06-04-2020\") ? 'true' : 'false';\n\
    echo \"\\n\";\necho valid_date(\"06/04/2020\") ? 'true' : 'false';\necho \"\\\
    n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    false

    false

    true

    false

    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($month == 2) {\n        if ($day < 1 || $day > 29) {\n       \
    \     return false;\n        }\n    } elseif ($month == 1 || $month == 3 || $month\
    \ == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n    \
    \    if ($day < 1 || $day > 31) {\n            return false;\n        }\n    }\
    \ else {\n        if ($day < 1 || $day > 30) {\n            return false;\n  \
    \      }\n    }\n    if ($year < 1) {\n        return false;\n    }\n    return\
    \ true;\n}\n\n$date = \"03-11-2000\";\necho valid_date($date);\necho \"<br>\"\
    ;\n$date = \"15-01-2012\";\necho valid_date($date);\necho \"<br>\";\n$date = \"\
    04-0-2040\";\necho valid_date($date);\necho \"<br>\";\n$date = \"06-04-2020\"\
    ;\necho valid_date($date);\necho \"<br>\";\n$date = \"06/04/2020\";\necho valid_date($date);\n\
    echo \"<br>\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br><br>1<br><br>
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n  $date = explode(\"-\", $date);\n  if (count($date)\
    \ != 3) {\n    return false;\n  }\n  $month = $date[0];\n  $day = $date[1];\n\
    \  $year = $date[2];\n  if ($month < 1 || $month > 12) {\n    return false;\n\
    \  }\n  if ($day < 1 || $day > 31) {\n    return false;\n  }\n  if ($month ==\
    \ 2) {\n    if ($day > 29) {\n      return false;\n    }\n  }\n  if ($month ==\
    \ 4 || $month == 6 || $month == 9 || $month == 11) {\n    if ($day > 30) {\n \
    \     return false;\n    }\n  }\n  if ($year < 1) {\n    return false;\n  }\n\
    \  return true;\n}\necho valid_date(\"03-11-2000\") . \"\\n\";\necho valid_date(\"\
    15-01-2012\") . \"\\n\";\necho valid_date(\"04-0-2040\") . \"\\n\";\necho valid_date(\"\
    06-04-2020\") . \"\\n\";\necho valid_date(\"06/04/2020\") . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($day < 1 || $day > 31) {\n        return false;\n    }\n    if\
    \ ($month == 2) {\n        if ($day > 29) {\n            return false;\n     \
    \   }\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n        if ($day > 30) {\n            return false;\n        }\n    }\n \
    \   if ($year < 1) {\n        return false;\n    }\n    return true;\n}\n\n/*\n\
    Write a function that takes a string and returns a new string with all vowels\
    \ removed.\n>>> disemvowel(\"This website is for losers LOL!\")\n\"Ths wbst s\
    \ fr lsrs LL!\"\n*/\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if ($date[0] < 1 || $date[0] > 12)\
    \ {\n        return false;\n    }\n    if ($date[0] == 2) {\n        if ($date[1]\
    \ < 1 || $date[1] > 29) {\n            return false;\n        }\n    } elseif\
    \ ($date[0] == 1 || $date[0] == 3 || $date[0] == 5 || $date[0] == 7 || $date[0]\
    \ == 8 || $date[0] == 10 || $date[0] == 12) {\n        if ($date[1] < 1 || $date[1]\
    \ > 31) {\n            return false;\n        }\n    } else {\n        if ($date[1]\
    \ < 1 || $date[1] > 30) {\n            return false;\n        }\n    }\n    if\
    \ ($date[2] < 1) {\n        return false;\n    }\n    return true;\n}\n\n/*\n\
    You have to write a function which validates a given date string and returns true\
    \ if the date is valid otherwise false.\nThe date is valid if all of the following\
    \ rules are satisfied:\n1. The date string is not empty.\n2. The date string is\
    \ in the format: dd-mm-yyyy.\n3. The date string is not in the format: mm-dd-yyyy.\n\
    4. The date string is not in the format: yyyy-mm-dd.\n5. The date string is not\
    \ in the format: yyyy-dd-mm.\n6. The date string is not in the format: dd/mm/yyyy.\n\
    7. The date string is not in the format: mm/dd/yyyy.\n8. The date string is not\
    \ in the format: yyyy/mm/dd.\n9. The date string is not in the format: yyyy/dd/mm.\n\
    10. The date string is not in the format: dd.mm.yyyy.\n11. The date string is\
    \ not in the format: mm.dd.yyyy.\n12. The date string is not in the format: yyy\n\
    function candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 46 in /tmp/tmp219e1eiz.php on
    line 46

    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n  $date = explode(\"-\", $date);\n  if (count($date)\
    \ != 3) {\n    return false;\n  }\n  if (!is_numeric($date[0]) || !is_numeric($date[1])\
    \ || !is_numeric($date[2])) {\n    return false;\n  }\n  if ($date[0] < 1 || $date[0]\
    \ > 12) {\n    return false;\n  }\n  if ($date[0] == 1 || $date[0] == 3 || $date[0]\
    \ == 5 || $date[0] == 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12)\
    \ {\n    if ($date[1] < 1 || $date[1] > 31) {\n      return false;\n    }\n  }\n\
    \  if ($date[0] == 4 || $date[0] == 6 || $date[0] == 9 || $date[0] == 11) {\n\
    \    if ($date[1] < 1 || $date[1] > 30) {\n      return false;\n    }\n  }\n \
    \ if ($date[0] == 2) {\n    if ($date[1] < 1 || $date[1] > 29) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\necho valid_date(\"03-11-2000\") . \"\
    <br>\";\necho valid_date(\"15-01-2012\") . \"<br>\";\necho valid_date(\"04-0-2040\"\
    ) . \"<br>\";\necho valid_date(\"06-04-2020\") . \"<br>\";\necho valid_date(\"\
    06/04/2020\") . \"<br>\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br><br>1<br><br>
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($day < 1 || $day > 31) {\n        return false;\n    }\n    if\
    \ ($month == 2) {\n        if ($day > 29) {\n            return false;\n     \
    \   }\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n        if ($day > 30) {\n            return false;\n        }\n    }\n \
    \   if ($year < 1) {\n        return false;\n    }\n    return true;\n}\n\n/*\
    \ Write a function which takes a string and returns the number of times\nthat\
    \ the letter \"a\" occurs in the string.\n>>> count_a(\"banana\")\n3\n>>> count_a(\"\
    apple\")\n1\n>>> count_a(\"\")\n0\n>>> count_a(\"a\")\n1\n>>> count_a(\"b\")\n\
    0*/\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n  $date = explode(\"-\", $date);\n  if (count($date)\
    \ != 3) {\n    return false;\n  }\n  if (strlen($date[0]) != 2 || strlen($date[1])\
    \ != 2 || strlen($date[2]) != 4) {\n    return false;\n  }\n  if ($date[0] < 1\
    \ || $date[0] > 12) {\n    return false;\n  }\n  if ($date[0] == 1 || $date[0]\
    \ == 3 || $date[0] == 5 || $date[0] == 7 || $date[0] == 8 || $date[0] == 10 ||\
    \ $date[0] == 12) {\n    if ($date[1] < 1 || $date[1] > 31) {\n      return false;\n\
    \    }\n  }\n  if ($date[0] == 4 || $date[0] == 6 || $date[0] == 9 || $date[0]\
    \ == 11) {\n    if ($date[1] < 1 || $date[1] > 30) {\n      return false;\n  \
    \  }\n  }\n  if ($date[0] == 2) {\n    if ($date[1] < 1 || $date[1] > 29) {\n\
    \      return false;\n    }\n  }\n  return true;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date_array = explode(\"-\", $date);\n    if\
    \ (count($date_array) != 3) {\n        return false;\n    }\n    $month = $date_array[0];\n\
    \    $day = $date_array[1];\n    $year = $date_array[2];\n    if ($month < 1 ||\
    \ $month > 12) {\n        return false;\n    }\n    if ($day < 1 || $day > 31)\
    \ {\n        return false;\n    }\n    if ($month == 2) {\n        if ($day >\
    \ 29) {\n            return false;\n        }\n    }\n    if ($month == 4 || $month\
    \ == 6 || $month == 9 || $month == 11) {\n        if ($day > 30) {\n         \
    \   return false;\n        }\n    }\n    if ($year < 1) {\n        return false;\n\
    \    }\n    return true;\n}\n\necho valid_date(\"03-11-2000\") . \"\\n\";\necho\
    \ valid_date(\"15-01-2012\") . \"\\n\";\necho valid_date(\"04-0-2040\") . \"\\\
    n\";\necho valid_date(\"06-04-2020\") . \"\\n\";\necho valid_date(\"06/04/2020\"\
    ) . \"\\n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($month == 2) {\n        if ($day < 1 || $day > 29) {\n       \
    \     return false;\n        }\n    } elseif ($month == 1 || $month == 3 || $month\
    \ == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n    \
    \    if ($day < 1 || $day > 31) {\n            return false;\n        }\n    }\
    \ else {\n        if ($day < 1 || $day > 30) {\n            return false;\n  \
    \      }\n    }\n    if ($year < 1000 || $year > 9999) {\n        return false;\n\
    \    }\n    return true;\n}\n\necho valid_date(\"03-11-2000\") . PHP_EOL;\necho\
    \ valid_date(\"15-01-2012\") . PHP_EOL;\necho valid_date(\"04-0-2040\") . PHP_EOL;\n\
    echo valid_date(\"06-04-2020\") . PHP_EOL;\necho valid_date(\"06/04/2020\") .\
    \ PHP_EOL;\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($day < 1 || $day > 31) {\n        return false;\n    }\n    if\
    \ ($month == 2) {\n        if ($day > 29) {\n            return false;\n     \
    \   }\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n        if ($day > 30) {\n            return false;\n        }\n    }\n \
    \   if ($year < 1) {\n        return false;\n    }\n    return true;\n}\n\n/*\
    \ You have to write a function which returns the sum of following series upto\
    \ nth term(parameter).\nSeries: 1 + 1/4 + 1/7 + 1/10 + 1/13 + 1/16 +...\nRules:\n\
    You need to round the answer to 2 decimal places and return it as String.\nIf\
    \ the given value is 0 then it should return 0.00\nYou will only be given Natural\
    \ Numbers as arguments.\nExamples:\nSeriesSum(1) => 1 = \"1.00\"\nSeriesSum(2)\
    \ => 1 + 1/4 = \"1.25\"\nSeriesSum(5) => 1 + 1/4 + 1/7 + 1/10 + 1/13 = \"1.57\"\
    \nNOTE: In PHP the function is called series_sum().*/\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if ($date[0] < 1 || $date[0] > 12)\
    \ {\n        return false;\n    }\n    if ($date[0] == 2) {\n        if ($date[2]\
    \ % 4 == 0) {\n            if ($date[1] < 1 || $date[1] > 29) {\n            \
    \    return false;\n            }\n        } else {\n            if ($date[1]\
    \ < 1 || $date[1] > 28) {\n                return false;\n            }\n    \
    \    }\n    } else if ($date[0] == 1 || $date[0] == 3 || $date[0] == 5 || $date[0]\
    \ == 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12) {\n        if ($date[1]\
    \ < 1 || $date[1] > 31) {\n            return false;\n        }\n    } else {\n\
    \        if ($date[1] < 1 || $date[1] > 30) {\n            return false;\n   \
    \     }\n    }\n    return true;\n}\n\n/* Write a function that takes a string\
    \ and returns the number of vowels in the string.\n>>> count_vowels(\"Hello world\"\
    )\n3\n>>> count_vowels(\"Python\")\n2\n>>> count_vowels(\"Theistareykjarbunga\"\
    )\n8\n>>> count_vowels(\"grrrrgh!\")\n0\n>>> count_vowels(\"Github is the second\
    \ best thing that happend to programmers, after the keyboard!\")\n22\n>>> count_vowels(\"\
    A nice day to code!\")\n8*/\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($day < 1 || $day > 31) {\n        return false;\n    }\n    if\
    \ ($month == 2) {\n        if ($day > 29) {\n            return false;\n     \
    \   }\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n        if ($day > 30) {\n            return false;\n        }\n    }\n \
    \   if ($year < 1) {\n        return false;\n    }\n    return true;\n}\n\n/*\n\
    Write a function that takes a string and returns the number of vowels in the string.\n\
    >>> count_vowels(\"Hello World\")\n3\n>>> count_vowels(\"The quick brown fox jumps\
    \ over the lazy dog\")\n12\n>>> count_vowels(\"\")\n0\n*/\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if (!checkdate($date[0], $date[1],\
    \ $date[2])) {\n        return false;\n    }\n    return true;\n}\n\n/*\n * Write\
    \ a function that takes a string as input and returns the string reversed.\n *\
    \ >>> reverse_string(\"hello\")\n * \"olleh\"\n * >>> reverse_string(\"world\"\
    )\n * \"dlrow\"\n * >>> reverse_string(\"\")\n * \"\"\n * >>> reverse_string(\"\
    a\")\n * \"a\"\n * >>> reverse_string(\"ab\")\n * \"ba\"\n */\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n  if(empty($date)) {\n    return false;\n  }\n \
    \ $date = explode('-', $date);\n  if(count($date) != 3) {\n    return false;\n\
    \  }\n  $day = $date[0];\n  $month = $date[1];\n  $year = $date[2];\n  if(!is_numeric($day)\
    \ || !is_numeric($month) || !is_numeric($year)) {\n    return false;\n  }\n  if($day\
    \ < 1 || $day > 31) {\n    return false;\n  }\n  if($month < 1 || $month > 12)\
    \ {\n    return false;\n  }\n  if($month == 2 && $day > 29) {\n    return false;\n\
    \  }\n  if(($month == 4 || $month == 6 || $month == 9 || $month == 11) && $day\
    \ > 30) {\n    return false;\n  }\n  return true;\n}\n\necho valid_date(\"03-11-2000\"\
    ) . \"\\n\";\necho valid_date(\"15-01-2012\") . \"\\n\";\necho valid_date(\"04-0-2040\"\
    ) . \"\\n\";\necho valid_date(\"06-04-2020\") . \"\\n\";\necho valid_date(\"06/04/2020\"\
    ) . \"\\n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "1\n1\n\n1\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_7inb6ny.php:59\n\
    Stack trace:\n#0 /tmp/tmp_7inb6ny.php(76): test()\n#1 {main}\n  thrown in /tmp/tmp_7inb6ny.php\
    \ on line 59\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if (strlen($date[0]) != 2 || strlen($date[1])\
    \ != 2 || strlen($date[2]) != 4) {\n        return false;\n    }\n    if ($date[0]\
    \ < 1 || $date[0] > 12) {\n        return false;\n    }\n    if ($date[0] == 1\
    \ || $date[0] == 3 || $date[0] == 5 || $date[0] == 7 || $date[0] == 8 || $date[0]\
    \ == 10 || $date[0] == 12) {\n        if ($date[1] < 1 || $date[1] > 31) {\n \
    \           return false;\n        }\n    } elseif ($date[0] == 4 || $date[0]\
    \ == 6 || $date[0] == 9 || $date[0] == 11) {\n        if ($date[1] < 1 || $date[1]\
    \ > 30) {\n            return false;\n        }\n    } elseif ($date[0] == 2)\
    \ {\n        if ($date[1] < 1 || $date[1] > 29) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\n\n/* You have to write a function which\
    \ validates a given date string and\nreturns true if the date is valid otherwise\
    \ false.\nThe date is valid if all of the following rules are satisfied:\n1. The\
    \ date string is not empty.\n2. The number of days is not less than 1 or higher\
    \ than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less\
    \ than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is\
    \ not less than 1 or higher than 29 for the month 2.\n3. The months should not\
    \ be less than 1 or higher than 12.\n4. The date should be in the format: mm-dd-yyyy\n\
    >>> valid_date(\"03-11-2000\")\ntrue\n>>> valid_date(\"15-01-2012\")\nfalse\n\
    >>> valid_date(\"04-0-20\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 46 in /tmp/tmprjufsx1m.php on
    line 46

    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if (!is_numeric($date[0]) || !is_numeric($date[1])\
    \ || !is_numeric($date[2])) {\n        return false;\n    }\n    if ($date[0]\
    \ < 1 || $date[0] > 12) {\n        return false;\n    }\n    if ($date[0] == 2)\
    \ {\n        if ($date[1] < 1 || $date[1] > 29) {\n            return false;\n\
    \        }\n    } elseif ($date[0] == 1 || $date[0] == 3 || $date[0] == 5 || $date[0]\
    \ == 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12) {\n        if ($date[1]\
    \ < 1 || $date[1] > 31) {\n            return false;\n        }\n    } else {\n\
    \        if ($date[1] < 1 || $date[1] > 30) {\n            return false;\n   \
    \     }\n    }\n    return true;\n}\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($day < 1 || $day > 31) {\n        return false;\n    }\n    if\
    \ ($month == 2) {\n        if ($day > 29) {\n            return false;\n     \
    \   }\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n        if ($day > 30) {\n            return false;\n        }\n    }\n \
    \   if ($year < 1) {\n        return false;\n    }\n    return true;\n}\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($day < 1 || $day > 31) {\n        return false;\n    }\n    if\
    \ ($month == 2) {\n        if ($day > 29) {\n            return false;\n     \
    \   }\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n        if ($day > 30) {\n            return false;\n        }\n    }\n \
    \   if ($year < 1) {\n        return false;\n    }\n    return true;\n}\n\n/*\n\
    Write a function that takes a string as input and returns the string reversed.\n\
    >>> reverse_string(\"Hello World\")\n\"dlroW olleH\"\n>>> reverse_string(\"\"\
    )\n\"\"\n>>> reverse_string(\"a\")\n\"a\"\n>>> reverse_string(\"ab\")\n\"ba\"\n\
    */\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month > 12 || $month < 1) {\n        return false;\n\
    \    }\n    if ($day > 31 || $day < 1) {\n        return false;\n    }\n    if\
    \ ($month == 2) {\n        if ($day > 29) {\n            return false;\n     \
    \   }\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n        if ($day > 30) {\n            return false;\n        }\n    }\n \
    \   if ($year < 1) {\n        return false;\n    }\n    return true;\n}\n\n/*\n\
    Write a function that takes a string and returns the number of vowels in the string.\n\
    >>> count_vowels(\"hello\")\n2\n>>> count_vowels(\"world\")\n1\n>>> count_vowels(\"\
    \")\n0\n>>> count_vowels(\"a\")\n1\n>>> count_vowels(\"ab\")\n1\n>>> count_vowels(\"\
    aeiou\")\n5\n>>> count_vowels(\"bcd\")\n0\n>>> count_vowels(\"aeiouaeiou\")\n\
    10\n*/\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if ($date[0] < 1 || $date[0] > 12)\
    \ {\n        return false;\n    }\n    if ($date[0] == 2) {\n        if ($date[2]\
    \ % 4 == 0) {\n            if ($date[1] < 1 || $date[1] > 29) {\n            \
    \    return false;\n            }\n        } else {\n            if ($date[1]\
    \ < 1 || $date[1] > 28) {\n                return false;\n            }\n    \
    \    }\n    } else if ($date[0] == 1 || $date[0] == 3 || $date[0] == 5 || $date[0]\
    \ == 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12) {\n        if ($date[1]\
    \ < 1 || $date[1] > 31) {\n            return false;\n        }\n    } else {\n\
    \        if ($date[1] < 1 || $date[1] > 30) {\n            return false;\n   \
    \     }\n    }\n    return true;\n}\n\n/* You have to write a function which validates\
    \ a given date string and\nreturns true if the date is valid otherwise false.\n\
    The date is valid if all of the following rules are satisfied:\n1. The date string\
    \ is not empty.\n2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n3. The months should not be less than 1\
    \ or higher than 12.\n4. The date should be in the format: mm-dd-yyyy\n>>> valid_date(\"\
    03-11-2000\")\ntrue\n>>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"\
    04-0-2040\")\nfalse\n>>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/\n\
    function candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 49 in /tmp/tmpls7k6n24.php on
    line 49

    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n\t$date = explode(\"-\", $date);\n\tif (count($date)\
    \ != 3) {\n\t\treturn false;\n\t}\n\t$month = $date[0];\n\t$day = $date[1];\n\t\
    $year = $date[2];\n\tif ($month < 1 || $month > 12) {\n\t\treturn false;\n\t}\n\
    \tif ($day < 1 || $day > 31) {\n\t\treturn false;\n\t}\n\tif ($month == 2) {\n\
    \t\tif ($day > 29) {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif ($month == 4 || $month\
    \ == 6 || $month == 9 || $month == 11) {\n\t\tif ($day > 30) {\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\tif ($year < 1) {\n\t\treturn false;\n\t}\n\treturn true;\n}\necho\
    \ valid_date(\"03-11-2000\") . \"\\n\";\necho valid_date(\"15-01-2012\") . \"\\\
    n\";\necho valid_date(\"04-0-2040\") . \"\\n\";\necho valid_date(\"06-04-2020\"\
    ) . \"\\n\";\necho valid_date(\"06/04/2020\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n  $date = explode(\"-\", $date);\n  if (count($date)\
    \ != 3) {\n    return false;\n  }\n  $month = $date[0];\n  $day = $date[1];\n\
    \  $year = $date[2];\n  if ($month < 1 || $month > 12) {\n    return false;\n\
    \  }\n  if ($day < 1 || $day > 31) {\n    return false;\n  }\n  if ($month ==\
    \ 2) {\n    if ($day > 29) {\n      return false;\n    }\n  }\n  if ($month ==\
    \ 4 || $month == 6 || $month == 9 || $month == 11) {\n    if ($day > 30) {\n \
    \     return false;\n    }\n  }\n  if ($year < 1) {\n    return false;\n  }\n\
    \  return true;\n}\necho valid_date(\"03-11-2000\") . \"\\n\";\necho valid_date(\"\
    15-01-2012\") . \"\\n\";\necho valid_date(\"04-0-2040\") . \"\\n\";\necho valid_date(\"\
    06-04-2020\") . \"\\n\";\necho valid_date(\"06/04/2020\") . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    if (empty($date)) {\n        return false;\n\
    \    }\n    $date_array = explode('-', $date);\n    if (count($date_array) !=\
    \ 3) {\n        return false;\n    }\n    if (!checkdate($date_array[0], $date_array[1],\
    \ $date_array[2])) {\n        return false;\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    if(empty($date)){\n        return false;\n \
    \   }\n    $date_arr = explode(\"-\", $date);\n    if(count($date_arr) != 3){\n\
    \        return false;\n    }\n    $month = $date_arr[0];\n    $day = $date_arr[1];\n\
    \    $year = $date_arr[2];\n    if(!is_numeric($month) || !is_numeric($day) ||\
    \ !is_numeric($year)){\n        return false;\n    }\n    if($month < 1 || $month\
    \ > 12){\n        return false;\n    }\n    if($day < 1 || $day > 31){\n     \
    \   return false;\n    }\n    if($day > 30 && ($month == 4 || $month == 6 || $month\
    \ == 9 || $month == 11)){\n        return false;\n    }\n    if($day > 29 && $month\
    \ == 2){\n        return false;\n    }\n    if($day > 28 && $month == 2 && $year\
    \ % 4 != 0){\n        return false;\n    }\n    return true;\n}\n\necho valid_date(\"\
    03-11-2000\") ? \"true\" : \"false\";\necho \"\\n\";\necho valid_date(\"15-01-2012\"\
    ) ? \"true\" : \"false\";\necho \"\\n\";\necho valid_date(\"04-0-2040\") ? \"\
    true\" : \"false\";\necho \"\\n\";\necho valid_date(\"06-04-2020\") ? \"true\"\
    \ : \"false\";\necho \"\\n\";\necho valid_date(\"06/04/2020\") ? \"true\" : \"\
    false\";\necho \"\\n\";\necho valid_date(\"06-31-2020\") ? \"true\" : \"false\"\
    ;\necho \"\\n\";\necho valid_date(\"06-30-2020\") ? \"true\" : \"false\";\necho\
    \ \"\\n\";\necho valid_date(\"02-29-2020\") ? \"true\" : \"false\";\necho \"\\\
    n\";\necho valid_date(\"02-28-2020\") ? \"true\" : \"false\";\necho \"\\n\";\n\
    echo valid_date(\"02-29-2021\") ? \"true\" : \"false\";\necho\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpo8oy8yrn.php on line 71

    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($month == 2) {\n        if ($day < 1 || $day > 29) {\n       \
    \     return false;\n        }\n    } else if ($month == 1 || $month == 3 || $month\
    \ == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n    \
    \    if ($day < 1 || $day > 31) {\n            return false;\n        }\n    }\
    \ else {\n        if ($day < 1 || $day > 30) {\n            return false;\n  \
    \      }\n    }\n    if ($year < 1) {\n        return false;\n    }\n    return\
    \ true;\n}\n\n/*\nYou have to write a function which validates a given date string\
    \ and returns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The date string is in the format: mm/dd/yyyy\n3. The number of days is not\
    \ less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number\
    \ of days is not less than 1 or higher than 30 days for months 4,6,9,11. And,\
    \ the number of days is not less than 1 or higher than 29 for the month 2.\n4.\
    \ The months should not be less than 1 or higher than 12.\n>>> valid_date(\"03/11/2000\"\
    )\ntrue\n>>> valid_date(\"15/01/2012\")\nfalse\n>>> valid_date(\"04/0/2040\")\n\
    false\n>>> valid_date(\"06/04/2020\")\ntrue\n>>> valid_date(\"06-04-2020\")\n\
    false\n*/\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($day < 1 || $day > 31) {\n        return false;\n    }\n    if\
    \ ($month == 2) {\n        if ($day > 29) {\n            return false;\n     \
    \   }\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n        if ($day > 30) {\n            return false;\n        }\n    }\n \
    \   if ($year < 1) {\n        return false;\n    }\n    return true;\n}\n\n/*\n\
    \ * Write a function that takes a string and returns the number of vowels in the\
    \ string.\n * >>> count_vowels(\"Hello World\")\n * 3\n * >>> count_vowels(\"\
    Python\")\n * 2\n * >>> count_vowels(\"Theistareykjarbunga\")\n * 8\n * >>> count_vowels(\"\
    grrrrgh!\")\n * 0\n * >>> count_vowels(\"Github is the second best thing that\
    \ happend to programmers, after the keyboard!\")\n * 22\n * >>> count_vowels(\"\
    A nice day to code!\")\n * 8\n */\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n  $date = explode(\"-\", $date);\n  if (count($date)\
    \ != 3) {\n    return false;\n  }\n  if ($date[0] < 1 || $date[0] > 12) {\n  \
    \  return false;\n  }\n  if ($date[0] == 2) {\n    if ($date[1] < 1 || $date[1]\
    \ > 29) {\n      return false;\n    }\n  } elseif ($date[0] == 1 || $date[0] ==\
    \ 3 || $date[0] == 5 || $date[0] == 7 || $date[0] == 8 || $date[0] == 10 || $date[0]\
    \ == 12) {\n    if ($date[1] < 1 || $date[1] > 31) {\n      return false;\n  \
    \  }\n  } else {\n    if ($date[1] < 1 || $date[1] > 30) {\n      return false;\n\
    \    }\n  }\n  if (strlen($date[2]) != 4) {\n    return false;\n  }\n  return\
    \ true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if ($date[0] > 12 || $date[0] < 1)\
    \ {\n        return false;\n    }\n    if ($date[0] == 2) {\n        if ($date[1]\
    \ > 29 || $date[1] < 1) {\n            return false;\n        }\n    } elseif\
    \ ($date[0] == 4 || $date[0] == 6 || $date[0] == 9 || $date[0] == 11) {\n    \
    \    if ($date[1] > 30 || $date[1] < 1) {\n            return false;\n       \
    \ }\n    } else {\n        if ($date[1] > 31 || $date[1] < 1) {\n            return\
    \ false;\n        }\n    }\n    if (strlen($date[2]) != 4) {\n        return false;\n\
    \    }\n    return true;\n}\n\n/*\n * You have to write a function which validates\
    \ a given email string and returns true if the email is valid otherwise false.\n\
    The email is valid if all of the following rules are satisfied:\n1. The email\
    \ string is not empty.\n2. The email string contains only one @ character.\n3.\
    \ The email string contains only one . character.\n4. The email string contains\
    \ at least one character before the @ character.\n5. The email string contains\
    \ at least one character after the @ character.\n6. The email string contains\
    \ at least one character before the . character.\n7. The email string contains\
    \ at least one character after the . character.\n8. The email string does not\
    \ contain any spaces.\n>>> valid_email(\"test@test.com\")\ntrue\n>>> valid_email(\"\
    test@test.com.com\")\nfalse\n>>> valid_email(\"test@test\")\nfalse\n>>> valid_email(\"\
    test@test.c\")\nfalse\n>>> valid_email(\"test@test.com \")\nfalse\n>>> valid_email(\"\
    \ test@test.com\")\nfalse\n>>> valid_email(\"test@test.com test\")\nfalse\n>>>\
    \ valid_email(\"test@test.com@test\")\nfalse\n>>> valid_email(\"test@test.com\n\
    function candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 46 in /tmp/tmptyj3qbyq.php on
    line 46

    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n  $date = explode(\"-\", $date);\n  if (count($date)\
    \ != 3) {\n    return false;\n  }\n  $month = $date[0];\n  $day = $date[1];\n\
    \  $year = $date[2];\n  if ($month < 1 || $month > 12) {\n    return false;\n\
    \  }\n  if ($day < 1 || $day > 31) {\n    return false;\n  }\n  if ($month ==\
    \ 2) {\n    if ($day > 29) {\n      return false;\n    }\n  }\n  if ($month ==\
    \ 4 || $month == 6 || $month == 9 || $month == 11) {\n    if ($day > 30) {\n \
    \     return false;\n    }\n  }\n  if ($year < 1) {\n    return false;\n  }\n\
    \  return true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if ($date[0] < 1 || $date[0] > 12)\
    \ {\n        return false;\n    }\n    if ($date[0] == 2) {\n        if ($date[2]\
    \ % 4 == 0) {\n            if ($date[1] < 1 || $date[1] > 29) {\n            \
    \    return false;\n            }\n        } else {\n            if ($date[1]\
    \ < 1 || $date[1] > 28) {\n                return false;\n            }\n    \
    \    }\n    } elseif ($date[0] == 1 || $date[0] == 3 || $date[0] == 5 || $date[0]\
    \ == 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12) {\n        if ($date[1]\
    \ < 1 || $date[1] > 31) {\n            return false;\n        }\n    } else {\n\
    \        if ($date[1] < 1 || $date[1] > 30) {\n            return false;\n   \
    \     }\n    }\n    return true;\n}\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if (!checkdate($date[0], $date[1],\
    \ $date[2])) {\n        return false;\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n\t$date = explode(\"-\", $date);\n\tif(count($date)\
    \ != 3) {\n\t\treturn false;\n\t}\n\t$month = $date[0];\n\t$day = $date[1];\n\t\
    $year = $date[2];\n\tif($month < 1 || $month > 12) {\n\t\treturn false;\n\t}\n\
    \tif($month == 2) {\n\t\tif($day < 1 || $day > 29) {\n\t\t\treturn false;\n\t\t\
    }\n\t}\n\tif($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month\
    \ == 8 || $month == 10 || $month == 12) {\n\t\tif($day < 1 || $day > 31) {\n\t\
    \t\treturn false;\n\t\t}\n\t}\n\tif($month == 4 || $month == 6 || $month == 9\
    \ || $month == 11) {\n\t\tif($day < 1 || $day > 30) {\n\t\t\treturn false;\n\t\
    \t}\n\t}\n\treturn true;\n}\necho valid_date(\"03-11-2000\").\"\\n\";\necho valid_date(\"\
    15-01-2012\").\"\\n\";\necho valid_date(\"04-0-2040\").\"\\n\";\necho valid_date(\"\
    06-04-2020\").\"\\n\";\necho valid_date(\"06/04/2020\").\"\\n\";\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($day < 1 || $day > 31) {\n        return false;\n    }\n    if\
    \ ($month == 2) {\n        if ($day > 29) {\n            return false;\n     \
    \   }\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n        if ($day > 30) {\n            return false;\n        }\n    }\n \
    \   if ($year < 1) {\n        return false;\n    }\n    return true;\n}\n\n/*\n\
    You have to write a function which validates a given date string and returns true\
    \ if the date is valid otherwise false.\nThe date is valid if all of the following\
    \ rules are satisfied:\n1. The date string is not empty.\n2. The date string is\
    \ in the format: mm/dd/yyyy.\n3. The month should not be less than 1 or higher\
    \ than 12.\n4. The day should not be less than 1 or higher than 31.\n5. The year\
    \ should not be less than 1900 or higher than 2100.\n>>> valid_date(\"03/11/2000\"\
    )\ntrue\n>>> valid_date(\"15/01/2012\")\nfalse\n>>> valid_date(\"04/0/2040\")\n\
    false\n>>> valid_date(\"06/04/2020\")\ntrue\n>>> valid_date(\"06-04-2020\")\n\
    false\n*/\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if (strlen($date[0]) != 2 || strlen($date[1])\
    \ != 2 || strlen($date[2]) != 4) {\n        return false;\n    }\n    if ($date[0]\
    \ < 1 || $date[0] > 12) {\n        return false;\n    }\n    if ($date[0] == 2)\
    \ {\n        if ($date[1] < 1 || $date[1] > 29) {\n            return false;\n\
    \        }\n    } elseif ($date[0] == 1 || $date[0] == 3 || $date[0] == 5 || $date[0]\
    \ == 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12) {\n        if ($date[1]\
    \ < 1 || $date[1] > 31) {\n            return false;\n        }\n    } else {\n\
    \        if ($date[1] < 1 || $date[1] > 30) {\n            return false;\n   \
    \     }\n    }\n    return true;\n}\n\necho valid_date(\"03-11-2000\") . \"\\\
    n\";\necho valid_date(\"15-01-2012\") . \"\\n\";\necho valid_date(\"04-0-2040\"\
    ) . \"\\n\";\necho valid_date(\"06-04-2020\") . \"\\n\";\necho valid_date(\"06/04/2020\"\
    ) . \"\\n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    $month = $date[0];\n\
    \    $day = $date[1];\n    $year = $date[2];\n    if ($month > 12 || $month <\
    \ 1) {\n        return false;\n    }\n    if ($month == 2) {\n        if ($day\
    \ > 29 || $day < 1) {\n            return false;\n        }\n    } elseif ($month\
    \ == 4 || $month == 6 || $month == 9 || $month == 11) {\n        if ($day > 30\
    \ || $day < 1) {\n            return false;\n        }\n    } else {\n       \
    \ if ($day > 31 || $day < 1) {\n            return false;\n        }\n    }\n\
    \    if ($year < 1) {\n        return false;\n    }\n    return true;\n}\n\n/*\
    \ You have to write a function which validates a given date string and\nreturns\
    \ true if the date is valid otherwise false.\nThe date is valid if all of the\
    \ following rules are satisfied:\n1. The date string is not empty.\n2. The number\
    \ of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    Warning: Undefined array key 1 in /tmp/tmpxxqnb8kd.php on line 22


    Warning: Undefined array key 2 in /tmp/tmpxxqnb8kd.php on line 23


    Warning: Undefined array key 1 in /tmp/tmpxxqnb8kd.php on line 22


    Warning: Undefined array key 2 in /tmp/tmpxxqnb8kd.php on line 23


    Warning: Undefined array key 1 in /tmp/tmpxxqnb8kd.php on line 22


    Warning: Undefined array key 2 in /tmp/tmpxxqnb8kd.php on line 23


    Warning: Undefined array key 2 in /tmp/tmpxxqnb8kd.php on line 23


    Warning: Undefined array key 2 in /tmp/tmpxxqnb8kd.php on line 23

    '
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $day = $date[1];\n    $month = $date[0];\n\
    \    $year = $date[2];\n    if ($day < 1 || $day > 31) {\n        return false;\n\
    \    }\n    if ($month < 1 || $month > 12) {\n        return false;\n    }\n \
    \   if ($year < 1) {\n        return false;\n    }\n    if ($month == 2) {\n \
    \       if ($day > 29) {\n            return false;\n        }\n    }\n    if\
    \ ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n        if ($day\
    \ > 30) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\
    echo valid_date(\"03-11-2000\");\necho valid_date(\"15-01-2012\");\necho valid_date(\"\
    04-0-2040\");\necho valid_date(\"06-04-2020\");\necho valid_date(\"06/04/2020\"\
    );\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    if (empty($date)) {\n        return false;\n\
    \    }\n    $date_arr = explode('-', $date);\n    if (count($date_arr) != 3) {\n\
    \        return false;\n    }\n    $month = $date_arr[0];\n    $day = $date_arr[1];\n\
    \    $year = $date_arr[2];\n    if ($month < 1 || $month > 12) {\n        return\
    \ false;\n    }\n    if ($day < 1 || $day > 31) {\n        return false;\n   \
    \ }\n    if ($month == 2) {\n        if ($day > 29) {\n            return false;\n\
    \        }\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month\
    \ == 11) {\n        if ($day > 30) {\n            return false;\n        }\n \
    \   }\n    if ($year < 1) {\n        return false;\n    }\n    return true;\n\
    }\n\n$date = \"03-11-2000\";\necho valid_date($date);\necho \"\\n\";\n$date =\
    \ \"15-01-2012\";\necho valid_date($date);\necho \"\\n\";\n$date = \"04-0-2040\"\
    ;\necho valid_date($date);\necho \"\\n\";\n$date = \"06-04-2020\";\necho valid_date($date);\n\
    echo \"\\n\";\n$date = \"06/04/2020\";\necho valid_date($date);\necho \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($day < 1 || $day > 31) {\n        return false;\n    }\n    if\
    \ ($month == 2) {\n        if ($day > 29) {\n            return false;\n     \
    \   }\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n        if ($day > 30) {\n            return false;\n        }\n    }\n \
    \   return true;\n}\n\necho valid_date(\"03-11-2000\");\necho valid_date(\"15-01-2012\"\
    );\necho valid_date(\"04-0-2040\");\necho valid_date(\"06-04-2020\");\necho valid_date(\"\
    06/04/2020\");\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if(count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if(!is_numeric($month) || !is_numeric($day) || !is_numeric($year))\
    \ {\n        return false;\n    }\n    if($month < 1 || $month > 12) {\n     \
    \   return false;\n    }\n    if($day < 1 || $day > 31) {\n        return false;\n\
    \    }\n    if($month == 2) {\n        if($day > 29) {\n            return false;\n\
    \        }\n    }\n    if($month == 4 || $month == 6 || $month == 9 || $month\
    \ == 11) {\n        if($day > 30) {\n            return false;\n        }\n  \
    \  }\n    return true;\n}\n\necho valid_date(\"03-11-2000\") ? \"true\\n\" : \"\
    false\\n\";\necho valid_date(\"15-01-2012\") ? \"true\\n\" : \"false\\n\";\necho\
    \ valid_date(\"04-0-2040\") ? \"true\\n\" : \"false\\n\";\necho valid_date(\"\
    06-04-2020\") ? \"true\\n\" : \"false\\n\";\necho valid_date(\"06/04/2020\") ?\
    \ \"true\\n\" : \"false\\n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    false

    false

    true

    false

    '
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if (!is_numeric($date[0]) || !is_numeric($date[1])\
    \ || !is_numeric($date[2])) {\n        return false;\n    }\n    if ($date[0]\
    \ < 1 || $date[0] > 12) {\n        return false;\n    }\n    if ($date[0] == 2)\
    \ {\n        if ($date[1] < 1 || $date[1] > 29) {\n            return false;\n\
    \        }\n    } elseif ($date[0] == 1 || $date[0] == 3 || $date[0] == 5 || $date[0]\
    \ == 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12) {\n        if ($date[1]\
    \ < 1 || $date[1] > 31) {\n            return false;\n        }\n    } else {\n\
    \        if ($date[1] < 1 || $date[1] > 30) {\n            return false;\n   \
    \     }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($day < 1 || $day > 31) {\n        return false;\n    }\n    if\
    \ ($month == 2) {\n        if ($day > 29) {\n            return false;\n     \
    \   }\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n        if ($day > 30) {\n            return false;\n        }\n    }\n \
    \   if ($year < 1) {\n        return false;\n    }\n    return true;\n}\n\n/*\n\
    You have to write a function which returns the number of vowels in a given string.\n\
    The function should count uppercase vowels as well.\n>>> count_vowels(\"abcdef\"\
    )\n2\n>>> count_vowels(\"ABCDE\")\n2\n>>> count_vowels(\"Hello world!\")\n3\n\
    >>> count_vowels(\"Pythagoras\")\n4\n>>> count_vowels(\"Theistareykjarbunga\"\
    )\n8\n>>> count_vowels(\"grrrrgh!\")\n0\n>>> count_vowels(\"Github is the second\
    \ best thing that happend to programmers, after the keyboard!\")\n22\n>>> count_vowels(\"\
    A nice day to code!\")\n8\n*/\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if (!is_numeric($date[0]) || !is_numeric($date[1])\
    \ || !is_numeric($date[2])) {\n        return false;\n    }\n    if ($date[0]\
    \ < 1 || $date[0] > 12) {\n        return false;\n    }\n    if ($date[0] == 2)\
    \ {\n        if ($date[1] < 1 || $date[1] > 29) {\n            return false;\n\
    \        }\n    } else if ($date[0] == 1 || $date[0] == 3 || $date[0] == 5 ||\
    \ $date[0] == 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12) {\n    \
    \    if ($date[1] < 1 || $date[1] > 31) {\n            return false;\n       \
    \ }\n    } else {\n        if ($date[1] < 1 || $date[1] > 30) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if ($date[0] < 1 || $date[0] > 12)\
    \ {\n        return false;\n    }\n    if ($date[1] < 1 || $date[1] > 31) {\n\
    \        return false;\n    }\n    if ($date[0] == 2 && $date[1] > 29) {\n   \
    \     return false;\n    }\n    if ($date[0] == 4 || $date[0] == 6 || $date[0]\
    \ == 9 || $date[0] == 11) {\n        if ($date[1] > 30) {\n            return\
    \ false;\n        }\n    }\n    if ($date[2] < 1) {\n        return false;\n \
    \   }\n    return true;\n}\n\necho valid_date(\"03-11-2000\") . \"<br>\";\necho\
    \ valid_date(\"15-01-2012\") . \"<br>\";\necho valid_date(\"04-0-2040\") . \"\
    <br>\";\necho valid_date(\"06-04-2020\") . \"<br>\";\necho valid_date(\"06/04/2020\"\
    ) . \"<br>\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br><br>1<br><br>
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date_array = explode(\"-\", $date);\n    if\
    \ (count($date_array) != 3) {\n        return false;\n    }\n    $month = $date_array[0];\n\
    \    $day = $date_array[1];\n    $year = $date_array[2];\n    if ($month < 1 ||\
    \ $month > 12) {\n        return false;\n    }\n    if ($day < 1 || $day > 31)\
    \ {\n        return false;\n    }\n    if ($month == 2) {\n        if ($day >\
    \ 29) {\n            return false;\n        }\n    }\n    if ($month == 4 || $month\
    \ == 6 || $month == 9 || $month == 11) {\n        if ($day > 30) {\n         \
    \   return false;\n        }\n    }\n    if ($year < 1) {\n        return false;\n\
    \    }\n    return true;\n}\n\necho valid_date(\"03-11-2000\") . \"\\n\";\necho\
    \ valid_date(\"15-01-2012\") . \"\\n\";\necho valid_date(\"04-0-2040\") . \"\\\
    n\";\necho valid_date(\"06-04-2020\") . \"\\n\";\necho valid_date(\"06/04/2020\"\
    ) . \"\\n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n  if (preg_match(\"/^([0-9]{2})-([0-9]{2})-([0-9]{4})$/\"\
    , $date, $parts)) {\n    if (checkdate($parts[1], $parts[2], $parts[3])) {\n \
    \     return true;\n    }\n  }\n  return false;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n  if(empty($date)){\n    return false;\n  }\n  $date_arr\
    \ = explode(\"-\", $date);\n  if(count($date_arr) != 3){\n    return false;\n\
    \  }\n  $month = $date_arr[0];\n  $day = $date_arr[1];\n  $year = $date_arr[2];\n\
    \  if($month < 1 || $month > 12){\n    return false;\n  }\n  if($day < 1 || $day\
    \ > 31){\n    return false;\n  }\n  if($month == 2){\n    if($day > 29){\n   \
    \   return false;\n    }\n  }\n  if($month == 4 || $month == 6 || $month == 9\
    \ || $month == 11){\n    if($day > 30){\n      return false;\n    }\n  }\n  if(strlen($year)\
    \ != 4){\n    return false;\n  }\n  return true;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($day < 1 || $day > 31) {\n        return false;\n    }\n    if\
    \ ($month == 2) {\n        if ($day > 29) {\n            return false;\n     \
    \   }\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n        if ($day > 30) {\n            return false;\n        }\n    }\n \
    \   if ($year < 1) {\n        return false;\n    }\n    return true;\n}\n\n/*\n\
    Write a function that takes a string and returns the number of vowels in the string.\n\
    >>> count_vowels(\"Hello world\")\n3\n>>> count_vowels(\"Python\")\n2\n>>> count_vowels(\"\
    Theistareykjarbunga\")\n8\n>>> count_vowels(\"grrrrgh!\")\n0\n>>> count_vowels(\"\
    Github is the second best thing that happend to programmers, after the keyboard!\"\
    )\n22\n>>> count_vowels(\"A nice day to code!\")\n8\n*/\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if ($date[0] < 1 || $date[0] > 12)\
    \ {\n        return false;\n    }\n    if ($date[0] == 2) {\n        if ($date[1]\
    \ < 1 || $date[1] > 29) {\n            return false;\n        }\n    } elseif\
    \ ($date[0] == 1 || $date[0] == 3 || $date[0] == 5 || $date[0] == 7 || $date[0]\
    \ == 8 || $date[0] == 10 || $date[0] == 12) {\n        if ($date[1] < 1 || $date[1]\
    \ > 31) {\n            return false;\n        }\n    } else {\n        if ($date[1]\
    \ < 1 || $date[1] > 30) {\n            return false;\n        }\n    }\n    if\
    \ ($date[2] < 1) {\n        return false;\n    }\n    return true;\n}\n\n/* You\
    \ have to write a function which validates a given date string and\nreturns true\
    \ if the date is valid otherwise false.\nThe date is valid if all of the following\
    \ rules are satisfied:\n1. The date string is not empty.\n2. The date should be\
    \ in the format: mm/dd/yyyy\n3. The number of days is not less than 1 or higher\
    \ than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less\
    \ than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is\
    \ not less than 1 or higher than 29 for the month 2.\n4. The months should not\
    \ be less than 1 or higher than 12.\n>>> valid_date(\"03/11/2000\")\ntrue\n>>>\
    \ valid_date(\"15/01/2012\")\nfalse\n>>> valid_date(\"04/0/2040\")\nfalse\n>>>\
    \ valid_date(\"06/04/2020\")\ntrue\n>>> valid_date(\"06-04-2020\")\nfalse*/\n\
    function candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($month == 2) {\n        if ($day < 1 || $day > 29) {\n       \
    \     return false;\n        }\n    } else if ($month == 1 || $month == 3 || $month\
    \ == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n    \
    \    if ($day < 1 || $day > 31) {\n            return false;\n        }\n    }\
    \ else {\n        if ($day < 1 || $day > 30) {\n            return false;\n  \
    \      }\n    }\n    if ($year < 1) {\n        return false;\n    }\n    return\
    \ true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    if (preg_match(\"/^([0-9]{2})-([0-9]{2})-([0-9]{4})$/\"\
    , $date, $parts)) {\n        if (checkdate($parts[1], $parts[2], $parts[3])) {\n\
    \            return true;\n        }\n    }\n    return false;\n}\n\n/*\n * Write\
    \ a function that takes a string as input and reverse only the vowels of a string.\n\
    \ * Example 1:\n * Given s = \"hello\", return \"holle\".\n * Example 2:\n * Given\
    \ s = \"leetcode\", return \"leotcede\".\n * Note:\n * The vowels does not include\
    \ the letter \"y\".\n */\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n  $date_arr = explode(\"-\", $date);\n  if (count($date_arr)\
    \ != 3) return false;\n  $month = $date_arr[0];\n  $day = $date_arr[1];\n  $year\
    \ = $date_arr[2];\n  if (strlen($year) != 4) return false;\n  if ($month < 1 ||\
    \ $month > 12) return false;\n  if ($day < 1 || $day > 31) return false;\n  if\
    \ ($month == 2) {\n    if ($day > 29) return false;\n  } else if (in_array($month,\
    \ [4,6,9,11])) {\n    if ($day > 30) return false;\n  }\n  return true;\n}\n\n\
    echo valid_date(\"03-11-2000\") ? \"true\\n\" : \"false\\n\";\necho valid_date(\"\
    15-01-2012\") ? \"true\\n\" : \"false\\n\";\necho valid_date(\"04-0-2040\") ?\
    \ \"true\\n\" : \"false\\n\";\necho valid_date(\"06-04-2020\") ? \"true\\n\" :\
    \ \"false\\n\";\necho valid_date(\"06/04/2020\") ? \"true\\n\" : \"false\\n\"\
    ;\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    false

    false

    true

    false

    '
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n  $date = explode(\"-\", $date);\n  if (count($date)\
    \ != 3) {\n    return false;\n  }\n  $month = $date[0];\n  $day = $date[1];\n\
    \  $year = $date[2];\n  if ($month < 1 || $month > 12) {\n    return false;\n\
    \  }\n  if ($month == 2) {\n    if ($day < 1 || $day > 29) {\n      return false;\n\
    \    }\n  } elseif ($month == 1 || $month == 3 || $month == 5 || $month == 7 ||\
    \ $month == 8 || $month == 10 || $month == 12) {\n    if ($day < 1 || $day > 31)\
    \ {\n      return false;\n    }\n  } else {\n    if ($day < 1 || $day > 30) {\n\
    \      return false;\n    }\n  }\n  if ($year < 1) {\n    return false;\n  }\n\
    \  return true;\n}\necho valid_date(\"03-11-2000\") . \"\\n\";\necho valid_date(\"\
    15-01-2012\") . \"\\n\";\necho valid_date(\"04-0-2040\") . \"\\n\";\necho valid_date(\"\
    06-04-2020\") . \"\\n\";\necho valid_date(\"06/04/2020\") . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date_arr = explode(\"-\", $date);\n    if (count($date_arr)\
    \ != 3) {\n        return false;\n    }\n    $month = $date_arr[0];\n    $day\
    \ = $date_arr[1];\n    $year = $date_arr[2];\n    if ($month < 1 || $month > 12)\
    \ {\n        return false;\n    }\n    if ($day < 1 || $day > 31) {\n        return\
    \ false;\n    }\n    if ($month == 2) {\n        if ($day > 29) {\n          \
    \  return false;\n        }\n    }\n    if ($month == 4 || $month == 6 || $month\
    \ == 9 || $month == 11) {\n        if ($day > 30) {\n            return false;\n\
    \        }\n    }\n    if ($year < 1) {\n        return false;\n    }\n    return\
    \ true;\n}\n\necho valid_date(\"03-11-2000\");\necho \"<br>\";\necho valid_date(\"\
    15-01-2012\");\necho \"<br>\";\necho valid_date(\"04-0-2040\");\necho \"<br>\"\
    ;\necho valid_date(\"06-04-2020\");\necho \"<br>\";\necho valid_date(\"06/04/2020\"\
    );\necho \"<br>\";\necho valid_date(\"06-04-20\");\necho \"<br>\";\necho valid_date(\"\
    06-04-202020\");\necho \"<br>\";\necho valid_date(\"06-04-20202\");\necho \"<br>\"\
    ;\necho valid_date(\"06-04-202020\");\necho \"<br>\";\necho valid_date(\"06-04-202020\"\
    );\necho \"<br>\";\necho valid_date(\"06-04-202020\");\necho \"<br>\";\necho valid_date(\"\
    06-04-202020\");\necho \"<br>\";\necho valid_date(\"06-04-202020\");\necho \"\
    <br>\";\necho valid_date(\"06-04-202020\");\necho \"<br>\";\necho valid_date(\"\
    06-04-202020\");\necho \"<br>\";\necho valid_date(\"06-04-202020\");\necho \"\
    <br>\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected integer "03", expecting "," or ";" in /tmp/tmp4mdrgcca.php
    on line 86

    '
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n  if(empty($date)) {\n    return false;\n  }\n \
    \ $date_array = explode(\"-\", $date);\n  if(count($date_array) != 3) {\n    return\
    \ false;\n  }\n  $month = $date_array[0];\n  $day = $date_array[1];\n  $year =\
    \ $date_array[2];\n  if(!is_numeric($month) || !is_numeric($day) || !is_numeric($year))\
    \ {\n    return false;\n  }\n  if($month < 1 || $month > 12) {\n    return false;\n\
    \  }\n  if($day < 1 || $day > 31) {\n    return false;\n  }\n  if($month == 2)\
    \ {\n    if($day > 29) {\n      return false;\n    }\n  }\n  if($month == 4 ||\
    \ $month == 6 || $month == 9 || $month == 11) {\n    if($day > 30) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n  $date = explode(\"-\", $date);\n  if (count($date)\
    \ != 3) {\n    return false;\n  }\n  if ($date[0] < 1 || $date[0] > 12) {\n  \
    \  return false;\n  }\n  if ($date[0] == 2) {\n    if ($date[1] < 1 || $date[1]\
    \ > 29) {\n      return false;\n    }\n  } else if ($date[0] == 1 || $date[0]\
    \ == 3 || $date[0] == 5 || $date[0] == 7 || $date[0] == 8 || $date[0] == 10 ||\
    \ $date[0] == 12) {\n    if ($date[1] < 1 || $date[1] > 31) {\n      return false;\n\
    \    }\n  } else {\n    if ($date[1] < 1 || $date[1] > 30) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month > 12 || $month < 1) {\n        return false;\n\
    \    }\n    if ($month == 2) {\n        if ($day > 29 || $day < 1) {\n       \
    \     return false;\n        }\n    } elseif ($month == 1 || $month == 3 || $month\
    \ == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n    \
    \    if ($day > 31 || $day < 1) {\n            return false;\n        }\n    }\
    \ else {\n        if ($day > 30 || $day < 1) {\n            return false;\n  \
    \      }\n    }\n    if ($year < 1) {\n        return false;\n    }\n    return\
    \ true;\n}\n\necho valid_date(\"03-11-2000\") . \"\\n\";\necho valid_date(\"15-01-2012\"\
    ) . \"\\n\";\necho valid_date(\"04-0-2040\") . \"\\n\";\necho valid_date(\"06-04-2020\"\
    ) . \"\\n\";\necho valid_date(\"06/04/2020\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($day < 1 || $day > 31) {\n        return false;\n    }\n    if\
    \ ($month == 2) {\n        if ($day > 29) {\n            return false;\n     \
    \   }\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n        if ($day > 30) {\n            return false;\n        }\n    }\n \
    \   if ($year < 1) {\n        return false;\n    }\n    return true;\n}\n\necho\
    \ valid_date(\"03-11-2000\");\necho \"<br>\";\necho valid_date(\"15-01-2012\"\
    );\necho \"<br>\";\necho valid_date(\"04-0-2040\");\necho \"<br>\";\necho valid_date(\"\
    06-04-2020\");\necho \"<br>\";\necho valid_date(\"06/04/2020\");\necho \"<br>\"\
    ;\n\n/*You have to write a function which validates a given string and returns\
    \ true if the string is valid otherwise false.\nThe string is valid if all of\
    \ the following rules are satisfied:\n1. The string is not empty.\n2. The string\
    \ should not contain any special characters.\n3. The string should not contain\
    \ any digits.\n4. The string should not contain any spaces.\n>>> valid_string(\"\
    Hello World\")\nfalse\n>>> valid_string(\"HelloWorld\")\ntrue\n>>> valid_string(\"\
    HelloWorld123\")\nfalse\n>>> valid_string(\"HelloWorld!\")\nfalse\n>>> valid_string(\"\
    HelloWorld?\")\nfalse*/\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br><br>1<br><br>
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n  $date = explode(\"-\", $date);\n  if (count($date)\
    \ != 3) {\n    return false;\n  }\n  if (!is_numeric($date[0]) || !is_numeric($date[1])\
    \ || !is_numeric($date[2])) {\n    return false;\n  }\n  if ($date[0] < 1 || $date[0]\
    \ > 12) {\n    return false;\n  }\n  if ($date[0] == 1 || $date[0] == 3 || $date[0]\
    \ == 5 || $date[0] == 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12)\
    \ {\n    if ($date[1] < 1 || $date[1] > 31) {\n      return false;\n    }\n  }\n\
    \  if ($date[0] == 4 || $date[0] == 6 || $date[0] == 9 || $date[0] == 11) {\n\
    \    if ($date[1] < 1 || $date[1] > 30) {\n      return false;\n    }\n  }\n \
    \ if ($date[0] == 2) {\n    if ($date[1] < 1 || $date[1] > 29) {\n      return\
    \ false;\n    }\n  }\n  return true;\n}\necho valid_date(\"03-11-2000\") . \"\\\
    n\";\necho valid_date(\"15-01-2012\") . \"\\n\";\necho valid_date(\"04-0-2040\"\
    ) . \"\\n\";\necho valid_date(\"06-04-2020\") . \"\\n\";\necho valid_date(\"06/04/2020\"\
    ) . \"\\n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n  $date = explode(\"-\", $date);\n  if (count($date)\
    \ != 3) {\n    return false;\n  }\n  if (strlen($date[0]) != 2 || strlen($date[1])\
    \ != 2 || strlen($date[2]) != 4) {\n    return false;\n  }\n  if ($date[0] > 12\
    \ || $date[0] < 1) {\n    return false;\n  }\n  if ($date[0] == 2) {\n    if ($date[2]\
    \ % 4 == 0) {\n      if ($date[1] > 29 || $date[1] < 1) {\n        return false;\n\
    \      }\n    } else {\n      if ($date[1] > 28 || $date[1] < 1) {\n        return\
    \ false;\n      }\n    }\n  } else if ($date[0] == 1 || $date[0] == 3 || $date[0]\
    \ == 5 || $date[0] == 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12)\
    \ {\n    if ($date[1] > 31 || $date[1] < 1) {\n      return false;\n    }\n  }\
    \ else {\n    if ($date[1] > 30 || $date[1] < 1) {\n      return false;\n    }\n\
    \  }\n  return true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($day < 1 || $day > 31) {\n        return false;\n    }\n    if\
    \ ($month == 2) {\n        if ($day > 29) {\n            return false;\n     \
    \   }\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n        if ($day > 30) {\n            return false;\n        }\n    }\n \
    \   if ($year < 0) {\n        return false;\n    }\n    return true;\n}\n\necho\
    \ valid_date(\"03-11-2000\") . \"\\n\";\necho valid_date(\"15-01-2012\") . \"\\\
    n\";\necho valid_date(\"04-0-2040\") . \"\\n\";\necho valid_date(\"06-04-2020\"\
    ) . \"\\n\";\necho valid_date(\"06/04/2020\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if (checkdate($date[0], $date[1],\
    \ $date[2])) {\n        return true;\n    }\n    return false;\n}\n\n/*\n * Write\
    \ a function that takes a string and returns the number of vowels in the string.\n\
    \ * >>> count_vowels(\"hello\")\n * 2\n * >>> count_vowels(\"world\")\n * 1\n\
    \ * >>> count_vowels(\"\")\n * 0\n * >>> count_vowels(\"a\")\n * 1\n * >>> count_vowels(\"\
    aaaa\")\n * 4\n * >>> count_vowels(\"b\")\n * 0\n * >>> count_vowels(\"bbbb\"\
    )\n * 0\n * >>> count_vowels(\"ab\")\n * 1\n * >>> count_vowels(\"abababab\")\n\
    \ * 4\n * >>> count_vowels(\"ababababa\")\n * 5\n * >>> count_vowels(\"ababababab\"\
    )\n * 5\n * >>> count_vowels(\"abababababb\")\n * 5\n * >>> count_vowels(\"abababababbb\"\
    )\n * 5\n * >>> count_vowels(\"abababababbbb\")\n * 5\n * >>> count_vowels(\"\
    abababababbbbb\")\n * 5\n * >>> count_vowels(\"abababababbbbbb\")\n * 5\n * >>>\
    \ count_vowels(\"abababababbbbbbb\")\n * 5\n * >>> count_vowels(\"abababababbbbbbbb\"\
    )\n * 5\n * >>> count_vowels(\"abababababbbbbbbbb\")\n * 5\n * >>> count_vowels(\"\
    abababababbbbbbbbbb\")\n * 5\n * >>> count_vowels(\"abababababbbbbbbbbbb\")\n\
    \ * 5\n * >>> count_vowels(\"abababababbbbbbbbbbbb\")\n * 5\n * >>> count_vowels(\"\
    abababababbbbbbbbbbbbb\")\n * 5\n * >>>\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 30 in /tmp/tmpz5qs068r.php on
    line 30

    '
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($month == 2) {\n        if ($day < 1 || $day > 29) {\n       \
    \     return false;\n        }\n    } elseif ($month == 1 || $month == 3 || $month\
    \ == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n    \
    \    if ($day < 1 || $day > 31) {\n            return false;\n        }\n    }\
    \ else {\n        if ($day < 1 || $day > 30) {\n            return false;\n  \
    \      }\n    }\n    if ($year < 1) {\n        return false;\n    }\n    return\
    \ true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($day < 1 || $day > 31) {\n        return false;\n    }\n    if\
    \ ($month == 2) {\n        if ($day > 29) {\n            return false;\n     \
    \   }\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n        if ($day > 30) {\n            return false;\n        }\n    }\n \
    \   if ($year < 1) {\n        return false;\n    }\n    return true;\n}\necho\
    \ valid_date(\"03-11-2000\");\necho valid_date(\"15-01-2012\");\necho valid_date(\"\
    04-0-2040\");\necho valid_date(\"06-04-2020\");\necho valid_date(\"06/04/2020\"\
    );\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    if (preg_match(\"/^([0-9]{2})-([0-9]{2})-([0-9]{4})$/\"\
    , $date, $parts)) {\n        if (checkdate($parts[1], $parts[2], $parts[3])) {\n\
    \            return true;\n        }\n    }\n    return false;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($month == 2) {\n        if ($day < 1 || $day > 29) {\n       \
    \     return false;\n        }\n    } elseif ($month == 1 || $month == 3 || $month\
    \ == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n    \
    \    if ($day < 1 || $day > 31) {\n            return false;\n        }\n    }\
    \ else {\n        if ($day < 1 || $day > 30) {\n            return false;\n  \
    \      }\n    }\n    if ($year < 1) {\n        return false;\n    }\n    return\
    \ true;\n}\n\n/*\nYou have to write a function which validates a given string\
    \ and returns true if the string is valid otherwise false.\nThe string is valid\
    \ if all of the following rules are satisfied:\n1. The string is not empty.\n\
    2. The string contains only alphabets and numbers.\n3. The string contains only\
    \ alphabets.\n4. The string contains only numbers.\n>>> valid_string(\"abc\")\n\
    true\n>>> valid_string(\"abc123\")\ntrue\n>>> valid_string(\"123\")\ntrue\n>>>\
    \ valid_string(\"abc123!\")\nfalse\n>>> valid_string(\"\")\nfalse\n*/\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    if (preg_match(\"/^(\\d{2})-(\\d{2})-(\\d{4})$/\"\
    , $date, $matches)) {\n        if (checkdate($matches[1], $matches[2], $matches[3]))\
    \ {\n            return true;\n        }\n    }\n    return false;\n}\n\necho\
    \ valid_date(\"03-11-2000\").\"\\n\";\necho valid_date(\"15-01-2012\").\"\\n\"\
    ;\necho valid_date(\"04-0-2040\").\"\\n\";\necho valid_date(\"06-04-2020\").\"\
    \\n\";\necho valid_date(\"06/04/2020\").\"\\n\";\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    if (preg_match(\"/^[0-9]{2}-[0-9]{2}-[0-9]{4}$/\"\
    , $date)) {\n        $date_arr = explode(\"-\", $date);\n        $month = $date_arr[0];\n\
    \        $day = $date_arr[1];\n        $year = $date_arr[2];\n        if ($month\
    \ > 12 || $month < 1) {\n            return false;\n        }\n        if ($day\
    \ > 31 || $day < 1) {\n            return false;\n        }\n        if ($month\
    \ == 2) {\n            if ($day > 29) {\n                return false;\n     \
    \       }\n        }\n        if ($month == 4 || $month == 6 || $month == 9 ||\
    \ $month == 11) {\n            if ($day > 30) {\n                return false;\n\
    \            }\n        }\n        return true;\n    } else {\n        return\
    \ false;\n    }\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    if (preg_match(\"/^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$/\"\
    ,$date)) {\n        $date = explode(\"-\",$date);\n        if ($date[0] == 2)\
    \ {\n            if ($date[2] % 4 == 0) {\n                if ($date[1] > 29)\
    \ {\n                    return false;\n                }\n            } else\
    \ {\n                if ($date[1] > 28) {\n                    return false;\n\
    \                }\n            }\n        } else if ($date[0] == 4 || $date[0]\
    \ == 6 || $date[0] == 9 || $date[0] == 11) {\n            if ($date[1] > 30) {\n\
    \                return false;\n            }\n        } else {\n            if\
    \ ($date[1] > 31) {\n                return false;\n            }\n        }\n\
    \        return true;\n    } else {\n        return false;\n    }\n}\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n\tif (empty($date)) {\n\t\treturn false;\n\t}\n\t\
    $date_arr = explode('-', $date);\n\tif (count($date_arr) != 3) {\n\t\treturn false;\n\
    \t}\n\t$month = $date_arr[0];\n\t$day = $date_arr[1];\n\t$year = $date_arr[2];\n\
    \tif ($month > 12 || $month < 1) {\n\t\treturn false;\n\t}\n\tif ($month == 2)\
    \ {\n\t\tif ($day > 29 || $day < 1) {\n\t\t\treturn false;\n\t\t}\n\t} elseif\
    \ ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n\t\tif ($day\
    \ > 30 || $day < 1) {\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\tif ($day >\
    \ 31 || $day < 1) {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif ($year < 1000 || $year\
    \ > 9999) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\necho valid_date(\"03-11-2000\"\
    ) . \"\\n\";\necho valid_date(\"15-01-2012\") . \"\\n\";\necho valid_date(\"04-0-2040\"\
    ) . \"\\n\";\necho valid_date(\"06-04-2020\") . \"\\n\";\necho valid_date(\"06/04/2020\"\
    ) . \"\\n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n  $date = explode(\"-\", $date);\n  if (count($date)\
    \ != 3) return false;\n  $month = $date[0];\n  $day = $date[1];\n  $year = $date[2];\n\
    \  if ($month < 1 || $month > 12) return false;\n  if ($day < 1 || $day > 31)\
    \ return false;\n  if ($month == 2 && $day > 29) return false;\n  if ($month ==\
    \ 4 || $month == 6 || $month == 9 || $month == 11) {\n    if ($day > 30) return\
    \ false;\n  }\n  return true;\n}\necho valid_date(\"03-11-2000\").\"\\n\";\necho\
    \ valid_date(\"15-01-2012\").\"\\n\";\necho valid_date(\"04-0-2040\").\"\\n\"\
    ;\necho valid_date(\"06-04-2020\").\"\\n\";\necho valid_date(\"06/04/2020\").\"\
    \\n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if (!is_numeric($date[0]) || !is_numeric($date[1])\
    \ || !is_numeric($date[2])) {\n        return false;\n    }\n    if ($date[0]\
    \ < 1 || $date[0] > 12) {\n        return false;\n    }\n    if ($date[0] == 1\
    \ || $date[0] == 3 || $date[0] == 5 || $date[0] == 7 || $date[0] == 8 || $date[0]\
    \ == 10 || $date[0] == 12) {\n        if ($date[1] < 1 || $date[1] > 31) {\n \
    \           return false;\n        }\n    } else if ($date[0] == 4 || $date[0]\
    \ == 6 || $date[0] == 9 || $date[0] == 11) {\n        if ($date[1] < 1 || $date[1]\
    \ > 30) {\n            return false;\n        }\n    } else if ($date[0] == 2)\
    \ {\n        if ($date[1] < 1 || $date[1] > 29) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n  $date = explode(\"-\", $date);\n  if (count($date)\
    \ != 3) {\n    return false;\n  }\n  if ($date[0] < 1 || $date[0] > 12) {\n  \
    \  return false;\n  }\n  if ($date[0] == 2) {\n    if ($date[1] < 1 || $date[1]\
    \ > 29) {\n      return false;\n    }\n  } elseif ($date[0] == 1 || $date[0] ==\
    \ 3 || $date[0] == 5 || $date[0] == 7 || $date[0] == 8 || $date[0] == 10 || $date[0]\
    \ == 12) {\n    if ($date[1] < 1 || $date[1] > 31) {\n      return false;\n  \
    \  }\n  } else {\n    if ($date[1] < 1 || $date[1] > 30) {\n      return false;\n\
    \    }\n  }\n  if (strlen($date[2]) != 4) {\n    return false;\n  }\n  return\
    \ true;\n}\n\necho valid_date(\"03-11-2000\") . \"\\n\";\necho valid_date(\"15-01-2012\"\
    ) . \"\\n\";\necho valid_date(\"04-0-2040\") . \"\\n\";\necho valid_date(\"06-04-2020\"\
    ) . \"\\n\";\necho valid_date(\"06/04/2020\") . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n\t$date = explode(\"-\", $date);\n\tif (count($date)\
    \ != 3) {\n\t\treturn false;\n\t}\n\tif ($date[0] < 1 || $date[0] > 12) {\n\t\t\
    return false;\n\t}\n\tif ($date[0] == 2) {\n\t\tif ($date[1] < 1 || $date[1] >\
    \ 29) {\n\t\t\treturn false;\n\t\t}\n\t} elseif ($date[0] == 1 || $date[0] ==\
    \ 3 || $date[0] == 5 || $date[0] == 7 || $date[0] == 8 || $date[0] == 10 || $date[0]\
    \ == 12) {\n\t\tif ($date[1] < 1 || $date[1] > 31) {\n\t\t\treturn false;\n\t\t\
    }\n\t} else {\n\t\tif ($date[1] < 1 || $date[1] > 30) {\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\tif ($date[2] < 1 || $date[2] > 9999) {\n\t\treturn false;\n\t}\n\
    \treturn true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if (!checkdate($date[0], $date[1],\
    \ $date[2])) {\n        return false;\n    }\n    return true;\n}\n\n/*\n * Write\
    \ a function that takes a string and returns the number of vowels in the string.\n\
    \ * >>> count_vowels(\"hello\")\n * 2\n * >>> count_vowels(\"world\")\n * 1\n\
    \ * >>> count_vowels(\"\")\n * 0\n * >>> count_vowels(\"aeiou\")\n * 5\n * >>>\
    \ count_vowels(\"aaeeeiiioouu\")\n * 11\n */\nfunction candidate(...$args) {\n\
    \    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n  $date_arr = explode(\"-\", $date);\n  if (count($date_arr)\
    \ != 3) {\n    return false;\n  }\n  $month = $date_arr[0];\n  $day = $date_arr[1];\n\
    \  $year = $date_arr[2];\n  if ($month < 1 || $month > 12) {\n    return false;\n\
    \  }\n  if ($day < 1 || $day > 31) {\n    return false;\n  }\n  if ($month ==\
    \ 2) {\n    if ($day > 29) {\n      return false;\n    }\n  }\n  if ($month ==\
    \ 4 || $month == 6 || $month == 9 || $month == 11) {\n    if ($day > 30) {\n \
    \     return false;\n    }\n  }\n  if ($year < 1) {\n    return false;\n  }\n\
    \  return true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if (!checkdate($date[0], $date[1],\
    \ $date[2])) {\n        return false;\n    }\n    return true;\n}\n\n/*\n * You\
    \ have to write a function which validates a given date string and returns true\
    \ if the date is valid otherwise false.\nThe date is valid if all of the following\
    \ rules are satisfied:\n1. The date string is not empty.\n2. The date string contains\
    \ only numbers.\n3. The date string contains exactly 10 characters.\n4. The date\
    \ string contains only numbers and hyphens.\n5. The date string contains only\
    \ numbers and hyphens and the hyphens are not at the beginning or at the end of\
    \ the string.\n6. The date string contains only numbers and hyphens and the hyphens\
    \ are not at the beginning or at the end of the string and the date string contains\
    \ exactly 2 hyphens.\n7. The date string contains only numbers and hyphens and\
    \ the hyphens are not at the beginning or at the end of the string and the date\
    \ string contains exactly 2 hyphens and the first 2 characters are numbers.\n\
    8. The date string contains only numbers and hyphens and the hyphens are not at\
    \ the beginning or at the end of the string and the date string contains exactly\
    \ 2 hyphens and the first 2 characters are numbers and the first number is between\
    \ 1 and 12.\n9. The date string contains only numbers and hyphens and the hyphens\
    \ are not at the beginning or at the end of the string and the date string contains\
    \ exactly 2 hyphens and the first 2 characters are numbers and the first number\
    \ is between 1 and 12 and the third character is a hyphen.\n10. The date string\
    \ contains only numbers and hyphens and the hyphens are not at the beginning or\
    \ at the end of the string and the date string contains exactly 2 hyphens and\
    \ the first 2 characters are numbers and the first number is between 1 and 12\
    \ and the third character is a hyphen and the fourth and fifth characters are\
    \ numbers.\n11. The date string contains only numbers and hyphens and the hyphens\
    \ are not at the beginning or at the end of the string and the date string contains\
    \ exactly 2 hyphens and the first 2 characters are numbers and the first number\
    \ is between 1 and 12 and the third character\nfunction candidate(...$args) {\n\
    \    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 30 in /tmp/tmpjv5rchb0.php on
    line 30

    '
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n\t$date = explode(\"-\", $date);\n\tif (count($date)\
    \ != 3) {\n\t\treturn false;\n\t}\n\t$month = $date[0];\n\t$day = $date[1];\n\t\
    $year = $date[2];\n\tif ($month < 1 || $month > 12) {\n\t\treturn false;\n\t}\n\
    \tif ($month == 2) {\n\t\tif ($day < 1 || $day > 29) {\n\t\t\treturn false;\n\t\
    \t}\n\t} elseif ($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month\
    \ == 8 || $month == 10 || $month == 12) {\n\t\tif ($day < 1 || $day > 31) {\n\t\
    \t\treturn false;\n\t\t}\n\t} else {\n\t\tif ($day < 1 || $day > 30) {\n\t\t\t\
    return false;\n\t\t}\n\t}\n\tif ($year < 1) {\n\t\treturn false;\n\t}\n\treturn\
    \ true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    if (preg_match(\"/^([0-9]{2})-([0-9]{2})-([0-9]{4})$/\"\
    , $date, $parts)) {\n        if (checkdate($parts[1], $parts[2], $parts[3])) {\n\
    \            return true;\n        }\n    }\n    return false;\n}\n\necho valid_date(\"\
    03-11-2000\") . \"\\n\";\necho valid_date(\"15-01-2012\") . \"\\n\";\necho valid_date(\"\
    04-0-2040\") . \"\\n\";\necho valid_date(\"06-04-2020\") . \"\\n\";\necho valid_date(\"\
    06/04/2020\") . \"\\n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) return false;\n    if (!is_numeric($date[0]) || !is_numeric($date[1])\
    \ || !is_numeric($date[2])) return false;\n    if ($date[0] < 1 || $date[0] >\
    \ 12) return false;\n    if ($date[0] == 2) {\n        if ($date[2] % 4 == 0)\
    \ {\n            if ($date[1] < 1 || $date[1] > 29) return false;\n        } else\
    \ {\n            if ($date[1] < 1 || $date[1] > 28) return false;\n        }\n\
    \    } elseif ($date[0] == 1 || $date[0] == 3 || $date[0] == 5 || $date[0] ==\
    \ 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12) {\n        if ($date[1]\
    \ < 1 || $date[1] > 31) return false;\n    } else {\n        if ($date[1] < 1\
    \ || $date[1] > 30) return false;\n    }\n    return true;\n}\n\n/* You have to\
    \ write a function which validates a given date string and\nreturns true if the\
    \ date is valid otherwise false.\nThe date is valid if all of the following rules\
    \ are satisfied:\n1. The date string is not empty.\n2. The date string is in the\
    \ format: mm/dd/yyyy\n3. The number of days is not less than 1 or higher than\
    \ 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than\
    \ 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not\
    \ less than 1 or higher than 29 for the month 2.\n4. The months should not be\
    \ less than 1 or higher than 12.\n>>> valid_date(\"03/11/2000\")\ntrue\n>>> valid_date(\"\
    15/01/2012\")\nfalse\n>>> valid_date(\"04/0/2040\")\nfalse\n>>> valid_date(\"\
    06/04/2020\")\ntrue\n>>> valid_date\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 38 in /tmp/tmpmmwaskt0.php on
    line 38

    '
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    if (preg_match(\"/^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$/\"\
    ,$date)) {\n        $date_arr = explode(\"-\",$date);\n        $month = $date_arr[0];\n\
    \        $day = $date_arr[1];\n        $year = $date_arr[2];\n        if ($month\
    \ == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month ==\
    \ 10 || $month == 12) {\n            if ($day > 31) {\n                return\
    \ false;\n            }\n        } else if ($month == 4 || $month == 6 || $month\
    \ == 9 || $month == 11) {\n            if ($day > 30) {\n                return\
    \ false;\n            }\n        } else if ($month == 2) {\n            if ($day\
    \ > 29) {\n                return false;\n            }\n        }\n        return\
    \ true;\n    } else {\n        return false;\n    }\n}\necho valid_date(\"03-11-2000\"\
    ) . \"\\n\";\necho valid_date(\"15-01-2012\") . \"\\n\";\necho valid_date(\"04-0-2040\"\
    ) . \"\\n\";\necho valid_date(\"06-04-2020\") . \"\\n\";\necho valid_date(\"06/04/2020\"\
    ) . \"\\n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n  $date = explode(\"-\", $date);\n  if (count($date)\
    \ != 3) return false;\n  if (!is_numeric($date[0]) || !is_numeric($date[1]) ||\
    \ !is_numeric($date[2])) return false;\n  if ($date[0] < 1 || $date[0] > 12) return\
    \ false;\n  if ($date[0] == 1 || $date[0] == 3 || $date[0] == 5 || $date[0] ==\
    \ 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12) {\n    if ($date[1]\
    \ < 1 || $date[1] > 31) return false;\n  } else if ($date[0] == 4 || $date[0]\
    \ == 6 || $date[0] == 9 || $date[0] == 11) {\n    if ($date[1] < 1 || $date[1]\
    \ > 30) return false;\n  } else if ($date[0] == 2) {\n    if ($date[1] < 1 ||\
    \ $date[1] > 29) return false;\n  }\n  return true;\n}\necho valid_date(\"03-11-2000\"\
    ) ? \"true\" : \"false\";\necho \"\\n\";\necho valid_date(\"15-01-2012\") ? \"\
    true\" : \"false\";\necho \"\\n\";\necho valid_date(\"04-0-2040\") ? \"true\"\
    \ : \"false\";\necho \"\\n\";\necho valid_date(\"06-04-2020\") ? \"true\" : \"\
    false\";\necho \"\\n\";\necho valid_date(\"06/04/2020\") ? \"true\" : \"false\"\
    ;\necho \"\\n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    false

    false

    true

    false

    '
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($month == 2) {\n        if ($day < 1 || $day > 29) {\n       \
    \     return false;\n        }\n    } elseif ($month == 1 || $month == 3 || $month\
    \ == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n    \
    \    if ($day < 1 || $day > 31) {\n            return false;\n        }\n    }\
    \ else {\n        if ($day < 1 || $day > 30) {\n            return false;\n  \
    \      }\n    }\n    if ($year < 1) {\n        return false;\n    }\n    return\
    \ true;\n}\n\n/*\nYou have to write a function which validates a given string\
    \ and returns true if the string is valid otherwise false.\nThe string is valid\
    \ if all of the following rules are satisfied:\n1. The string is not empty.\n\
    2. The string should not contain any white spaces.\n3. The string should not contain\
    \ any special characters.\n4. The string should not contain any digits.\n>>> valid_string(\"\
    abc\")\ntrue\n>>> valid_string(\"abc@\")\nfalse\n>>> valid_string(\"abc 123\"\
    )\nfalse\n>>> valid_string(\"abc123\")\nfalse\n>>> valid_string(\"abc@123\")\n\
    false\n*/\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n  $date = explode(\"-\", $date);\n  if (count($date)\
    \ != 3) return false;\n  $month = $date[0];\n  $day = $date[1];\n  $year = $date[2];\n\
    \  if ($month < 1 || $month > 12) return false;\n  if ($day < 1 || $day > 31)\
    \ return false;\n  if ($month == 2 && $day > 29) return false;\n  if ($month ==\
    \ 4 || $month == 6 || $month == 9 || $month == 11) {\n    if ($day > 30) return\
    \ false;\n  }\n  if ($year < 1) return false;\n  return true;\n}\necho valid_date(\"\
    03-11-2000\") . \"\\n\";\necho valid_date(\"15-01-2012\") . \"\\n\";\necho valid_date(\"\
    04-0-2040\") . \"\\n\";\necho valid_date(\"06-04-2020\") . \"\\n\";\necho valid_date(\"\
    06/04/2020\") . \"\\n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month > 12 || $month < 1) {\n        return false;\n\
    \    }\n    if ($day > 31 || $day < 1) {\n        return false;\n    }\n    if\
    \ ($month == 2) {\n        if ($day > 29) {\n            return false;\n     \
    \   }\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n        if ($day > 30) {\n            return false;\n        }\n    }\n \
    \   if ($year < 1000 || $year > 9999) {\n        return false;\n    }\n    return\
    \ true;\n}\n\necho valid_date(\"03-11-2000\");\necho valid_date(\"15-01-2012\"\
    );\necho valid_date(\"04-0-2040\");\necho valid_date(\"06-04-2020\");\necho valid_date(\"\
    06/04/2020\");\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    list($month, $day, $year) = $date;\n\
    \    if (!is_numeric($month) || !is_numeric($day) || !is_numeric($year)) {\n \
    \       return false;\n    }\n    if ($month < 1 || $month > 12) {\n        return\
    \ false;\n    }\n    if ($day < 1 || $day > 31) {\n        return false;\n   \
    \ }\n    if ($month == 2) {\n        if ($day > 29) {\n            return false;\n\
    \        }\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month\
    \ == 11) {\n        if ($day > 30) {\n            return false;\n        }\n \
    \   }\n    return true;\n}\n\necho valid_date(\"03-11-2000\") ? \"true\" : \"\
    false\";\necho \"<br>\";\necho valid_date(\"15-01-2012\") ? \"true\" : \"false\"\
    ;\necho \"<br>\";\necho valid_date(\"04-0-2040\") ? \"true\" : \"false\";\necho\
    \ \"<br>\";\necho valid_date(\"06-04-2020\") ? \"true\" : \"false\";\necho \"\
    <br>\";\necho valid_date(\"06/04/2020\") ? \"true\" : \"false\";\necho \"<br>\"\
    ;\necho valid_date(\"06-04-2020\") ? \"true\" : \"false\";\necho \"<br>\";\necho\
    \ valid_date(\"06-04-2020\") ? \"true\" : \"false\";\necho \"<br>\";\necho valid_date(\"\
    06-04-2020\") ? \"true\" : \"false\";\necho \"<br>\";\necho valid_date(\"06-04-2020\"\
    ) ? \"true\" : \"false\";\necho \"<br>\";\necho valid_date(\"06-04-2020\") ? \"\
    true\" : \"false\";\necho \"<br>\";\necho valid_date(\"06-04-2020\") ? \"true\"\
    \ : \"false\";\necho \"<br>\";\necho valid_date(\"06-04-2020\") ? \"\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected integer "03" in /tmp/tmpcilsrjt_.php on
    line 75

    '
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($day < 1 || $day > 31) {\n        return false;\n    }\n    if\
    \ ($month == 2) {\n        if ($day > 29) {\n            return false;\n     \
    \   }\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n        if ($day > 30) {\n            return false;\n        }\n    }\n \
    \   if ($year < 1) {\n        return false;\n    }\n    return true;\n}\necho\
    \ valid_date(\"03-11-2000\");\necho valid_date(\"15-01-2012\");\necho valid_date(\"\
    04-0-2040\");\necho valid_date(\"06-04-2020\");\necho valid_date(\"06/04/2020\"\
    );\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    if(empty($date)){\n        return false;\n \
    \   }\n    $date_array = explode(\"-\", $date);\n    if(count($date_array) !=\
    \ 3){\n        return false;\n    }\n    $month = $date_array[0];\n    $day =\
    \ $date_array[1];\n    $year = $date_array[2];\n    if(!is_numeric($month) ||\
    \ !is_numeric($day) || !is_numeric($year)){\n        return false;\n    }\n  \
    \  if($month < 1 || $month > 12){\n        return false;\n    }\n    if($month\
    \ == 2){\n        if($day < 1 || $day > 29){\n            return false;\n    \
    \    }\n    }\n    if($month == 1 || $month == 3 || $month == 5 || $month == 7\
    \ || $month == 8 || $month == 10 || $month == 12){\n        if($day < 1 || $day\
    \ > 31){\n            return false;\n        }\n    }\n    if($month == 4 || $month\
    \ == 6 || $month == 9 || $month == 11){\n        if($day < 1 || $day > 30){\n\
    \            return false;\n        }\n    }\n    return true;\n}\n\necho valid_date(\"\
    03-11-2000\").\"\\n\";\necho valid_date(\"15-01-2012\").\"\\n\";\necho valid_date(\"\
    04-0-2040\").\"\\n\";\necho valid_date(\"06-04-2020\").\"\\n\";\necho valid_date(\"\
    06/04/2020\").\"\\n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) return false;\n    if (strlen($date[0]) != 2 || strlen($date[1]) != 2\
    \ || strlen($date[2]) != 4) return false;\n    if ($date[0] < 1 || $date[0] >\
    \ 12) return false;\n    if ($date[0] == 2) {\n        if ($date[2] % 4 == 0)\
    \ {\n            if ($date[1] < 1 || $date[1] > 29) return false;\n        } else\
    \ {\n            if ($date[1] < 1 || $date[1] > 28) return false;\n        }\n\
    \    } else if ($date[0] == 1 || $date[0] == 3 || $date[0] == 5 || $date[0] ==\
    \ 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12) {\n        if ($date[1]\
    \ < 1 || $date[1] > 31) return false;\n    } else {\n        if ($date[1] < 1\
    \ || $date[1] > 30) return false;\n    }\n    return true;\n}\n\n/* You have to\
    \ write a function which validates a given date string and\nreturns true if the\
    \ date is valid otherwise false.\nThe date is valid if all of the following rules\
    \ are satisfied:\n1. The date string is not empty.\n2. The date string should\
    \ be in the format: mm/dd/yyyy\n3. The number of days is not less than 1 or higher\
    \ than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less\
    \ than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is\
    \ not less than 1 or higher than 29 for the month 2.\n4. The months should not\
    \ be less than 1 or higher than 12.\n>>> valid_date(\"03/11/2000\")\ntrue\n>>>\
    \ valid_date(\"15/01/2012\")\nfalse\n>>> valid_date(\"04/0/2040\")\nfalse\n>>>\
    \ valid_date(\"06/04/2020\")\ntrue\n>>> valid_date(\"\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 38 in /tmp/tmpxl3dnfdg.php on
    line 38

    '
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $day = $date[1];\n    $month = $date[0];\n\
    \    $year = $date[2];\n    if ($day < 1 || $day > 31) {\n        return false;\n\
    \    }\n    if ($month < 1 || $month > 12) {\n        return false;\n    }\n \
    \   if ($year < 1) {\n        return false;\n    }\n    if ($month == 2) {\n \
    \       if ($day > 29) {\n            return false;\n        }\n    }\n    if\
    \ ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n        if ($day\
    \ > 30) {\n            return false;\n        }\n    }\n    return true;\n}\n\n\
    echo valid_date(\"03-11-2000\") . PHP_EOL;\necho valid_date(\"15-01-2012\") .\
    \ PHP_EOL;\necho valid_date(\"04-0-2040\") . PHP_EOL;\necho valid_date(\"06-04-2020\"\
    ) . PHP_EOL;\necho valid_date(\"06/04/2020\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if ($date[0] < 1 || $date[0] > 12)\
    \ {\n        return false;\n    }\n    if ($date[0] == 2) {\n        if ($date[2]\
    \ % 4 == 0) {\n            if ($date[1] < 1 || $date[1] > 29) {\n            \
    \    return false;\n            }\n        } else {\n            if ($date[1]\
    \ < 1 || $date[1] > 28) {\n                return false;\n            }\n    \
    \    }\n    } elseif ($date[0] == 1 || $date[0] == 3 || $date[0] == 5 || $date[0]\
    \ == 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12) {\n        if ($date[1]\
    \ < 1 || $date[1] > 31) {\n            return false;\n        }\n    } else {\n\
    \        if ($date[1] < 1 || $date[1] > 30) {\n            return false;\n   \
    \     }\n    }\n    return true;\n}\n\n/*\nWrite a function that takes a string\
    \ and returns the number of vowels in the string.\n>>> count_vowels(\"Hello World\"\
    )\n3\n>>> count_vowels(\"Python\")\n2\n>>> count_vowels(\"Theistareykjarbunga\"\
    )\n8\n>>> count_vowels(\"grrrrgh!\")\n0\n>>> count_vowels(\"Github is the second\
    \ best thing that happend to programmers, after the keyboard!\")\n22\n>>> count_vowels(\"\
    A nice day to code!\")\n8\n*/\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n  $date = explode(\"-\", $date);\n  if (count($date)\
    \ != 3) {\n    return false;\n  }\n  $month = $date[0];\n  $day = $date[1];\n\
    \  $year = $date[2];\n  if ($month > 12 || $month < 1) {\n    return false;\n\
    \  }\n  if ($day > 31 || $day < 1) {\n    return false;\n  }\n  if ($month ==\
    \ 2) {\n    if ($day > 29) {\n      return false;\n    }\n  }\n  if ($month ==\
    \ 4 || $month == 6 || $month == 9 || $month == 11) {\n    if ($day > 30) {\n \
    \     return false;\n    }\n  }\n  if ($year < 1) {\n    return false;\n  }\n\
    \  return true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if (strlen($date[0]) != 2 || strlen($date[1])\
    \ != 2 || strlen($date[2]) != 4) {\n        return false;\n    }\n    if ($date[0]\
    \ < 1 || $date[0] > 12) {\n        return false;\n    }\n    if ($date[1] < 1\
    \ || $date[1] > 31) {\n        return false;\n    }\n    if ($date[0] == 2 &&\
    \ $date[1] > 29) {\n        return false;\n    }\n    if ($date[0] == 4 || $date[0]\
    \ == 6 || $date[0] == 9 || $date[0] == 11) {\n        if ($date[1] > 30) {\n \
    \           return false;\n        }\n    }\n    return true;\n}\n\necho valid_date(\"\
    03-11-2000\");\necho valid_date(\"15-01-2012\");\necho valid_date(\"04-0-2040\"\
    );\necho valid_date(\"06-04-2020\");\necho valid_date(\"06/04/2020\");\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($day < 1 || $day > 31) {\n        return false;\n    }\n    if\
    \ ($month == 2) {\n        if ($day > 29) {\n            return false;\n     \
    \   }\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n        if ($day > 30) {\n            return false;\n        }\n    }\n \
    \   if ($year < 1) {\n        return false;\n    }\n    return true;\n}\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) return false;\n    if (strlen($date[0]) != 2 || strlen($date[1]) != 2\
    \ || strlen($date[2]) != 4) return false;\n    if ($date[0] < 1 || $date[0] >\
    \ 12) return false;\n    if ($date[0] == 2) {\n        if ($date[2] % 4 == 0)\
    \ {\n            if ($date[1] < 1 || $date[1] > 29) return false;\n        } else\
    \ {\n            if ($date[1] < 1 || $date[1] > 28) return false;\n        }\n\
    \    } elseif ($date[0] == 1 || $date[0] == 3 || $date[0] == 5 || $date[0] ==\
    \ 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12) {\n        if ($date[1]\
    \ < 1 || $date[1] > 31) return false;\n    } else {\n        if ($date[1] < 1\
    \ || $date[1] > 30) return false;\n    }\n    return true;\n}\n\n/* You have to\
    \ write a function which validates a given date string and\nreturns true if the\
    \ date is valid otherwise false.\nThe date is valid if all of the following rules\
    \ are satisfied:\n1. The date string is not empty.\n2. The number of days is not\
    \ less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number\
    \ of days is not less than 1 or higher than 30 days for months 4,6,9,11. And,\
    \ the number of days is not less than 1 or higher than 29 for the month 2.\n3.\
    \ The months should not be less than 1 or higher than 12.\n4. The date should\
    \ be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n>>> valid_date(\"\
    15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n>>> valid_date(\"\
    06-04-2020\")\ntrue\n>>> valid_date(\"06\nfunction candidate(...$args) {\n   \
    \ return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 38 in /tmp/tmp7fvgv0_k.php on
    line 38

    '
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if ($date[0] < 1 || $date[0] > 12)\
    \ {\n        return false;\n    }\n    if ($date[0] == 2) {\n        if ($date[2]\
    \ % 4 == 0) {\n            if ($date[1] < 1 || $date[1] > 29) {\n            \
    \    return false;\n            }\n        } else {\n            if ($date[1]\
    \ < 1 || $date[1] > 28) {\n                return false;\n            }\n    \
    \    }\n    } elseif ($date[0] == 1 || $date[0] == 3 || $date[0] == 5 || $date[0]\
    \ == 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12) {\n        if ($date[1]\
    \ < 1 || $date[1] > 31) {\n            return false;\n        }\n    } else {\n\
    \        if ($date[1] < 1 || $date[1] > 30) {\n            return false;\n   \
    \     }\n    }\n    return true;\n}\n\n/*\nYou have to write a function which\
    \ validates a given date string and\nreturns true if the date is valid otherwise\
    \ false.\nThe date is valid if all of the following rules are satisfied:\n1. The\
    \ date string is not empty.\n2. The date string should be in the format: mm/dd/yyyy.\n\
    3. The date should be a valid date.\n>>> valid_date(\"03/11/2000\")\ntrue\n>>>\
    \ valid_date(\"15/01/2012\")\nfalse\n>>> valid_date(\"04/0/2040\")\nfalse\n>>>\
    \ valid_date(\"06/04/2020\")\ntrue\n>>> valid_date(\"06-04-2020\")\nfalse\n*/\n\
    function candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month > 12 || $month < 1) {\n        return false;\n\
    \    }\n    if ($day > 31 || $day < 1) {\n        return false;\n    }\n    if\
    \ ($month == 2) {\n        if ($day > 29) {\n            return false;\n     \
    \   }\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n        if ($day > 30) {\n            return false;\n        }\n    }\n \
    \   return true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n\t$date = explode(\"-\", $date);\n\tif (count($date)\
    \ != 3) {\n\t\treturn false;\n\t}\n\t$day = $date[1];\n\t$month = $date[0];\n\t\
    $year = $date[2];\n\tif ($day < 1 || $day > 31) {\n\t\treturn false;\n\t}\n\t\
    if ($month < 1 || $month > 12) {\n\t\treturn false;\n\t}\n\tif ($year < 1) {\n\
    \t\treturn false;\n\t}\n\tif ($month == 2) {\n\t\tif ($day > 29) {\n\t\t\treturn\
    \ false;\n\t\t}\n\t}\n\tif ($month == 4 || $month == 6 || $month == 9 || $month\
    \ == 11) {\n\t\tif ($day > 30) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n\
    }\necho valid_date(\"03-11-2000\");\necho valid_date(\"15-01-2012\");\necho valid_date(\"\
    04-0-2040\");\necho valid_date(\"06-04-2020\");\necho valid_date(\"06/04/2020\"\
    );\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    if (preg_match(\"/^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$/\"\
    ,$date)) {\n        $date = explode(\"-\", $date);\n        $month = $date[0];\n\
    \        $day = $date[1];\n        $year = $date[2];\n        if ($month == 2)\
    \ {\n            if ($day <= 29) {\n                return true;\n           \
    \ } else {\n                return false;\n            }\n        } else if ($month\
    \ == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month ==\
    \ 10 || $month == 12) {\n            if ($day <= 31) {\n                return\
    \ true;\n            } else {\n                return false;\n            }\n\
    \        } else if ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n            if ($day <= 30) {\n                return true;\n           \
    \ } else {\n                return false;\n            }\n        }\n    } else\
    \ {\n        return false;\n    }\n}\necho valid_date(\"03-11-2000\") ? \"true\"\
    \ : \"false\";\necho \"\\n\";\necho valid_date(\"15-01-2012\") ? \"true\" : \"\
    false\";\necho \"\\n\";\necho valid_date(\"04-0-2040\") ? \"true\" : \"false\"\
    ;\necho \"\\n\";\necho valid_date(\"06-04-2020\") ? \"true\" : \"false\";\necho\
    \ \"\\n\";\necho valid_date(\"06/04/2020\") ? \"true\" : \"false\";\necho \"\\\
    n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'true

    false

    false

    true

    false

    '
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if (strlen($date[0]) != 2 || strlen($date[1])\
    \ != 2 || strlen($date[2]) != 4) {\n        return false;\n    }\n    if ($date[0]\
    \ < 1 || $date[0] > 12) {\n        return false;\n    }\n    if ($date[0] == 2)\
    \ {\n        if ($date[1] < 1 || $date[1] > 29) {\n            return false;\n\
    \        }\n    } elseif ($date[0] == 1 || $date[0] == 3 || $date[0] == 5 || $date[0]\
    \ == 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12) {\n        if ($date[1]\
    \ < 1 || $date[1] > 31) {\n            return false;\n        }\n    } else {\n\
    \        if ($date[1] < 1 || $date[1] > 30) {\n            return false;\n   \
    \     }\n    }\n    return true;\n}\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    if(empty($date)) {\n        return false;\n\
    \    }\n    $date = explode('-', $date);\n    if(count($date) != 3) {\n      \
    \  return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n    $year\
    \ = $date[2];\n    if($month < 1 || $month > 12) {\n        return false;\n  \
    \  }\n    if($day < 1 || $day > 31) {\n        return false;\n    }\n    if($month\
    \ == 2) {\n        if($day > 29) {\n            return false;\n        }\n   \
    \ }\n    if($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n   \
    \     if($day > 30) {\n            return false;\n        }\n    }\n    if(strlen($year)\
    \ != 4) {\n        return false;\n    }\n    return true;\n}\necho valid_date(\"\
    03-11-2000\");\necho valid_date(\"15-01-2012\");\necho valid_date(\"04-0-2040\"\
    );\necho valid_date(\"06-04-2020\");\necho valid_date(\"06/04/2020\");\nfunction\
    \ candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($month == 2) {\n        if ($day < 1 || $day > 29) {\n       \
    \     return false;\n        }\n    } elseif ($month == 1 || $month == 3 || $month\
    \ == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n    \
    \    if ($day < 1 || $day > 31) {\n            return false;\n        }\n    }\
    \ else {\n        if ($day < 1 || $day > 30) {\n            return false;\n  \
    \      }\n    }\n    if ($year < 1) {\n        return false;\n    }\n    return\
    \ true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    if(empty($date)){\n        return false;\n \
    \   }\n    $date = explode('-', $date);\n    if(count($date) != 3){\n        return\
    \ false;\n    }\n    if(!is_numeric($date[0]) || !is_numeric($date[1]) || !is_numeric($date[2])){\n\
    \        return false;\n    }\n    if($date[0] < 1 || $date[0] > 12){\n      \
    \  return false;\n    }\n    if($date[0] == 2){\n        if($date[1] < 1 || $date[1]\
    \ > 29){\n            return false;\n        }\n    }\n    if($date[0] == 1 ||\
    \ $date[0] == 3 || $date[0] == 5 || $date[0] == 7 || $date[0] == 8 || $date[0]\
    \ == 10 || $date[0] == 12){\n        if($date[1] < 1 || $date[1] > 31){\n    \
    \        return false;\n        }\n    }\n    if($date[0] == 4 || $date[0] ==\
    \ 6 || $date[0] == 9 || $date[0] == 11){\n        if($date[1] < 1 || $date[1]\
    \ > 30){\n            return false;\n        }\n    }\n    return true;\n}\n\n\
    echo valid_date(\"03-11-2000\");\necho valid_date(\"15-01-2012\");\necho valid_date(\"\
    04-0-2040\");\necho valid_date(\"06-04-2020\");\necho valid_date(\"06/04/2020\"\
    );\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($month == 2) {\n        if ($day < 1 || $day > 29) {\n       \
    \     return false;\n        }\n    } elseif ($month == 1 || $month == 3 || $month\
    \ == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n    \
    \    if ($day < 1 || $day > 31) {\n            return false;\n        }\n    }\
    \ else {\n        if ($day < 1 || $day > 30) {\n            return false;\n  \
    \      }\n    }\n    if ($year < 1) {\n        return false;\n    }\n    return\
    \ true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n\t$date = explode(\"-\", $date);\n\tif(count($date)\
    \ != 3) {\n\t\treturn false;\n\t}\n\t$month = $date[0];\n\t$day = $date[1];\n\t\
    $year = $date[2];\n\tif($month < 1 || $month > 12) {\n\t\treturn false;\n\t}\n\
    \tif($month == 2) {\n\t\tif($day < 1 || $day > 29) {\n\t\t\treturn false;\n\t\t\
    }\n\t} else if($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month\
    \ == 8 || $month == 10 || $month == 12) {\n\t\tif($day < 1 || $day > 31) {\n\t\
    \t\treturn false;\n\t\t}\n\t} else {\n\t\tif($day < 1 || $day > 30) {\n\t\t\t\
    return false;\n\t\t}\n\t}\n\tif(strlen($year) != 4) {\n\t\treturn false;\n\t}\n\
    \treturn true;\n}\necho valid_date(\"03-11-2000\").\"\\n\";\necho valid_date(\"\
    15-01-2012\").\"\\n\";\necho valid_date(\"04-0-2040\").\"\\n\";\necho valid_date(\"\
    06-04-2020\").\"\\n\";\necho valid_date(\"06/04/2020\").\"\\n\";\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if (!is_numeric($date[0]) || !is_numeric($date[1])\
    \ || !is_numeric($date[2])) {\n        return false;\n    }\n    if ($date[0]\
    \ < 1 || $date[0] > 12) {\n        return false;\n    }\n    if ($date[0] == 2)\
    \ {\n        if ($date[1] < 1 || $date[1] > 29) {\n            return false;\n\
    \        }\n    } elseif ($date[0] == 1 || $date[0] == 3 || $date[0] == 5 || $date[0]\
    \ == 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12) {\n        if ($date[1]\
    \ < 1 || $date[1] > 31) {\n            return false;\n        }\n    } else {\n\
    \        if ($date[1] < 1 || $date[1] > 30) {\n            return false;\n   \
    \     }\n    }\n    return true;\n}\n\necho valid_date(\"03-11-2000\") . \"\\\
    n\";\necho valid_date(\"15-01-2012\") . \"\\n\";\necho valid_date(\"04-0-2040\"\
    ) . \"\\n\";\necho valid_date(\"06-04-2020\") . \"\\n\";\necho valid_date(\"06/04/2020\"\
    ) . \"\\n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n  $date = explode(\"-\", $date);\n  if (count($date)\
    \ != 3) {\n    return false;\n  }\n  if ($date[0] < 1 || $date[0] > 12) {\n  \
    \  return false;\n  }\n  if ($date[0] == 2) {\n    if ($date[1] < 1 || $date[1]\
    \ > 29) {\n      return false;\n    }\n  } else if ($date[0] == 1 || $date[0]\
    \ == 3 || $date[0] == 5 || $date[0] == 7 || $date[0] == 8 || $date[0] == 10 ||\
    \ $date[0] == 12) {\n    if ($date[1] < 1 || $date[1] > 31) {\n      return false;\n\
    \    }\n  } else {\n    if ($date[1] < 1 || $date[1] > 30) {\n      return false;\n\
    \    }\n  }\n  if ($date[2] < 1) {\n    return false;\n  }\n  return true;\n}\n\
    \necho valid_date(\"03-11-2000\");\necho \"<br>\";\necho valid_date(\"15-01-2012\"\
    );\necho \"<br>\";\necho valid_date(\"04-0-2040\");\necho \"<br>\";\necho valid_date(\"\
    06-04-2020\");\necho \"<br>\";\necho valid_date(\"06/04/2020\");\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 1<br><br><br>1<br>
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $months = array(1,3,5,7,8,10,12);\n    $months2\
    \ = array(4,6,9,11);\n    $date = explode(\"-\", $date);\n    if(count($date)\
    \ != 3) {\n        return false;\n    }\n    if(!is_numeric($date[0]) || !is_numeric($date[1])\
    \ || !is_numeric($date[2])) {\n        return false;\n    }\n    if($date[0] <\
    \ 1 || $date[0] > 12) {\n        return false;\n    }\n    if(in_array($date[0],\
    \ $months)) {\n        if($date[1] < 1 || $date[1] > 31) {\n            return\
    \ false;\n        }\n    }\n    if(in_array($date[0], $months2)) {\n        if($date[1]\
    \ < 1 || $date[1] > 30) {\n            return false;\n        }\n    }\n    if($date[0]\
    \ == 2) {\n        if($date[1] < 1 || $date[1] > 29) {\n            return false;\n\
    \        }\n    }\n    return true;\n}\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n\t$date = explode(\"-\", $date);\n\tif (count($date)\
    \ != 3) {\n\t\treturn false;\n\t}\n\tif ($date[0] < 1 || $date[0] > 12) {\n\t\t\
    return false;\n\t}\n\tif ($date[0] == 2) {\n\t\tif ($date[1] < 1 || $date[1] >\
    \ 29) {\n\t\t\treturn false;\n\t\t}\n\t} else if ($date[0] == 1 || $date[0] ==\
    \ 3 || $date[0] == 5 || $date[0] == 7 || $date[0] == 8 || $date[0] == 10 || $date[0]\
    \ == 12) {\n\t\tif ($date[1] < 1 || $date[1] > 31) {\n\t\t\treturn false;\n\t\t\
    }\n\t} else {\n\t\tif ($date[1] < 1 || $date[1] > 30) {\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\tif ($date[2] < 1) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\
    \necho valid_date(\"03-11-2000\") . \"\\n\";\necho valid_date(\"15-01-2012\")\
    \ . \"\\n\";\necho valid_date(\"04-0-2040\") . \"\\n\";\necho valid_date(\"06-04-2020\"\
    ) . \"\\n\";\necho valid_date(\"06/04/2020\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $day = $date[1];\n    $month = $date[0];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($day < 1 || $day > 31) {\n        return false;\n    }\n    if\
    \ ($month == 2) {\n        if ($day > 29) {\n            return false;\n     \
    \   }\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n        if ($day > 30) {\n            return false;\n        }\n    }\n \
    \   return true;\n}\n\n/* You have to write a function which validates a given\
    \ date string and\nreturns true if the date is valid otherwise false.\nThe date\
    \ is valid if all of the following rules are satisfied:\n1. The date string is\
    \ not empty.\n2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n3. The months should not be less than 1\
    \ or higher than 12.\n4. The date should be in the format: mm-dd-yyyy\n>>> valid_date(\"\
    03-11-2000\")\ntrue\n>>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"\
    04-0-2040\")\nfalse\n>>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\"\
    )\nfalse*/\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($day < 1 || $day > 31) {\n        return false;\n    }\n    if\
    \ ($month == 2) {\n        if ($day > 29) {\n            return false;\n     \
    \   }\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n        if ($day > 30) {\n            return false;\n        }\n    }\n \
    \   if ($year < 0) {\n        return false;\n    }\n    return true;\n}\n\necho\
    \ valid_date(\"03-11-2000\");\necho valid_date(\"15-01-2012\");\necho valid_date(\"\
    04-0-2040\");\necho valid_date(\"06-04-2020\");\necho valid_date(\"06/04/2020\"\
    );\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-0-2040\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-04-2020\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"01-01-2007\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"03-32-2011\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-31-3000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"06-06-2005\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"21-31-2000\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-12-2003\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04122003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"20030412\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2003-04-12\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"04-2003\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if (!is_numeric($date[0]) || !is_numeric($date[1])\
    \ || !is_numeric($date[2])) {\n        return false;\n    }\n    if ($date[0]\
    \ < 1 || $date[0] > 12) {\n        return false;\n    }\n    if ($date[0] == 2)\
    \ {\n        if ($date[1] < 1 || $date[1] > 29) {\n            return false;\n\
    \        }\n    } else if ($date[0] == 1 || $date[0] == 3 || $date[0] == 5 ||\
    \ $date[0] == 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12) {\n    \
    \    if ($date[1] < 1 || $date[1] > 31) {\n            return false;\n       \
    \ }\n    } else {\n        if ($date[1] < 1 || $date[1] > 30) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n  if(empty($date)){\n    return false;\n  }\n  $date_arr\
    \ = explode(\"-\", $date);\n  if(count($date_arr) != 3){\n    return false;\n\
    \  }\n  $month = $date_arr[0];\n  $day = $date_arr[1];\n  $year = $date_arr[2];\n\
    \  if($month < 1 || $month > 12){\n    return false;\n  }\n  if($day < 1 || $day\
    \ > 31){\n    return false;\n  }\n  if($month == 2){\n    if($day > 29){\n   \
    \   return false;\n    }\n  }\n  if($month == 4 || $month == 6 || $month == 9\
    \ || $month == 11){\n    if($day > 30){\n      return false;\n    }\n  }\n  if(strlen($year)\
    \ != 4){\n    return false;\n  }\n  return true;\n}\necho valid_date(\"03-11-2000\"\
    );\necho \"\\n\";\necho valid_date(\"15-01-2012\");\necho \"\\n\";\necho valid_date(\"\
    04-0-2040\");\necho \"\\n\";\necho valid_date(\"06-04-2020\");\necho \"\\n\";\n\
    echo valid_date(\"06/04/2020\");\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    if (preg_match(\"/^[0-9]{2}-[0-9]{2}-[0-9]{4}$/\"\
    , $date)) {\n        $date = explode(\"-\", $date);\n        $day = $date[1];\n\
    \        $month = $date[0];\n        $year = $date[2];\n        if ($month ==\
    \ 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10\
    \ || $month == 12) {\n            if ($day >= 1 && $day <= 31) {\n           \
    \     return true;\n            } else {\n                return false;\n    \
    \        }\n        } else if ($month == 4 || $month == 6 || $month == 9 || $month\
    \ == 11) {\n            if ($day >= 1 && $day <= 30) {\n                return\
    \ true;\n            } else {\n                return false;\n            }\n\
    \        } else if ($month == 2) {\n            if ($day >= 1 && $day <= 29) {\n\
    \                return true;\n            } else {\n                return false;\n\
    \            }\n        } else {\n            return false;\n        }\n    }\
    \ else {\n        return false;\n    }\n}\n\necho valid_date(\"03-11-2000\");\n\
    echo \"<br>\";\necho valid_date(\"15-01-2012\");\necho \"<br>\";\necho valid_date(\"\
    04-0-2040\");\necho \"<br>\";\necho valid_date(\"06-04-2020\");\necho \"<br>\"\
    ;\necho valid_date(\"06/04/2020\");\necho \"<br>\";\necho valid_date(\"06-04-2020\"\
    );\necho \"<br>\";\necho valid_date(\"06-04-2020\");\necho \"<br>\";\necho valid_date(\"\
    06-04-2020\");\necho \"<br>\";\necho valid_date(\"06-04-2020\");\necho \"<br>\"\
    ;\necho valid_date(\"06-04-2020\");\necho \"<br>\";\necho valid_date(\"06-04-2020\"\
    );\necho \"<br>\";\necho valid_date(\"06-04-2020\");\necho \"<br>\";\necho valid_date(\"\
    06-04-\nfunction candidate(...$args) {\n    return valid_date(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected integer "03", expecting ")" in /tmp/tmpk4x7n4pf.php
    on line 81

    '
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($day < 1 || $day > 31) {\n        return false;\n    }\n    if\
    \ ($month == 2) {\n        if ($day > 29) {\n            return false;\n     \
    \   }\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n        if ($day > 30) {\n            return false;\n        }\n    }\n \
    \   if ($year < 1) {\n        return false;\n    }\n    return true;\n}\n\necho\
    \ valid_date(\"03-11-2000\") . \"\\n\";\necho valid_date(\"15-01-2012\") . \"\\\
    n\";\necho valid_date(\"04-0-2040\") . \"\\n\";\necho valid_date(\"06-04-2020\"\
    ) . \"\\n\";\necho valid_date(\"06/04/2020\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month > 12 || $month < 1) {\n        return false;\n\
    \    }\n    if ($day > 31 || $day < 1) {\n        return false;\n    }\n    if\
    \ ($month == 2) {\n        if ($day > 29) {\n            return false;\n     \
    \   }\n    }\n    if ($month == 4 || $month == 6 || $month == 9 || $month == 11)\
    \ {\n        if ($day > 30) {\n            return false;\n        }\n    }\n \
    \   if ($year < 1) {\n        return false;\n    }\n    return true;\n}\necho\
    \ valid_date(\"03-11-2000\") . \"\\n\";\necho valid_date(\"15-01-2012\") . \"\\\
    n\";\necho valid_date(\"04-0-2040\") . \"\\n\";\necho valid_date(\"06-04-2020\"\
    ) . \"\\n\";\necho valid_date(\"06/04/2020\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n\
    \    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n\
    \    }\n    if ($month == 2) {\n        if ($day < 1 || $day > 29) {\n       \
    \     return false;\n        }\n    } elseif ($month == 1 || $month == 3 || $month\
    \ == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n    \
    \    if ($day < 1 || $day > 31) {\n            return false;\n        }\n    }\
    \ else {\n        if ($day < 1 || $day > 30) {\n            return false;\n  \
    \      }\n    }\n    if ($year < 1) {\n        return false;\n    }\n    return\
    \ true;\n}\n\necho valid_date(\"03-11-2000\") . \"\\n\";\necho valid_date(\"15-01-2012\"\
    ) . \"\\n\";\necho valid_date(\"04-0-2040\") . \"\\n\";\necho valid_date(\"06-04-2020\"\
    ) . \"\\n\";\necho valid_date(\"06/04/2020\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n  $date = explode(\"-\", $date);\n  if (count($date)\
    \ != 3) return false;\n  if (strlen($date[0]) != 2 || strlen($date[1]) != 2 ||\
    \ strlen($date[2]) != 4) return false;\n  if ($date[0] < 1 || $date[0] > 12) return\
    \ false;\n  if ($date[0] == 2) {\n    if ($date[2] % 4 == 0) {\n      if ($date[1]\
    \ < 1 || $date[1] > 29) return false;\n    } else {\n      if ($date[1] < 1 ||\
    \ $date[1] > 28) return false;\n    }\n  } else if ($date[0] == 1 || $date[0]\
    \ == 3 || $date[0] == 5 || $date[0] == 7 || $date[0] == 8 || $date[0] == 10 ||\
    \ $date[0] == 12) {\n    if ($date[1] < 1 || $date[1] > 31) return false;\n  }\
    \ else {\n    if ($date[1] < 1 || $date[1] > 30) return false;\n  }\n  return\
    \ true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if (!is_numeric($date[0]) || !is_numeric($date[1])\
    \ || !is_numeric($date[2])) {\n        return false;\n    }\n    if ($date[0]\
    \ < 1 || $date[0] > 12) {\n        return false;\n    }\n    if ($date[0] == 2)\
    \ {\n        if ($date[1] < 1 || $date[1] > 29) {\n            return false;\n\
    \        }\n    } elseif ($date[0] == 1 || $date[0] == 3 || $date[0] == 5 || $date[0]\
    \ == 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12) {\n        if ($date[1]\
    \ < 1 || $date[1] > 31) {\n            return false;\n        }\n    } else {\n\
    \        if ($date[1] < 1 || $date[1] > 30) {\n            return false;\n   \
    \     }\n    }\n    return true;\n}\n\necho valid_date(\"03-11-2000\");\necho\
    \ valid_date(\"15-01-2012\");\necho valid_date(\"04-0-2040\");\necho valid_date(\"\
    06-04-2020\");\necho valid_date(\"06/04/2020\");\nfunction candidate(...$args)\
    \ {\n    return valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    03-11-2000\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    15-01-2012\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '11'
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n  $date = explode(\"-\", $date);\n  if (count($date)\
    \ != 3) {\n    return false;\n  }\n  $month = $date[0];\n  $day = $date[1];\n\
    \  $year = $date[2];\n  if ($month < 1 || $month > 12) {\n    return false;\n\
    \  }\n  if ($day < 1 || $day > 31) {\n    return false;\n  }\n  if ($month ==\
    \ 2) {\n    if ($day > 29) {\n      return false;\n    }\n  }\n  if ($month ==\
    \ 4 || $month == 6 || $month == 9 || $month == 11) {\n    if ($day > 30) {\n \
    \     return false;\n    }\n  }\n  if ($year < 1) {\n    return false;\n  }\n\
    \  return true;\n}\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date_array = explode(\"-\", $date);\n    if\
    \ (count($date_array) != 3) {\n        return false;\n    }\n    $month = $date_array[0];\n\
    \    $day = $date_array[1];\n    $year = $date_array[2];\n    if ($month < 1 ||\
    \ $month > 12) {\n        return false;\n    }\n    if ($day < 1 || $day > 31)\
    \ {\n        return false;\n    }\n    if ($month == 2) {\n        if ($day >\
    \ 29) {\n            return false;\n        }\n    }\n    if ($month == 4 || $month\
    \ == 6 || $month == 9 || $month == 11) {\n        if ($day > 30) {\n         \
    \   return false;\n        }\n    }\n    if ($year < 1) {\n        return false;\n\
    \    }\n    return true;\n}\n\necho valid_date(\"03-11-2000\") . \"\\n\";\necho\
    \ valid_date(\"15-01-2012\") . \"\\n\";\necho valid_date(\"04-0-2040\") . \"\\\
    n\";\necho valid_date(\"06-04-2020\") . \"\\n\";\necho valid_date(\"06/04/2020\"\
    ) . \"\\n\";\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '1



    1


    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if (strlen($date[0]) != 2 || strlen($date[1])\
    \ != 2 || strlen($date[2]) != 4) {\n        return false;\n    }\n    if ($date[0]\
    \ < 1 || $date[0] > 12) {\n        return false;\n    }\n    if ($date[0] == 2)\
    \ {\n        if ($date[1] < 1 || $date[1] > 29) {\n            return false;\n\
    \        }\n    } elseif ($date[0] == 1 || $date[0] == 3 || $date[0] == 5 || $date[0]\
    \ == 7 || $date[0] == 8 || $date[0] == 10 || $date[0] == 12) {\n        if ($date[1]\
    \ < 1 || $date[1] > 31) {\n            return false;\n        }\n    } else {\n\
    \        if ($date[1] < 1 || $date[1] > 30) {\n            return false;\n   \
    \     }\n    }\n    return true;\n}\n\necho valid_date(\"03-11-2000\");\necho\
    \ \"<br>\";\necho valid_date(\"15-01-2012\");\necho \"<br>\";\necho valid_date(\"\
    04-0-2040\");\necho \"<br>\";\necho valid_date(\"06-04-2020\");\necho \"<br>\"\
    ;\necho valid_date(\"06/04/2020\");\necho \"<br>\";\necho valid_date(\"02-29-2020\"\
    );\necho \"<br>\";\necho valid_date(\"02-29-2021\");\necho \"<br>\";\necho valid_date(\"\
    02-29-2022\");\necho \"<br>\";\necho valid_date(\"02-29-2023\");\necho \"<br>\"\
    ;\necho valid_date(\"02-29-2024\");\necho \"<br>\";\necho valid_date(\"02-29-2025\"\
    );\necho \"<br>\";\necho valid_date(\"02-29-2026\");\necho \"<br>\";\necho valid_date(\"\
    02-29-2027\nfunction candidate(...$args) {\n    return valid_date(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"04-0-2040\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected integer "03", expecting ")" in /tmp/tmp_g6qpn01.php
    on line 76

    '
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You have to write a function which validates a given date string\
    \ and\nreturns true if the date is valid otherwise false.\nThe date is valid if\
    \ all of the following rules are satisfied:\n1. The date string is not empty.\n\
    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\n3. The months should not be less than 1 or higher than 12.\n4. The\
    \ date should be in the format: mm-dd-yyyy\n>>> valid_date(\"03-11-2000\")\ntrue\n\
    >>> valid_date(\"15-01-2012\")\nfalse\n>>> valid_date(\"04-0-2040\")\nfalse\n\
    >>> valid_date(\"06-04-2020\")\ntrue\n>>> valid_date(\"06/04/2020\")\nfalse*/\n\
    function valid_date($date) {\n    $date = explode('-', $date);\n    if (count($date)\
    \ != 3) {\n        return false;\n    }\n    if (!checkdate($date[0], $date[1],\
    \ $date[2])) {\n        return false;\n    }\n    return true;\n}\n\n/*\n * Write\
    \ a function that takes a string and returns the number of vowels in the string.\n\
    \ * >>> count_vowels(\"hello\")\n * 2\n * >>> count_vowels(\"world\")\n * 1\n\
    \ * >>> count_vowels(\"\")\n * 0\n */\nfunction candidate(...$args) {\n    return\
    \ valid_date(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"03-11-2000\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"15-01-2012\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-0-2040\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-04-2020\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    01-01-2007\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    03-32-2011\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-31-3000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    06-06-2005\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    21-31-2000\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-12-2003\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04122003\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    20030412\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2003-04-12\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    04-2003\") !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220655

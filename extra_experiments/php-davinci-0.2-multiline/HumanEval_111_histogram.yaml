name: HumanEval_111_histogram
language: php
prompt: "<?php\n/* Given a string representing a space separated lowercase letters,\
  \ return an array\nof the letter with the most repetition and containing the corresponding\
  \ count.\nIf several letters have the same occurrence, return all of them.\nExample:\n\
  >>> histogram(\"a b c\")\narray(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n>>> histogram(\"\
  a b b a\")\narray(\"a\" => 2, \"b\" => 2)\n>>> histogram(\"a b c a b\")\narray(\"\
  a\" => 2, \"b\" => 2)\n>>> histogram(\"b b b b a\")\narray(\"b\" => 4)\n>>> histogram(\"\
  \")\narray()*/\nfunction histogram($test) {\n"
tests: "function candidate(...$args) {\n    return histogram(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(\"a b b a\") !== array(\"a\" => 2, \"b\" =>\
  \ 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"a b c a b\"\
  ) !== array(\"a\" => 2, \"b\" => 2)) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(\"a b c d g\") !== array(\"a\" => 1, \"b\" => 1, \"c\" => 1,\
  \ \"d\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
  r t g\") !== array(\"r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"b b b b a\") !== array(\"b\" => 4)) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"r t g\") !== array(\"\
  r\" => 1, \"t\" => 1, \"g\" => 1)) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(\"\") !== array()) { throw new Exception(\"Test failed!\"); }\n\
  \    if (candidate(\"a\") !== array(\"a\" => 1)) { throw new Exception(\"Test failed!\"\
  ); }\n}\n\ntest();"
completions: ["    $test = explode(\" \", $test);\n    $count = array_count_values($test);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n\n/* Given a string representing a\
    \ space separated lowercase letters, return an array\nof the letter with the most\
    \ repetition and containing the corresponding count.\nIf several letters have\
    \ the same occurrence, return all of them.\nExample:\n>>> histogram(\"a b c\"\
    )\narray(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n>>> histogram(\"a b b a\")\narray(\"\
    a\" => 2, \"b\" => 2)\n>>> histogram(\"a b c a b\")\narray(\"a\" => 2, \"b\" =>\
    \ 2)\n>>> histogram(\"b b b b a\")\narray(\"b\" => 4)\n>>> histogram(\"\")\narray()*/",
  "    $letters = explode(\" \", $test);\n    $count = array_count_values($letters);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n\necho \"<pre>\";\nprint_r(histogram(\"\
    a b c\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"a b b a\"));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"a b c a b\"));\necho \"\
    </pre>\";\necho \"<pre>\";\nprint_r(histogram(\"b b b b a\"));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(histogram(\"\"));\necho \"</pre>\";", "\t$test = explode(\"\
    \ \", $test);\n\t$test = array_count_values($test);\n\t$max = max($test);\n\t\
    $result = array();\n\tforeach ($test as $key => $value) {\n\t\tif ($value == $max)\
    \ {\n\t\t\t$result[$key] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\nprint_r(histogram(\"\
    a b c\"));\nprint_r(histogram(\"a b b a\"));\nprint_r(histogram(\"a b c a b\"\
    ));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\"));", "    $test\
    \ = explode(\" \", $test);\n    $test = array_count_values($test);\n    $max =\
    \ max($test);\n    $result = array();\n    foreach ($test as $key => $value) {\n\
    \        if ($value == $max) {\n            $result[$key] = $value;\n        }\n\
    \    }\n    return $result;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"\
    a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b\
    \ a\"));\nprint_r(histogram(\"\"));", "    $test = explode(\" \", $test);\n  \
    \  $histogram = array();\n    foreach ($test as $value) {\n        if (array_key_exists($value,\
    \ $histogram)) {\n            $histogram[$value]++;\n        } else {\n      \
    \      $histogram[$value] = 1;\n        }\n    }\n    return $histogram;\n}\n",
  "    $test = explode(\" \", $test);\n    $test = array_count_values($test);\n  \
    \  $max = max($test);\n    $result = array();\n    foreach ($test as $key => $value)\
    \ {\n        if ($value == $max) {\n            $result[$key] = $value;\n    \
    \    }\n    }\n    return $result;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"\
    a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b\
    \ a\"));\nprint_r(histogram(\"\"));", "\t$test = explode(\" \", $test);\n\t$count\
    \ = array_count_values($test);\n\t$max = max($count);\n\t$result = array();\n\t\
    foreach ($count as $key => $value) {\n\t\tif ($value == $max) {\n\t\t\t$result[$key]\
    \ = $value;\n\t\t}\n\t}\n\treturn $result;\n}\necho \"<pre>\";\nprint_r(histogram(\"\
    a b c\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"a b b a\"));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"a b c a b\"));\necho \"\
    </pre>\";\necho \"<pre>\";\nprint_r(histogram(\"b b b b a\"));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(histogram(\"\"));\necho \"</pre>\";", "    $test =\
    \ str_split($test);\n    $result = array();\n    foreach ($test as $value) {\n\
    \        if (isset($result[$value])) {\n            $result[$value]++;\n     \
    \   } else {\n            $result[$value] = 1;\n        }\n    }\n    return $result;\n\
    }\n", "\t$test = explode(\" \", $test);\n\t$count = array_count_values($test);\n\
    \t$max = max($count);\n\t$result = array();\n\tforeach ($count as $key => $value)\
    \ {\n\t\tif ($value == $max) {\n\t\t\t$result[$key] = $value;\n\t\t}\n\t}\n\t\
    return $result;\n}\n\necho \"<pre>\";\nprint_r(histogram(\"a b c\"));\necho \"\
    </pre>\";\necho \"<pre>\";\nprint_r(histogram(\"a b b a\"));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(histogram(\"a b c a b\"));\necho \"</pre>\";\necho\
    \ \"<pre>\";\nprint_r(histogram(\"b b b b a\"));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(histogram(\"\"));\necho \"</pre>\";", "    $test = explode(\" \", $test);\n\
    \    $test = array_count_values($test);\n    $max = max($test);\n    foreach ($test\
    \ as $key => $value) {\n        if ($value != $max) {\n            unset($test[$key]);\n\
    \        }\n    }\n    return $test;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"\
    a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b\
    \ a\"));\nprint_r(histogram(\"\"));", "\t$test = explode(\" \", $test);\n\t$count\
    \ = array_count_values($test);\n\t$max = max($count);\n\t$result = array();\n\t\
    foreach ($count as $key => $value) {\n\t\tif ($value == $max) {\n\t\t\t$result[$key]\
    \ = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\nprint_r(histogram(\"a b c\"));\n\
    print_r(histogram(\"a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"\
    b b b b a\"));\nprint_r(histogram(\"\"));", "    $test = explode(\" \", $test);\n\
    \    $result = array();\n    foreach ($test as $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n$test = \"a b c\";\n$result\
    \ = histogram($test);\nprint_r($result);\necho \"<br>\";\n$test = \"a b b a\"\
    ;\n$result = histogram($test);\nprint_r($result);\necho \"<br>\";\n$test = \"\
    a b c a b\";\n$result = histogram($test);\nprint_r($result);\necho \"<br>\";\n\
    $test = \"b b b b a\";\n$result = histogram($test);\nprint_r($result);\necho \"\
    <br>\";\n$test = \"\";\n$result = histogram($test);\nprint_r($result);\necho \"\
    <br>\";", "    $test = explode(\" \", $test);\n    $histogram = array();\n   \
    \ foreach ($test as $value) {\n        if (array_key_exists($value, $histogram))\
    \ {\n            $histogram[$value] += 1;\n        } else {\n            $histogram[$value]\
    \ = 1;\n        }\n    }\n    $max = max($histogram);\n    $result = array();\n\
    \    foreach ($histogram as $key => $value) {\n        if ($value == $max) {\n\
    \            $result[$key] = $value;\n        }\n    }\n    return $result;\n}",
  "\t$test = explode(\" \", $test);\n\t$count = array_count_values($test);\n\tarsort($count);\n\
    \t$max = max($count);\n\t$result = array();\n\tforeach ($count as $key => $value)\
    \ {\n\t\tif ($value == $max) {\n\t\t\t$result[$key] = $value;\n\t\t}\n\t}\n\t\
    return $result;\n}\n\necho \"<pre>\";\nprint_r(histogram(\"a b c\"));\necho \"\
    </pre>\";\necho \"<pre>\";\nprint_r(histogram(\"a b b a\"));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(histogram(\"a b c a b\"));\necho \"</pre>\";\necho\
    \ \"<pre>\";\nprint_r(histogram(\"b b b b a\"));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(histogram(\"\"));\necho \"</pre>\";", "\t$test = explode(\" \", $test);\n\
    \t$result = array();\n\tforeach ($test as $key => $value) {\n\t\tif (array_key_exists($value,\
    \ $result)) {\n\t\t\t$result[$value]++;\n\t\t} else {\n\t\t\t$result[$value] =\
    \ 1;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$test = \"a b c\";\nprint_r(histogram($test));\n\
    echo \"<br>\";\n$test = \"a b b a\";\nprint_r(histogram($test));\necho \"<br>\"\
    ;\n$test = \"a b c a b\";\nprint_r(histogram($test));\necho \"<br>\";\n$test =\
    \ \"b b b b a\";\nprint_r(histogram($test));\necho \"<br>\";\n$test = \"\";\n\
    print_r(histogram($test));\necho \"<br>\";", "\t$test = explode(\" \", $test);\n\
    \t$result = array();\n\tforeach ($test as $value) {\n\t\tif (array_key_exists($value,\
    \ $result)) {\n\t\t\t$result[$value]++;\n\t\t} else {\n\t\t\t$result[$value] =\
    \ 1;\n\t\t}\n\t}\n\t$max = max($result);\n\t$result = array_filter($result, function($v)\
    \ use ($max) {\n\t\treturn $v == $max;\n\t});\n\treturn $result;\n}\n\necho \"\
    <pre>\";\nprint_r(histogram(\"a b c\"));\necho \"</pre>\";\necho \"<pre>\";\n\
    print_r(histogram(\"a b b a\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"\
    a b c a b\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"b b b b\
    \ a\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"\"));\necho \"\
    </pre>\";", "    $test = explode(\" \", $test);\n    $test = array_count_values($test);\n\
    \    arsort($test);\n    $test = array_slice($test, 0, 1);\n    return $test;\n\
    }\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"a b b a\"));\nprint_r(histogram(\"\
    a b c a b\"));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\"));",
  "    $test = str_split($test);\n    $result = array();\n    foreach ($test as $value)\
    \ {\n        if (array_key_exists($value, $result)) {\n            $result[$value]++;\n\
    \        } else {\n            $result[$value] = 1;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $test = explode(\" \", $test);\n    $test = array_count_values($test);\n\
    \    arsort($test);\n    $max = array_values($test)[0];\n    $result = array();\n\
    \    foreach ($test as $key => $value) {\n        if ($value == $max) {\n    \
    \        $result[$key] = $value;\n        }\n    }\n    return $result;\n}\nprint_r(histogram(\"\
    a b c\"));\nprint_r(histogram(\"a b b a\"));\nprint_r(histogram(\"a b c a b\"\
    ));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\"));", "\t$array\
    \ = explode(\" \", $test);\n\t$count = array_count_values($array);\n\t$max = max($count);\n\
    \t$result = array();\n\tforeach ($count as $key => $value) {\n\t\tif ($value ==\
    \ $max) {\n\t\t\t$result[$key] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\n\
    $test = \"a b c\";\nprint_r(histogram($test));\necho \"<br>\";\n$test = \"a b\
    \ b a\";\nprint_r(histogram($test));\necho \"<br>\";\n$test = \"a b c a b\";\n\
    print_r(histogram($test));\necho \"<br>\";\n$test = \"b b b b a\";\nprint_r(histogram($test));\n\
    echo \"<br>\";\n$test = \"\";\nprint_r(histogram($test));\necho \"<br>\";", "\t\
    $arr = explode(\" \", $test);\n\t$count = array_count_values($arr);\n\t$max =\
    \ max($count);\n\t$result = array();\n\tforeach ($count as $key => $value) {\n\
    \t\tif ($value == $max) {\n\t\t\t$result[$key] = $value;\n\t\t}\n\t}\n\treturn\
    \ $result;\n}\necho \"<pre>\";\nprint_r(histogram(\"a b c\"));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(histogram(\"a b b a\"));\necho \"</pre>\";\necho \"\
    <pre>\";\nprint_r(histogram(\"a b c a b\"));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(histogram(\"b b b b a\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"\
    \"));\necho \"</pre>\";", "    $test = explode(\" \", $test);\n    $array = array();\n\
    \    foreach ($test as $value) {\n        if (array_key_exists($value, $array))\
    \ {\n            $array[$value]++;\n        } else {\n            $array[$value]\
    \ = 1;\n        }\n    }\n    return $array;\n}\n$test = \"a b c\";\nprint_r(histogram($test));\n\
    echo \"<br>\";\n$test = \"a b b a\";\nprint_r(histogram($test));\necho \"<br>\"\
    ;\n$test = \"a b c a b\";\nprint_r(histogram($test));\necho \"<br>\";\n$test =\
    \ \"b b b b a\";\nprint_r(histogram($test));\necho \"<br>\";\n$test = \"\";\n\
    print_r(histogram($test));\necho \"<br>\";", "\t$test = explode(\" \", $test);\n\
    \t$count = array_count_values($test);\n\t$max = max($count);\n\t$result = array();\n\
    \tforeach ($count as $key => $value) {\n\t\tif ($value == $max) {\n\t\t\t$result[$key]\
    \ = $value;\n\t\t}\n\t}\n\treturn $result;\n}\nprint_r(histogram(\"a b c\"));\n\
    print_r(histogram(\"a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"\
    b b b b a\"));\nprint_r(histogram(\"\"));", "    $test = explode(\" \", $test);\n\
    \    $test = array_count_values($test);\n    $max = max($test);\n    $result =\
    \ array();\n    foreach ($test as $key => $value) {\n        if ($value == $max)\
    \ {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"a b b a\"));\nprint_r(histogram(\"\
    a b c a b\"));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\"));",
  "\t$test = explode(\" \", $test);\n\t$count = array_count_values($test);\n\t$max\
    \ = max($count);\n\t$result = array();\n\tforeach ($count as $key => $value) {\n\
    \t\tif ($value == $max) {\n\t\t\t$result[$key] = $value;\n\t\t}\n\t}\n\treturn\
    \ $result;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"a b b a\"));\n\
    print_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\
    \"));", "\t$test = explode(\" \", $test);\n\t$count = array_count_values($test);\n\
    \t$max = max($count);\n\t$result = array();\n\tforeach ($count as $key => $value)\
    \ {\n\t\tif ($value == $max) {\n\t\t\t$result[$key] = $value;\n\t\t}\n\t}\n\t\
    return $result;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"a b b\
    \ a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b a\"\
    ));\nprint_r(histogram(\"\"));", "\t$test = explode(\" \", $test);\n\t$result\
    \ = array();\n\tforeach ($test as $key => $value) {\n\t\tif (array_key_exists($value,\
    \ $result)) {\n\t\t\t$result[$value]++;\n\t\t} else {\n\t\t\t$result[$value] =\
    \ 1;\n\t\t}\n\t}\n\t$max = max($result);\n\t$result2 = array();\n\tforeach ($result\
    \ as $key => $value) {\n\t\tif ($value == $max) {\n\t\t\t$result2[$key] = $value;\n\
    \t\t}\n\t}\n\treturn $result2;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"\
    a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b\
    \ a\"));\nprint_r(histogram(\"\"));", "\t$test = explode(\" \", $test);\n\t$count\
    \ = array_count_values($test);\n\t$max = max($count);\n\t$result = array();\n\t\
    foreach ($count as $key => $value) {\n\t\tif ($value == $max) {\n\t\t\t$result[$key]\
    \ = $value;\n\t\t}\n\t}\n\treturn $result;\n}\nprint_r(histogram(\"a b c\"));\n\
    print_r(histogram(\"a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"\
    b b b b a\"));\nprint_r(histogram(\"\"));", "    $test = explode(\" \", $test);\n\
    \    $result = array();\n    foreach ($test as $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    $max = max($result);\n    $result = array_filter($result,\
    \ function ($value) use ($max) {\n        return $value == $max;\n    });\n  \
    \  return $result;\n}\n\n/* Given a string representing a space separated lowercase\
    \ letters, return an array\nof the letter with the most repetition and containing\
    \ the corresponding count.\nIf several letters have the same occurrence, return\
    \ all of them.\nExample:\n>>> histogram(\"a b c\")\narray(\"a\" => 1, \"b\" =>\
    \ 1, \"c\" => 1)\n>>> histogram(\"a b b a\")\narray(\"a\" => 2, \"b\" => 2)\n\
    >>> histogram(\"a b c a b\")\narray(\"a\" => 2, \"b\" => 2)\n>>> histogram(\"\
    b b b b a\")\narray(\"b\" => 4)\n>>> histogram(\"\")\narray()*/", "\t$test = explode(\"\
    \ \", $test);\n\t$result = array();\n\tforeach ($test as $value) {\n\t\tif (array_key_exists($value,\
    \ $result)) {\n\t\t\t$result[$value]++;\n\t\t} else {\n\t\t\t$result[$value] =\
    \ 1;\n\t\t}\n\t}\n\t$max = max($result);\n\tforeach ($result as $key => $value)\
    \ {\n\t\tif ($value != $max) {\n\t\t\tunset($result[$key]);\n\t\t}\n\t}\n\treturn\
    \ $result;\n}\necho \"<pre>\";\nprint_r(histogram(\"a b c\"));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(histogram(\"a b b a\"));\necho \"</pre>\";\necho \"\
    <pre>\";\nprint_r(histogram(\"a b c a b\"));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(histogram(\"b b b b a\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"\
    \"));\necho \"</pre>\";", "\t$test = explode(\" \", $test);\n\t$count = array_count_values($test);\n\
    \t$max = max($count);\n\t$result = array();\n\tforeach ($count as $key => $value)\
    \ {\n\t\tif ($value == $max) {\n\t\t\t$result[$key] = $value;\n\t\t}\n\t}\n\t\
    return $result;\n}\necho \"<pre>\";\nprint_r(histogram(\"a b c\"));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(histogram(\"a b b a\"));\necho \"</pre>\";\necho \"\
    <pre>\";\nprint_r(histogram(\"a b c a b\"));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(histogram(\"b b b b a\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"\
    \"));\necho \"</pre>\";", "    $test = explode(\" \", $test);\n    $test = array_count_values($test);\n\
    \    $max = max($test);\n    $result = array();\n    foreach ($test as $key =>\
    \ $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"\
    a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b\
    \ a\"));\nprint_r(histogram(\"\"));", "    $test = explode(\" \", $test);\n  \
    \  $count = array_count_values($test);\n    $max = max($count);\n    $result =\
    \ array();\n    foreach ($count as $key => $value) {\n        if ($value == $max)\
    \ {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"a b b a\"));\nprint_r(histogram(\"\
    a b c a b\"));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\"));",
  "\t$test = explode(\" \", $test);\n\t$test = array_count_values($test);\n\tarsort($test);\n\
    \t$test = array_slice($test, 0, 1);\n\treturn $test;\n}\nprint_r(histogram(\"\
    a b c\"));\nprint_r(histogram(\"a b b a\"));\nprint_r(histogram(\"a b c a b\"\
    ));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\"));", "\t$arr =\
    \ explode(\" \", $test);\n\t$count = array_count_values($arr);\n\t$max = max($count);\n\
    \t$result = array();\n\tforeach ($count as $key => $value) {\n\t\tif ($value ==\
    \ $max) {\n\t\t\t$result[$key] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\nprint_r(histogram(\"\
    a b c\"));\nprint_r(histogram(\"a b b a\"));\nprint_r(histogram(\"a b c a b\"\
    ));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\"));", "    $test\
    \ = explode(\" \", $test);\n    $result = array();\n    foreach ($test as $value)\
    \ {\n        if (array_key_exists($value, $result)) {\n            $result[$value]\
    \ += 1;\n        } else {\n            $result[$value] = 1;\n        }\n    }\n\
    \    return $result;\n}\n", "    $test = explode(\" \", $test);\n    $count =\
    \ array_count_values($test);\n    $max = max($count);\n    $result = array();\n\
    \    foreach ($count as $key => $value) {\n        if ($value == $max) {\n   \
    \         $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n\n\
    print_r(histogram(\"a b c\"));\nprint_r(histogram(\"a b b a\"));\nprint_r(histogram(\"\
    a b c a b\"));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\"));",
  "    $test = explode(\" \", $test);\n    $result = array();\n    foreach ($test\
    \ as $value) {\n        if (isset($result[$value])) {\n            $result[$value]++;\n\
    \        } else {\n            $result[$value] = 1;\n        }\n    }\n    return\
    \ $result;\n}\n\n$test = \"a b c\";\nprint_r(histogram($test));\n\n$test = \"\
    a b b a\";\nprint_r(histogram($test));\n\n$test = \"a b c a b\";\nprint_r(histogram($test));\n\
    \n$test = \"b b b b a\";\nprint_r(histogram($test));\n\n$test = \"\";\nprint_r(histogram($test));",
  "\t$test = explode(\" \", $test);\n\t$count = array_count_values($test);\n\t$max\
    \ = max($count);\n\t$result = array();\n\tforeach ($count as $key => $value) {\n\
    \t\tif ($value == $max) {\n\t\t\t$result[$key] = $value;\n\t\t}\n\t}\n\treturn\
    \ $result;\n}\nprint_r(histogram(\"a b c\"));\necho \"<br>\";\nprint_r(histogram(\"\
    a b b a\"));\necho \"<br>\";\nprint_r(histogram(\"a b c a b\"));\necho \"<br>\"\
    ;\nprint_r(histogram(\"b b b b a\"));\necho \"<br>\";\nprint_r(histogram(\"\"\
    ));", "    $test = explode(\" \", $test);\n    $count = array_count_values($test);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\necho \"<pre>\";\nprint_r(histogram(\"\
    a b c\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"a b b a\"));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"a b c a b\"));\necho \"\
    </pre>\";\necho \"<pre>\";\nprint_r(histogram(\"b b b b a\"));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(histogram(\"\"));\necho \"</pre>\";", "\t$test = explode(\"\
    \ \", $test);\n\t$count = array_count_values($test);\n\t$max = max($count);\n\t\
    $result = array();\n\tforeach ($count as $key => $value) {\n\t\tif ($value ==\
    \ $max) {\n\t\t\t$result[$key] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\nprint_r(histogram(\"\
    a b c\"));\nprint_r(histogram(\"a b b a\"));\nprint_r(histogram(\"a b c a b\"\
    ));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\"));", "    $test\
    \ = explode(\" \", $test);\n    $test = array_count_values($test);\n    arsort($test);\n\
    \    $test = array_slice($test, 0, 1);\n    return $test;\n}\nprint_r(histogram(\"\
    a b c\"));\necho \"<br>\";\nprint_r(histogram(\"a b b a\"));\necho \"<br>\";\n\
    print_r(histogram(\"a b c a b\"));\necho \"<br>\";\nprint_r(histogram(\"b b b\
    \ b a\"));\necho \"<br>\";\nprint_r(histogram(\"\"));", "    $test = explode(\"\
    \ \", $test);\n    $test = array_count_values($test);\n    arsort($test);\n  \
    \  $test = array_slice($test, 0, 1);\n    return $test;\n}\nprint_r(histogram(\"\
    a b c\"));\nprint_r(histogram(\"a b b a\"));\nprint_r(histogram(\"a b c a b\"\
    ));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\"));", "    $test\
    \ = explode(\" \", $test);\n    $result = array();\n    foreach ($test as $key\
    \ => $value) {\n        $result[$value] = 0;\n    }\n    foreach ($test as $key\
    \ => $value) {\n        $result[$value]++;\n    }\n    $max = max($result);\n\
    \    foreach ($result as $key => $value) {\n        if ($value < $max) {\n   \
    \         unset($result[$key]);\n        }\n    }\n    return $result;\n}\nprint_r(histogram(\"\
    a b c\"));\nprint_r(histogram(\"a b b a\"));\nprint_r(histogram(\"a b c a b\"\
    ));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\"));", "    $array\
    \ = explode(\" \", $test);\n    $result = array();\n    foreach ($array as $value)\
    \ {\n        if (!isset($result[$value])) {\n            $result[$value] = 1;\n\
    \        } else {\n            $result[$value]++;\n        }\n    }\n    return\
    \ $result;\n}\n\n$test = \"a b c\";\nprint_r(histogram($test));\necho \"<br>\"\
    ;\n$test = \"a b b a\";\nprint_r(histogram($test));\necho \"<br>\";\n$test = \"\
    a b c a b\";\nprint_r(histogram($test));\necho \"<br>\";\n$test = \"b b b b a\"\
    ;\nprint_r(histogram($test));\necho \"<br>\";\n$test = \"\";\nprint_r(histogram($test));\n\
    echo \"<br>\";", "\t$test = explode(\" \", $test);\n\t$count = array_count_values($test);\n\
    \t$max = max($count);\n\t$result = array();\n\tforeach ($count as $key => $value)\
    \ {\n\t\tif ($value == $max) {\n\t\t\t$result[$key] = $value;\n\t\t}\n\t}\n\t\
    return $result;\n}\n\n$test = \"a b c\";\nprint_r(histogram($test));\necho \"\
    <br>\";\n$test = \"a b b a\";\nprint_r(histogram($test));\necho \"<br>\";\n$test\
    \ = \"a b c a b\";\nprint_r(histogram($test));\necho \"<br>\";\n$test = \"b b\
    \ b b a\";\nprint_r(histogram($test));\necho \"<br>\";\n$test = \"\";\nprint_r(histogram($test));\n\
    echo \"<br>\";", "\t$array = explode(\" \", $test);\n\t$result = array();\n\t\
    foreach ($array as $value) {\n\t\tif (isset($result[$value])) {\n\t\t\t$result[$value]++;\n\
    \t\t} else {\n\t\t\t$result[$value] = 1;\n\t\t}\n\t}\n\treturn $result;\n}\n",
  "    $test = str_split($test);\n    $test = array_count_values($test);\n    arsort($test);\n\
    \    $max = max($test);\n    $result = array();\n    foreach ($test as $key =>\
    \ $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"\
    a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b\
    \ a\"));\nprint_r(histogram(\"\"));", "    $test = explode(\" \", $test);\n  \
    \  $test = array_count_values($test);\n    arsort($test);\n    $test = array_slice($test,\
    \ 0, 1);\n    return $test;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"\
    a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b\
    \ a\"));\nprint_r(histogram(\"\"));", "\t$test = str_split($test);\n\t$test =\
    \ array_count_values($test);\n\t$max = max($test);\n\t$result = array();\n\tforeach\
    \ ($test as $key => $value) {\n\t\tif ($value == $max) {\n\t\t\t$result[$key]\
    \ = $value;\n\t\t}\n\t}\n\treturn $result;\n}\nprint_r(histogram(\"a b c\"));\n\
    print_r(histogram(\"a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"\
    b b b b a\"));\nprint_r(histogram(\"\"));", "    $test = explode(\" \", $test);\n\
    \    $count = array_count_values($test);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\necho \"<pre>\";\nprint_r(histogram(\"a b c\"));\necho \"</pre>\";\necho \"\
    <pre>\";\nprint_r(histogram(\"a b b a\"));\necho \"</pre>\";\necho \"<pre>\";\n\
    print_r(histogram(\"a b c a b\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"\
    b b b b a\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"\"));\n\
    echo \"</pre>\";", "    $test = explode(\" \", $test);\n    $test = array_count_values($test);\n\
    \    arsort($test);\n    $test = array_slice($test, 0, 1);\n    return $test;\n\
    }\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"a b b a\"));\nprint_r(histogram(\"\
    a b c a b\"));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\"));",
  "\t$test = explode(\" \", $test);\n\t$count = array_count_values($test);\n\t$max\
    \ = max($count);\n\t$result = array();\n\tforeach ($count as $key => $value) {\n\
    \t\tif ($value == $max) {\n\t\t\t$result[$key] = $value;\n\t\t}\n\t}\n\treturn\
    \ $result;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"a b b a\"));\n\
    print_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\
    \"));", "    $test = explode(\" \", $test);\n    $result = array();\n    foreach\
    \ ($test as $value) {\n        if (isset($result[$value])) {\n            $result[$value]++;\n\
    \        } else {\n            $result[$value] = 1;\n        }\n    }\n    return\
    \ $result;\n}\n", "\t$test = explode(\" \", $test);\n\t$result = array();\n\t\
    foreach ($test as $key => $value) {\n\t\tif (array_key_exists($value, $result))\
    \ {\n\t\t\t$result[$value]++;\n\t\t} else {\n\t\t\t$result[$value] = 1;\n\t\t\
    }\n\t}\n\t$max = max($result);\n\t$result = array_filter($result, function($value)\
    \ use ($max) {\n\t\treturn $value == $max;\n\t});\n\treturn $result;\n}\n\nprint_r(histogram(\"\
    a b c\"));\nprint_r(histogram(\"a b b a\"));\nprint_r(histogram(\"a b c a b\"\
    ));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\"));", "    $test\
    \ = explode(\" \", $test);\n    $result = array();\n    foreach ($test as $value)\
    \ {\n        if (array_key_exists($value, $result)) {\n            $result[$value]++;\n\
    \        } else {\n            $result[$value] = 1;\n        }\n    }\n    $max\
    \ = max($result);\n    foreach ($result as $key => $value) {\n        if ($value\
    \ != $max) {\n            unset($result[$key]);\n        }\n    }\n    return\
    \ $result;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"a b b a\"));\n\
    print_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\
    \"));", "\t$test = explode(\" \", $test);\n\t$test = array_count_values($test);\n\
    \t$max = max($test);\n\tforeach ($test as $key => $value) {\n\t\tif ($value !=\
    \ $max) {\n\t\t\tunset($test[$key]);\n\t\t}\n\t}\n\treturn $test;\n}\nprint_r(histogram(\"\
    a b c\"));\nprint_r(histogram(\"a b b a\"));\nprint_r(histogram(\"a b c a b\"\
    ));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\"));", "\t$test\
    \ = explode(\" \", $test);\n\t$result = array();\n\tforeach ($test as $value)\
    \ {\n\t\tif (!array_key_exists($value, $result)) {\n\t\t\t$result[$value] = 1;\n\
    \t\t} else {\n\t\t\t$result[$value]++;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$test\
    \ = \"a b c\";\nprint_r(histogram($test));\n\n$test = \"a b b a\";\nprint_r(histogram($test));\n\
    \n$test = \"a b c a b\";\nprint_r(histogram($test));\n\n$test = \"b b b b a\"\
    ;\nprint_r(histogram($test));\n\n$test = \"\";\nprint_r(histogram($test));", "\t\
    $test = explode(\" \", $test);\n\t$result = array();\n\tforeach ($test as $value)\
    \ {\n\t\tif (isset($result[$value])) {\n\t\t\t$result[$value]++;\n\t\t} else {\n\
    \t\t\t$result[$value] = 1;\n\t\t}\n\t}\n\tarsort($result);\n\t$max = current($result);\n\
    \t$result = array_filter($result, function($value) use ($max) {\n\t\treturn $value\
    \ == $max;\n\t});\n\treturn $result;\n}\n\necho \"<pre>\";\nprint_r(histogram(\"\
    a b c\"));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(histogram(\"a b b a\"\
    ));\necho \"</pre>\";\n\necho \"<pre>\";\nprint_r(histogram(\"a b c a b\"));\n\
    echo \"</pre>\";\n\necho \"<pre>\";\nprint_r(histogram(\"b b b b a\"));\necho\
    \ \"</pre>\";\n\necho \"<pre>\";\nprint_r(histogram(\"\"));\necho \"</pre>\";",
  "    $test = explode(\" \", $test);\n    $test = array_count_values($test);\n  \
    \  arsort($test);\n    $max = max($test);\n    $result = array();\n    foreach\
    \ ($test as $key => $value) {\n        if ($value == $max) {\n            $result[$key]\
    \ = $value;\n        }\n    }\n    return $result;\n}\n\nprint_r(histogram(\"\
    a b c\"));\nprint_r(histogram(\"a b b a\"));\nprint_r(histogram(\"a b c a b\"\
    ));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\"));", "    $test\
    \ = explode(\" \", $test);\n    $count = array_count_values($test);\n    $max\
    \ = max($count);\n    $max_key = array_search($max, $count);\n    $result = array($max_key\
    \ => $max);\n    foreach ($count as $key => $value) {\n        if ($value == $max\
    \ && $key != $max_key) {\n            $result[$key] = $value;\n        }\n   \
    \ }\n    return $result;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"\
    a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b\
    \ a\"));\nprint_r(histogram(\"\"));", "    $test = explode(\" \", $test);\n  \
    \  $count = array_count_values($test);\n    $max = max($count);\n    $result =\
    \ array();\n    foreach ($count as $key => $value) {\n        if ($value == $max)\
    \ {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"a b b a\"));\nprint_r(histogram(\"\
    a b c a b\"));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\"));",
  "    $test = explode(\" \", $test);\n    $count = array_count_values($test);\n \
    \   $max = max($count);\n    $result = array();\n    foreach ($count as $key =>\
    \ $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n$test = \"a b c\";\necho \"Given a\
    \ string representing a space separated lowercase letters, return an array of\
    \ the letter with the most repetition and containing the corresponding count.\
    \ If several letters have the same occurrence, return all of them.\\n\";\necho\
    \ \"Example:\\n\";\necho \">>> histogram(\\\"a b c\\\")\\n\";\necho \"array(\\\
    \"a\\\" => 1, \\\"b\\\" => 1, \\\"c\\\" => 1)\\n\";\necho \">>> histogram(\\\"\
    a b b a\\\")\\n\";\necho \"array(\\\"a\\\" => 2, \\\"b\\\" => 2)\\n\";\necho \"\
    >>> histogram(\\\"a b c a b\\\")\\n\";\necho \"array(\\\"a\\\" => 2, \\\"b\\\"\
    \ => 2)\\n\";\necho \">>> histogram(\\\"b b b b a\\\")\\n\";\necho \"array(\\\"\
    b\\\" => 4)\\n\";\necho \">>> histogram(\\\"\\\")\\n\";\necho \"array()\\n\";\n\
    echo \"Test: $test\\n\";\necho \"Result: \";\nprint_r(histogram($test));", " \
    \   $test = str_split($test);\n    $result = array();\n    foreach ($test as $key\
    \ => $value) {\n        if (array_key_exists($value, $result)) {\n           \
    \ $result[$value]++;\n        } else {\n            $result[$value] = 1;\n   \
    \     }\n    }\n    return $result;\n}\n\n$test = \"a b c\";\nprint_r(histogram($test));\n\
    \n$test = \"a b b a\";\nprint_r(histogram($test));\n\n$test = \"a b c a b\";\n\
    print_r(histogram($test));\n\n$test = \"b b b b a\";\nprint_r(histogram($test));\n\
    \n$test = \"\";\nprint_r(histogram($test));", "\t$test = explode(\" \", $test);\n\
    \t$count = array_count_values($test);\n\t$max = max($count);\n\tforeach ($count\
    \ as $key => $value) {\n\t\tif ($value < $max) {\n\t\t\tunset($count[$key]);\n\
    \t\t}\n\t}\n\treturn $count;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"\
    a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b\
    \ a\"));\nprint_r(histogram(\"\"));", "\t$letters = explode(\" \", $test);\n\t\
    $counts = array_count_values($letters);\n\t$max = max($counts);\n\t$max_letters\
    \ = array();\n\tforeach ($counts as $key => $value) {\n\t\tif ($value == $max)\
    \ {\n\t\t\t$max_letters[$key] = $value;\n\t\t}\n\t}\n\treturn $max_letters;\n\
    }\n\necho \"a b c\" . PHP_EOL;\nprint_r(histogram(\"a b c\"));\necho \"a b b a\"\
    \ . PHP_EOL;\nprint_r(histogram(\"a b b a\"));\necho \"a b c a b\" . PHP_EOL;\n\
    print_r(histogram(\"a b c a b\"));\necho \"b b b b a\" . PHP_EOL;\nprint_r(histogram(\"\
    b b b b a\"));\necho \"\" . PHP_EOL;\nprint_r(histogram(\"\"));", "    $test =\
    \ explode(\" \", $test);\n    $result = array();\n    foreach ($test as $value)\
    \ {\n        if (array_key_exists($value, $result)) {\n            $result[$value]++;\n\
    \        } else {\n            $result[$value] = 1;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $test = explode(\" \", $test);\n    $count = array_count_values($test);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n\necho \"<pre>\";\nprint_r(histogram(\"\
    a b c\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"a b b a\"));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"a b c a b\"));\necho \"\
    </pre>\";\necho \"<pre>\";\nprint_r(histogram(\"b b b b a\"));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(histogram(\"\"));\necho \"</pre>\";", "\t$test = explode(\"\
    \ \", $test);\n\t$count = array_count_values($test);\n\t$max = max($count);\n\t\
    $result = array();\n\tforeach ($count as $key => $value) {\n\t\tif ($value ==\
    \ $max) {\n\t\t\t$result[$key] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\nprint_r(histogram(\"\
    a b c\"));\nprint_r(histogram(\"a b b a\"));\nprint_r(histogram(\"a b c a b\"\
    ));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\"));", "    $array\
    \ = explode(\" \", $test);\n    $result = array();\n    foreach ($array as $value)\
    \ {\n        if (!array_key_exists($value, $result)) {\n            $result[$value]\
    \ = 1;\n        } else {\n            $result[$value] += 1;\n        }\n    }\n\
    \    return $result;\n}\n\n$test = \"a b c\";\nprint_r(histogram($test));\necho\
    \ \"<br>\";\n$test = \"a b b a\";\nprint_r(histogram($test));\necho \"<br>\";\n\
    $test = \"a b c a b\";\nprint_r(histogram($test));\necho \"<br>\";\n$test = \"\
    b b b b a\";\nprint_r(histogram($test));\necho \"<br>\";\n$test = \"\";\nprint_r(histogram($test));\n\
    echo \"<br>\";", "    $test = explode(\" \", $test);\n    $test = array_count_values($test);\n\
    \    arsort($test);\n    $test = array_slice($test, 0, 1);\n    return $test;\n\
    }\n\n/* Given a string representing a space separated lowercase letters, return\
    \ an array\nof the letter with the most repetition and containing the corresponding\
    \ count.\nIf several letters have the same occurrence, return all of them.\nExample:\n\
    >>> histogram(\"a b c\")\narray(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n>>> histogram(\"\
    a b b a\")\narray(\"a\" => 2, \"b\" => 2)\n>>> histogram(\"a b c a b\")\narray(\"\
    a\" => 2, \"b\" => 2)\n>>> histogram(\"b b b b a\")\narray(\"b\" => 4)\n>>> histogram(\"\
    \")\narray()*/", "    $test = explode(\" \", $test);\n    $test = array_count_values($test);\n\
    \    $max = max($test);\n    $result = array();\n    foreach ($test as $key =>\
    \ $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"\
    a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b\
    \ a\"));\nprint_r(histogram(\"\"));", "    $test = explode(\" \", $test);\n  \
    \  $count = array_count_values($test);\n    $max = max($count);\n    $result =\
    \ array();\n    foreach ($count as $key => $value) {\n        if ($value == $max)\
    \ {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"a b b a\"));\nprint_r(histogram(\"\
    a b c a b\"));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\"));",
  "\t$test = explode(\" \", $test);\n\t$result = array();\n\tforeach ($test as $value)\
    \ {\n\t\tif (array_key_exists($value, $result)) {\n\t\t\t$result[$value]++;\n\t\
    \t} else {\n\t\t\t$result[$value] = 1;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$test\
    \ = \"a b c\";\nprint_r(histogram($test));\necho \"<br>\";\n$test = \"a b b a\"\
    ;\nprint_r(histogram($test));\necho \"<br>\";\n$test = \"a b c a b\";\nprint_r(histogram($test));\n\
    echo \"<br>\";\n$test = \"b b b b a\";\nprint_r(histogram($test));\necho \"<br>\"\
    ;\n$test = \"\";\nprint_r(histogram($test));\necho \"<br>\";", "\t$test = explode(\"\
    \ \", $test);\n\t$count = array_count_values($test);\n\t$max = max($count);\n\t\
    $result = array();\n\tforeach ($count as $key => $value) {\n\t\tif ($value ==\
    \ $max) {\n\t\t\t$result[$key] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\nprint_r(histogram(\"\
    a b c\"));\nprint_r(histogram(\"a b b a\"));\nprint_r(histogram(\"a b c a b\"\
    ));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\"));", "    $test\
    \ = explode(\" \", $test);\n    $count = array_count_values($test);\n    $max\
    \ = max($count);\n    $result = array();\n    foreach ($count as $key => $value)\
    \ {\n        if ($value == $max) {\n            $result[$key] = $value;\n    \
    \    }\n    }\n    return $result;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"\
    a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b\
    \ a\"));\nprint_r(histogram(\"\"));", "\t$test = explode(\" \", $test);\n\t$count\
    \ = array_count_values($test);\n\t$max = max($count);\n\t$result = array();\n\t\
    foreach ($count as $key => $value) {\n\t\tif ($value == $max) {\n\t\t\t$result[$key]\
    \ = $value;\n\t\t}\n\t}\n\treturn $result;\n}\necho \"<pre>\";\nprint_r(histogram(\"\
    a b c\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"a b b a\"));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"a b c a b\"));\necho \"\
    </pre>\";\necho \"<pre>\";\nprint_r(histogram(\"b b b b a\"));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(histogram(\"\"));\necho \"</pre>\";", "    $test =\
    \ str_split($test);\n    $test = array_count_values($test);\n    $max = max($test);\n\
    \    $result = array();\n    foreach ($test as $key => $value) {\n        if ($value\
    \ == $max) {\n            $result[$key] = $value;\n        }\n    }\n    return\
    \ $result;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"a b b a\"));\n\
    print_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\
    \"));", "    $test = explode(\" \", $test);\n    $count = array_count_values($test);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\necho \"<pre>\";\nprint_r(histogram(\"\
    a b c\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"a b b a\"));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"a b c a b\"));\necho \"\
    </pre>\";\necho \"<pre>\";\nprint_r(histogram(\"b b b b a\"));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(histogram(\"\"));\necho \"</pre>\";", "\t$test = explode(\"\
    \ \", $test);\n\t$count = array_count_values($test);\n\t$max = max($count);\n\t\
    $result = array();\n\tforeach ($count as $key => $value) {\n\t\tif ($value ==\
    \ $max) {\n\t\t\t$result[$key] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\necho\
    \ \"<pre>\";\nprint_r(histogram(\"a b c\"));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(histogram(\"a b b a\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"\
    a b c a b\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"b b b b\
    \ a\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"\"));\necho \"\
    </pre>\";", "    $test = explode(\" \", $test);\n    $test = array_count_values($test);\n\
    \    arsort($test);\n    $test = array_slice($test, 0, 1);\n    return $test;\n\
    }\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"a b b a\"));\nprint_r(histogram(\"\
    a b c a b\"));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\"));",
  "    $test = explode(\" \", $test);\n    $count = array_count_values($test);\n \
    \   $max = max($count);\n    $result = array();\n    foreach ($count as $key =>\
    \ $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n\necho \"<pre>\";\nprint_r(histogram(\"\
    a b c\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"a b b a\"));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"a b c a b\"));\necho \"\
    </pre>\";\necho \"<pre>\";\nprint_r(histogram(\"b b b b a\"));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(histogram(\"\"));\necho \"</pre>\";", "\t$test = str_split($test);\n\
    \t$test = array_count_values($test);\n\t$max = max($test);\n\t$result = array();\n\
    \tforeach ($test as $key => $value) {\n\t\tif ($value == $max) {\n\t\t\t$result[$key]\
    \ = $value;\n\t\t}\n\t}\n\treturn $result;\n}\nprint_r(histogram(\"a b c\"));\n\
    print_r(histogram(\"a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"\
    b b b b a\"));\nprint_r(histogram(\"\"));", "\t$test = str_split($test);\n\t$test\
    \ = array_count_values($test);\n\t$max = max($test);\n\t$result = array();\n\t\
    foreach ($test as $key => $value) {\n\t\tif ($value == $max) {\n\t\t\t$result[$key]\
    \ = $value;\n\t\t}\n\t}\n\treturn $result;\n}\nprint_r(histogram(\"a b c\"));\n\
    echo \"<br>\";\nprint_r(histogram(\"a b b a\"));\necho \"<br>\";\nprint_r(histogram(\"\
    a b c a b\"));\necho \"<br>\";\nprint_r(histogram(\"b b b b a\"));\necho \"<br>\"\
    ;\nprint_r(histogram(\"\"));", "    $test = explode(\" \", $test);\n    $result\
    \ = array();\n    $max = 0;\n    foreach ($test as $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n        if ($result[$value] > $max) {\n            $max = $result[$value];\n\
    \        }\n    }\n    $result = array_filter($result, function ($value) use ($max)\
    \ {\n        return $value == $max;\n    });\n    return $result;\n}\n\nprint_r(histogram(\"\
    a b c\"));\nprint_r(histogram(\"a b b a\"));\nprint_r(histogram(\"a b c a b\"\
    ));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\"));", "    $test\
    \ = explode(\" \", $test);\n    $result = array();\n    foreach ($test as $value)\
    \ {\n        if (array_key_exists($value, $result)) {\n            $result[$value]++;\n\
    \        } else {\n            $result[$value] = 1;\n        }\n    }\n    return\
    \ $result;\n}\n\n$test = \"a b c\";\n$test2 = \"a b b a\";\n$test3 = \"a b c a\
    \ b\";\n$test4 = \"b b b b a\";\n$test5 = \"\";\n\nprint_r(histogram($test));\n\
    print_r(histogram($test2));\nprint_r(histogram($test3));\nprint_r(histogram($test4));\n\
    print_r(histogram($test5));", "    $test = explode(\" \", $test);\n    $result\
    \ = array();\n    foreach ($test as $key => $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value] += 1;\n        } else {\n         \
    \   $result[$value] = 1;\n        }\n    }\n    return $result;\n}\n\n$test =\
    \ \"a b c\";\nprint_r(histogram($test));\necho \"<br>\";\n$test = \"a b b a\"\
    ;\nprint_r(histogram($test));\necho \"<br>\";\n$test = \"a b c a b\";\nprint_r(histogram($test));\n\
    echo \"<br>\";\n$test = \"b b b b a\";\nprint_r(histogram($test));\necho \"<br>\"\
    ;\n$test = \"\";\nprint_r(histogram($test));\necho \"<br>\";\n", "  $test = explode(\"\
    \ \", $test);\n  $result = array();\n  foreach ($test as $key => $value) {\n \
    \   if (array_key_exists($value, $result)) {\n      $result[$value]++;\n    }\
    \ else {\n      $result[$value] = 1;\n    }\n  }\n  $max = max($result);\n  foreach\
    \ ($result as $key => $value) {\n    if ($value != $max) {\n      unset($result[$key]);\n\
    \    }\n  }\n  return $result;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"\
    a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b\
    \ a\"));\nprint_r(histogram(\"\"));", "\t$test = explode(\" \", $test);\n\t$result\
    \ = array();\n\tforeach ($test as $key => $value) {\n\t\tif (!array_key_exists($value,\
    \ $result)) {\n\t\t\t$result[$value] = 1;\n\t\t} else {\n\t\t\t$result[$value]++;\n\
    \t\t}\n\t}\n\treturn $result;\n}\n\n$test = \"a b c\";\n$test1 = \"a b b a\";\n\
    $test2 = \"a b c a b\";\n$test3 = \"b b b b a\";\n$test4 = \"\";\n\nprint_r(histogram($test));\n\
    print_r(histogram($test1));\nprint_r(histogram($test2));\nprint_r(histogram($test3));\n\
    print_r(histogram($test4));", "    $test = explode(\" \", $test);\n    $test =\
    \ array_count_values($test);\n    $max = max($test);\n    $result = array();\n\
    \    foreach ($test as $key => $value) {\n        if ($value == $max) {\n    \
    \        $result[$key] = $value;\n        }\n    }\n    return $result;\n}\nprint_r(histogram(\"\
    a b c\"));\nprint_r(histogram(\"a b b a\"));\nprint_r(histogram(\"a b c a b\"\
    ));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\"));", "    $test\
    \ = explode(\" \", $test);\n    $result = array();\n    foreach ($test as $value)\
    \ {\n        if (!isset($result[$value])) {\n            $result[$value] = 1;\n\
    \        } else {\n            $result[$value]++;\n        }\n    }\n    return\
    \ $result;\n}\n", "\t$test = explode(\" \", $test);\n\t$test = array_count_values($test);\n\
    \tarsort($test);\n\t$max = max($test);\n\t$result = array();\n\tforeach ($test\
    \ as $key => $value) {\n\t\tif ($value == $max) {\n\t\t\t$result[$key] = $value;\n\
    \t\t}\n\t}\n\treturn $result;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"\
    a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b\
    \ a\"));\nprint_r(histogram(\"\"));", "    $test = explode(\" \", $test);\n  \
    \  $result = array();\n    foreach ($test as $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    $max = max($result);\n    $result = array_filter($result,\
    \ function ($value) use ($max) {\n        return $value == $max;\n    });\n  \
    \  return $result;\n}\n\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"\
    a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b\
    \ a\"));\nprint_r(histogram(\"\"));", "    $test = explode(\" \", $test);\n  \
    \  $test = array_count_values($test);\n    $max = max($test);\n    $result = array();\n\
    \    foreach ($test as $key => $value) {\n        if ($value == $max) {\n    \
    \        $result[$key] = $value;\n        }\n    }\n    return $result;\n}\nprint_r(histogram(\"\
    a b c\"));\nprint_r(histogram(\"a b b a\"));\nprint_r(histogram(\"a b c a b\"\
    ));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\"));", "    $test\
    \ = explode(\" \", $test);\n    $count = array_count_values($test);\n    $max\
    \ = max($count);\n    $result = array();\n    foreach ($count as $key => $value)\
    \ {\n        if ($value == $max) {\n            $result[$key] = $value;\n    \
    \    }\n    }\n    return $result;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"\
    a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b\
    \ a\"));\nprint_r(histogram(\"\"));", "    $test = explode(\" \", $test);\n  \
    \  $test = array_count_values($test);\n    $max = max($test);\n    $result = array();\n\
    \    foreach ($test as $key => $value) {\n        if ($value == $max) {\n    \
    \        $result[$key] = $value;\n        }\n    }\n    return $result;\n}\nprint_r(histogram(\"\
    a b c\"));\nprint_r(histogram(\"a b b a\"));\nprint_r(histogram(\"a b c a b\"\
    ));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\"));", "\t$test\
    \ = explode(\" \", $test);\n\t$count = array_count_values($test);\n\t$max = max($count);\n\
    \t$result = array();\n\tforeach ($count as $key => $value) {\n\t\tif ($value ==\
    \ $max) {\n\t\t\t$result[$key] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\n\
    echo \"<pre>\";\nprint_r(histogram(\"a b c\"));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(histogram(\"a b b a\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"\
    a b c a b\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"b b b b\
    \ a\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"\"));\necho \"\
    </pre>\";", "    $test = str_split($test);\n    $test = array_count_values($test);\n\
    \    return $test;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"a b\
    \ b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b a\"\
    ));\nprint_r(histogram(\"\"));", "    $test = str_split($test);\n    $test = array_count_values($test);\n\
    \    $max = max($test);\n    $result = array();\n    foreach ($test as $key =>\
    \ $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n\nprint_r(histogram(\"a b c\"));\n\
    print_r(histogram(\"a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"\
    b b b b a\"));\nprint_r(histogram(\"\"));", "\t$test = explode(\" \", $test);\n\
    \t$result = array();\n\tforeach ($test as $value) {\n\t\tif (array_key_exists($value,\
    \ $result)) {\n\t\t\t$result[$value] += 1;\n\t\t} else {\n\t\t\t$result[$value]\
    \ = 1;\n\t\t}\n\t}\n\treturn $result;\n}\n", "\t$array = explode(\" \", $test);\n\
    \t$count = array_count_values($array);\n\t$max = max($count);\n\t$result = array();\n\
    \tforeach ($count as $key => $value) {\n\t\tif ($value == $max) {\n\t\t\t$result[$key]\
    \ = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\necho \"<pre>\";\nprint_r(histogram(\"\
    a b c\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"a b b a\"));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"a b c a b\"));\necho \"\
    </pre>\";\necho \"<pre>\";\nprint_r(histogram(\"b b b b a\"));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(histogram(\"\"));\necho \"</pre>\";", "    $test =\
    \ str_split($test);\n    $test = array_count_values($test);\n    $max = max($test);\n\
    \    $result = array();\n    foreach ($test as $key => $value) {\n        if ($value\
    \ == $max) {\n            $result[$key] = $value;\n        }\n    }\n    return\
    \ $result;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"a b b a\"));\n\
    print_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\
    \"));", "\t$test = explode(\" \", $test);\n\t$test = array_count_values($test);\n\
    \tarsort($test);\n\t$max = max($test);\n\tforeach ($test as $key => $value) {\n\
    \t\tif ($value != $max) {\n\t\t\tunset($test[$key]);\n\t\t}\n\t}\n\treturn $test;\n\
    }\n\necho \"<pre>\";\nprint_r(histogram(\"a b c\"));\necho \"</pre>\";\necho \"\
    <pre>\";\nprint_r(histogram(\"a b b a\"));\necho \"</pre>\";\necho \"<pre>\";\n\
    print_r(histogram(\"a b c a b\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"\
    b b b b a\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"\"));\n\
    echo \"</pre>\";", "    $test = explode(\" \", $test);\n    $test = array_count_values($test);\n\
    \    $max = max($test);\n    $result = array();\n    foreach ($test as $key =>\
    \ $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\necho \"<pre>\";\nprint_r(histogram(\"\
    a b c\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"a b b a\"));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"a b c a b\"));\necho \"\
    </pre>\";\necho \"<pre>\";\nprint_r(histogram(\"b b b b a\"));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(histogram(\"\"));\necho \"</pre>\";", "\t$test = explode(\"\
    \ \", $test);\n\t$count = array_count_values($test);\n\t$max = max($count);\n\t\
    $result = array();\n\tforeach ($count as $key => $value) {\n\t\tif ($value ==\
    \ $max) {\n\t\t\t$result[$key] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n",
  "\t$test = explode(\" \", $test);\n\t$count = array_count_values($test);\n\t$max\
    \ = max($count);\n\t$result = array();\n\tforeach ($count as $key => $value) {\n\
    \t\tif ($value == $max) {\n\t\t\t$result[$key] = $value;\n\t\t}\n\t}\n\treturn\
    \ $result;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"a b b a\"));\n\
    print_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\
    \"));", "\t$test = explode(\" \", $test);\n\t$count = array_count_values($test);\n\
    \t$max = max($count);\n\t$result = array();\n\tforeach ($count as $key => $value)\
    \ {\n\t\tif ($value == $max) {\n\t\t\t$result[$key] = $value;\n\t\t}\n\t}\n\t\
    return $result;\n}\nprint_r(histogram(\"a b c\"));\necho \"<br>\";\nprint_r(histogram(\"\
    a b b a\"));\necho \"<br>\";\nprint_r(histogram(\"a b c a b\"));\necho \"<br>\"\
    ;\nprint_r(histogram(\"b b b b a\"));\necho \"<br>\";\nprint_r(histogram(\"\"\
    ));", "\t$test = explode(\" \", $test);\n\t$count = array_count_values($test);\n\
    \tarsort($count);\n\t$max = max($count);\n\t$result = array();\n\tforeach ($count\
    \ as $key => $value) {\n\t\tif ($value == $max) {\n\t\t\t$result[$key] = $value;\n\
    \t\t}\n\t}\n\treturn $result;\n}\nprint_r(histogram(\"a b c\"));\necho \"\\n\"\
    ;\nprint_r(histogram(\"a b b a\"));\necho \"\\n\";\nprint_r(histogram(\"a b c\
    \ a b\"));\necho \"\\n\";\nprint_r(histogram(\"b b b b a\"));\necho \"\\n\";\n\
    print_r(histogram(\"\"));\necho \"\\n\";", "\t$test = explode(\" \", $test);\n\
    \t$count = array_count_values($test);\n\t$max = max($count);\n\t$result = array();\n\
    \tforeach ($count as $key => $value) {\n\t\tif ($value == $max) {\n\t\t\t$result[$key]\
    \ = $value;\n\t\t}\n\t}\n\treturn $result;\n}\necho \"<pre>\";\nprint_r(histogram(\"\
    a b c\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"a b b a\"));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"a b c a b\"));\necho \"\
    </pre>\";\necho \"<pre>\";\nprint_r(histogram(\"b b b b a\"));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(histogram(\"\"));\necho \"</pre>\";", "    $test =\
    \ explode(\" \", $test);\n    $test = array_count_values($test);\n    $max = max($test);\n\
    \    $result = array();\n    foreach ($test as $key => $value) {\n        if ($value\
    \ == $max) {\n            $result[$key] = $value;\n        }\n    }\n    return\
    \ $result;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"a b b a\"));\n\
    print_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\
    \"));", "\t$test = explode(\" \", $test);\n\t$result = array();\n\tforeach ($test\
    \ as $value) {\n\t\tif (array_key_exists($value, $result)) {\n\t\t\t$result[$value]++;\n\
    \t\t} else {\n\t\t\t$result[$value] = 1;\n\t\t}\n\t}\n\t$max = max($result);\n\
    \t$result2 = array();\n\tforeach ($result as $key => $value) {\n\t\tif ($value\
    \ == $max) {\n\t\t\t$result2[$key] = $value;\n\t\t}\n\t}\n\treturn $result2;\n\
    }\n\n/* Given a string representing a space separated lowercase letters, return\
    \ an array\nof the letter with the most repetition and containing the corresponding\
    \ count.\nIf several letters have the same occurrence, return all of them.\nExample:\n\
    >>> histogram(\"a b c\")\narray(\"a\" => 1, \"b\" => 1, \"c\" => 1)\n>>> histogram(\"\
    a b b a\")\narray(\"a\" => 2, \"b\" => 2)\n>>> histogram(\"a b c a b\")\narray(\"\
    a\" => 2, \"b\" => 2)\n>>> histogram(\"b b b b a\")\narray(\"b\" => 4)\n>>> histogram(\"\
    \")\narray()*/", "    $test = explode(\" \", $test);\n    $test = array_count_values($test);\n\
    \    $max = max($test);\n    $result = array();\n    foreach ($test as $key =>\
    \ $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"\
    a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b\
    \ a\"));\nprint_r(histogram(\"\"));", "    $test = explode(\" \", $test);\n  \
    \  $result = array();\n    foreach ($test as $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value] = $result[$value] + 1;\n        } else\
    \ {\n            $result[$value] = 1;\n        }\n    }\n    return $result;\n\
    }\n\n$test = \"a b c\";\nprint_r(histogram($test));\n\n$test = \"a b b a\";\n\
    print_r(histogram($test));\n\n$test = \"a b c a b\";\nprint_r(histogram($test));\n\
    \n$test = \"b b b b a\";\nprint_r(histogram($test));\n\n$test = \"\";\nprint_r(histogram($test));",
  "    $test = explode(\" \", $test);\n    $test = array_count_values($test);\n  \
    \  $max = max($test);\n    $result = array();\n    foreach ($test as $key => $value)\
    \ {\n        if ($value == $max) {\n            $result[$key] = $value;\n    \
    \    }\n    }\n    return $result;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"\
    a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b\
    \ a\"));\nprint_r(histogram(\"\"));", "    $test = explode(\" \", $test);\n  \
    \  $result = array();\n    foreach ($test as $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    return $result;\n}\n\n$test = \"a b c\";\nprint_r(histogram($test));\n\
    echo \"<br>\";\n$test = \"a b b a\";\nprint_r(histogram($test));\necho \"<br>\"\
    ;\n$test = \"a b c a b\";\nprint_r(histogram($test));\necho \"<br>\";\n$test =\
    \ \"b b b b a\";\nprint_r(histogram($test));\necho \"<br>\";\n$test = \"\";\n\
    print_r(histogram($test));\necho \"<br>\";", "    $array = explode(\" \", $test);\n\
    \    $count = array_count_values($array);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\necho \"<pre>\";\nprint_r(histogram(\"a b c\"));\necho \"</pre>\";\necho \"\
    <pre>\";\nprint_r(histogram(\"a b b a\"));\necho \"</pre>\";\necho \"<pre>\";\n\
    print_r(histogram(\"a b c a b\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"\
    b b b b a\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"\"));\n\
    echo \"</pre>\";", "\t$test = explode(\" \", $test);\n\t$result = array();\n\t\
    foreach ($test as $value) {\n\t\tif (isset($result[$value])) {\n\t\t\t$result[$value]++;\n\
    \t\t} else {\n\t\t\t$result[$value] = 1;\n\t\t}\n\t}\n\t$max = max($result);\n\
    \t$result2 = array();\n\tforeach ($result as $key => $value) {\n\t\tif ($value\
    \ == $max) {\n\t\t\t$result2[$key] = $value;\n\t\t}\n\t}\n\treturn $result2;\n\
    }\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"a b b a\"));\nprint_r(histogram(\"\
    a b c a b\"));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\"));",
  "\t$test = explode(\" \", $test);\n\t$count = array_count_values($test);\n\t$max\
    \ = max($count);\n\tforeach ($count as $key => $value) {\n\t\tif ($value != $max)\
    \ {\n\t\t\tunset($count[$key]);\n\t\t}\n\t}\n\treturn $count;\n}\nprint_r(histogram(\"\
    a b c\"));\nprint_r(histogram(\"a b b a\"));\nprint_r(histogram(\"a b c a b\"\
    ));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\"));", "    $test\
    \ = explode(\" \", $test);\n    $count = array_count_values($test);\n    $max\
    \ = max($count);\n    $result = array();\n    foreach ($count as $key => $value)\
    \ {\n        if ($value == $max) {\n            $result[$key] = $value;\n    \
    \    }\n    }\n    return $result;\n}\n\n/* Given a string representing a space\
    \ separated lowercase letters, return an array\nof the letter with the most repetition\
    \ and containing the corresponding count.\nIf several letters have the same occurrence,\
    \ return all of them.\nExample:\n>>> histogram(\"a b c\")\narray(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1)\n>>> histogram(\"a b b a\")\narray(\"a\" => 2, \"b\" =>\
    \ 2)\n>>> histogram(\"a b c a b\")\narray(\"a\" => 2, \"b\" => 2)\n>>> histogram(\"\
    b b b b a\")\narray(\"b\" => 4)\n>>> histogram(\"\")\narray()*/", "    $arr =\
    \ explode(\" \", $test);\n    $counts = array_count_values($arr);\n    $max =\
    \ max($counts);\n    $result = array();\n    foreach ($counts as $key => $value)\
    \ {\n        if ($value == $max) {\n            $result[$key] = $value;\n    \
    \    }\n    }\n    return $result;\n}\n\necho \"<pre>\";\nprint_r(histogram(\"\
    a b c\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"a b b a\"));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"a b c a b\"));\necho \"\
    </pre>\";\necho \"<pre>\";\nprint_r(histogram(\"b b b b a\"));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(histogram(\"\"));\necho \"</pre>\";", "    $test =\
    \ explode(\" \", $test);\n    $result = array();\n    foreach ($test as $item)\
    \ {\n        if (array_key_exists($item, $result)) {\n            $result[$item]++;\n\
    \        } else {\n            $result[$item] = 1;\n        }\n    }\n    $max\
    \ = max($result);\n    $result = array_filter($result, function ($value) use ($max)\
    \ {\n        return $value == $max;\n    });\n    return $result;\n}\n\n/* Given\
    \ an array of integers, return the sum of the two largest integers.\nExample:\n\
    >>> sum_of_largest([1, 2, 3])\n5\n>>> sum_of_largest([1, 2, 3, 4])\n7\n>>> sum_of_largest([1,\
    \ 2, 3, 4, 5])\n9\n>>> sum_of_largest([])\n0\n>>> sum_of_largest([-1, -2, -3])\n\
    -3\n>>> sum_of_largest([-1, -2, -3, -4])\n-3\n>>> sum_of_largest([-1, -2, -3,\
    \ -4, -5])\n-3\n>>> sum_of_largest([-1, -2, -3, -4, -5, -6])\n-3*/", "    $test\
    \ = explode(\" \", $test);\n    $count = array_count_values($test);\n    $max\
    \ = max($count);\n    $result = array();\n    foreach ($count as $key => $value)\
    \ {\n        if ($value == $max) {\n            $result[$key] = $value;\n    \
    \    }\n    }\n    return $result;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"\
    a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b\
    \ a\"));\nprint_r(histogram(\"\"));", "    $test = explode(\" \", $test);\n  \
    \  $count = array_count_values($test);\n    $max = max($count);\n    $result =\
    \ array();\n    foreach ($count as $key => $value) {\n        if ($value == $max)\
    \ {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\necho \"<pre>\";\nprint_r(histogram(\"a b c\"));\necho \"</pre>\";\necho \"\
    <pre>\";\nprint_r(histogram(\"a b b a\"));\necho \"</pre>\";\necho \"<pre>\";\n\
    print_r(histogram(\"a b c a b\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"\
    b b b b a\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"\"));\n\
    echo \"</pre>\";", "    $test = explode(\" \", $test);\n    $test = array_count_values($test);\n\
    \    arsort($test);\n    $test = array_slice($test, 0, 1);\n    return $test;\n\
    }\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"a b b a\"));\nprint_r(histogram(\"\
    a b c a b\"));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\"));",
  "\t$test = explode(\" \", $test);\n\t$count = array_count_values($test);\n\tarsort($count);\n\
    \t$max = max($count);\n\t$result = array();\n\tforeach ($count as $key => $value)\
    \ {\n\t\tif ($value == $max) {\n\t\t\t$result[$key] = $value;\n\t\t}\n\t}\n\t\
    return $result;\n}\necho \"<pre>\";\nprint_r(histogram(\"a b c\"));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(histogram(\"a b b a\"));\necho \"</pre>\";\necho \"\
    <pre>\";\nprint_r(histogram(\"a b c a b\"));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(histogram(\"b b b b a\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"\
    \"));\necho \"</pre>\";", "\t$test = explode(\" \", $test);\n\t$count = array_count_values($test);\n\
    \t$max = max($count);\n\t$result = array();\n\tforeach ($count as $key => $value)\
    \ {\n\t\tif ($value == $max) {\n\t\t\t$result[$key] = $value;\n\t\t}\n\t}\n\t\
    return $result;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"a b b\
    \ a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b a\"\
    ));\nprint_r(histogram(\"\"));", "    $test = explode(\" \", $test);\n    $count\
    \ = array_count_values($test);\n    $max = max($count);\n    $result = array();\n\
    \    foreach ($count as $key => $value) {\n        if ($value == $max) {\n   \
    \         $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n\
    print_r(histogram(\"a b c\"));\nprint_r(histogram(\"a b b a\"));\nprint_r(histogram(\"\
    a b c a b\"));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\"));",
  "\t$test = explode(\" \", $test);\n\t$count = array_count_values($test);\n\t$max\
    \ = max($count);\n\t$result = array();\n\tforeach ($count as $key => $value) {\n\
    \t\tif ($value == $max) {\n\t\t\t$result[$key] = $value;\n\t\t}\n\t}\n\treturn\
    \ $result;\n}\necho \"<pre>\";\nprint_r(histogram(\"a b c\"));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(histogram(\"a b b a\"));\necho \"</pre>\";\necho \"\
    <pre>\";\nprint_r(histogram(\"a b c a b\"));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(histogram(\"b b b b a\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"\
    \"));\necho \"</pre>\";", "    $test = explode(\" \", $test);\n    $count = array_count_values($test);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"\
    a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b\
    \ a\"));\nprint_r(histogram(\"\"));", "    $test = explode(\" \", $test);\n  \
    \  $count = array_count_values($test);\n    $max = max($count);\n    $result =\
    \ array();\n    foreach ($count as $key => $value) {\n        if ($value == $max)\
    \ {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"a b b a\"));\nprint_r(histogram(\"\
    a b c a b\"));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\"));",
  "  $arr = explode(\" \", $test);\n  $count = array_count_values($arr);\n  $max =\
    \ max($count);\n  $result = array();\n  foreach ($count as $key => $value) {\n\
    \    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}\necho \"<pre>\";\nprint_r(histogram(\"a b c\"));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(histogram(\"a b b a\"));\necho \"</pre>\";\necho \"\
    <pre>\";\nprint_r(histogram(\"a b c a b\"));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(histogram(\"b b b b a\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"\
    \"));\necho \"</pre>\";", "    $test = explode(\" \", $test);\n    $count = array_count_values($test);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"\
    a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b\
    \ a\"));\nprint_r(histogram(\"\"));", "\t$test = explode(\" \", $test);\n\t$count\
    \ = array_count_values($test);\n\t$max = max($count);\n\t$result = array();\n\t\
    foreach ($count as $key => $value) {\n\t\tif ($value == $max) {\n\t\t\t$result[$key]\
    \ = $value;\n\t\t}\n\t}\n\treturn $result;\n}\nprint_r(histogram(\"a b c\"));\n\
    print_r(histogram(\"a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"\
    b b b b a\"));\nprint_r(histogram(\"\"));", "    $arr = explode(\" \", $test);\n\
    \    $count = array_count_values($arr);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"a b b a\"));\nprint_r(histogram(\"\
    a b c a b\"));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\"));",
  "  $test = explode(\" \", $test);\n  $count = array_count_values($test);\n  $max\
    \ = max($count);\n  $result = array();\n  foreach ($count as $key => $value) {\n\
    \    if ($value == $max) {\n      $result[$key] = $value;\n    }\n  }\n  return\
    \ $result;\n}\n\necho \"<pre>\";\nprint_r(histogram(\"a b c\"));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(histogram(\"a b b a\"));\necho \"</pre>\";\necho \"\
    <pre>\";\nprint_r(histogram(\"a b c a b\"));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(histogram(\"b b b b a\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"\
    \"));\necho \"</pre>\";", "\t$test = explode(\" \", $test);\n\t$count = array_count_values($test);\n\
    \t$max = max($count);\n\t$result = array();\n\tforeach ($count as $key => $value)\
    \ {\n\t\tif ($value == $max) {\n\t\t\t$result[$key] = $value;\n\t\t}\n\t}\n\t\
    return $result;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"a b b\
    \ a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b a\"\
    ));\nprint_r(histogram(\"\"));", "\t$test = explode(\" \", $test);\n\t$count =\
    \ array_count_values($test);\n\t$max = max($count);\n\t$result = array();\n\t\
    foreach ($count as $key => $value) {\n\t\tif ($value == $max) {\n\t\t\t$result[$key]\
    \ = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\necho \"<pre>\";\nprint_r(histogram(\"\
    a b c\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"a b b a\"));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"a b c a b\"));\necho \"\
    </pre>\";\necho \"<pre>\";\nprint_r(histogram(\"b b b b a\"));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(histogram(\"\"));\necho \"</pre>\";", "\t$arr = explode(\"\
    \ \", $test);\n\t$count = array_count_values($arr);\n\t$max = max($count);\n\t\
    $result = array();\n\tforeach ($count as $key => $value) {\n\t\tif ($value ==\
    \ $max) {\n\t\t\t$result[$key] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\necho\
    \ \"<pre>\";\nprint_r(histogram(\"a b c\"));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(histogram(\"a b b a\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"\
    a b c a b\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"b b b b\
    \ a\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"\"));\necho \"\
    </pre>\";", "    $test = explode(\" \", $test);\n    $count = array_count_values($test);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"\
    a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b\
    \ a\"));\nprint_r(histogram(\"\"));", "\t$test = str_split($test);\n\t$test =\
    \ array_count_values($test);\n\t$max = max($test);\n\t$result = array();\n\tforeach\
    \ ($test as $key => $value) {\n\t\tif ($value == $max) {\n\t\t\t$result[$key]\
    \ = $value;\n\t\t}\n\t}\n\treturn $result;\n}\n\necho '<pre>';\nprint_r(histogram(\"\
    a b c\"));\necho '</pre>';\necho '<pre>';\nprint_r(histogram(\"a b b a\"));\n\
    echo '</pre>';\necho '<pre>';\nprint_r(histogram(\"a b c a b\"));\necho '</pre>';\n\
    echo '<pre>';\nprint_r(histogram(\"b b b b a\"));\necho '</pre>';\necho '<pre>';\n\
    print_r(histogram(\"\"));\necho '</pre>';", "    $test = explode(\" \", $test);\n\
    \    $result = array();\n    foreach ($test as $value) {\n        if (!isset($result[$value]))\
    \ {\n            $result[$value] = 1;\n        } else {\n            $result[$value]++;\n\
    \        }\n    }\n    return $result;\n}\n\n$test = \"a b c\";\nprint_r(histogram($test));\n\
    \n$test = \"a b b a\";\nprint_r(histogram($test));\n\n$test = \"a b c a b\";\n\
    print_r(histogram($test));\n\n$test = \"b b b b a\";\nprint_r(histogram($test));\n\
    \n$test = \"\";\nprint_r(histogram($test));", "    $test = explode(\" \", $test);\n\
    \    $test = array_count_values($test);\n    $max = max($test);\n    foreach ($test\
    \ as $key => $value) {\n        if ($value != $max) {\n            unset($test[$key]);\n\
    \        }\n    }\n    return $test;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"\
    a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b\
    \ a\"));\nprint_r(histogram(\"\"));", "    $array = explode(\" \", $test);\n \
    \   $count = array_count_values($array);\n    $max = max($count);\n    $result\
    \ = array();\n    foreach ($count as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\n\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"a b b a\"));\nprint_r(histogram(\"\
    a b c a b\"));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\"));",
  "    $test = explode(\" \", $test);\n    $count = array_count_values($test);\n \
    \   $max = max($count);\n    $result = array();\n    foreach ($count as $key =>\
    \ $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"\
    a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b\
    \ a\"));\nprint_r(histogram(\"\"));", "    $test = str_split($test);\n    $test\
    \ = array_count_values($test);\n    $max = max($test);\n    foreach ($test as\
    \ $key => $value) {\n        if ($value != $max) {\n            unset($test[$key]);\n\
    \        }\n    }\n    return $test;\n}\necho \"<pre>\";\nprint_r(histogram(\"\
    a b c\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"a b b a\"));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"a b c a b\"));\necho \"\
    </pre>\";\necho \"<pre>\";\nprint_r(histogram(\"b b b b a\"));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(histogram(\"\"));\necho \"</pre>\";", "\t$test = explode(\"\
    \ \", $test);\n\t$test = array_count_values($test);\n\t$max = max($test);\n\t\
    foreach ($test as $key => $value) {\n\t\tif ($value != $max) {\n\t\t\tunset($test[$key]);\n\
    \t\t}\n\t}\n\treturn $test;\n}\nprint_r(histogram(\"a b c\"));\necho \"<br>\"\
    ;\nprint_r(histogram(\"a b b a\"));\necho \"<br>\";\nprint_r(histogram(\"a b c\
    \ a b\"));\necho \"<br>\";\nprint_r(histogram(\"b b b b a\"));\necho \"<br>\"\
    ;\nprint_r(histogram(\"\"));", "    $test = explode(\" \", $test);\n    $count\
    \ = array_count_values($test);\n    $max = max($count);\n    $result = array();\n\
    \    foreach ($count as $key => $value) {\n        if ($value == $max) {\n   \
    \         $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n\
    echo \"<pre>\";\nprint_r(histogram(\"a b c\"));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(histogram(\"a b b a\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"\
    a b c a b\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"b b b b\
    \ a\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"\"));\necho \"\
    </pre>\";", "\t$test = explode(\" \", $test);\n\t$count = array_count_values($test);\n\
    \t$max = max($count);\n\t$result = array();\n\tforeach ($count as $key => $value)\
    \ {\n\t\tif ($value == $max) {\n\t\t\t$result[$key] = $value;\n\t\t}\n\t}\n\t\
    return $result;\n}\n\necho \"<pre>\";\nprint_r(histogram(\"a b c\"));\necho \"\
    </pre>\";\n\necho \"<pre>\";\nprint_r(histogram(\"a b b a\"));\necho \"</pre>\"\
    ;\n\necho \"<pre>\";\nprint_r(histogram(\"a b c a b\"));\necho \"</pre>\";\n\n\
    echo \"<pre>\";\nprint_r(histogram(\"b b b b a\"));\necho \"</pre>\";\n\necho\
    \ \"<pre>\";\nprint_r(histogram(\"\"));\necho \"</pre>\";", "    $test = explode(\"\
    \ \", $test);\n    $count = array_count_values($test);\n    $max = max($count);\n\
    \    $result = array();\n    foreach ($count as $key => $value) {\n        if\
    \ ($value == $max) {\n            $result[$key] = $value;\n        }\n    }\n\
    \    return $result;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"\
    a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b\
    \ a\"));\nprint_r(histogram(\"\"));", "\t$test = explode(\" \", $test);\n\t$result\
    \ = array();\n\tforeach ($test as $key => $value) {\n\t\tif (array_key_exists($value,\
    \ $result)) {\n\t\t\t$result[$value]++;\n\t\t} else {\n\t\t\t$result[$value] =\
    \ 1;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$test = \"a b c\";\n$test2 = \"a b b\
    \ a\";\n$test3 = \"a b c a b\";\n$test4 = \"b b b b a\";\n$test5 = \"\";\n\necho\
    \ \"<pre>\";\nprint_r(histogram($test));\necho \"</pre>\";\necho \"<pre>\";\n\
    print_r(histogram($test2));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram($test3));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(histogram($test4));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(histogram($test5));\necho \"</pre>\";", "    $test\
    \ = explode(\" \", $test);\n    $count = array_count_values($test);\n    $max\
    \ = max($count);\n    $result = array();\n    foreach ($count as $key => $value)\
    \ {\n        if ($value == $max) {\n            $result[$key] = $value;\n    \
    \    }\n    }\n    return $result;\n}\n\n$test = \"a b c\";\nprint_r(histogram($test));\n\
    echo \"<br>\";\n$test = \"a b b a\";\nprint_r(histogram($test));\necho \"<br>\"\
    ;\n$test = \"a b c a b\";\nprint_r(histogram($test));\necho \"<br>\";\n$test =\
    \ \"b b b b a\";\nprint_r(histogram($test));\necho \"<br>\";\n$test = \"\";\n\
    print_r(histogram($test));\necho \"<br>\";", "\t$test = explode(\" \", $test);\n\
    \t$result = array();\n\tforeach ($test as $value) {\n\t\tif (isset($result[$value]))\
    \ {\n\t\t\t$result[$value]++;\n\t\t} else {\n\t\t\t$result[$value] = 1;\n\t\t\
    }\n\t}\n\t$max = max($result);\n\t$result = array_filter($result, function($v)\
    \ use ($max) {\n\t\treturn $v == $max;\n\t});\n\treturn $result;\n}\n\necho \"\
    <pre>\";\nprint_r(histogram(\"a b c\"));\necho \"</pre>\";\necho \"<pre>\";\n\
    print_r(histogram(\"a b b a\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"\
    a b c a b\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"b b b b\
    \ a\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"\"));\necho \"\
    </pre>\";", "\t$test = explode(\" \", $test);\n\t$result = array();\n\tforeach\
    \ ($test as $value) {\n\t\tif (!isset($result[$value])) {\n\t\t\t$result[$value]\
    \ = 1;\n\t\t} else {\n\t\t\t$result[$value]++;\n\t\t}\n\t}\n\treturn $result;\n\
    }\n\n$test = \"a b c\";\nprint_r(histogram($test));\necho \"<br>\";\n$test = \"\
    a b b a\";\nprint_r(histogram($test));\necho \"<br>\";\n$test = \"a b c a b\"\
    ;\nprint_r(histogram($test));\necho \"<br>\";\n$test = \"b b b b a\";\nprint_r(histogram($test));\n\
    echo \"<br>\";\n$test = \"\";\nprint_r(histogram($test));\necho \"<br>\";", " \
    \   $test = explode(\" \", $test);\n    $count = array_count_values($test);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n\nprint_r(histogram(\"a b c\"));\n\
    print_r(histogram(\"a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"\
    b b b b a\"));\nprint_r(histogram(\"\"));", "    $test = str_split($test);\n \
    \   $test = array_count_values($test);\n    arsort($test);\n    $max = max($test);\n\
    \    $result = array();\n    foreach ($test as $key => $value) {\n        if ($value\
    \ == $max) {\n            $result[$key] = $value;\n        }\n    }\n    return\
    \ $result;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"a b b a\"));\n\
    print_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\
    \"));", "\t$test = explode(\" \", $test);\n\t$count = array_count_values($test);\n\
    \t$max = max($count);\n\t$result = array();\n\tforeach ($count as $key => $value)\
    \ {\n\t\tif ($value == $max) {\n\t\t\t$result[$key] = $value;\n\t\t}\n\t}\n\t\
    return $result;\n}\n\necho \"<pre>\";\nprint_r(histogram(\"a b c\"));\necho \"\
    </pre>\";\necho \"<pre>\";\nprint_r(histogram(\"a b b a\"));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(histogram(\"a b c a b\"));\necho \"</pre>\";\necho\
    \ \"<pre>\";\nprint_r(histogram(\"b b b b a\"));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(histogram(\"\"));\necho \"</pre>\";", "    $test = explode(\" \", $test);\n\
    \    $result = array();\n    foreach ($test as $key => $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value] += 1;\n        } else {\n         \
    \   $result[$value] = 1;\n        }\n    }\n    return $result;\n}\n\n$test =\
    \ \"a b c\";\n$test2 = \"a b b a\";\n$test3 = \"a b c a b\";\n$test4 = \"b b b\
    \ b a\";\n$test5 = \"\";\n\nprint_r(histogram($test));\nprint_r(histogram($test2));\n\
    print_r(histogram($test3));\nprint_r(histogram($test4));\nprint_r(histogram($test5));",
  "\t$test = explode(\" \", $test);\n\t$count = array_count_values($test);\n\t$max\
    \ = max($count);\n\t$max_key = array_search($max, $count);\n\t$result = array($max_key\
    \ => $max);\n\treturn $result;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"\
    a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b\
    \ a\"));\nprint_r(histogram(\"\"));", "\t$test = explode(\" \", $test);\n\t$test\
    \ = array_count_values($test);\n\t$max = max($test);\n\tforeach ($test as $key\
    \ => $value) {\n\t\tif ($value != $max) {\n\t\t\tunset($test[$key]);\n\t\t}\n\t\
    }\n\treturn $test;\n}\nprint_r(histogram(\"a b c\"));\necho \"<br>\";\nprint_r(histogram(\"\
    a b b a\"));\necho \"<br>\";\nprint_r(histogram(\"a b c a b\"));\necho \"<br>\"\
    ;\nprint_r(histogram(\"b b b b a\"));\necho \"<br>\";\nprint_r(histogram(\"\"\
    ));", "    $array = explode(\" \", $test);\n    $result = array();\n    foreach\
    \ ($array as $value) {\n        if (isset($result[$value])) {\n            $result[$value]++;\n\
    \        } else {\n            $result[$value] = 1;\n        }\n    }\n    $max\
    \ = max($result);\n    $result2 = array();\n    foreach ($result as $key => $value)\
    \ {\n        if ($value == $max) {\n            $result2[$key] = $value;\n   \
    \     }\n    }\n    return $result2;\n}\nprint_r(histogram(\"a b c\"));\necho\
    \ \"<br>\";\nprint_r(histogram(\"a b b a\"));\necho \"<br>\";\nprint_r(histogram(\"\
    a b c a b\"));\necho \"<br>\";\nprint_r(histogram(\"b b b b a\"));\necho \"<br>\"\
    ;\nprint_r(histogram(\"\"));", "\t$test = explode(\" \", $test);\n\t$count = array_count_values($test);\n\
    \t$max = max($count);\n\tforeach ($count as $key => $value) {\n\t\tif ($value\
    \ != $max) {\n\t\t\tunset($count[$key]);\n\t\t}\n\t}\n\treturn $count;\n}\nprint_r(histogram(\"\
    a b c\"));\nprint_r(histogram(\"a b b a\"));\nprint_r(histogram(\"a b c a b\"\
    ));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\"));", "    $test\
    \ = explode(\" \", $test);\n    $test = array_count_values($test);\n    arsort($test);\n\
    \    $max = max($test);\n    $result = array();\n    foreach ($test as $key =>\
    \ $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n\n$test = \"a b c\";\nprint_r(histogram($test));\n\
    echo \"<br>\";\n$test = \"a b b a\";\nprint_r(histogram($test));\necho \"<br>\"\
    ;\n$test = \"a b c a b\";\nprint_r(histogram($test));\necho \"<br>\";\n$test =\
    \ \"b b b b a\";\nprint_r(histogram($test));\necho \"<br>\";\n$test = \"\";\n\
    print_r(histogram($test));\necho \"<br>\";", "\t$test = explode(\" \", $test);\n\
    \t$result = array();\n\tforeach ($test as $value) {\n\t\tif (array_key_exists($value,\
    \ $result)) {\n\t\t\t$result[$value]++;\n\t\t} else {\n\t\t\t$result[$value] =\
    \ 1;\n\t\t}\n\t}\n\t$max = max($result);\n\t$result2 = array();\n\tforeach ($result\
    \ as $key => $value) {\n\t\tif ($value == $max) {\n\t\t\t$result2[$key] = $value;\n\
    \t\t}\n\t}\n\treturn $result2;\n}\n\n/* Given a string representing a space separated\
    \ lowercase letters, return an array\nof the letter with the most repetition and\
    \ containing the corresponding count.\nIf several letters have the same occurrence,\
    \ return all of them.\nExample:\n>>> histogram(\"a b c\")\narray(\"a\" => 1, \"\
    b\" => 1, \"c\" => 1)\n>>> histogram(\"a b b a\")\narray(\"a\" => 2, \"b\" =>\
    \ 2)\n>>> histogram(\"a b c a b\")\narray(\"a\" => 2, \"b\" => 2)\n>>> histogram(\"\
    b b b b a\")\narray(\"b\" => 4)\n>>> histogram(\"\")\narray()*/", "    $test =\
    \ explode(\" \", $test);\n    $result = array();\n    foreach ($test as $value)\
    \ {\n        if (array_key_exists($value, $result)) {\n            $result[$value]++;\n\
    \        } else {\n            $result[$value] = 1;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* Given an array of integers, return the sum of the integers\
    \ that are divisible by 3.\nExample:\n>>> sum_divisible_by_3([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9])\n18\n>>> sum_divisible_by_3([0, 3, 5, 6, 9])\n18\n>>> sum_divisible_by_3([-1,\
    \ -2, -3, -4, -5, -6])\n0\n>>> sum_divisible_by_3([])\n0*/", "    $test = explode(\"\
    \ \", $test);\n    $test = array_count_values($test);\n    $max = max($test);\n\
    \    $result = array();\n    foreach ($test as $key => $value) {\n        if ($value\
    \ == $max) {\n            $result[$key] = $value;\n        }\n    }\n    return\
    \ $result;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"a b b a\"));\n\
    print_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\
    \"));", "    $test = explode(\" \", $test);\n    $result = array();\n    foreach\
    \ ($test as $value) {\n        if (!isset($result[$value])) {\n            $result[$value]\
    \ = 1;\n        } else {\n            $result[$value]++;\n        }\n    }\n \
    \   return $result;\n}\n\n$test = \"a b c a b\";\nprint_r(histogram($test));",
  "    $test = explode(\" \", $test);\n    $count = array_count_values($test);\n \
    \   $max = max($count);\n    $result = array();\n    foreach ($count as $key =>\
    \ $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n\nprint_r(histogram(\"a b c\"));\n\
    print_r(histogram(\"a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"\
    b b b b a\"));\nprint_r(histogram(\"\"));", "    $test = explode(\" \", $test);\n\
    \    $test = array_count_values($test);\n    $max = max($test);\n    $result =\
    \ array();\n    foreach ($test as $key => $value) {\n        if ($value == $max)\
    \ {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"a b b a\"));\nprint_r(histogram(\"\
    a b c a b\"));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\"));",
  "    $test = explode(\" \", $test);\n    $count = array_count_values($test);\n \
    \   $max = max($count);\n    $result = array();\n    foreach ($count as $key =>\
    \ $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\necho \"<pre>\";\nprint_r(histogram(\"\
    a b c\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"a b b a\"));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"a b c a b\"));\necho \"\
    </pre>\";\necho \"<pre>\";\nprint_r(histogram(\"b b b b a\"));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(histogram(\"\"));\necho \"</pre>\";", "\t$test = explode(\"\
    \ \", $test);\n\t$test = array_count_values($test);\n\tarsort($test);\n\t$max\
    \ = current($test);\n\tforeach ($test as $key => $value) {\n\t\tif ($value !=\
    \ $max) {\n\t\t\tunset($test[$key]);\n\t\t}\n\t}\n\treturn $test;\n}\nprint_r(histogram(\"\
    a b c\"));\nprint_r(histogram(\"a b b a\"));\nprint_r(histogram(\"a b c a b\"\
    ));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\"));", "    $test\
    \ = str_split($test);\n    $test = array_count_values($test);\n    arsort($test);\n\
    \    $max = max($test);\n    $result = array();\n    foreach ($test as $key =>\
    \ $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"\
    a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b\
    \ a\"));\nprint_r(histogram(\"\"));", "    $test = explode(\" \", $test);\n  \
    \  $count = array_count_values($test);\n    $max = max($count);\n    $result =\
    \ array();\n    foreach ($count as $key => $value) {\n        if ($value == $max)\
    \ {\n            $result[$key] = $value;\n        }\n    }\n    return $result;\n\
    }\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"a b b a\"));\nprint_r(histogram(\"\
    a b c a b\"));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\"));",
  "\t$test = explode(\" \", $test);\n\t$result = array();\n\tforeach ($test as $value)\
    \ {\n\t\tif (array_key_exists($value, $result)) {\n\t\t\t$result[$value]++;\n\t\
    \t} else {\n\t\t\t$result[$value] = 1;\n\t\t}\n\t}\n\tarsort($result);\n\t$max\
    \ = max($result);\n\tforeach ($result as $key => $value) {\n\t\tif ($value !=\
    \ $max) {\n\t\t\tunset($result[$key]);\n\t\t}\n\t}\n\treturn $result;\n}\nprint_r(histogram(\"\
    a b c\"));\nprint_r(histogram(\"a b b a\"));\nprint_r(histogram(\"a b c a b\"\
    ));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\"));", "\t$test\
    \ = explode(\" \", $test);\n\t$count = array_count_values($test);\n\t$max = max($count);\n\
    \tforeach ($count as $key => $value) {\n\t\tif ($value == $max) {\n\t\t\t$result[$key]\
    \ = $value;\n\t\t}\n\t}\n\treturn $result;\n}\nprint_r(histogram(\"a b c\"));\n\
    print_r(histogram(\"a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"\
    b b b b a\"));\nprint_r(histogram(\"\"));", "    $test = explode(\" \", $test);\n\
    \    $result = array();\n    foreach ($test as $value) {\n        if (array_key_exists($value,\
    \ $result)) {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    return $result;\n}\nprint_r(histogram(\"a b c\"\
    ));\nprint_r(histogram(\"a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"\
    b b b b a\"));\nprint_r(histogram(\"\"));", "\t$test = explode(\" \", $test);\n\
    \t$test = array_count_values($test);\n\t$max = max($test);\n\t$result = array();\n\
    \tforeach ($test as $key => $value) {\n\t\tif ($value == $max) {\n\t\t\t$result[$key]\
    \ = $value;\n\t\t}\n\t}\n\treturn $result;\n}\nprint_r(histogram(\"a b c\"));\n\
    print_r(histogram(\"a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"\
    b b b b a\"));\nprint_r(histogram(\"\"));", "\t$test = explode(\" \", $test);\n\
    \t$count = array_count_values($test);\n\t$max = max($count);\n\t$result = array();\n\
    \tforeach ($count as $key => $value) {\n\t\tif ($value == $max) {\n\t\t\t$result[$key]\
    \ = $value;\n\t\t}\n\t}\n\treturn $result;\n}\nprint_r(histogram(\"a b c\"));\n\
    print_r(histogram(\"a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"\
    b b b b a\"));\nprint_r(histogram(\"\"));", "\t$test = str_split($test);\n\t$test\
    \ = array_count_values($test);\n\tarsort($test);\n\t$max = max($test);\n\tforeach\
    \ ($test as $key => $value) {\n\t\tif ($value != $max) {\n\t\t\tunset($test[$key]);\n\
    \t\t}\n\t}\n\treturn $test;\n}\nprint_r(histogram(\"a b c\"));\necho \"\\n\";\n\
    print_r(histogram(\"a b b a\"));\necho \"\\n\";\nprint_r(histogram(\"a b c a b\"\
    ));\necho \"\\n\";\nprint_r(histogram(\"b b b b a\"));\necho \"\\n\";\nprint_r(histogram(\"\
    \"));\necho \"\\n\";", "    $test = explode(\" \", $test);\n    $result = array();\n\
    \    foreach ($test as $value) {\n        if (array_key_exists($value, $result))\
    \ {\n            $result[$value]++;\n        } else {\n            $result[$value]\
    \ = 1;\n        }\n    }\n    $max = max($result);\n    $result = array_filter($result,\
    \ function ($value) use ($max) {\n        return $value == $max;\n    });\n  \
    \  return $result;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"a b\
    \ b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b a\"\
    ));\nprint_r(histogram(\"\"));", "\t$test = explode(\" \", $test);\n\t$test =\
    \ array_count_values($test);\n\t$max = max($test);\n\tforeach ($test as $key =>\
    \ $value) {\n\t\tif ($value != $max) {\n\t\t\tunset($test[$key]);\n\t\t}\n\t}\n\
    \treturn $test;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"a b b\
    \ a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b a\"\
    ));\nprint_r(histogram(\"\"));", "    $test = explode(\" \", $test);\n    $test\
    \ = array_count_values($test);\n    $max = max($test);\n    $result = array();\n\
    \    foreach ($test as $key => $value) {\n        if ($value == $max) {\n    \
    \        $result[$key] = $value;\n        }\n    }\n    return $result;\n}\n\n\
    print_r(histogram(\"a b c\"));\nprint_r(histogram(\"a b b a\"));\nprint_r(histogram(\"\
    a b c a b\"));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\"));",
  "\t$test = explode(\" \", $test);\n\t$result = array();\n\tforeach ($test as $value)\
    \ {\n\t\tif (array_key_exists($value, $result)) {\n\t\t\t$result[$value]++;\n\t\
    \t} else {\n\t\t\t$result[$value] = 1;\n\t\t}\n\t}\n\tarsort($result);\n\t$max\
    \ = reset($result);\n\t$result = array_filter($result, function($value) use ($max)\
    \ {\n\t\treturn $value == $max;\n\t});\n\treturn $result;\n}\n\necho \"<pre>\"\
    ;\nprint_r(histogram(\"a b c\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"\
    a b b a\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"a b c a b\"\
    ));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"b b b b a\"));\necho\
    \ \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"\"));\necho \"</pre>\";",
  "\t$test = explode(\" \", $test);\n\t$result = array();\n\tforeach ($test as $value)\
    \ {\n\t\tif (array_key_exists($value, $result)) {\n\t\t\t$result[$value]++;\n\t\
    \t} else {\n\t\t\t$result[$value] = 1;\n\t\t}\n\t}\n\t$max = max($result);\n\t\
    $result = array_filter($result, function($value) use ($max) {\n\t\treturn $value\
    \ == $max;\n\t});\n\treturn $result;\n}\n\necho \"<pre>\";\nprint_r(histogram(\"\
    a b c\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"a b b a\"));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"a b c a b\"));\necho \"\
    </pre>\";\necho \"<pre>\";\nprint_r(histogram(\"b b b b a\"));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(histogram(\"\"));\necho \"</pre>\";", "\t$test = explode(\"\
    \ \", $test);\n\t$result = array();\n\tforeach ($test as $value) {\n\t\tif (array_key_exists($value,\
    \ $result)) {\n\t\t\t$result[$value]++;\n\t\t} else {\n\t\t\t$result[$value] =\
    \ 1;\n\t\t}\n\t}\n\treturn $result;\n}\n\n$test = \"a b c\";\n$result = histogram($test);\n\
    print_r($result);\n\n$test = \"a b b a\";\n$result = histogram($test);\nprint_r($result);\n\
    \n$test = \"a b c a b\";\n$result = histogram($test);\nprint_r($result);\n\n$test\
    \ = \"b b b b a\";\n$result = histogram($test);\nprint_r($result);\n\n$test =\
    \ \"\";\n$result = histogram($test);\nprint_r($result);", "\t$test = explode(\"\
    \ \", $test);\n\t$test = array_count_values($test);\n\tarsort($test);\n\t$test\
    \ = array_slice($test, 0, 1);\n\treturn $test;\n}\nprint_r(histogram(\"a b c\"\
    ));\necho \"<br>\";\nprint_r(histogram(\"a b b a\"));\necho \"<br>\";\nprint_r(histogram(\"\
    a b c a b\"));\necho \"<br>\";\nprint_r(histogram(\"b b b b a\"));\necho \"<br>\"\
    ;\nprint_r(histogram(\"\"));", "\t$test = explode(\" \", $test);\n\t$count = array_count_values($test);\n\
    \tarsort($count);\n\t$max = max($count);\n\t$result = array();\n\tforeach ($count\
    \ as $key => $value) {\n\t\tif ($value == $max) {\n\t\t\t$result[$key] = $value;\n\
    \t\t}\n\t}\n\treturn $result;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"\
    a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b\
    \ a\"));\nprint_r(histogram(\"\"));", "    $test = explode(\" \", $test);\n  \
    \  $result = array();\n    foreach ($test as $value) {\n        if (!isset($result[$value]))\
    \ {\n            $result[$value] = 1;\n        } else {\n            $result[$value]\
    \ += 1;\n        }\n    }\n    return $result;\n}\n$test = \"a b c\";\nprint_r(histogram($test));\n\
    $test = \"a b b a\";\nprint_r(histogram($test));\n$test = \"a b c a b\";\nprint_r(histogram($test));\n\
    $test = \"b b b b a\";\nprint_r(histogram($test));\n$test = \"\";\nprint_r(histogram($test));",
  "\t$test = str_split($test);\n\t$test = array_count_values($test);\n\t$max = max($test);\n\
    \t$result = array();\n\tforeach ($test as $key => $value) {\n\t\tif ($value ==\
    \ $max) {\n\t\t\t$result[$key] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\nprint_r(histogram(\"\
    a b c\"));\nprint_r(histogram(\"a b b a\"));\nprint_r(histogram(\"a b c a b\"\
    ));\nprint_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\"));", "\t$test\
    \ = explode(\" \", $test);\n\t$count = array_count_values($test);\n\t$max = max($count);\n\
    \tforeach ($count as $key => $value) {\n\t\tif ($value != $max) {\n\t\t\tunset($count[$key]);\n\
    \t\t}\n\t}\n\treturn $count;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"\
    a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b\
    \ a\"));\nprint_r(histogram(\"\"));", "    $test = explode(\" \", $test);\n  \
    \  $result = array();\n    foreach ($test as $value) {\n        if (!array_key_exists($value,\
    \ $result)) {\n            $result[$value] = 1;\n        } else {\n          \
    \  $result[$value]++;\n        }\n    }\n    $max = max($result);\n    $result2\
    \ = array();\n    foreach ($result as $key => $value) {\n        if ($value ==\
    \ $max) {\n            $result2[$key] = $value;\n        }\n    }\n    return\
    \ $result2;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"a b b a\"\
    ));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b a\"));\n\
    print_r(histogram(\"\"));", "\t$test = explode(\" \", $test);\n\t$result = array();\n\
    \tforeach ($test as $value) {\n\t\tif (isset($result[$value])) {\n\t\t\t$result[$value]++;\n\
    \t\t} else {\n\t\t\t$result[$value] = 1;\n\t\t}\n\t}\n\t$max = max($result);\n\
    \tforeach ($result as $key => $value) {\n\t\tif ($value != $max) {\n\t\t\tunset($result[$key]);\n\
    \t\t}\n\t}\n\treturn $result;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"\
    a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b\
    \ a\"));\nprint_r(histogram(\"\"));", "\t$test = explode(\" \", $test);\n\t$count\
    \ = array_count_values($test);\n\t$max = max($count);\n\tforeach ($count as $key\
    \ => $value) {\n\t\tif ($value != $max) {\n\t\t\tunset($count[$key]);\n\t\t}\n\
    \t}\n\treturn $count;\n}\n\n/* Given a string representing a space separated lowercase\
    \ letters, return an array\nof the letter with the most repetition and containing\
    \ the corresponding count.\nIf several letters have the same occurrence, return\
    \ all of them.\nExample:\n>>> histogram(\"a b c\")\narray(\"a\" => 1, \"b\" =>\
    \ 1, \"c\" => 1)\n>>> histogram(\"a b b a\")\narray(\"a\" => 2, \"b\" => 2)\n\
    >>> histogram(\"a b c a b\")\narray(\"a\" => 2, \"b\" => 2)\n>>> histogram(\"\
    b b b b a\")\narray(\"b\" => 4)\n>>> histogram(\"\")\narray()*/", "\t$test = explode(\"\
    \ \", $test);\n\t$test = array_count_values($test);\n\t$max = max($test);\n\t\
    $result = array();\n\tforeach ($test as $key => $value) {\n\t\tif ($value == $max)\
    \ {\n\t\t\t$result[$key] = $value;\n\t\t}\n\t}\n\treturn $result;\n}\necho \"\
    <pre>\";\nprint_r(histogram(\"a b c\"));\necho \"</pre>\";\necho \"<pre>\";\n\
    print_r(histogram(\"a b b a\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"\
    a b c a b\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"b b b b\
    \ a\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"\"));\necho \"\
    </pre>\";", "    $test = explode(\" \", $test);\n    $count = array_count_values($test);\n\
    \    $max = max($count);\n    foreach ($count as $key => $value) {\n        if\
    \ ($value == $max) {\n            $result[$key] = $value;\n        }\n    }\n\
    \    return $result;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"\
    a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b\
    \ a\"));\nprint_r(histogram(\"\"));", "    $test = explode(\" \", $test);\n  \
    \  $count = array_count_values($test);\n    $max = max($count);\n    foreach ($count\
    \ as $key => $value) {\n        if ($value == $max) {\n            $result[$key]\
    \ = $value;\n        }\n    }\n    return $result;\n}\nprint_r(histogram(\"a b\
    \ c\"));\nprint_r(histogram(\"a b b a\"));\nprint_r(histogram(\"a b c a b\"));\n\
    print_r(histogram(\"b b b b a\"));\nprint_r(histogram(\"\"));", "    $test = explode(\"\
    \ \", $test);\n    $count = array_count_values($test);\n    $max = max($count);\n\
    \    $result = array();\n    foreach ($count as $key => $value) {\n        if\
    \ ($value == $max) {\n            $result[$key] = $value;\n        }\n    }\n\
    \    return $result;\n}\n\n$test = \"a b c\";\nprint_r(histogram($test));\necho\
    \ \"<br>\";\n$test = \"a b b a\";\nprint_r(histogram($test));\necho \"<br>\";\n\
    $test = \"a b c a b\";\nprint_r(histogram($test));\necho \"<br>\";\n$test = \"\
    b b b b a\";\nprint_r(histogram($test));\necho \"<br>\";\n$test = \"\";\nprint_r(histogram($test));\n\
    echo \"<br>\";", "    $test = explode(\" \", $test);\n    $count = array_count_values($test);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\nprint_r(histogram(\"a b c\"));\nprint_r(histogram(\"\
    a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"b b b b\
    \ a\"));\nprint_r(histogram(\"\"));", "\t$arr = explode(\" \", $test);\n\t$arr2\
    \ = array_count_values($arr);\n\t$max = max($arr2);\n\t$arr3 = array_keys($arr2,\
    \ $max);\n\t$arr4 = array_fill_keys($arr3, $max);\n\treturn $arr4;\n}\necho \"\
    <pre>\";\nprint_r(histogram(\"a b c\"));\necho \"</pre>\";\necho \"<pre>\";\n\
    print_r(histogram(\"a b b a\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"\
    a b c a b\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"b b b b\
    \ a\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(histogram(\"\"));\necho \"\
    </pre>\";", "    $test = explode(\" \", $test);\n    $count = array_count_values($test);\n\
    \    $max = max($count);\n    $result = array();\n    foreach ($count as $key\
    \ => $value) {\n        if ($value == $max) {\n            $result[$key] = $value;\n\
    \        }\n    }\n    return $result;\n}\n\n$test = \"a b c\";\nprint_r(histogram($test));\n\
    echo \"<br>\";\n$test = \"a b b a\";\nprint_r(histogram($test));\necho \"<br>\"\
    ;\n$test = \"a b c a b\";\nprint_r(histogram($test));\necho \"<br>\";\n$test =\
    \ \"b b b b a\";\nprint_r(histogram($test));\necho \"<br>\";\n$test = \"\";\n\
    print_r(histogram($test));\necho \"<br>\";", "\t$arr = explode(\" \", $test);\n\
    \t$count = array_count_values($arr);\n\t$max = max($count);\n\t$result = array();\n\
    \tforeach ($count as $key => $value) {\n\t\tif ($value == $max) {\n\t\t\t$result[$key]\
    \ = $value;\n\t\t}\n\t}\n\treturn $result;\n}\nprint_r(histogram(\"a b c\"));\n\
    print_r(histogram(\"a b b a\"));\nprint_r(histogram(\"a b c a b\"));\nprint_r(histogram(\"\
    b b b b a\"));\nprint_r(histogram(\"\"));"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

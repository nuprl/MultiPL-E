name: HumanEval_26_remove_duplicates
language: php
prompt: "<?php\n/* From an array of integers, remove all elements that occur more\
  \ than once.\nKeep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
  \ 2, 3, 2, 4))\narray(1, 3, 4)*/\nfunction remove_duplicates($numbers) {\n"
tests: "function candidate(...$args) {\n    return remove_duplicates(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1,\
  \ 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
  \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
  ); }\n}\n\ntest();"
completions: ["    $new_array = [];\n    foreach ($numbers as $number) {\n       \
    \ if (!in_array($number, $new_array)) {\n            $new_array[] = $number;\n\
    \        }\n    }\n    return $new_array;\n}\n\n/* From an array of integers,\
    \ remove all elements that occur more than once.\nKeep order of elements left\
    \ the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1,\
    \ 3, 4)*/", "    $result = array();\n    foreach ($numbers as $number) {\n   \
    \     if (!in_array($number, $result)) {\n            $result[] = $number;\n \
    \       }\n    }\n    return $result;\n}\n\n/* From an array of integers, remove\
    \ all elements that occur more than once.\nKeep order of elements left the same\
    \ as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/",
  "    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n\
    \    foreach ($numbers as $number) {\n        if (!in_array($number, $result))\
    \ {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\n\n/* From an array of integers, remove all elements that occur more than once.\n\
    Keep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $result)) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\n/* From an array of\
    \ integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n/* From an array of integers, remove\
    \ all elements that occur more than once.\nKeep order of elements left the same\
    \ as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/",
  "    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $numbers =\
    \ array_unique($numbers);\n    return $numbers;\n}\n\n/* From an array of integers,\
    \ remove all elements that occur more than once.\nKeep order of elements left\
    \ the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1,\
    \ 3, 4)*/", "    $unique = array();\n    foreach ($numbers as $number) {\n   \
    \     if (!in_array($number, $unique)) {\n            $unique[] = $number;\n \
    \       }\n    }\n    return $unique;\n}\n\n/* From an array of integers, remove\
    \ all elements that occur more than once.\nKeep order of elements left the same\
    \ as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/",
  "    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $unique_numbers\
    \ = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $unique_numbers)) {\n            $unique_numbers[] = $number;\n        }\n \
    \   }\n    return $unique_numbers;\n}\n\n/* From an array of integers, remove\
    \ all elements that occur more than once.\nKeep order of elements left the same\
    \ as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/",
  "    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n\
    \    foreach ($numbers as $number) {\n        if (!in_array($number, $result))\
    \ {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\n\n/* From an array of integers, remove all elements that occur more than once.\n\
    Keep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $result)) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\n/* From an array of\
    \ integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n/* From an array of integers, remove\
    \ all elements that occur more than once.\nKeep order of elements left the same\
    \ as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/",
  "    $numbers = array_unique($numbers);\n    return $numbers;\n}\n\n/* From an array\
    \ of integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n/* From an array of integers, remove\
    \ all elements that occur more than once.\nKeep order of elements left the same\
    \ as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/",
  "\t$result = array();\n\tforeach ($numbers as $number) {\n\t\tif (!in_array($number,\
    \ $result)) {\n\t\t\t$result[] = $number;\n\t\t}\n\t}\n\treturn $result;\n}\n\n\
    /* From an array of integers, remove all elements that occur more than once.\n\
    Keep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/", "\t$result = array();\n\tforeach ($numbers\
    \ as $number) {\n\t\tif (!in_array($number, $result)) {\n\t\t\t$result[] = $number;\n\
    \t\t}\n\t}\n\treturn $result;\n}\n\n/* From an array of integers, remove all elements\
    \ that occur more than once.\nKeep order of elements left the same as in the input.\n\
    >>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result =\
    \ array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n\
    \    foreach ($numbers as $number) {\n        if (!in_array($number, $result))\
    \ {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\n\n/* From an array of integers, remove all elements that occur more than once.\n\
    Keep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $result)) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\n/* From an array of\
    \ integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/", "\t$result = array();\n\tforeach ($numbers as $number) {\n\t\
    \tif (!in_array($number, $result)) {\n\t\t\t$result[] = $number;\n\t\t}\n\t}\n\
    \treturn $result;\n}", "    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n/* From an array of integers, remove\
    \ all elements that occur more than once.\nKeep order of elements left the same\
    \ as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/",
  "\t$result = array();\n\tforeach ($numbers as $number) {\n\t\tif (!in_array($number,\
    \ $result)) {\n\t\t\t$result[] = $number;\n\t\t}\n\t}\n\treturn $result;\n}\n\n\
    /* From an array of integers, remove all elements that occur more than once.\n\
    Keep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $result)) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\n/* From an array of\
    \ integers, return an array of all the integers that are\ndivisible by 3.\n>>>\
    \ divisible_by_three(array(1, 2, 3, 4, 5, 6, 7, 8, 9))\narray(3, 6, 9)*/", " \
    \   $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n\
    \    foreach ($numbers as $number) {\n        if (!in_array($number, $result))\
    \ {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\n\n/* From an array of integers, remove all elements that occur more than once.\n\
    Keep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $numbers = array_unique($numbers);\n \
    \   return $numbers;\n}\n\n/* From an array of integers, remove all elements that\
    \ occur more than once.\nKeep order of elements left the same as in the input.\n\
    >>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result =\
    \ array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n\
    \    foreach ($numbers as $number) {\n        if (!in_array($number, $result))\
    \ {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\n\n/* From an array of integers, remove all elements that occur more than once.\n\
    Keep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $numbers = array_unique($numbers);\n \
    \   return $numbers;\n}\n\n/* From an array of integers, remove all elements that\
    \ occur more than once.\nKeep order of elements left the same as in the input.\n\
    >>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $arr = array();\n\
    \    foreach ($numbers as $number) {\n        if (!in_array($number, $arr)) {\n\
    \            $arr[] = $number;\n        }\n    }\n    return $arr;\n}\n\n/* From\
    \ an array of integers, remove all elements that occur more than once.\nKeep order\
    \ of elements left the same as in the input.\n>>> remove_duplicates(array(1, 2,\
    \ 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $result)) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\n/* From an array of\
    \ integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n/*\n * From an array of integers,\
    \ remove all elements that occur more than once.\n * Keep order of elements left\
    \ the same as in the input.\n * >>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    \ * array(1, 3, 4)\n */", "    $numbers = array_unique($numbers);\n    return\
    \ $numbers;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $numbers =\
    \ array_unique($numbers);\n    return $numbers;\n}\nprint_r(remove_duplicates(array(1,\
    \ 2, 3, 2, 4)));", "    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n/* From an array of integers, remove\
    \ all elements that occur more than once.\nKeep order of elements left the same\
    \ as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/",
  "    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $new_array\
    \ = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number, $new_array))\
    \ {\n            $new_array[] = $number;\n        }\n    }\n    return $new_array;\n\
    }\n\n/*\n * From an array of integers, remove all elements that occur more than\
    \ once.\n * Keep order of elements left the same as in the input.\n * >>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\n * array(1, 3, 4)\n */", "    $result = array();\n    foreach\
    \ ($numbers as $number) {\n        if (!in_array($number, $result)) {\n      \
    \      $result[] = $number;\n        }\n    }\n    return $result;\n}\n\n/* From\
    \ an array of integers, remove all elements that occur more than once.\nKeep order\
    \ of elements left the same as in the input.\n>>> remove_duplicates(array(1, 2,\
    \ 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n    $count = array_count_values($numbers);\n\
    \    foreach ($numbers as $number) {\n        if ($count[$number] == 1) {\n  \
    \          $result[] = $number;\n        }\n    }\n    return $result;\n}\n\n\
    /* From an array of integers, remove all elements that occur more than once.\n\
    Keep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $result)) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\n/* From an array of\
    \ integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n/* From an array of integers, remove\
    \ all elements that occur more than once.\nKeep order of elements left the same\
    \ as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/",
  "    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $unique = array();\n\
    \    foreach ($numbers as $number) {\n        if (!in_array($number, $unique))\
    \ {\n            $unique[] = $number;\n        }\n    }\n    return $unique;\n\
    }\n\n/* From an array of integers, remove all elements that occur more than once.\n\
    Keep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $result)) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\n/* From an array of\
    \ integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n/* From an array of integers, remove\
    \ all elements that occur more than once.\nKeep order of elements left the same\
    \ as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/",
  "    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n\
    \    foreach ($numbers as $number) {\n        if (!in_array($number, $result))\
    \ {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\n\n/* From an array of integers, remove all elements that occur more than once.\n\
    Keep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $result)) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\n/* From an array of\
    \ integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/", "    $new_array = [];\n    foreach ($numbers as $number) {\n\
    \        if (!in_array($number, $new_array)) {\n            $new_array[] = $number;\n\
    \        }\n    }\n    return $new_array;\n}\n\n/* From an array of integers,\
    \ remove all elements that occur more than once.\nKeep order of elements left\
    \ the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1,\
    \ 3, 4)*/", "    $result = array();\n    foreach ($numbers as $number) {\n   \
    \     if (!in_array($number, $result)) {\n            $result[] = $number;\n \
    \       }\n    }\n    return $result;\n}\n\n/* From an array of integers, remove\
    \ all elements that occur more than once.\nKeep order of elements left the same\
    \ as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/",
  "    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n\
    \    foreach ($numbers as $number) {\n        if (!in_array($number, $result))\
    \ {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\n\n/* From an array of integers, remove all elements that occur more than once.\n\
    Keep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $result)) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\n/* From an array of\
    \ integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/", "    $numbers = array_unique($numbers);\n    return $numbers;\n\
    }\n\n/* From an array of integers, remove all elements that occur more than once.\n\
    Keep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $result)) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\n/*From an array of integers,\
    \ remove all elements that occur more than once.\nKeep order of elements left\
    \ the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1,\
    \ 3, 4)*/", "    $result = array();\n    foreach ($numbers as $number) {\n   \
    \     if (!in_array($number, $result)) {\n            $result[] = $number;\n \
    \       }\n    }\n    return $result;\n}\n\n/* From an array of integers, remove\
    \ all elements that occur more than once.\nKeep order of elements left the same\
    \ as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/",
  "    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n\
    \    foreach ($numbers as $number) {\n        if (!in_array($number, $result))\
    \ {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\n\n/* From an array of integers, remove all elements that occur more than once.\n\
    Keep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $result)) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\n/* From an array of\
    \ integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/", "    $numbers = array_unique($numbers);\n    return $numbers;\n\
    }\n\n/*\n * From an array of integers, remove all elements that occur more than\
    \ once.\n * Keep order of elements left the same as in the input.\n * >>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\n * array(1, 3, 4)\n */", "    $result = array();\n    foreach\
    \ ($numbers as $number) {\n        if (!in_array($number, $result)) {\n      \
    \      $result[] = $number;\n        }\n    }\n    return $result;\n}\n\n/* From\
    \ an array of integers, remove all elements that occur more than once.\nKeep order\
    \ of elements left the same as in the input.\n>>> remove_duplicates(array(1, 2,\
    \ 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $result)) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\n/* From an array of\
    \ integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n/* From an array of integers, remove\
    \ all elements that occur more than once.\nKeep order of elements left the same\
    \ as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/",
  "    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n\
    \    foreach ($numbers as $number) {\n        if (!in_array($number, $result))\
    \ {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\n\n/* From an array of integers, remove all elements that occur more than once.\n\
    Keep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $result)) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\n/* From an array of\
    \ integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n/* From an array of integers, remove\
    \ all elements that occur more than once.\nKeep order of elements left the same\
    \ as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/",
  "    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $unique_numbers\
    \ = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $unique_numbers)) {\n            $unique_numbers[] = $number;\n        }\n \
    \   }\n    return $unique_numbers;\n}\n\n/* From an array of integers, remove\
    \ all elements that occur more than once.\nKeep order of elements left the same\
    \ as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/",
  "    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n\
    \    foreach ($numbers as $number) {\n        if (!in_array($number, $result))\
    \ {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\n\n/* From an array of integers, remove all elements that occur more than once.\n\
    Keep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $result)) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\n/* From an array of\
    \ integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n/* From an array of integers, remove\
    \ all elements that occur more than once.\nKeep order of elements left the same\
    \ as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/",
  "    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n\
    \    foreach ($numbers as $number) {\n        if (!in_array($number, $result))\
    \ {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\n\n/* From an array of integers, remove all elements that occur more than once.\n\
    Keep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $numbers = array_unique($numbers);\n \
    \   return $numbers;\n}\n\n/*\n * From an array of integers, remove all elements\
    \ that occur more than once.\n * Keep order of elements left the same as in the\
    \ input.\n * >>> remove_duplicates(array(1, 2, 3, 2, 4))\n * array(1, 3, 4)\n\
    \ */", "    $result = array();\n    foreach ($numbers as $number) {\n        if\
    \ (!in_array($number, $result)) {\n            $result[] = $number;\n        }\n\
    \    }\n    return $result;\n}\n\n/* From an array of integers, remove all elements\
    \ that occur more than once.\nKeep order of elements left the same as in the input.\n\
    >>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "\t$result = array();\n\
    \tforeach ($numbers as $number) {\n\t\tif (!in_array($number, $result)) {\n\t\t\
    \t$result[] = $number;\n\t\t}\n\t}\n\treturn $result;\n}\n\n/* From an array of\
    \ integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/", "    $unique = array();\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $unique)) {\n            $unique[] = $number;\n\
    \        }\n    }\n    return $unique;\n}\n\n/* From an array of integers, remove\
    \ all elements that occur more than once.\nKeep order of elements left the same\
    \ as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/",
  "    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n\
    \    foreach ($numbers as $number) {\n        if (!in_array($number, $result))\
    \ {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\n\n/* From an array of integers, remove all elements that occur more than once.\n\
    Keep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $result)) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\n/* From an array of\
    \ integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n/* From an array of integers, remove\
    \ all elements that occur more than once.\nKeep order of elements left the same\
    \ as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/",
  "    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "\t$numbers = array_unique($numbers);\n\
    \treturn $numbers;\n}\n\n/* From an array of integers, remove all elements that\
    \ occur more than once.\nKeep order of elements left the same as in the input.\n\
    >>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $numbers\
    \ = array_unique($numbers);\n    return $numbers;\n}\n\n/* From an array of integers,\
    \ remove all elements that occur more than once.\nKeep order of elements left\
    \ the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1,\
    \ 3, 4)*/", "    $numbers = array_unique($numbers);\n    return $numbers;\n}\n\
    \n/*\n * From an array of integers, remove all elements that occur more than once.\n\
    \ * Keep order of elements left the same as in the input.\n * >>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\n * array(1, 3, 4)\n */", "\t$numbers = array_unique($numbers);\n\
    \treturn $numbers;\n}\n\n/* Given a string, return a new string with the characters\
    \ in reverse order.\n>>> reverse_string('hello')\n'olleh'*/", "    $result = array();\n\
    \    foreach ($numbers as $number) {\n        if (!in_array($number, $result))\
    \ {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\n\n/* From an array of integers, remove all elements that occur more than once.\n\
    Keep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $result)) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\n/* From an array of\
    \ integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n/* From an array of integers, remove\
    \ all elements that occur more than once.\nKeep order of elements left the same\
    \ as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/",
  "    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n\
    \    foreach ($numbers as $number) {\n        if (!in_array($number, $result))\
    \ {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\n\n/* From an array of integers, remove all elements that occur more than once.\n\
    Keep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $result)) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\n/*\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)\n*/\n\n/*\n>>> remove_duplicates(array(1, 2, 3,\
    \ 2, 4))\narray(1, 3, 4)\n*/\n\n/*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)\n*/\n\n/*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1,\
    \ 3, 4)\n*/\n\n/*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)\n\
    */\n\n/*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)\n*/\n\n\
    /*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)\n*/\n\n/*\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)\n*/\n\n/*\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)\n*/\n\n/*\n>>> remove_duplicates(array(1, 2, 3,\
    \ 2, 4))\narray(1, 3, 4)\n*/\n\n/*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)\n*/\n\n/*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1,\
    \ 3, 4)\n*/\n\n/*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)\n\
    */\n\n/*\n>>> remove_duplicates(array(1", "    $result = array();\n    foreach\
    \ ($numbers as $number) {\n        if (!in_array($number, $result)) {\n      \
    \      $result[] = $number;\n        }\n    }\n    return $result;\n}\n\n/* From\
    \ an array of integers, remove all elements that occur more than once.\nKeep order\
    \ of elements left the same as in the input.\n>>> remove_duplicates(array(1, 2,\
    \ 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $result)) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\n/*\n * From an array\
    \ of integers, remove all elements that occur more than once.\n * Keep order of\
    \ elements left the same as in the input.\n * >>> remove_duplicates(array(1, 2,\
    \ 3, 2, 4))\n * array(1, 3, 4)\n */", "    $result = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $result)) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\n/* From an array of\
    \ integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n/* From an array of integers, remove\
    \ all elements that occur more than once.\nKeep order of elements left the same\
    \ as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/",
  "    $numbers = array_unique($numbers);\n    return $numbers;\n}\n\n/* From an array\
    \ of integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n/* From an array of integers, remove\
    \ all elements that occur more than once.\nKeep order of elements left the same\
    \ as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/",
  "    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n\
    \    foreach ($numbers as $number) {\n        if (!in_array($number, $result))\
    \ {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\n\n/* From an array of integers, remove all elements that occur more than once.\n\
    Keep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $result)) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\n/* From an array of\
    \ integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n/* From an array of integers, remove\
    \ all elements that occur more than once.\nKeep order of elements left the same\
    \ as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/",
  "    $unique = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $unique)) {\n            $unique[] = $number;\n        }\n    }\n    return\
    \ $unique;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $numbers =\
    \ array_unique($numbers);\n    return $numbers;\n}\n\n/* From an array of integers,\
    \ remove all elements that occur more than once.\nKeep order of elements left\
    \ the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1,\
    \ 3, 4)*/", "    $result = array();\n    foreach ($numbers as $number) {\n   \
    \     if (!in_array($number, $result)) {\n            $result[] = $number;\n \
    \       }\n    }\n    return $result;\n}\n\n/* From an array of integers, remove\
    \ all elements that occur more than once.\nKeep order of elements left the same\
    \ as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/",
  "    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n\
    \    foreach ($numbers as $number) {\n        if (!in_array($number, $result))\
    \ {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\n\n/* From an array of integers, remove all elements that occur more than once.\n\
    Keep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $numbers = array_unique($numbers);\n \
    \   return $numbers;\n}\n\n/* From an array of integers, remove all elements that\
    \ occur more than once.\nKeep order of elements left the same as in the input.\n\
    >>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result =\
    \ array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n\
    \    foreach ($numbers as $number) {\n        if (!in_array($number, $result))\
    \ {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\n\n/* From an array of integers, remove all elements that occur more than once.\n\
    Keep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $unique = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $unique)) {\n            $unique[]\
    \ = $number;\n        }\n    }\n    return $unique;\n}\n\n/* From an array of\
    \ integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n/* From an array of integers, remove\
    \ all elements that occur more than once.\nKeep order of elements left the same\
    \ as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/",
  "    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $numbers =\
    \ array_unique($numbers);\n    return $numbers;\n}\n\n/* From an array of integers,\
    \ remove all elements that occur more than once.\nKeep order of elements left\
    \ the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1,\
    \ 3, 4)*/", "    $result = array();\n    foreach ($numbers as $number) {\n   \
    \     if (!in_array($number, $result)) {\n            $result[] = $number;\n \
    \       }\n    }\n    return $result;\n}\n\n/* From an array of integers, remove\
    \ all elements that occur more than once.\nKeep order of elements left the same\
    \ as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/",
  "    $new_array = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $new_array)) {\n            $new_array[] = $number;\n        }\n    }\n    return\
    \ $new_array;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n\
    \    foreach ($numbers as $number) {\n        if (!in_array($number, $result))\
    \ {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\n\n/* From an array of integers, remove all elements that occur more than once.\n\
    Keep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $result)) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\n/*\n * From an array\
    \ of integers, remove all elements that occur more than once.\n * Keep order of\
    \ elements left the same as in the input.\n * >>> remove_duplicates(array(1, 2,\
    \ 3, 2, 4))\n * array(1, 3, 4)\n */", "    $result = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $result)) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\n/* From an array of\
    \ integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n/*\n * From an array of integers,\
    \ remove all elements that occur more than once.\n * Keep order of elements left\
    \ the same as in the input.\n * >>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    \ * array(1, 3, 4)\n */", "    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n/* From an array of integers, remove\
    \ all elements that occur more than once.\nKeep order of elements left the same\
    \ as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/",
  "    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $numbers =\
    \ array_unique($numbers);\n    return $numbers;\n}\n\n/* From an array of integers,\
    \ remove all elements that occur more than once.\nKeep order of elements left\
    \ the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1,\
    \ 3, 4)*/", "    $result = array();\n    foreach ($numbers as $number) {\n   \
    \     if (!in_array($number, $result)) {\n            $result[] = $number;\n \
    \       }\n    }\n    return $result;\n}\n\n/* From an array of integers, remove\
    \ all elements that occur more than once.\nKeep order of elements left the same\
    \ as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/",
  "    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n\
    \    foreach ($numbers as $number) {\n        if (!in_array($number, $result))\
    \ {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\n\n/* From an array of integers, remove all elements that occur more than once.\n\
    Keep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $result)) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\n/*\n * From an array\
    \ of integers, remove all elements that occur more than once.\n * Keep order of\
    \ elements left the same as in the input.\n * >>> remove_duplicates(array(1, 2,\
    \ 3, 2, 4))\n * array(1, 3, 4)\n */", "    $result = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $result)) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\n/* From an array of\
    \ integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n/* From an array of integers, remove\
    \ all elements that occur more than once.\nKeep order of elements left the same\
    \ as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/",
  "    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $unique_numbers\
    \ = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $unique_numbers)) {\n            $unique_numbers[] = $number;\n        }\n \
    \   }\n    return $unique_numbers;\n}\n\n/* From an array of integers, remove\
    \ all elements that occur more than once.\nKeep order of elements left the same\
    \ as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/",
  "    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/*\n * From an array of integers, remove all elements that occur\
    \ more than once.\n * Keep order of elements left the same as in the input.\n\
    \ * >>> remove_duplicates(array(1, 2, 3, 2, 4))\n * array(1, 3, 4)\n */", "\t\
    $numbers = array_unique($numbers);\n\treturn $numbers;\n}\n\n/* From an array\
    \ of integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n/* From an array of integers, remove\
    \ all elements that occur more than once.\nKeep order of elements left the same\
    \ as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/",
  "    $numbers = array_unique($numbers);\n    return $numbers;\n}\n\n/* From an array\
    \ of integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n/* From an array of integers, remove\
    \ all elements that occur more than once.\nKeep order of elements left the same\
    \ as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/",
  "    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "\t$result = array();\n\
    \tforeach ($numbers as $number) {\n\t\tif (!in_array($number, $result)) {\n\t\t\
    \t$result[] = $number;\n\t\t}\n\t}\n\treturn $result;\n}\n\n/* From an array of\
    \ integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n/* From an array of integers, remove\
    \ all elements that occur more than once.\nKeep order of elements left the same\
    \ as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/",
  "    $numbers = array_unique($numbers);\n    return $numbers;\n}\n\n/*\n * From\
    \ an array of integers, remove all elements that occur more than once.\n * Keep\
    \ order of elements left the same as in the input.\n * >>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\n * array(1, 3, 4)\n */", "    $result = array();\n    foreach\
    \ ($numbers as $number) {\n        if (!in_array($number, $result)) {\n      \
    \      $result[] = $number;\n        }\n    }\n    return $result;\n}\n\n/*\n\
    \ * From an array of integers, remove all elements that occur more than once.\n\
    Keep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)\n*/", "    $result = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $result)) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\n/* From an array of\
    \ integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/", "    $numbers = array_unique($numbers);\n    return $numbers;\n\
    }\n\n/* From an array of integers, remove all elements that occur more than once.\n\
    Keep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $result)) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\n/* From an array of\
    \ integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n/* From an array of integers, remove\
    \ all elements that occur more than once.\nKeep order of elements left the same\
    \ as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/",
  "    $unique = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $unique)) {\n            $unique[] = $number;\n        }\n    }\n    return\
    \ $unique;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $unique = array();\n\
    \    foreach ($numbers as $number) {\n        if (!in_array($number, $unique))\
    \ {\n            $unique[] = $number;\n        }\n    }\n    return $unique;\n\
    }\n\n/* From an array of integers, remove all elements that occur more than once.\n\
    Keep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $numbers = array_unique($numbers);\n \
    \   return $numbers;\n}\n\n/* From an array of integers, remove all elements that\
    \ occur more than once.\nKeep order of elements left the same as in the input.\n\
    >>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result =\
    \ array();\n    $count = array_count_values($numbers);\n    foreach ($numbers\
    \ as $number) {\n        if ($count[$number] == 1) {\n            $result[] =\
    \ $number;\n        }\n    }\n    return $result;\n}\n\n/* From an array of integers,\
    \ remove all elements that occur more than once.\nKeep order of elements left\
    \ the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1,\
    \ 3, 4)*/", "    $result = array();\n    foreach ($numbers as $number) {\n   \
    \     if (!in_array($number, $result)) {\n            $result[] = $number;\n \
    \       }\n    }\n    return $result;\n}\n\n/* From an array of integers, remove\
    \ all elements that occur more than once.\nKeep order of elements left the same\
    \ as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/",
  "    $result = array();\n    $count = array_count_values($numbers);\n    foreach\
    \ ($numbers as $number) {\n        if ($count[$number] == 1) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\n/* From an array of\
    \ integers, return a new array with each element multiplied by 2.\n>>> double_array(array(1,\
    \ 2, 3))\narray(2, 4, 6)*/", "    $result = array();\n    foreach ($numbers as\
    \ $number) {\n        if (!in_array($number, $result)) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\n/* From an array of\
    \ integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n/* From an array of integers, remove\
    \ all elements that occur more than once.\nKeep order of elements left the same\
    \ as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/",
  "    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n\
    \    foreach ($numbers as $number) {\n        if (!in_array($number, $result))\
    \ {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\n\n/* From an array of integers, remove all elements that occur more than once.\n\
    Keep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $numbers = array_unique($numbers);\n \
    \   return $numbers;\n}\n\n/* From an array of integers, remove all elements that\
    \ occur more than once.\nKeep order of elements left the same as in the input.\n\
    >>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result =\
    \ array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $numbers =\
    \ array_unique($numbers);\n    return $numbers;\n}\n\n/*Given a string, return\
    \ a new string that has transformed based on the input:\nChange case of every\
    \ character, ie. lower case to upper case, upper case to lower case.\nReverse\
    \ the order of words from the input.\nNote: You will have to handle multiple spaces,\
    \ and leading/trailing spaces.\nFor example:\n\"Example Input\" ==> \"iNPUT eXAMPLE\"\
    \nYou may assume the input only contain English alphabet and spaces.\n*/", " \
    \   $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n\
    \    foreach ($numbers as $number) {\n        if (!in_array($number, $result))\
    \ {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\n\n/* From an array of integers, remove all elements that occur more than once.\n\
    Keep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $numbers = array_unique($numbers);\n \
    \   return $numbers;\n}\n\n/* Given an array of integers, return an array of integers\
    \ with the duplicates removed.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 2, 3, 4)*/", "    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n/* From an array of integers, remove\
    \ all elements that occur more than once.\nKeep order of elements left the same\
    \ as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/",
  "    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, return an array of all pairs of\
    \ integers that sum to 0.\n>>> find_zero_sum_pairs(array(1, 2, -1, -2, 0, 0))\n\
    array(array(-1, 1), array(-2, 2))*/", "    $result = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $result)) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\n/* From an array of\
    \ integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/", "    $numbers_unique = array_unique($numbers);\n    return\
    \ $numbers_unique;\n}\n\n/* From an array of integers, remove all elements that\
    \ occur more than once.\nKeep order of elements left the same as in the input.\n\
    >>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "  $new_array\
    \ = [];\n  foreach ($numbers as $number) {\n    if (!in_array($number, $new_array))\
    \ {\n      $new_array[] = $number;\n    }\n  }\n  return $new_array;\n}\n\n/*\
    \ From an array of integers, remove all elements that occur more than once.\n\
    Keep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $result)) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\n/* From an array of\
    \ integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n/* From an array of integers, remove\
    \ all elements that occur more than once.\nKeep order of elements left the same\
    \ as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/",
  "\t$result = array();\n\tforeach ($numbers as $number) {\n\t\tif (!in_array($number,\
    \ $result)) {\n\t\t\t$result[] = $number;\n\t\t}\n\t}\n\treturn $result;\n}\n\n\
    /* From an array of integers, remove all elements that occur more than once.\n\
    Keep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $numbers = array_unique($numbers);\n \
    \   return $numbers;\n}\n\n/*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1,\
    \ 3, 4)\n*/\n\n/*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)\n\
    */\n\n/*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)\n*/\n\n\
    /*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)\n*/\n\n/*\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)\n*/\n\n/*\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)\n*/\n\n/*\n>>> remove_duplicates(array(1, 2, 3,\
    \ 2, 4))\narray(1, 3, 4)\n*/\n\n/*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)\n*/\n\n/*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1,\
    \ 3, 4)\n*/\n\n/*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)\n\
    */\n\n/*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)\n*/\n\n\
    /*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)\n*/\n\n/*\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)\n*/\n\n/*\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)\n*/\n\n/*\n>>> remove_duplicates(array(1", "  \
    \  $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n\
    \    foreach ($numbers as $number) {\n        if (!in_array($number, $result))\
    \ {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\n\n/* From an array of integers, remove all elements that occur more than once.\n\
    Keep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $result)) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\n/* From an array of\
    \ integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/", "\t$numbers = array_unique($numbers);\n\treturn $numbers;\n\
    }\n\n/* From an array of integers, remove all elements that occur more than once.\n\
    Keep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $result)) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\n/* From an array of\
    \ integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n/* From an array of integers, remove\
    \ all elements that occur more than once.\nKeep order of elements left the same\
    \ as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/",
  "    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3,\
    \ 4)\n*/\n\n/*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)\n\
    */\n\n/*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)\n*/\n\n\
    /*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)\n*/\n\n/*\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)\n*/\n\n/*\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)\n*/\n\n/*\n>>> remove_duplicates(array(1, 2, 3,\
    \ 2, 4))\narray(1, 3, 4)\n*/\n\n/*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)\n*/\n\n/*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1,\
    \ 3, 4)\n*/\n\n/*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)\n\
    */\n\n/*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)\n*/\n\n\
    /*\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)\n*/\n\n/*\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)\n*/\n\n/*\n>>> remove_duplicates(array(1",
  "    $numbers = array_unique($numbers);\n    return $numbers;\n}\n\n/* From an array\
    \ of integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n/* From an array of integers, remove\
    \ all elements that occur more than once.\nKeep order of elements left the same\
    \ as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/",
  "    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n\
    \    foreach ($numbers as $number) {\n        if (!in_array($number, $result))\
    \ {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\n\n/* From an array of integers, remove all elements that occur more than once.\n\
    Keep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $numbers = array_unique($numbers);\n \
    \   return $numbers;\n}\n\n/* From an array of integers, remove all elements that\
    \ occur more than once.\nKeep order of elements left the same as in the input.\n\
    >>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $numbers\
    \ = array_unique($numbers);\n    return $numbers;\n}\n\n/* From an array of integers,\
    \ remove all elements that occur more than once.\nKeep order of elements left\
    \ the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1,\
    \ 3, 4)*/", "    $result = array();\n    foreach ($numbers as $number) {\n   \
    \     if (!in_array($number, $result)) {\n            $result[] = $number;\n \
    \       }\n    }\n    return $result;\n}\n\n/* From an array of integers, remove\
    \ all elements that occur more than once.\nKeep order of elements left the same\
    \ as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/",
  "    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n\
    \    foreach ($numbers as $number) {\n        if (!in_array($number, $result))\
    \ {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\n\n/* From an array of integers, remove all elements that occur more than once.\n\
    Keep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $result)) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\n/* From an array of\
    \ integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n/* From an array of integers, remove\
    \ all elements that occur more than once.\nKeep order of elements left the same\
    \ as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/",
  "    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n\
    \    foreach ($numbers as $number) {\n        if (!in_array($number, $result))\
    \ {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\n\n/*\n * From an array of integers, remove all elements that occur more than\
    \ once.\n * Keep order of elements left the same as in the input.\n * >>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\n * array(1, 3, 4)\n */", "    $result = array();\n    foreach\
    \ ($numbers as $number) {\n        if (!in_array($number, $result)) {\n      \
    \      $result[] = $number;\n        }\n    }\n    return $result;\n}\n\n/* From\
    \ an array of integers, remove all elements that occur more than once.\nKeep order\
    \ of elements left the same as in the input.\n>>> remove_duplicates(array(1, 2,\
    \ 3, 2, 4))\narray(1, 3, 4)*/", "    $unique = array();\n    foreach ($numbers\
    \ as $number) {\n        if (!in_array($number, $unique)) {\n            $unique[]\
    \ = $number;\n        }\n    }\n    return $unique;\n}\n\n/* From an array of\
    \ integers, remove all elements that occur more than once.\nKeep order of elements\
    \ left the same as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\n\
    array(1, 3, 4)*/", "    $result = array();\n    foreach ($numbers as $number)\
    \ {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n\
    \        }\n    }\n    return $result;\n}\n\n/* From an array of integers, remove\
    \ all elements that occur more than once.\nKeep order of elements left the same\
    \ as in the input.\n>>> remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/",
  "    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n/* From an array of integers, remove all elements that occur\
    \ more than once.\nKeep order of elements left the same as in the input.\n>>>\
    \ remove_duplicates(array(1, 2, 3, 2, 4))\narray(1, 3, 4)*/", "    $result = array();\n\
    \    foreach ($numbers as $number) {\n        if (!in_array($number, $result))\
    \ {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\n\n/* From an array of integers, remove all elements that occur more than once.\n\
    Keep order of elements left the same as in the input.\n>>> remove_duplicates(array(1,\
    \ 2, 3, 2, 4))\narray(1, 3, 4)*/"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

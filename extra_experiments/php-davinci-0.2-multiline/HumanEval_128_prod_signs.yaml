name: HumanEval_128_prod_signs
language: php
prompt: "<?php\n/* You are given an array arr of integers and you need to return\n\
  sum of magnitudes of integers multiplied by product of all signs\nof each number\
  \ in the array, represented by 1, -1 or 0.\nNote: return null for empty arr.\nExample:\n\
  >>> prod_signs(array(1, 2, 2, -4))\n9\n>>> prod_signs(array(0, 1))\n0\n>>> prod_signs(array())\n\
  null*/\nfunction prod_signs($arr) {\n"
tests: "function candidate(...$args) {\n    return prod_signs(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array(1, 2, 2, -4)) !== -9) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(0, 1)) !== 0) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(1, 1, 1, 2, 3, -1, 1)) !== -10) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== null) { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 1, 2, -1, -1,\
  \ 9)) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
  \ 1, -1, 1)) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
  \ 1, 1, 1)) !== -4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
  \ 1, 1, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    if(empty($arr)){\n        return null;\n    }\n    $sum = 0;\n\
    \    $prod = 1;\n    foreach($arr as $value){\n        $sum += abs($value);\n\
    \        if($value > 0){\n            $prod *= 1;\n        }elseif($value < 0){\n\
    \            $prod *= -1;\n        }else{\n            $prod *= 0;\n        }\n\
    \    }\n    return $sum * $prod;\n}", "    $sum = 0;\n    $prod = 1;\n    foreach\
    \ ($arr as $value) {\n        if ($value > 0) {\n            $prod *= 1;\n   \
    \         $sum += $value;\n        } elseif ($value < 0) {\n            $prod\
    \ *= -1;\n            $sum += abs($value);\n        } else {\n            $prod\
    \ *= 0;\n        }\n    }\n    if (empty($arr)) {\n        return null;\n    }\
    \ else {\n        return $sum * $prod;\n    }\n}\necho prod_signs(array(1, 2,\
    \ 2, -4));\necho prod_signs(array(0, 1));\necho prod_signs(array());", "  if (empty($arr))\
    \ {\n    return null;\n  }\n  $sum = 0;\n  $sign = 1;\n  foreach ($arr as $value)\
    \ {\n    if ($value > 0) {\n      $sign *= 1;\n    } elseif ($value < 0) {\n \
    \     $sign *= -1;\n    } else {\n      $sign *= 0;\n    }\n    $sum += abs($value);\n\
    \  }\n  return $sum * $sign;\n}\n\necho prod_signs(array(1, 2, 2, -4));\necho\
    \ prod_signs(array(0, 1));\necho prod_signs(array());", "  if (empty($arr)) {\n\
    \    return null;\n  }\n  $signs = array_map(function($item) {\n    if ($item\
    \ < 0) {\n      return -1;\n    } elseif ($item > 0) {\n      return 1;\n    }\
    \ else {\n      return 0;\n    }\n  }, $arr);\n  $magnitudes = array_map(function($item)\
    \ {\n    return abs($item);\n  }, $arr);\n  $signs_prod = array_product($signs);\n\
    \  $magnitudes_sum = array_sum($magnitudes);\n  return $signs_prod * $magnitudes_sum;\n\
    }\necho prod_signs(array(1, 2, 2, -4));\necho prod_signs(array(0, 1));\necho prod_signs(array());",
  "    if (empty($arr)) {\n        return null;\n    }\n    $sum = 0;\n    $prod =\
    \ 1;\n    foreach ($arr as $value) {\n        if ($value > 0) {\n            $sum\
    \ += $value;\n            $prod *= 1;\n        } elseif ($value < 0) {\n     \
    \       $sum += abs($value);\n            $prod *= -1;\n        } else {\n   \
    \         $prod *= 0;\n        }\n    }\n    return $sum * $prod;\n}\necho prod_signs(array(1,\
    \ 2, 2, -4));\necho prod_signs(array(0, 1));\necho prod_signs(array());", "  \
    \  if (empty($arr)) {\n        return null;\n    }\n    $sum = 0;\n    $prod =\
    \ 1;\n    foreach ($arr as $num) {\n        if ($num > 0) {\n            $sum\
    \ += $num;\n            $prod *= 1;\n        } elseif ($num < 0) {\n         \
    \   $sum += abs($num);\n            $prod *= -1;\n        } else {\n         \
    \   $prod *= 0;\n        }\n    }\n    return $sum * $prod;\n}", "    if(empty($arr))\
    \ return null;\n    $signs = array_map(function($num) {\n        if($num > 0)\
    \ return 1;\n        if($num < 0) return -1;\n        return 0;\n    }, $arr);\n\
    \    $prod = array_product($signs);\n    $magnitudes = array_map(function($num)\
    \ {\n        return abs($num);\n    }, $arr);\n    $sum = array_sum($magnitudes);\n\
    \    return $prod * $sum;\n}\n\n/*\n * Test code\n */\necho prod_signs(array(1,\
    \ 2, 2, -4)) . \"\\n\";\necho prod_signs(array(0, 1)) . \"\\n\";\necho prod_signs(array())\
    \ . \"\\n\";", "\tif (empty($arr)) {\n\t\treturn null;\n\t}\n\t$sum = 0;\n\t$prod\
    \ = 1;\n\tforeach ($arr as $value) {\n\t\tif ($value > 0) {\n\t\t\t$sum += $value;\n\
    \t\t\t$prod *= 1;\n\t\t} elseif ($value < 0) {\n\t\t\t$sum += abs($value);\n\t\
    \t\t$prod *= -1;\n\t\t} else {\n\t\t\t$prod *= 0;\n\t\t}\n\t}\n\treturn $sum *\
    \ $prod;\n}\n\n/* You are given an array arr of integers and you need to return\n\
    sum of magnitudes of integers multiplied by product of all signs\nof each number\
    \ in the array, represented by 1, -1 or 0.\nNote: return null for empty arr.\n\
    Example:\n>>> prod_signs(array(1, 2, 2, -4))\n9\n>>> prod_signs(array(0, 1))\n\
    0\n>>> prod_signs(array())\nnull*/", "    if (empty($arr)) {\n        return null;\n\
    \    }\n    $signs = array_map(function($n) {\n        if ($n > 0) {\n       \
    \     return 1;\n        } elseif ($n < 0) {\n            return -1;\n       \
    \ } else {\n            return 0;\n        }\n    }, $arr);\n    $magnitudes =\
    \ array_map(function($n) {\n        return abs($n);\n    }, $arr);\n    $signs_product\
    \ = array_product($signs);\n    $magnitudes_sum = array_sum($magnitudes);\n  \
    \  return $signs_product * $magnitudes_sum;\n}", "\tif (empty($arr)) {\n\t\treturn\
    \ null;\n\t}\n\t$sum = 0;\n\t$prod = 1;\n\tforeach ($arr as $value) {\n\t\t$sum\
    \ += abs($value);\n\t\t$prod *= $value < 0 ? -1 : ($value > 0 ? 1 : 0);\n\t}\n\
    \treturn $sum * $prod;\n}\n\n/* You are given an array arr of integers and you\
    \ need to return\nsum of magnitudes of integers multiplied by product of all signs\n\
    of each number in the array, represented by 1, -1 or 0.\nNote: return null for\
    \ empty arr.\nExample:\n>>> prod_signs(array(1, 2, 2, -4))\n9\n>>> prod_signs(array(0,\
    \ 1))\n0\n>>> prod_signs(array())\nnull*/", "    if (empty($arr)) {\n        return\
    \ null;\n    }\n    $signs = array_map(function($num) {\n        if ($num > 0)\
    \ {\n            return 1;\n        } elseif ($num < 0) {\n            return\
    \ -1;\n        } else {\n            return 0;\n        }\n    }, $arr);\n   \
    \ $magnitudes = array_map(function($num) {\n        return abs($num);\n    },\
    \ $arr);\n    $sign_prod = array_product($signs);\n    $magnitude_sum = array_sum($magnitudes);\n\
    \    return $sign_prod * $magnitude_sum;\n}\n\n/* You are given an array arr of\
    \ integers and you need to return\nsum of magnitudes of integers multiplied by\
    \ product of all signs\nof each number in the array, represented by 1, -1 or 0.\n\
    Note: return null for empty arr.\nExample:\n>>> prod_signs(array(1, 2, 2, -4))\n\
    9\n>>> prod_signs(array(0, 1))\n0\n>>> prod_signs(array())\nnull*/", "    if (empty($arr))\
    \ {\n        return null;\n    }\n    $sum = 0;\n    $prod = 1;\n    foreach ($arr\
    \ as $value) {\n        $sum += abs($value);\n        if ($value > 0) {\n    \
    \        $prod *= 1;\n        } elseif ($value < 0) {\n            $prod *= -1;\n\
    \        } else {\n            $prod *= 0;\n        }\n    }\n    return $sum\
    \ * $prod;\n}\necho prod_signs(array(1, 2, 2, -4));", "    if (empty($arr)) {\n\
    \        return null;\n    }\n    $product = 1;\n    $sum = 0;\n    foreach ($arr\
    \ as $value) {\n        if ($value > 0) {\n            $product *= 1;\n      \
    \      $sum += $value;\n        } elseif ($value < 0) {\n            $product\
    \ *= -1;\n            $sum += abs($value);\n        } else {\n            $product\
    \ *= 0;\n        }\n    }\n    return $sum * $product;\n}\necho prod_signs(array(1,\
    \ 2, 2, -4));\necho \"\\n\";\necho prod_signs(array(0, 1));\necho \"\\n\";\necho\
    \ prod_signs(array());\necho \"\\n\";", "\tif (empty($arr)) {\n\t\treturn null;\n\
    \t}\n\t$sum = 0;\n\t$prod = 1;\n\tforeach ($arr as $value) {\n\t\t$sum += abs($value);\n\
    \t\tif ($value > 0) {\n\t\t\t$prod *= 1;\n\t\t} elseif ($value < 0) {\n\t\t\t\
    $prod *= -1;\n\t\t} else {\n\t\t\t$prod *= 0;\n\t\t}\n\t}\n\treturn $sum * $prod;\n\
    }\necho prod_signs(array(1, 2, 2, -4));\necho prod_signs(array(0, 1));\necho prod_signs(array());",
  "    if (empty($arr)) {\n        return null;\n    }\n    $sum = 0;\n    $product\
    \ = 1;\n    foreach ($arr as $value) {\n        if ($value > 0) {\n          \
    \  $product *= 1;\n            $sum += $value;\n        } elseif ($value < 0)\
    \ {\n            $product *= -1;\n            $sum += abs($value);\n        }\
    \ else {\n            $product *= 0;\n        }\n    }\n    return $sum * $product;\n\
    }\necho prod_signs(array(1, 2, 2, -4));\necho prod_signs(array(0, 1));\necho prod_signs(array());",
  "    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function($x)\
    \ {\n        if ($x > 0) {\n            return 1;\n        } elseif ($x < 0) {\n\
    \            return -1;\n        } else {\n            return 0;\n        }\n\
    \    }, $arr);\n    $magnitudes = array_map(function($x) {\n        return abs($x);\n\
    \    }, $arr);\n    $prod = array_product($signs);\n    $sum = array_sum($magnitudes);\n\
    \    return $prod * $sum;\n}", "  if (empty($arr)) {\n    return null;\n  }\n\
    \  $signs = array_map(function($num) {\n    if ($num < 0) {\n      return -1;\n\
    \    } elseif ($num > 0) {\n      return 1;\n    } else {\n      return 0;\n \
    \   }\n  }, $arr);\n  $signs_product = array_product($signs);\n  $magnitudes =\
    \ array_map(function($num) {\n    return abs($num);\n  }, $arr);\n  $magnitudes_sum\
    \ = array_sum($magnitudes);\n  return $magnitudes_sum * $signs_product;\n}\n\n\
    echo prod_signs(array(1, 2, 2, -4));\necho \"\\n\";\necho prod_signs(array(0,\
    \ 1));\necho \"\\n\";\necho prod_signs(array());\necho \"\\n\";", "\tif (empty($arr))\
    \ {\n\t\treturn null;\n\t}\n\t$sum = 0;\n\t$prod = 1;\n\tforeach ($arr as $value)\
    \ {\n\t\tif ($value > 0) {\n\t\t\t$prod *= 1;\n\t\t\t$sum += $value;\n\t\t} elseif\
    \ ($value < 0) {\n\t\t\t$prod *= -1;\n\t\t\t$sum += $value * -1;\n\t\t} else {\n\
    \t\t\t$prod *= 0;\n\t\t}\n\t}\n\treturn $sum * $prod;\n}\necho prod_signs(array(1,\
    \ 2, 2, -4));\necho prod_signs(array(0, 1));\necho prod_signs(array());", "  \
    \  if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function($n)\
    \ {\n        if ($n < 0) {\n            return -1;\n        } elseif ($n > 0)\
    \ {\n            return 1;\n        } else {\n            return 0;\n        }\n\
    \    }, $arr);\n    $magnitudes = array_map(function($n) {\n        return abs($n);\n\
    \    }, $arr);\n    $sign_product = array_product($signs);\n    $magnitude_sum\
    \ = array_sum($magnitudes);\n    return $sign_product * $magnitude_sum;\n}\necho\
    \ prod_signs(array(1, 2, 2, -4));", "    if (empty($arr)) {\n        return null;\n\
    \    }\n    $prod = 1;\n    $sum = 0;\n    foreach ($arr as $value) {\n      \
    \  if ($value > 0) {\n            $prod *= 1;\n            $sum += $value;\n \
    \       } elseif ($value < 0) {\n            $prod *= -1;\n            $sum +=\
    \ abs($value);\n        } else {\n            $prod *= 0;\n        }\n    }\n\
    \    return $sum * $prod;\n}\necho prod_signs(array(1, 2, 2, -4));\necho prod_signs(array(0,\
    \ 1));\necho prod_signs(array());", "  if (empty($arr)) {\n    return null;\n\
    \  }\n  $sum = 0;\n  $prod = 1;\n  foreach ($arr as $value) {\n    $sum += abs($value);\n\
    \    if ($value > 0) {\n      $prod *= 1;\n    } elseif ($value < 0) {\n     \
    \ $prod *= -1;\n    } else {\n      $prod *= 0;\n    }\n  }\n  return $sum * $prod;\n\
    }\necho prod_signs(array(1, 2, 2, -4));\necho prod_signs(array(0, 1));\necho prod_signs(array());",
  "  $sum = 0;\n  $prod = 1;\n  if (empty($arr)) {\n    return null;\n  }\n  foreach\
    \ ($arr as $value) {\n    if ($value > 0) {\n      $prod *= 1;\n      $sum +=\
    \ $value;\n    } elseif ($value < 0) {\n      $prod *= -1;\n      $sum += abs($value);\n\
    \    } else {\n      $prod *= 0;\n    }\n  }\n  return $sum * $prod;\n}\necho\
    \ prod_signs(array(1, 2, 2, -4));\necho \"\\n\";\necho prod_signs(array(0, 1));\n\
    echo \"\\n\";\necho prod_signs(array());\necho \"\\n\";", "    if (empty($arr))\
    \ {\n        return null;\n    }\n    $sum = 0;\n    $product = 1;\n    foreach\
    \ ($arr as $value) {\n        $sum += abs($value);\n        if ($value > 0) {\n\
    \            $product *= 1;\n        } elseif ($value < 0) {\n            $product\
    \ *= -1;\n        } else {\n            $product *= 0;\n        }\n    }\n   \
    \ return $sum * $product;\n}\necho prod_signs(array(1, 2, 2, -4));\necho prod_signs(array(0,\
    \ 1));\necho prod_signs(array());", "  $sum = 0;\n  $prod = 1;\n  if (empty($arr))\
    \ {\n    return null;\n  }\n  foreach ($arr as $value) {\n    if ($value > 0)\
    \ {\n      $prod *= 1;\n      $sum += $value;\n    } elseif ($value < 0) {\n \
    \     $prod *= -1;\n      $sum += $value * -1;\n    } else {\n      $prod *= 0;\n\
    \    }\n  }\n  return $sum * $prod;\n}", "    if (empty($arr)) {\n        return\
    \ null;\n    }\n    $prod = 1;\n    $sum = 0;\n    foreach ($arr as $value) {\n\
    \        if ($value > 0) {\n            $prod *= 1;\n            $sum += $value;\n\
    \        } elseif ($value < 0) {\n            $prod *= -1;\n            $sum +=\
    \ abs($value);\n        } else {\n            $prod *= 0;\n        }\n    }\n\
    \    return $sum * $prod;\n}\necho prod_signs(array(1, 2, 2, -4));\necho '<br>';\n\
    echo prod_signs(array(0, 1));\necho '<br>';\necho prod_signs(array());", "  if(empty($arr))\
    \ return null;\n  $prod = 1;\n  $sum = 0;\n  foreach($arr as $num) {\n    if($num\
    \ > 0) {\n      $prod *= 1;\n      $sum += $num;\n    } elseif($num < 0) {\n \
    \     $prod *= -1;\n      $sum += abs($num);\n    } else {\n      $prod *= 0;\n\
    \    }\n  }\n  return $sum * $prod;\n}\necho prod_signs(array(1, 2, 2, -4));\n\
    echo prod_signs(array(0, 1));\necho prod_signs(array());", "  if(empty($arr))\
    \ return null;\n  $sum = 0;\n  $prod = 1;\n  foreach($arr as $num) {\n    $sum\
    \ += abs($num);\n    $prod *= $num < 0 ? -1 : ($num > 0 ? 1 : 0);\n  }\n  return\
    \ $sum * $prod;\n}\n\n/* You are given an array arr of integers.\nYou need to\
    \ return an array of integers where each integer\nis the sum of all integers in\
    \ arr except for the integer at\nthat index.\nExample:\n>>> sum_except_self(array(1,\
    \ 2, 3, 4))\narray(9, 8, 7, 6)\n>>> sum_except_self(array(1, 2, 3, 4, 5))\narray(14,\
    \ 13, 12, 11, 10)\n>>> sum_except_self(array(1, 2, 3, 4, 5, 6))\narray(20, 19,\
    \ 18, 17, 16, 15)*/", "    $signs = array_map(function($n) {\n        if ($n <\
    \ 0) {\n            return -1;\n        } elseif ($n > 0) {\n            return\
    \ 1;\n        } else {\n            return 0;\n        }\n    }, $arr);\n    $signs_product\
    \ = array_product($signs);\n    $magnitudes = array_map(function($n) {\n     \
    \   return abs($n);\n    }, $arr);\n    $magnitudes_sum = array_sum($magnitudes);\n\
    \    return $magnitudes_sum * $signs_product;\n}\n\n/*\nYou are given an array\
    \ arr of integers and you need to return\nsum of magnitudes of integers multiplied\
    \ by product of all signs\nof each number in the array, represented by 1, -1 or\
    \ 0.\nNote: return null for empty arr.\nExample:\n>>> prod_signs(array(1, 2, 2,\
    \ -4))\n9\n>>> prod_signs(array(0, 1))\n0\n>>> prod_signs(array())\nnull\n*/",
  "  if (empty($arr)) {\n    return null;\n  }\n  $signs = array_map(function($n)\
    \ {\n    if ($n > 0) {\n      return 1;\n    } elseif ($n < 0) {\n      return\
    \ -1;\n    } else {\n      return 0;\n    }\n  }, $arr);\n  $signs_prod = array_product($signs);\n\
    \  $magnitudes = array_map(function($n) {\n    return abs($n);\n  }, $arr);\n\
    \  $magnitudes_sum = array_sum($magnitudes);\n  return $magnitudes_sum * $signs_prod;\n\
    }", "\tif(empty($arr)) {\n\t\treturn null;\n\t}\n\t$prod = 1;\n\t$sum = 0;\n\t\
    foreach($arr as $value) {\n\t\tif($value > 0) {\n\t\t\t$prod *= 1;\n\t\t\t$sum\
    \ += $value;\n\t\t} elseif($value < 0) {\n\t\t\t$prod *= -1;\n\t\t\t$sum += $value\
    \ * -1;\n\t\t} else {\n\t\t\t$prod *= 0;\n\t\t}\n\t}\n\treturn $sum * $prod;\n\
    }", "    if (empty($arr)) return null;\n    $sum = 0;\n    $product = 1;\n   \
    \ foreach ($arr as $value) {\n        $sum += abs($value);\n        if ($value\
    \ != 0) $product *= $value / abs($value);\n    }\n    return $sum * $product;\n\
    }\necho prod_signs(array(1, 2, 2, -4));\necho prod_signs(array(0, 1));\necho prod_signs(array());",
  "    if(empty($arr)) return null;\n    $sum = 0;\n    $product = 1;\n    foreach($arr\
    \ as $value) {\n        $sum += abs($value);\n        $product *= $value < 0 ?\
    \ -1 : ($value > 0 ? 1 : 0);\n    }\n    return $sum * $product;\n}\necho prod_signs(array(1,\
    \ 2, 2, -4));\necho prod_signs(array(0, 1));\necho prod_signs(array());", "\t\
    if (empty($arr)) return null;\n\t$sum = 0;\n\t$prod = 1;\n\tforeach ($arr as $value)\
    \ {\n\t\tif ($value > 0) {\n\t\t\t$sum += $value;\n\t\t\t$prod *= 1;\n\t\t} elseif\
    \ ($value < 0) {\n\t\t\t$sum += abs($value);\n\t\t\t$prod *= -1;\n\t\t} else {\n\
    \t\t\t$prod *= 0;\n\t\t}\n\t}\n\treturn $sum * $prod;\n}", "  $sum = 0;\n  $prod\
    \ = 1;\n  if (empty($arr)) {\n    return null;\n  }\n  foreach ($arr as $value)\
    \ {\n    if ($value > 0) {\n      $prod *= 1;\n      $sum += $value;\n    } elseif\
    \ ($value < 0) {\n      $prod *= -1;\n      $sum += abs($value);\n    } else {\n\
    \      $prod *= 0;\n    }\n  }\n  return $sum * $prod;\n}", "\tif (empty($arr))\
    \ {\n\t\treturn null;\n\t}\n\t$sum = 0;\n\t$prod = 1;\n\tforeach ($arr as $value)\
    \ {\n\t\t$sum += abs($value);\n\t\tif ($value > 0) {\n\t\t\t$prod *= 1;\n\t\t\
    } elseif ($value < 0) {\n\t\t\t$prod *= -1;\n\t\t} else {\n\t\t\t$prod *= 0;\n\
    \t\t}\n\t}\n\treturn $sum * $prod;\n}\n\n/*\nYou are given an array of integers\
    \ and you need to return\nthe sum of all elements of the array.\nExample:\n>>>\
    \ sum_all(array(1, 2, 3))\n6\n>>> sum_all(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10))\n\
    55\n>>> sum_all(array())\n0\n*/", "  if(empty($arr)) return null;\n  $signs =\
    \ array_map(function($n) {\n    if($n > 0) return 1;\n    if($n < 0) return -1;\n\
    \    return 0;\n  }, $arr);\n  $prod = array_product($signs);\n  $mags = array_map(function($n)\
    \ {\n    return abs($n);\n  }, $arr);\n  $sum = array_sum($mags);\n  return $sum\
    \ * $prod;\n}\necho prod_signs(array(1, 2, 2, -4));\necho prod_signs(array(0,\
    \ 1));\necho prod_signs(array());", "\tif (empty($arr)) {\n\t\treturn null;\n\t\
    }\n\t$sum = 0;\n\t$prod = 1;\n\tforeach ($arr as $value) {\n\t\tif ($value > 0)\
    \ {\n\t\t\t$sum += $value;\n\t\t\t$prod *= 1;\n\t\t} elseif ($value < 0) {\n\t\
    \t\t$sum += $value;\n\t\t\t$prod *= -1;\n\t\t} else {\n\t\t\t$prod *= 0;\n\t\t\
    }\n\t}\n\treturn $sum * $prod;\n}", "    if (empty($arr)) {\n        return null;\n\
    \    }\n    $signs = array_map(function($n) {\n        if ($n > 0) {\n       \
    \     return 1;\n        } elseif ($n < 0) {\n            return -1;\n       \
    \ } else {\n            return 0;\n        }\n    }, $arr);\n    $magnitudes =\
    \ array_map(function($n) {\n        return abs($n);\n    }, $arr);\n    $sign_product\
    \ = array_product($signs);\n    $magnitude_sum = array_sum($magnitudes);\n   \
    \ return $sign_product * $magnitude_sum;\n}", "  if(empty($arr)){\n    return\
    \ null;\n  }\n  $sign = 1;\n  $sum = 0;\n  foreach($arr as $value){\n    if($value\
    \ < 0){\n      $sign *= -1;\n    }\n    $sum += abs($value);\n  }\n  return $sum\
    \ * $sign;\n}\necho prod_signs(array(1, 2, 2, -4));\necho prod_signs(array(0,\
    \ 1));\necho prod_signs(array());", "    $sum = 0;\n    $prod = 1;\n    if(empty($arr)){\n\
    \        return null;\n    }\n    foreach($arr as $value){\n        $sum += abs($value);\n\
    \        if($value > 0){\n            $prod *= 1;\n        }\n        elseif($value\
    \ < 0){\n            $prod *= -1;\n        }\n        else{\n            $prod\
    \ *= 0;\n        }\n    }\n    return $sum * $prod;\n}", "    if (count($arr)\
    \ == 0) {\n        return null;\n    }\n    $signs = array_map(function($n) {\n\
    \        if ($n > 0) {\n            return 1;\n        } elseif ($n < 0) {\n \
    \           return -1;\n        } else {\n            return 0;\n        }\n \
    \   }, $arr);\n    $magnitudes = array_map(function($n) {\n        return abs($n);\n\
    \    }, $arr);\n    $sign_product = array_product($signs);\n    $magnitude_sum\
    \ = array_sum($magnitudes);\n    return $sign_product * $magnitude_sum;\n}", "\t\
    if (empty($arr)) {\n\t\treturn null;\n\t}\n\t$sum = 0;\n\t$prod = 1;\n\tforeach\
    \ ($arr as $value) {\n\t\tif ($value > 0) {\n\t\t\t$sum += $value;\n\t\t\t$prod\
    \ *= 1;\n\t\t} elseif ($value < 0) {\n\t\t\t$sum += $value;\n\t\t\t$prod *= -1;\n\
    \t\t} else {\n\t\t\t$prod *= 0;\n\t\t}\n\t}\n\treturn $sum * $prod;\n}\n\n/* You\
    \ are given an array arr of integers and you need to return\nsum of magnitudes\
    \ of integers multiplied by product of all signs\nof each number in the array,\
    \ represented by 1, -1 or 0.\nNote: return null for empty arr.\nExample:\n>>>\
    \ prod_signs(array(1, 2, 2, -4))\n9\n>>> prod_signs(array(0, 1))\n0\n>>> prod_signs(array())\n\
    null*/", "  if (empty($arr)) {\n    return null;\n  }\n  $sum = 0;\n  $sign =\
    \ 1;\n  foreach ($arr as $value) {\n    if ($value > 0) {\n      $sign *= 1;\n\
    \    } elseif ($value < 0) {\n      $sign *= -1;\n    } else {\n      $sign *=\
    \ 0;\n    }\n    $sum += abs($value);\n  }\n  return $sum * $sign;\n}\n\n/* You\
    \ are given an array arr of integers and you need to return\nsum of magnitudes\
    \ of integers multiplied by product of all signs\nof each number in the array,\
    \ represented by 1, -1 or 0.\nNote: return null for empty arr.\nExample:\n>>>\
    \ prod_signs(array(1, 2, 2, -4))\n9\n>>> prod_signs(array(0, 1))\n0\n>>> prod_signs(array())\n\
    null*/", "    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function($x)\
    \ {\n        if ($x > 0) {\n            return 1;\n        } elseif ($x < 0) {\n\
    \            return -1;\n        } else {\n            return 0;\n        }\n\
    \    }, $arr);\n    $magnitudes = array_map(function($x) {\n        return abs($x);\n\
    \    }, $arr);\n    $signs_prod = array_product($signs);\n    $magnitudes_sum\
    \ = array_sum($magnitudes);\n    return $signs_prod * $magnitudes_sum;\n}", " \
    \ if (empty($arr)) {\n    return null;\n  }\n  $sum = 0;\n  $prod = 1;\n  foreach\
    \ ($arr as $value) {\n    if ($value > 0) {\n      $prod *= 1;\n      $sum +=\
    \ $value;\n    } elseif ($value < 0) {\n      $prod *= -1;\n      $sum += abs($value);\n\
    \    } else {\n      $prod *= 0;\n    }\n  }\n  return $sum * $prod;\n}\necho\
    \ prod_signs(array(1, 2, 2, -4));\necho prod_signs(array(0, 1));\necho prod_signs(array());",
  "    if(empty($arr)) {\n        return null;\n    }\n    $prod = 1;\n    $sum =\
    \ 0;\n    foreach($arr as $num) {\n        if($num > 0) {\n            $prod *=\
    \ 1;\n            $sum += $num;\n        } elseif($num < 0) {\n            $prod\
    \ *= -1;\n            $sum += abs($num);\n        } else {\n            $prod\
    \ *= 0;\n        }\n    }\n    return $sum * $prod;\n}\necho prod_signs(array(1,\
    \ 2, 2, -4));\necho prod_signs(array(0, 1));\necho prod_signs(array());", "  \
    \  if (empty($arr)) {\n        return null;\n    }\n    $sum = 0;\n    $prod =\
    \ 1;\n    foreach ($arr as $value) {\n        if ($value > 0) {\n            $sum\
    \ += $value;\n            $prod *= 1;\n        } elseif ($value < 0) {\n     \
    \       $sum += abs($value);\n            $prod *= -1;\n        } else {\n   \
    \         $prod *= 0;\n        }\n    }\n    return $sum * $prod;\n}\necho prod_signs(array(1,\
    \ 2, 2, -4));", "    if (empty($arr)) return null;\n    $signs = array_map(function($n)\
    \ {\n        if ($n > 0) return 1;\n        if ($n < 0) return -1;\n        return\
    \ 0;\n    }, $arr);\n    $signs_prod = array_product($signs);\n    $magnitudes\
    \ = array_map(function($n) {\n        return abs($n);\n    }, $arr);\n    $magnitudes_sum\
    \ = array_sum($magnitudes);\n    return $magnitudes_sum * $signs_prod;\n}\n\n\
    /*\nYou are given an array arr of integers and you need to return\nsum of magnitudes\
    \ of integers multiplied by product of all signs\nof each number in the array,\
    \ represented by 1, -1 or 0.\nNote: return null for empty arr.\nExample:\n>>>\
    \ prod_signs(array(1, 2, 2, -4))\n9\n>>> prod_signs(array(0, 1))\n0\n>>> prod_signs(array())\n\
    null\n*/", "  if (empty($arr)) {\n    return null;\n  }\n  $signs = array_map(function($num)\
    \ {\n    if ($num > 0) {\n      return 1;\n    } elseif ($num < 0) {\n      return\
    \ -1;\n    } else {\n      return 0;\n    }\n  }, $arr);\n  $product = array_product($signs);\n\
    \  $magnitudes = array_map(function($num) {\n    return abs($num);\n  }, $arr);\n\
    \  $sum = array_sum($magnitudes);\n  return $sum * $product;\n}\n\n/* You are\
    \ given an array arr of integers and you need to return\nsum of magnitudes of\
    \ integers multiplied by product of all signs\nof each number in the array, represented\
    \ by 1, -1 or 0.\nNote: return null for empty arr.\nExample:\n>>> prod_signs(array(1,\
    \ 2, 2, -4))\n9\n>>> prod_signs(array(0, 1))\n0\n>>> prod_signs(array())\nnull*/",
  "    if (empty($arr)) return null;\n    $sum = 0;\n    $prod = 1;\n    foreach ($arr\
    \ as $num) {\n        $sum += abs($num);\n        $prod *= ($num > 0) ? 1 : (($num\
    \ < 0) ? -1 : 0);\n    }\n    return $sum * $prod;\n}\nprint_r(prod_signs(array(1,\
    \ 2, 2, -4)));\nprint_r(prod_signs(array(0, 1)));\nprint_r(prod_signs(array()));",
  "    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function($n)\
    \ {\n        if ($n > 0) {\n            return 1;\n        } elseif ($n < 0) {\n\
    \            return -1;\n        } else {\n            return 0;\n        }\n\
    \    }, $arr);\n    $signs_prod = array_product($signs);\n    $magnitudes = array_map(function($n)\
    \ {\n        return abs($n);\n    }, $arr);\n    $magnitudes_sum = array_sum($magnitudes);\n\
    \    return $magnitudes_sum * $signs_prod;\n}", "  if (empty($arr)) {\n    return\
    \ null;\n  }\n  $signs = array_map(function($n) {\n    if ($n > 0) {\n      return\
    \ 1;\n    } elseif ($n < 0) {\n      return -1;\n    } else {\n      return 0;\n\
    \    }\n  }, $arr);\n  $sign_prod = array_product($signs);\n  $magnitudes = array_map(function($n)\
    \ {\n    return abs($n);\n  }, $arr);\n  $magnitude_sum = array_sum($magnitudes);\n\
    \  return $sign_prod * $magnitude_sum;\n}\n\n/* You are given an array arr of\
    \ integers and you need to return\nsum of magnitudes of integers multiplied by\
    \ product of all signs\nof each number in the array, represented by 1, -1 or 0.\n\
    Note: return null for empty arr.\nExample:\n>>> prod_signs(array(1, 2, 2, -4))\n\
    9\n>>> prod_signs(array(0, 1))\n0\n>>> prod_signs(array())\nnull*/", "    if (empty($arr))\
    \ {\n        return null;\n    }\n    $prod = 1;\n    $sum = 0;\n    foreach ($arr\
    \ as $value) {\n        if ($value > 0) {\n            $prod *= 1;\n         \
    \   $sum += $value;\n        } elseif ($value < 0) {\n            $prod *= -1;\n\
    \            $sum += abs($value);\n        } else {\n            $prod *= 0;\n\
    \        }\n    }\n    return $sum * $prod;\n}\necho prod_signs(array(1, 2, 2,\
    \ -4));\necho prod_signs(array(0, 1));\necho prod_signs(array());", "    if (empty($arr))\
    \ {\n        return null;\n    }\n    $signs = array_map(function($n) {\n    \
    \    if ($n > 0) {\n            return 1;\n        } elseif ($n < 0) {\n     \
    \       return -1;\n        } else {\n            return 0;\n        }\n    },\
    \ $arr);\n    $magnitudes = array_map(function($n) {\n        return abs($n);\n\
    \    }, $arr);\n    $sign_prod = array_product($signs);\n    $magnitude_sum =\
    \ array_sum($magnitudes);\n    return $sign_prod * $magnitude_sum;\n}", "\tif\
    \ (empty($arr)) {\n\t\treturn null;\n\t}\n\t$sum = 0;\n\t$prod = 1;\n\tforeach\
    \ ($arr as $value) {\n\t\tif ($value > 0) {\n\t\t\t$prod *= 1;\n\t\t\t$sum +=\
    \ $value;\n\t\t} elseif ($value < 0) {\n\t\t\t$prod *= -1;\n\t\t\t$sum += abs($value);\n\
    \t\t} else {\n\t\t\t$prod *= 0;\n\t\t}\n\t}\n\treturn $sum * $prod;\n}\necho prod_signs(array(1,\
    \ 2, 2, -4));\necho prod_signs(array(0, 1));\necho prod_signs(array());", "  \
    \  if (empty($arr)) {\n        return null;\n    }\n    $signs = 1;\n    $magnitudes\
    \ = 0;\n    foreach ($arr as $value) {\n        $signs *= $value <=> 0;\n    \
    \    $magnitudes += abs($value);\n    }\n    return $magnitudes * $signs;\n}\n\
    \n/* You are given an array arr of integers and you need to return\nsum of magnitudes\
    \ of integers multiplied by product of all signs\nof each number in the array,\
    \ represented by 1, -1 or 0.\nNote: return null for empty arr.\nExample:\n>>>\
    \ prod_signs(array(1, 2, 2, -4))\n9\n>>> prod_signs(array(0, 1))\n0\n>>> prod_signs(array())\n\
    null*/", "    $sum = 0;\n    $prod = 1;\n    if (empty($arr)) {\n        return\
    \ null;\n    }\n    foreach ($arr as $value) {\n        if ($value > 0) {\n  \
    \          $sum += $value;\n            $prod *= 1;\n        } elseif ($value\
    \ < 0) {\n            $sum += abs($value);\n            $prod *= -1;\n       \
    \ } else {\n            $prod *= 0;\n        }\n    }\n    return $sum * $prod;\n\
    }\necho prod_signs(array(1, 2, 2, -4));\necho \"<br>\";\necho prod_signs(array(0,\
    \ 1));\necho \"<br>\";\necho prod_signs(array());", "    if (empty($arr)) {\n\
    \        return null;\n    }\n    $sum = 0;\n    $prod = 1;\n    foreach ($arr\
    \ as $value) {\n        $sum += abs($value);\n        if ($value > 0) {\n    \
    \        $prod *= 1;\n        } elseif ($value < 0) {\n            $prod *= -1;\n\
    \        } else {\n            $prod *= 0;\n        }\n    }\n    return $sum\
    \ * $prod;\n}\necho prod_signs(array(1, 2, 2, -4));\necho prod_signs(array(0,\
    \ 1));\necho prod_signs(array());", "    if (empty($arr)) return null;\n    $sum\
    \ = 0;\n    $prod = 1;\n    foreach ($arr as $value) {\n        $sum += abs($value);\n\
    \        $prod *= $value == 0 ? 1 : $value / abs($value);\n    }\n    return $sum\
    \ * $prod;\n}\n\n/*\n * You are given an array arr of integers and you need to\
    \ return\n * sum of magnitudes of integers multiplied by product of all signs\n\
    \ * of each number in the array, represented by 1, -1 or 0.\n * Note: return null\
    \ for empty arr.\n * Example:\n * >>> prod_signs(array(1, 2, 2, -4))\n * 9\n *\
    \ >>> prod_signs(array(0, 1))\n * 0\n * >>> prod_signs(array())\n * null\n */",
  "  if (empty($arr)) {\n    return null;\n  }\n  $sum = 0;\n  $product = 1;\n  foreach\
    \ ($arr as $value) {\n    $sum += abs($value);\n    if ($value > 0) {\n      $product\
    \ *= 1;\n    } elseif ($value < 0) {\n      $product *= -1;\n    } else {\n  \
    \    $product *= 0;\n    }\n  }\n  return $sum * $product;\n}\n\necho prod_signs(array(1,\
    \ 2, 2, -4));\necho prod_signs(array(0, 1));\necho prod_signs(array());", "\t\
    if (empty($arr)) {\n\t\treturn null;\n\t}\n\t$sum = 0;\n\t$prod = 1;\n\tforeach\
    \ ($arr as $value) {\n\t\tif ($value > 0) {\n\t\t\t$prod *= 1;\n\t\t\t$sum +=\
    \ $value;\n\t\t} elseif ($value < 0) {\n\t\t\t$prod *= -1;\n\t\t\t$sum += abs($value);\n\
    \t\t} else {\n\t\t\t$prod *= 0;\n\t\t}\n\t}\n\treturn $sum * $prod;\n}\necho prod_signs(array(1,\
    \ 2, 2, -4));", "    if (empty($arr)) {\n        return null;\n    }\n    $signs\
    \ = array_map(function($num) {\n        if ($num > 0) {\n            return 1;\n\
    \        } elseif ($num < 0) {\n            return -1;\n        } else {\n   \
    \         return 0;\n        }\n    }, $arr);\n    $magnitudes = array_map(function($num)\
    \ {\n        return abs($num);\n    }, $arr);\n    $sign_product = array_product($signs);\n\
    \    $magnitude_sum = array_sum($magnitudes);\n    return $sign_product * $magnitude_sum;\n\
    }", "\tif (empty($arr)) {\n\t\treturn null;\n\t}\n\t$sum = 0;\n\t$prod = 1;\n\t\
    foreach ($arr as $value) {\n\t\t$sum += abs($value);\n\t\tif ($value > 0) {\n\t\
    \t\t$prod *= 1;\n\t\t} elseif ($value < 0) {\n\t\t\t$prod *= -1;\n\t\t} else {\n\
    \t\t\t$prod *= 0;\n\t\t}\n\t}\n\treturn $sum * $prod;\n}\n\n/*\nYou are given\
    \ an array arr of integers and you need to return\nsum of magnitudes of integers\
    \ multiplied by product of all signs\nof each number in the array, represented\
    \ by 1, -1 or 0.\nNote: return null for empty arr.\nExample:\n>>> prod_signs(array(1,\
    \ 2, 2, -4))\n9\n>>> prod_signs(array(0, 1))\n0\n>>> prod_signs(array())\nnull\n\
    */", "  if (empty($arr)) {\n    return null;\n  }\n  $signs = array_map(function($x)\
    \ {\n    if ($x > 0) {\n      return 1;\n    } elseif ($x < 0) {\n      return\
    \ -1;\n    } else {\n      return 0;\n    }\n  }, $arr);\n  $magnitudes = array_map(function($x)\
    \ {\n    return abs($x);\n  }, $arr);\n  $product = array_product($signs);\n \
    \ $sum = array_sum($magnitudes);\n  return $product * $sum;\n}\n\necho prod_signs(array(1,\
    \ 2, 2, -4));\necho \"\\n\";\necho prod_signs(array(0, 1));\necho \"\\n\";\necho\
    \ prod_signs(array());\necho \"\\n\";", "\tif (empty($arr)) {\n\t\treturn null;\n\
    \t}\n\t$signs = array_map(function($n) {\n\t\tif ($n > 0) {\n\t\t\treturn 1;\n\
    \t\t} elseif ($n < 0) {\n\t\t\treturn -1;\n\t\t} else {\n\t\t\treturn 0;\n\t\t\
    }\n\t}, $arr);\n\t$magnitudes = array_map(function($n) {\n\t\treturn abs($n);\n\
    \t}, $arr);\n\t$prod = array_product($signs);\n\t$sum = array_sum($magnitudes);\n\
    \treturn $prod * $sum;\n}\necho prod_signs(array(1, 2, 2, -4));\necho prod_signs(array(0,\
    \ 1));\necho prod_signs(array());", "    if (empty($arr)) {\n        return null;\n\
    \    }\n    $sum = 0;\n    $prod = 1;\n    foreach ($arr as $value) {\n      \
    \  $sum += abs($value);\n        if ($value > 0) {\n            $prod *= 1;\n\
    \        } elseif ($value < 0) {\n            $prod *= -1;\n        } else {\n\
    \            $prod *= 0;\n        }\n    }\n    return $sum * $prod;\n}", "  \
    \  if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function($n)\
    \ {\n        if ($n > 0) {\n            return 1;\n        } elseif ($n < 0) {\n\
    \            return -1;\n        } else {\n            return 0;\n        }\n\
    \    }, $arr);\n    $magnitudes = array_map(function($n) {\n        return abs($n);\n\
    \    }, $arr);\n    $signs_prod = array_product($signs);\n    $magnitudes_sum\
    \ = array_sum($magnitudes);\n    return $signs_prod * $magnitudes_sum;\n}", " \
    \   if (empty($arr)) {\n        return null;\n    }\n    $sum = 0;\n    $product\
    \ = 1;\n    foreach ($arr as $value) {\n        if ($value > 0) {\n          \
    \  $product *= 1;\n            $sum += $value;\n        } elseif ($value < 0)\
    \ {\n            $product *= -1;\n            $sum += abs($value);\n        }\
    \ else {\n            $product *= 0;\n        }\n    }\n    return $sum * $product;\n\
    }\n\n/*\n * \u0414\u0430\u043D \u043C\u0430\u0441\u0441\u0438\u0432 \u0441 \u0447\
    \u0438\u0441\u043B\u0430\u043C\u0438. \u0412\u044B\u0432\u0435\u0434\u0438\u0442\
    \u0435 \u043F\u043E\u0441\u043B\u0435\u0434\u043E\u0432\u0430\u0442\u0435\u043B\
    \u044C\u043D\u043E \u0435\u0433\u043E \u044D\u043B\u0435\u043C\u0435\u043D\u0442\
    \u044B \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u0443\u044F \u0440\u0435\u043A\
    \u0443\u0440\u0441\u0438\u044E \u0438 \u043D\u0435 \u0438\u0441\u043F\u043E\u043B\
    \u044C\u0437\u0443\u044F \u0446\u0438\u043A\u043B.\n */", "    if (empty($arr))\
    \ {\n        return null;\n    }\n    $signs = array_map(function($n) {\n    \
    \    if ($n > 0) {\n            return 1;\n        } elseif ($n < 0) {\n     \
    \       return -1;\n        } else {\n            return 0;\n        }\n    },\
    \ $arr);\n    $prod = array_product($signs);\n    $magnitudes = array_map(function($n)\
    \ {\n        return abs($n);\n    }, $arr);\n    $sum = array_sum($magnitudes);\n\
    \    return $sum * $prod;\n}\necho prod_signs(array(1, 2, 2, -4));\necho prod_signs(array(0,\
    \ 1));\necho prod_signs(array());", "    if (empty($arr)) {\n        return null;\n\
    \    }\n    $signs = array_map(function($n) {\n        if ($n > 0) {\n       \
    \     return 1;\n        } elseif ($n < 0) {\n            return -1;\n       \
    \ } else {\n            return 0;\n        }\n    }, $arr);\n    $signs_prod =\
    \ array_product($signs);\n    $magnitudes = array_map(function($n) {\n       \
    \ return abs($n);\n    }, $arr);\n    $magnitudes_sum = array_sum($magnitudes);\n\
    \    return $magnitudes_sum * $signs_prod;\n}\n\n/* You are given an array arr\
    \ of integers and you need to return\nsum of magnitudes of integers multiplied\
    \ by product of all signs\nof each number in the array, represented by 1, -1 or\
    \ 0.\nNote: return null for empty arr.\nExample:\n>>> prod_signs(array(1, 2, 2,\
    \ -4))\n9\n>>> prod_signs(array(0, 1))\n0\n>>> prod_signs(array())\nnull*/", "\t\
    if(empty($arr)) {\n\t\treturn null;\n\t}\n\t$sum = 0;\n\t$product = 1;\n\tforeach($arr\
    \ as $value) {\n\t\tif($value > 0) {\n\t\t\t$product *= 1;\n\t\t\t$sum += $value;\n\
    \t\t} elseif($value < 0) {\n\t\t\t$product *= -1;\n\t\t\t$sum += abs($value);\n\
    \t\t} else {\n\t\t\t$product *= 0;\n\t\t}\n\t}\n\treturn $sum * $product;\n}\n\
    \necho prod_signs(array(1, 2, 2, -4));\necho prod_signs(array(0, 1));\necho prod_signs(array());",
  "  if (empty($arr)) {\n    return null;\n  }\n  $signs = array_map(function($num)\
    \ {\n    if ($num > 0) {\n      return 1;\n    } elseif ($num < 0) {\n      return\
    \ -1;\n    } else {\n      return 0;\n    }\n  }, $arr);\n  $signs_prod = array_product($signs);\n\
    \  $magnitudes = array_map(function($num) {\n    return abs($num);\n  }, $arr);\n\
    \  $magnitudes_sum = array_sum($magnitudes);\n  return $magnitudes_sum * $signs_prod;\n\
    }", "    if (empty($arr)) {\n        return null;\n    }\n    $prod = 1;\n   \
    \ $sum = 0;\n    foreach ($arr as $value) {\n        $prod *= $value <=> 0;\n\
    \        $sum += abs($value);\n    }\n    return $sum * $prod;\n}\n\n/*\n * Test\
    \ code\n */\necho prod_signs(array(1, 2, 2, -4)) . \"\\n\";\necho prod_signs(array(0,\
    \ 1)) . \"\\n\";\necho prod_signs(array()) . \"\\n\";", "  if (empty($arr)) {\n\
    \    return null;\n  }\n  $prod = 1;\n  $sum = 0;\n  foreach ($arr as $value)\
    \ {\n    if ($value > 0) {\n      $prod *= 1;\n      $sum += $value;\n    } elseif\
    \ ($value < 0) {\n      $prod *= -1;\n      $sum += abs($value);\n    } else {\n\
    \      $prod *= 0;\n    }\n  }\n  return $sum * $prod;\n}\necho prod_signs(array(1,\
    \ 2, 2, -4));", "    if (empty($arr)) {\n        return null;\n    }\n    $signs\
    \ = array_map(function($n) {\n        if ($n > 0) {\n            return 1;\n \
    \       } elseif ($n < 0) {\n            return -1;\n        } else {\n      \
    \      return 0;\n        }\n    }, $arr);\n    $signs_prod = array_product($signs);\n\
    \    $magnitudes = array_map(function($n) {\n        return abs($n);\n    }, $arr);\n\
    \    $magnitudes_sum = array_sum($magnitudes);\n    return $magnitudes_sum * $signs_prod;\n\
    }", "\tif (empty($arr)) {\n\t\treturn null;\n\t}\n\t$sum = 0;\n\t$product = 1;\n\
    \tforeach ($arr as $value) {\n\t\t$sum += abs($value);\n\t\tif ($value != 0) {\n\
    \t\t\t$product *= $value / abs($value);\n\t\t}\n\t}\n\treturn $sum * $product;\n\
    }", "  $sum = 0;\n  $prod = 1;\n  if (count($arr) == 0) {\n    return null;\n\
    \  }\n  foreach ($arr as $num) {\n    $sum += abs($num);\n    if ($num < 0) {\n\
    \      $prod *= -1;\n    } elseif ($num > 0) {\n      $prod *= 1;\n    } else\
    \ {\n      $prod *= 0;\n    }\n  }\n  return $sum * $prod;\n}\necho prod_signs(array(1,\
    \ 2, 2, -4)) . \"\\n\";\necho prod_signs(array(0, 1)) . \"\\n\";\necho prod_signs(array())\
    \ . \"\\n\";", "    if (empty($arr)) return null;\n    $sum = 0;\n    $sign =\
    \ 1;\n    foreach ($arr as $value) {\n        $sum += abs($value);\n        $sign\
    \ *= $value <=> 0;\n    }\n    return $sum * $sign;\n}\n\n/*\n>>> prod_signs(array(1,\
    \ 2, 2, -4))\n9\n>>> prod_signs(array(0, 1))\n0\n>>> prod_signs(array())\nnull\n\
    */", "\tif (empty($arr)) {\n\t\treturn null;\n\t}\n\t$sum = 0;\n\t$prod = 1;\n\
    \tforeach ($arr as $num) {\n\t\t$sum += abs($num);\n\t\tif ($num > 0) {\n\t\t\t\
    $prod *= 1;\n\t\t} elseif ($num < 0) {\n\t\t\t$prod *= -1;\n\t\t} else {\n\t\t\
    \t$prod *= 0;\n\t\t}\n\t}\n\treturn $sum * $prod;\n}\necho prod_signs(array(1,\
    \ 2, 2, -4));\necho prod_signs(array(0, 1));\necho prod_signs(array());", "  \
    \  if (empty($arr)) {\n        return null;\n    }\n    $sum = 0;\n    $product\
    \ = 1;\n    foreach ($arr as $value) {\n        if ($value > 0) {\n          \
    \  $product *= 1;\n            $sum += $value;\n        } elseif ($value < 0)\
    \ {\n            $product *= -1;\n            $sum += abs($value);\n        }\
    \ else {\n            $product *= 0;\n        }\n    }\n    return $sum * $product;\n\
    }\nprint_r(prod_signs(array(1, 2, 2, -4)));\nprint_r(prod_signs(array(0, 1)));\n\
    print_r(prod_signs(array()));", "  $sum = 0;\n  $prod = 1;\n  foreach ($arr as\
    \ $value) {\n    if ($value > 0) {\n      $prod *= 1;\n      $sum += $value;\n\
    \    } elseif ($value < 0) {\n      $prod *= -1;\n      $sum += abs($value);\n\
    \    } else {\n      $prod *= 0;\n    }\n  }\n  if ($sum == 0) {\n    return null;\n\
    \  } else {\n    return $sum * $prod;\n  }\n}\n\n/*\nWrite a function that takes\
    \ a string and returns the number of vowels in the string.\nYou may assume that\
    \ all the letters are lower cased.\nYou can treat \"y\" as a consonant.\n*/",
  "  if (empty($arr)) return null;\n  $sum = 0;\n  $prod = 1;\n  foreach ($arr as\
    \ $val) {\n    $sum += abs($val);\n    if ($val > 0) $prod *= 1;\n    elseif ($val\
    \ < 0) $prod *= -1;\n    else $prod *= 0;\n  }\n  return $sum * $prod;\n}\n\n\
    /* You are given an array arr of integers and you need to return\nsum of magnitudes\
    \ of integers multiplied by product of all signs\nof each number in the array,\
    \ represented by 1, -1 or 0.\nNote: return null for empty arr.\nExample:\n>>>\
    \ prod_signs(array(1, 2, 2, -4))\n9\n>>> prod_signs(array(0, 1))\n0\n>>> prod_signs(array())\n\
    null*/", "    $sum = 0;\n    $prod = 1;\n    if(empty($arr)) {\n        return\
    \ null;\n    }\n    foreach($arr as $value) {\n        $sum += abs($value);\n\
    \        if($value != 0) {\n            $prod *= $value / abs($value);\n     \
    \   }\n    }\n    return $sum * $prod;\n}", "    if (empty($arr)) {\n        return\
    \ null;\n    }\n    $sum = 0;\n    $product = 1;\n    foreach ($arr as $value)\
    \ {\n        if ($value > 0) {\n            $product *= 1;\n            $sum +=\
    \ $value;\n        } elseif ($value < 0) {\n            $product *= -1;\n    \
    \        $sum += abs($value);\n        } else {\n            $product *= 0;\n\
    \        }\n    }\n    return $sum * $product;\n}\necho prod_signs(array(1, 2,\
    \ 2, -4));\necho prod_signs(array(0, 1));\necho prod_signs(array());", "    if\
    \ (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function($n)\
    \ {\n        if ($n > 0) {\n            return 1;\n        } elseif ($n < 0) {\n\
    \            return -1;\n        } else {\n            return 0;\n        }\n\
    \    }, $arr);\n    $magnitudes = array_map(function($n) {\n        return abs($n);\n\
    \    }, $arr);\n    $product = array_product($signs);\n    $sum = array_sum($magnitudes);\n\
    \    return $product * $sum;\n}\necho prod_signs(array(1, 2, 2, -4));\necho prod_signs(array(0,\
    \ 1));\necho prod_signs(array());", "  if (empty($arr)) {\n    return null;\n\
    \  }\n  $sum = 0;\n  $prod = 1;\n  foreach ($arr as $num) {\n    if ($num > 0)\
    \ {\n      $prod *= 1;\n    } elseif ($num < 0) {\n      $prod *= -1;\n    } else\
    \ {\n      $prod *= 0;\n    }\n    $sum += abs($num);\n  }\n  return $sum * $prod;\n\
    }\necho prod_signs(array(1, 2, 2, -4));\necho \"\\n\";\necho prod_signs(array(0,\
    \ 1));\necho \"\\n\";\necho prod_signs(array());\necho \"\\n\";", "  if (empty($arr))\
    \ {\n    return null;\n  }\n  $sum = 0;\n  $prod = 1;\n  foreach ($arr as $value)\
    \ {\n    if ($value > 0) {\n      $sum += $value;\n      $prod *= 1;\n    } elseif\
    \ ($value < 0) {\n      $sum += abs($value);\n      $prod *= -1;\n    } else {\n\
    \      $prod *= 0;\n    }\n  }\n  return $sum * $prod;\n}\n\n/*\nYou are given\
    \ an array arr of integers and you need to return\nsum of magnitudes of integers\
    \ multiplied by product of all signs\nof each number in the array, represented\
    \ by 1, -1 or 0.\nNote: return null for empty arr.\nExample:\n>>> prod_signs(array(1,\
    \ 2, 2, -4))\n9\n>>> prod_signs(array(0, 1))\n0\n>>> prod_signs(array())\nnull\n\
    */", "  if (empty($arr)) {\n    return null;\n  }\n  $signs = array_map(function($n)\
    \ {\n    if ($n > 0) {\n      return 1;\n    } elseif ($n < 0) {\n      return\
    \ -1;\n    } else {\n      return 0;\n    }\n  }, $arr);\n  $magnitudes = array_map(function($n)\
    \ {\n    return abs($n);\n  }, $arr);\n  $signs_prod = array_product($signs);\n\
    \  $magnitudes_sum = array_sum($magnitudes);\n  return $signs_prod * $magnitudes_sum;\n\
    }\n\n/* You are given an array arr of integers and you need to return\nsum of\
    \ magnitudes of integers multiplied by product of all signs\nof each number in\
    \ the array, represented by 1, -1 or 0.\nNote: return null for empty arr.\nExample:\n\
    >>> prod_signs(array(1, 2, 2, -4))\n9\n>>> prod_signs(array(0, 1))\n0\n>>> prod_signs(array())\n\
    null*/", "    $sum = 0;\n    $prod = 1;\n    if (empty($arr)) {\n        return\
    \ null;\n    }\n    foreach ($arr as $value) {\n        $sum += abs($value);\n\
    \        if ($value > 0) {\n            $prod *= 1;\n        } elseif ($value\
    \ < 0) {\n            $prod *= -1;\n        } else {\n            $prod *= 0;\n\
    \        }\n    }\n    return $sum * $prod;\n}", "    if (empty($arr)) {\n   \
    \     return null;\n    }\n    $prod = 1;\n    $sum = 0;\n    foreach ($arr as\
    \ $value) {\n        if ($value > 0) {\n            $prod *= 1;\n            $sum\
    \ += $value;\n        } elseif ($value < 0) {\n            $prod *= -1;\n    \
    \        $sum += abs($value);\n        } else {\n            $prod *= 0;\n   \
    \     }\n    }\n    return $sum * $prod;\n}\necho prod_signs(array(1, 2, 2, -4));\n\
    echo prod_signs(array(0, 1));\necho prod_signs(array());", "    $sum = 0;\n  \
    \  $prod = 1;\n    if (empty($arr)) {\n        return null;\n    }\n    foreach\
    \ ($arr as $value) {\n        if ($value > 0) {\n            $sum += $value;\n\
    \            $prod *= 1;\n        } elseif ($value < 0) {\n            $sum +=\
    \ abs($value);\n            $prod *= -1;\n        } else {\n            $prod\
    \ *= 0;\n        }\n    }\n    return $sum * $prod;\n}\nprint_r(prod_signs(array(1,\
    \ 2, 2, -4)));\nprint_r(prod_signs(array(0, 1)));\nprint_r(prod_signs(array()));",
  "    $sum = 0;\n    $prod = 1;\n    if (empty($arr)) {\n        return null;\n \
    \   }\n    foreach ($arr as $value) {\n        if ($value > 0) {\n           \
    \ $prod *= 1;\n            $sum += $value;\n        } elseif ($value < 0) {\n\
    \            $prod *= -1;\n            $sum += abs($value);\n        } else {\n\
    \            $prod *= 0;\n        }\n    }\n    return $sum * $prod;\n}\necho\
    \ prod_signs(array(1, 2, 2, -4));\necho \"<br>\";\necho prod_signs(array(0, 1));\n\
    echo \"<br>\";\necho prod_signs(array());", "\tif (empty($arr)) {\n\t\treturn\
    \ null;\n\t}\n\t$sum = 0;\n\t$prod = 1;\n\tforeach ($arr as $value) {\n\t\t$sum\
    \ += abs($value);\n\t\t$prod *= $value < 0 ? -1 : ($value > 0 ? 1 : 0);\n\t}\n\
    \treturn $sum * $prod;\n}\necho prod_signs(array(1, 2, 2, -4));\necho prod_signs(array(0,\
    \ 1));\necho prod_signs(array());", "\tif (empty($arr)) {\n\t\treturn null;\n\t\
    }\n\t$sum = 0;\n\t$prod = 1;\n\tforeach ($arr as $value) {\n\t\t$sum += abs($value);\n\
    \t\tif ($value < 0) {\n\t\t\t$prod *= -1;\n\t\t} elseif ($value > 0) {\n\t\t\t\
    $prod *= 1;\n\t\t}\n\t}\n\treturn $sum * $prod;\n}\necho prod_signs(array(1, 2,\
    \ 2, -4));\necho prod_signs(array(0, 1));\necho prod_signs(array());", "    if\
    \ (empty($arr)) {\n        return null;\n    }\n    $prod = 1;\n    $sum = 0;\n\
    \    foreach ($arr as $value) {\n        if ($value > 0) {\n            $prod\
    \ *= 1;\n            $sum += $value;\n        } elseif ($value < 0) {\n      \
    \      $prod *= -1;\n            $sum += abs($value);\n        } else {\n    \
    \        $prod *= 0;\n        }\n    }\n    return $sum * $prod;\n}\necho prod_signs(array(1,\
    \ 2, 2, -4));\necho prod_signs(array(0, 1));\necho prod_signs(array());", "  if\
    \ (empty($arr)) {\n    return null;\n  }\n  $sum = 0;\n  $prod = 1;\n  foreach\
    \ ($arr as $value) {\n    if ($value > 0) {\n      $prod *= 1;\n      $sum +=\
    \ $value;\n    } elseif ($value < 0) {\n      $prod *= -1;\n      $sum += abs($value);\n\
    \    } else {\n      $prod *= 0;\n    }\n  }\n  return $sum * $prod;\n}\n\necho\
    \ prod_signs(array(1, 2, 2, -4));\necho \"\\n\";\necho prod_signs(array(0, 1));\n\
    echo \"\\n\";\necho prod_signs(array());\necho \"\\n\";", "  if (empty($arr))\
    \ {\n    return null;\n  }\n  $prod = 1;\n  $sum = 0;\n  foreach ($arr as $num)\
    \ {\n    if ($num > 0) {\n      $prod *= 1;\n      $sum += $num;\n    } elseif\
    \ ($num < 0) {\n      $prod *= -1;\n      $sum += abs($num);\n    } else {\n \
    \     $prod *= 0;\n    }\n  }\n  return $sum * $prod;\n}\n\necho prod_signs(array(1,\
    \ 2, 2, -4));\necho prod_signs(array(0, 1));\necho prod_signs(array());", "  \
    \  if (empty($arr)) {\n        return null;\n    }\n    $prod = 1;\n    $sum =\
    \ 0;\n    foreach ($arr as $value) {\n        if ($value > 0) {\n            $prod\
    \ *= 1;\n            $sum += $value;\n        } elseif ($value < 0) {\n      \
    \      $prod *= -1;\n            $sum += abs($value);\n        } else {\n    \
    \        $prod *= 0;\n        }\n    }\n    return $sum * $prod;\n}\necho prod_signs(array(1,\
    \ 2, 2, -4));\necho prod_signs(array(0, 1));\necho prod_signs(array());", "  $signs\
    \ = array_map(function($n) {\n    return $n < 0 ? -1 : ($n > 0 ? 1 : 0);\n  },\
    \ $arr);\n  return empty($arr) ? null : array_product($signs) * array_sum(array_map('abs',\
    \ $arr));\n}", "  if (empty($arr)) {\n    return null;\n  }\n  $sum = 0;\n  $prod\
    \ = 1;\n  foreach ($arr as $value) {\n    $sum += abs($value);\n    if ($value\
    \ > 0) {\n      $prod *= 1;\n    } elseif ($value < 0) {\n      $prod *= -1;\n\
    \    } else {\n      $prod *= 0;\n    }\n  }\n  return $sum * $prod;\n}\necho\
    \ prod_signs(array(1, 2, 2, -4));\necho prod_signs(array(0, 1));\necho prod_signs(array());",
  "    $sum = 0;\n    $prod = 1;\n    if (empty($arr)) {\n        return null;\n \
    \   }\n    foreach ($arr as $value) {\n        $sum += abs($value);\n        if\
    \ ($value > 0) {\n            $prod *= 1;\n        } elseif ($value < 0) {\n \
    \           $prod *= -1;\n        } else {\n            $prod *= 0;\n        }\n\
    \    }\n    return $sum * $prod;\n}\necho prod_signs(array(1, 2, 2, -4));", " \
    \   if (empty($arr)) {\n        return null;\n    }\n    $product = 1;\n    $sum\
    \ = 0;\n    foreach ($arr as $value) {\n        if ($value > 0) {\n          \
    \  $product *= 1;\n            $sum += $value;\n        } elseif ($value < 0)\
    \ {\n            $product *= -1;\n            $sum += abs($value);\n        }\
    \ else {\n            $product *= 0;\n        }\n    }\n    return $sum * $product;\n\
    }\necho prod_signs(array(1, 2, 2, -4));\necho prod_signs(array(0, 1));\necho prod_signs(array());",
  "    if (empty($arr)) {\n        return null;\n    }\n    $sum = 0;\n    $prod =\
    \ 1;\n    foreach ($arr as $value) {\n        $sum += abs($value);\n        $prod\
    \ *= $value > 0 ? 1 : ($value < 0 ? -1 : 0);\n    }\n    return $sum * $prod;\n\
    }\necho prod_signs(array(1, 2, 2, -4));\necho prod_signs(array(0, 1));\necho prod_signs(array());",
  "    if(empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function($n)\
    \ {\n        if($n > 0) {\n            return 1;\n        } elseif($n < 0) {\n\
    \            return -1;\n        } else {\n            return 0;\n        }\n\
    \    }, $arr);\n    $signs_prod = array_product($signs);\n    $magnitudes = array_map(function($n)\
    \ {\n        return abs($n);\n    }, $arr);\n    $magnitudes_sum = array_sum($magnitudes);\n\
    \    return $magnitudes_sum * $signs_prod;\n}", "    if (empty($arr)) {\n    \
    \    return null;\n    }\n    $signs = array_map(function($n) {\n        if ($n\
    \ > 0) {\n            return 1;\n        } elseif ($n < 0) {\n            return\
    \ -1;\n        } else {\n            return 0;\n        }\n    }, $arr);\n   \
    \ $magnitudes = array_map(function($n) {\n        return abs($n);\n    }, $arr);\n\
    \    $sign_prod = array_product($signs);\n    $mag_sum = array_sum($magnitudes);\n\
    \    return $sign_prod * $mag_sum;\n}\necho prod_signs(array(1, 2, 2, -4)) . \"\
    \\n\";\necho prod_signs(array(0, 1)) . \"\\n\";\necho prod_signs(array()) . \"\
    \\n\";", "    if (empty($arr)) {\n        return null;\n    }\n    $sum = 0;\n\
    \    $product = 1;\n    foreach ($arr as $value) {\n        if ($value > 0) {\n\
    \            $product *= 1;\n            $sum += $value;\n        } elseif ($value\
    \ < 0) {\n            $product *= -1;\n            $sum += abs($value);\n    \
    \    } else {\n            $product *= 0;\n        }\n    }\n    return $sum *\
    \ $product;\n}\necho prod_signs(array(1, 2, 2, -4));\necho prod_signs(array(0,\
    \ 1));\necho prod_signs(array());", "  if (empty($arr)) {\n    return null;\n\
    \  }\n  $prod = 1;\n  $sum = 0;\n  foreach ($arr as $value) {\n    if ($value\
    \ < 0) {\n      $prod *= -1;\n    } elseif ($value > 0) {\n      $prod *= 1;\n\
    \    } else {\n      $prod *= 0;\n    }\n    $sum += abs($value);\n  }\n  return\
    \ $sum * $prod;\n}\necho prod_signs(array(1, 2, 2, -4));\necho prod_signs(array(0,\
    \ 1));\necho prod_signs(array());", "  if(empty($arr)) {\n    return null;\n \
    \ }\n  $sum = 0;\n  $prod = 1;\n  foreach($arr as $num) {\n    $sum += abs($num);\n\
    \    if($num > 0) {\n      $prod *= 1;\n    } elseif($num < 0) {\n      $prod\
    \ *= -1;\n    } else {\n      $prod *= 0;\n    }\n  }\n  return $sum * $prod;\n\
    }\n\necho prod_signs(array(1, 2, 2, -4));\necho \"\\n\";\necho prod_signs(array(0,\
    \ 1));\necho \"\\n\";\necho prod_signs(array());\necho \"\\n\";", "    if (empty($arr))\
    \ {\n        return null;\n    }\n    $sum = 0;\n    $product = 1;\n    foreach\
    \ ($arr as $value) {\n        if ($value > 0) {\n            $sum += $value;\n\
    \            $product *= 1;\n        } elseif ($value < 0) {\n            $sum\
    \ += $value;\n            $product *= -1;\n        } else {\n            $product\
    \ *= 0;\n        }\n    }\n    return $sum * $product;\n}\necho prod_signs(array(1,\
    \ 2, 2, -4));\necho \"<br>\";\necho prod_signs(array(0, 1));\necho \"<br>\";\n\
    echo prod_signs(array());\necho \"<br>\";\necho prod_signs(array(1, 2, 2, -4,\
    \ 5, 6, 7, 8, 9, 10, -11, -12, -13, -14));\necho \"<br>\";\necho prod_signs(array(0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0));\necho \"<br>\";\necho prod_signs(array(1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1));\necho \"<br>\";\necho prod_signs(array(-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1));\necho \"<br>\";\necho\
    \ prod_signs(array(0, 1, 2, -3, 4, -5, 6, -7, 8, -9, 10, -11, 12, -13));\necho\
    \ \"<br>\";\necho prod_signs(array(0, -1, 2, -3, 4, -5, 6, -7, 8, -9, 10, -11,\
    \ 12, -13));\necho \"<br>\";\necho prod_signs(array(0, 1, -2, -3, 4, -5, 6, -7,\
    \ 8, -9, 10, -11, 12", "    if (empty($arr)) {\n        return null;\n    }\n\
    \    $signs = array_map(function($n) {\n        if ($n > 0) {\n            return\
    \ 1;\n        } elseif ($n < 0) {\n            return -1;\n        } else {\n\
    \            return 0;\n        }\n    }, $arr);\n    $magnitudes = array_map(function($n)\
    \ {\n        return abs($n);\n    }, $arr);\n    $sign_prod = array_product($signs);\n\
    \    $magnitude_sum = array_sum($magnitudes);\n    return $sign_prod * $magnitude_sum;\n\
    }", "    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function($x)\
    \ {\n        if ($x > 0) {\n            return 1;\n        } elseif ($x < 0) {\n\
    \            return -1;\n        } else {\n            return 0;\n        }\n\
    \    }, $arr);\n    $magnitudes = array_map(function($x) {\n        return abs($x);\n\
    \    }, $arr);\n    $signs_prod = array_product($signs);\n    $magnitudes_sum\
    \ = array_sum($magnitudes);\n    return $signs_prod * $magnitudes_sum;\n}", " \
    \   if (empty($arr)) {\n        return null;\n    }\n    $prod = 1;\n    $sum\
    \ = 0;\n    foreach ($arr as $value) {\n        if ($value > 0) {\n          \
    \  $prod *= 1;\n            $sum += $value;\n        } elseif ($value < 0) {\n\
    \            $prod *= -1;\n            $sum += abs($value);\n        } else {\n\
    \            $prod *= 0;\n        }\n    }\n    return $sum * $prod;\n}\necho\
    \ prod_signs(array(1, 2, 2, -4));\necho prod_signs(array(0, 1));\necho prod_signs(array());",
  "  if(empty($arr)) {\n    return null;\n  }\n  $prod = 1;\n  $sum = 0;\n  foreach($arr\
    \ as $num) {\n    if($num > 0) {\n      $prod *= 1;\n      $sum += $num;\n   \
    \ } elseif($num < 0) {\n      $prod *= -1;\n      $sum += abs($num);\n    } else\
    \ {\n      $prod *= 0;\n    }\n  }\n  return $sum * $prod;\n}", "    if (empty($arr))\
    \ {\n        return null;\n    }\n    $prod = 1;\n    $sum = 0;\n    foreach ($arr\
    \ as $value) {\n        if ($value > 0) {\n            $prod *= 1;\n         \
    \   $sum += $value;\n        } elseif ($value < 0) {\n            $prod *= -1;\n\
    \            $sum += abs($value);\n        } else {\n            $prod *= 0;\n\
    \        }\n    }\n    return $sum * $prod;\n}\necho prod_signs(array(1, 2, 2,\
    \ -4));\necho \"<br>\";\necho prod_signs(array(0, 1));\necho \"<br>\";\necho prod_signs(array());\n\
    echo \"<br>\";\necho prod_signs(array(1, 2, 2, -4, 0, -1, -2, -3, -4, -5, -6,\
    \ -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22,\
    \ -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38,\
    \ -39, -40, -41, -42, -43, -44, -45, -46, -47, -48, -49, -50, -51, -52, -53, -54,\
    \ -55, -56, -57, -58, -59, -60, -61, -62, -63, -64, -65, -66, -67, -68, -69, -70,\
    \ -71, -72, -73, -74, -75, -76, -77, -78, -79, -80, -81, -82, -83, -84, -85, -86,\
    \ -87, -88, -89, -90, -91, -92, -93, -94, -95, -96, -97, -98, -99, -100, -101,",
  "    if (empty($arr)) {\n        return null;\n    }\n    $result = 1;\n    foreach\
    \ ($arr as $value) {\n        if ($value > 0) {\n            $result *= 1;\n \
    \       } elseif ($value < 0) {\n            $result *= -1;\n        } else {\n\
    \            $result *= 0;\n        }\n    }\n    $sum = 0;\n    foreach ($arr\
    \ as $value) {\n        $sum += abs($value);\n    }\n    return $sum * $result;\n\
    }\necho prod_signs(array(1, 2, 2, -4));", "  $signs = array_map(function($x) {\n\
    \    if ($x > 0) {\n      return 1;\n    } elseif ($x < 0) {\n      return -1;\n\
    \    } else {\n      return 0;\n    }\n  }, $arr);\n  $magnitudes = array_map(function($x)\
    \ {\n    return abs($x);\n  }, $arr);\n  $sign_product = array_product($signs);\n\
    \  $magnitude_sum = array_sum($magnitudes);\n  return $sign_product * $magnitude_sum;\n\
    }\n\n/* You are given an array arr of integers and you need to return\nsum of\
    \ magnitudes of integers multiplied by product of all signs\nof each number in\
    \ the array, represented by 1, -1 or 0.\nNote: return null for empty arr.\nExample:\n\
    >>> prod_signs(array(1, 2, 2, -4))\n9\n>>> prod_signs(array(0, 1))\n0\n>>> prod_signs(array())\n\
    null*/", "  if (empty($arr)) {\n    return null;\n  }\n  $signs = array_map(function($n)\
    \ {\n    if ($n > 0) {\n      return 1;\n    } elseif ($n < 0) {\n      return\
    \ -1;\n    } else {\n      return 0;\n    }\n  }, $arr);\n  $signs_prod = array_product($signs);\n\
    \  $magnitudes = array_map(function($n) {\n    return abs($n);\n  }, $arr);\n\
    \  $magnitudes_sum = array_sum($magnitudes);\n  return $magnitudes_sum * $signs_prod;\n\
    }", "    if (empty($arr)) {\n        return null;\n    }\n    $prod = 1;\n   \
    \ $sum = 0;\n    foreach ($arr as $value) {\n        if ($value > 0) {\n     \
    \       $prod *= 1;\n            $sum += $value;\n        } elseif ($value < 0)\
    \ {\n            $prod *= -1;\n            $sum += abs($value);\n        } else\
    \ {\n            $prod *= 0;\n        }\n    }\n    return $sum * $prod;\n}\n\n\
    echo prod_signs(array(1, 2, 2, -4));\necho prod_signs(array(0, 1));\necho prod_signs(array());",
  "    if (empty($arr)) {\n        return null;\n    }\n    $prod = 1;\n    $sum =\
    \ 0;\n    foreach ($arr as $value) {\n        if ($value < 0) {\n            $prod\
    \ *= -1;\n        } elseif ($value > 0) {\n            $prod *= 1;\n        }\
    \ else {\n            $prod *= 0;\n        }\n        $sum += abs($value);\n \
    \   }\n    return $sum * $prod;\n}\n\n/* You are given an array arr of integers\
    \ and you need to return\nsum of magnitudes of integers multiplied by product\
    \ of all signs\nof each number in the array, represented by 1, -1 or 0.\nNote:\
    \ return null for empty arr.\nExample:\n>>> prod_signs(array(1, 2, 2, -4))\n9\n\
    >>> prod_signs(array(0, 1))\n0\n>>> prod_signs(array())\nnull*/", "    if (empty($arr))\
    \ {\n        return null;\n    }\n    $prod = 1;\n    $sum = 0;\n    foreach ($arr\
    \ as $value) {\n        if ($value > 0) {\n            $prod *= 1;\n         \
    \   $sum += $value;\n        } elseif ($value < 0) {\n            $prod *= -1;\n\
    \            $sum += abs($value);\n        } else {\n            $prod *= 0;\n\
    \        }\n    }\n    return $sum * $prod;\n}\necho prod_signs(array(1, 2, 2,\
    \ -4));\necho prod_signs(array(0, 1));\necho prod_signs(array());", "  $sum =\
    \ 0;\n  $product = 1;\n  if (empty($arr)) {\n    return null;\n  }\n  foreach\
    \ ($arr as $value) {\n    if ($value > 0) {\n      $product *= 1;\n      $sum\
    \ += $value;\n    } elseif ($value < 0) {\n      $product *= -1;\n      $sum +=\
    \ abs($value);\n    } else {\n      $product *= 0;\n    }\n  }\n  return $sum\
    \ * $product;\n}\n\n/*\nYou are given an array arr of integers and you need to\
    \ return\nsum of magnitudes of integers multiplied by product of all signs\nof\
    \ each number in the array, represented by 1, -1 or 0.\nNote: return null for\
    \ empty arr.\nExample:\n>>> prod_signs(array(1, 2, 2, -4))\n9\n>>> prod_signs(array(0,\
    \ 1))\n0\n>>> prod_signs(array())\nnull\n*/", "  $sum = 0;\n  $prod = 1;\n  foreach\
    \ ($arr as $value) {\n    if ($value > 0) {\n      $sum += $value;\n      $prod\
    \ *= 1;\n    } elseif ($value < 0) {\n      $sum += abs($value);\n      $prod\
    \ *= -1;\n    } else {\n      $prod *= 0;\n    }\n  }\n  return $sum * $prod;\n\
    }", "    if (empty($arr)) {\n        return null;\n    }\n    $prod = 1;\n   \
    \ $sum = 0;\n    foreach ($arr as $value) {\n        if ($value > 0) {\n     \
    \       $prod *= 1;\n            $sum += $value;\n        } elseif ($value < 0)\
    \ {\n            $prod *= -1;\n            $sum += abs($value);\n        } else\
    \ {\n            $prod *= 0;\n        }\n    }\n    return $sum * $prod;\n}\n\
    echo prod_signs(array(1, 2, 2, -4));\necho prod_signs(array(0, 1));\necho prod_signs(array());",
  "  if (empty($arr)) {\n    return null;\n  }\n  $sum = 0;\n  $prod = 1;\n  foreach\
    \ ($arr as $value) {\n    $sum += abs($value);\n    if ($value < 0) {\n      $prod\
    \ *= -1;\n    }\n    elseif ($value > 0) {\n      $prod *= 1;\n    }\n    else\
    \ {\n      $prod *= 0;\n    }\n  }\n  return $sum * $prod;\n}\necho prod_signs(array(1,\
    \ 2, 2, -4));\necho \"<br>\";\necho prod_signs(array(0, 1));\necho \"<br>\";\n\
    echo prod_signs(array());", "    if (empty($arr)) {\n        return null;\n  \
    \  }\n    $signs = array_map(function($n) {\n        if ($n > 0) {\n         \
    \   return 1;\n        } elseif ($n < 0) {\n            return -1;\n        }\
    \ else {\n            return 0;\n        }\n    }, $arr);\n    $prod = array_product($signs);\n\
    \    $magnitudes = array_map(function($n) {\n        return abs($n);\n    }, $arr);\n\
    \    $sum = array_sum($magnitudes);\n    return $sum * $prod;\n}", "    if (empty($arr))\
    \ {\n        return null;\n    }\n    $signs = array_map(function($n) {\n    \
    \    if ($n > 0) {\n            return 1;\n        } elseif ($n < 0) {\n     \
    \       return -1;\n        } else {\n            return 0;\n        }\n    },\
    \ $arr);\n    $magnitudes = array_map(function($n) {\n        return abs($n);\n\
    \    }, $arr);\n    $sign_prod = array_product($signs);\n    $magnitude_sum =\
    \ array_sum($magnitudes);\n    return $sign_prod * $magnitude_sum;\n}\n\n/*\n\
    You are given an array arr of integers and you need to return\nsum of magnitudes\
    \ of integers multiplied by product of all signs\nof each number in the array,\
    \ represented by 1, -1 or 0.\nNote: return null for empty arr.\nExample:\n>>>\
    \ prod_signs(array(1, 2, 2, -4))\n9\n>>> prod_signs(array(0, 1))\n0\n>>> prod_signs(array())\n\
    null\n*/", "    if(empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function($n)\
    \ {\n        if($n > 0) {\n            return 1;\n        } elseif($n < 0) {\n\
    \            return -1;\n        } else {\n            return 0;\n        }\n\
    \    }, $arr);\n    $magnitudes = array_map(function($n) {\n        return abs($n);\n\
    \    }, $arr);\n    $sign_prod = array_product($signs);\n    $mag_sum = array_sum($magnitudes);\n\
    \    return $sign_prod * $mag_sum;\n}", "    if (empty($arr)) {\n        return\
    \ null;\n    }\n    $prod = 1;\n    $sum = 0;\n    foreach ($arr as $value) {\n\
    \        if ($value > 0) {\n            $prod *= 1;\n            $sum += $value;\n\
    \        } elseif ($value < 0) {\n            $prod *= -1;\n            $sum +=\
    \ abs($value);\n        } else {\n            $prod *= 0;\n        }\n    }\n\
    \    return $sum * $prod;\n}\necho prod_signs(array(1, 2, 2, -4));\necho \"\\\
    n\";\necho prod_signs(array(0, 1));\necho \"\\n\";\necho prod_signs(array());\n\
    echo \"\\n\";", "    if (empty($arr)) {\n        return null;\n    }\n    $prod\
    \ = 1;\n    $sum = 0;\n    foreach ($arr as $value) {\n        if ($value > 0)\
    \ {\n            $prod *= 1;\n            $sum += $value;\n        } elseif ($value\
    \ < 0) {\n            $prod *= -1;\n            $sum += abs($value);\n       \
    \ } else {\n            $prod *= 0;\n        }\n    }\n    return $sum * $prod;\n\
    }\necho prod_signs(array(1, 2, 2, -4));\necho \"<br>\";\necho prod_signs(array(0,\
    \ 1));\necho \"<br>\";\necho prod_signs(array());\necho \"<br>\";\necho prod_signs(array(0,\
    \ 0, 0, 0));\necho \"<br>\";\necho prod_signs(array(1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10));\necho \"<br>\";\necho prod_signs(array(-1, -2, -3, -4, -5, -6, -7, -8,\
    \ -9, -10));\necho \"<br>\";\necho prod_signs(array(1, -2, 3, -4, 5, -6, 7, -8,\
    \ 9, -10));\necho \"<br>\";\necho prod_signs(array(1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10));\necho \"<br>\";\necho prod_signs(array(1,\
    \ -2, 3, -4, 5, -6, 7, -8, 9, -10, 1, -2, 3, -4, 5, -6, 7, -8, 9, -10));\necho\
    \ \"<br>\";\necho prod_signs(array(1, -2, 3, -4, 5, -6, 7, -8, 9, -10, 1, -2,\
    \ 3, -4, 5, -6, 7,", "\tif (empty($arr)) {\n\t\treturn null;\n\t}\n\t$sum = 0;\n\
    \t$prod = 1;\n\tforeach ($arr as $value) {\n\t\tif ($value > 0) {\n\t\t\t$sum\
    \ += $value;\n\t\t\t$prod *= 1;\n\t\t} elseif ($value < 0) {\n\t\t\t$sum += $value\
    \ * -1;\n\t\t\t$prod *= -1;\n\t\t} else {\n\t\t\t$prod *= 0;\n\t\t}\n\t}\n\treturn\
    \ $sum * $prod;\n}\necho prod_signs(array(1, 2, 2, -4));\necho \"<br>\";\necho\
    \ prod_signs(array(0, 1));\necho \"<br>\";\necho prod_signs(array());", "  if\
    \ (empty($arr)) {\n    return null;\n  }\n  $prod = 1;\n  $sum = 0;\n  foreach\
    \ ($arr as $value) {\n    if ($value > 0) {\n      $prod *= 1;\n      $sum +=\
    \ $value;\n    } elseif ($value < 0) {\n      $prod *= -1;\n      $sum += abs($value);\n\
    \    } else {\n      $prod *= 0;\n    }\n  }\n  return $sum * $prod;\n}", "  if\
    \ (empty($arr)) {\n    return null;\n  }\n  $signs = array_map(function($x) {\n\
    \    if ($x > 0) {\n      return 1;\n    } elseif ($x < 0) {\n      return -1;\n\
    \    } else {\n      return 0;\n    }\n  }, $arr);\n  $signs_prod = array_product($signs);\n\
    \  $magnitudes = array_map(function($x) {\n    return abs($x);\n  }, $arr);\n\
    \  $magnitudes_sum = array_sum($magnitudes);\n  return $magnitudes_sum * $signs_prod;\n\
    }\necho prod_signs(array(1, 2, 2, -4)) . \"\\n\";\necho prod_signs(array(0, 1))\
    \ . \"\\n\";\necho prod_signs(array()) . \"\\n\";", "    if (empty($arr)) {\n\
    \        return null;\n    }\n    $sum = 0;\n    $prod = 1;\n    foreach ($arr\
    \ as $value) {\n        $sum += abs($value);\n        if ($value > 0) {\n    \
    \        $prod *= 1;\n        } elseif ($value < 0) {\n            $prod *= -1;\n\
    \        } else {\n            $prod *= 0;\n        }\n    }\n    return $sum\
    \ * $prod;\n}\necho prod_signs(array(1, 2, 2, -4));\necho \"<br>\";\necho prod_signs(array(0,\
    \ 1));\necho \"<br>\";\necho prod_signs(array());", "  if (empty($arr)) {\n  \
    \  return null;\n  }\n  $signs = array_map(function($num) {\n    if ($num > 0)\
    \ {\n      return 1;\n    } elseif ($num < 0) {\n      return -1;\n    } else\
    \ {\n      return 0;\n    }\n  }, $arr);\n  $magnitudes = array_map(function($num)\
    \ {\n    return abs($num);\n  }, $arr);\n  $sign_prod = array_product($signs);\n\
    \  $mag_sum = array_sum($magnitudes);\n  return $sign_prod * $mag_sum;\n}", "\t\
    if (empty($arr)) {\n\t\treturn null;\n\t}\n\t$sum = 0;\n\t$prod = 1;\n\tforeach\
    \ ($arr as $value) {\n\t\t$sum += abs($value);\n\t\tif ($value > 0) {\n\t\t\t\
    $prod *= 1;\n\t\t} elseif ($value < 0) {\n\t\t\t$prod *= -1;\n\t\t} else {\n\t\
    \t\t$prod *= 0;\n\t\t}\n\t}\n\treturn $sum * $prod;\n}\necho prod_signs(array(1,\
    \ 2, 2, -4));", "  if (empty($arr)) return null;\n  $sum = 0;\n  $prod = 1;\n\
    \  foreach ($arr as $num) {\n    if ($num > 0) {\n      $sum += $num;\n      $prod\
    \ *= 1;\n    } elseif ($num < 0) {\n      $sum += abs($num);\n      $prod *= -1;\n\
    \    } else {\n      $prod *= 0;\n    }\n  }\n  return $sum * $prod;\n}\necho\
    \ prod_signs(array(1, 2, 2, -4));\necho prod_signs(array(0, 1));\necho prod_signs(array());",
  "    if (empty($arr)) {\n        return null;\n    }\n    $prod = 1;\n    $sum =\
    \ 0;\n    foreach ($arr as $value) {\n        if ($value > 0) {\n            $prod\
    \ *= 1;\n            $sum += $value;\n        } elseif ($value < 0) {\n      \
    \      $prod *= -1;\n            $sum += $value;\n        } else {\n         \
    \   $prod *= 0;\n        }\n    }\n    return $sum * $prod;\n}\necho prod_signs(array(1,\
    \ 2, 2, -4));\necho prod_signs(array(0, 1));\necho prod_signs(array());", "  \
    \  if (empty($arr)) {\n        return null;\n    }\n    $sum = 0;\n    $product\
    \ = 1;\n    foreach ($arr as $value) {\n        if ($value > 0) {\n          \
    \  $product *= 1;\n            $sum += $value;\n        } elseif ($value < 0)\
    \ {\n            $product *= -1;\n            $sum += abs($value);\n        }\
    \ else {\n            $product *= 0;\n        }\n    }\n    return $sum * $product;\n\
    }\necho prod_signs(array(1, 2, 2, -4));\necho \"<br>\";\necho prod_signs(array(0,\
    \ 1));\necho \"<br>\";\necho prod_signs(array());", "    if (empty($arr)) {\n\
    \        return null;\n    }\n    $signs = array_map(function($n) {\n        if\
    \ ($n > 0) {\n            return 1;\n        } elseif ($n < 0) {\n           \
    \ return -1;\n        } else {\n            return 0;\n        }\n    }, $arr);\n\
    \    $prod = array_product($signs);\n    $magnitudes = array_map(function($n)\
    \ {\n        return abs($n);\n    }, $arr);\n    $sum = array_sum($magnitudes);\n\
    \    return $sum * $prod;\n}", "    if (empty($arr)) {\n        return null;\n\
    \    }\n    $signs = array_map(function($n) {\n        if ($n > 0) {\n       \
    \     return 1;\n        } elseif ($n < 0) {\n            return -1;\n       \
    \ } else {\n            return 0;\n        }\n    }, $arr);\n    $signs_prod =\
    \ array_product($signs);\n    $magnitudes = array_map(function($n) {\n       \
    \ return abs($n);\n    }, $arr);\n    $magnitudes_sum = array_sum($magnitudes);\n\
    \    return $magnitudes_sum * $signs_prod;\n}\n\n/*\n * Test code\n */\n$arr =\
    \ array(1, 2, 2, -4);\necho prod_signs($arr) . \"\\n\";\n$arr = array(0, 1);\n\
    echo prod_signs($arr) . \"\\n\";\n$arr = array();\necho prod_signs($arr) . \"\\\
    n\";", "  if(empty($arr)) return null;\n  $prod = 1;\n  $sum = 0;\n  foreach($arr\
    \ as $val) {\n    if($val > 0) {\n      $prod *= 1;\n      $sum += $val;\n   \
    \ } elseif($val < 0) {\n      $prod *= -1;\n      $sum += abs($val);\n    } else\
    \ {\n      $prod *= 0;\n    }\n  }\n  return $sum * $prod;\n}\necho prod_signs(array(1,\
    \ 2, 2, -4));\necho \"\\n\";\necho prod_signs(array(0, 1));\necho \"\\n\";\necho\
    \ prod_signs(array());\necho \"\\n\";", "  $sum = 0;\n  $prod = 1;\n  if (empty($arr))\
    \ {\n    return null;\n  }\n  foreach ($arr as $value) {\n    if ($value > 0)\
    \ {\n      $prod *= 1;\n      $sum += $value;\n    } elseif ($value < 0) {\n \
    \     $prod *= -1;\n      $sum += abs($value);\n    } else {\n      $prod *= 0;\n\
    \    }\n  }\n  return $sum * $prod;\n}\n\n/* You are given an array arr of integers\
    \ and you need to return\nsum of magnitudes of integers multiplied by product\
    \ of all signs\nof each number in the array, represented by 1, -1 or 0.\nNote:\
    \ return null for empty arr.\nExample:\n>>> prod_signs(array(1, 2, 2, -4))\n9\n\
    >>> prod_signs(array(0, 1))\n0\n>>> prod_signs(array())\nnull*/", "    if (empty($arr))\
    \ {\n        return null;\n    }\n    $signs = array_map(function($n) {\n    \
    \    if ($n > 0) {\n            return 1;\n        } elseif ($n < 0) {\n     \
    \       return -1;\n        } else {\n            return 0;\n        }\n    },\
    \ $arr);\n    $signs_prod = array_product($signs);\n    $magnitudes = array_map(function($n)\
    \ {\n        return abs($n);\n    }, $arr);\n    $magnitudes_sum = array_sum($magnitudes);\n\
    \    return $magnitudes_sum * $signs_prod;\n}", "  if (empty($arr)) {\n    return\
    \ null;\n  }\n  $signs = array_map(function($n) {\n    if ($n > 0) {\n      return\
    \ 1;\n    } elseif ($n < 0) {\n      return -1;\n    } else {\n      return 0;\n\
    \    }\n  }, $arr);\n  $signs_prod = array_product($signs);\n  $magnitudes = array_map(function($n)\
    \ {\n    return abs($n);\n  }, $arr);\n  $magnitudes_sum = array_sum($magnitudes);\n\
    \  return $magnitudes_sum * $signs_prod;\n}\necho prod_signs(array(1, 2, 2, -4));\n\
    echo prod_signs(array(0, 1));\necho prod_signs(array());", "    if (empty($arr))\
    \ {\n        return null;\n    }\n    $prod = 1;\n    $sum = 0;\n    foreach ($arr\
    \ as $value) {\n        if ($value > 0) {\n            $prod *= 1;\n         \
    \   $sum += $value;\n        } elseif ($value < 0) {\n            $prod *= -1;\n\
    \            $sum += abs($value);\n        } else {\n            $prod *= 0;\n\
    \        }\n    }\n    return $sum * $prod;\n}\necho prod_signs(array(1, 2, 2,\
    \ -4));\necho prod_signs(array(0, 1));\necho prod_signs(array());", "\tif (empty($arr))\
    \ {\n\t\treturn null;\n\t}\n\t$prod = 1;\n\t$sum = 0;\n\tforeach ($arr as $value)\
    \ {\n\t\tif ($value > 0) {\n\t\t\t$prod *= 1;\n\t\t\t$sum += $value;\n\t\t} elseif\
    \ ($value < 0) {\n\t\t\t$prod *= -1;\n\t\t\t$sum += $value;\n\t\t} else {\n\t\t\
    \t$prod *= 0;\n\t\t}\n\t}\n\treturn $sum * $prod;\n}\necho prod_signs(array(1,\
    \ 2, 2, -4));\necho '<br>';\necho prod_signs(array(0, 1));\necho '<br>';\necho\
    \ prod_signs(array());", "  if (empty($arr)) {\n    return null;\n  }\n  $signs\
    \ = array_map(function($x) {\n    if ($x > 0) {\n      return 1;\n    } elseif\
    \ ($x < 0) {\n      return -1;\n    } else {\n      return 0;\n    }\n  }, $arr);\n\
    \  $magnitudes = array_map(function($x) {\n    return abs($x);\n  }, $arr);\n\
    \  $sign_product = array_product($signs);\n  $magnitude_sum = array_sum($magnitudes);\n\
    \  return $sign_product * $magnitude_sum;\n}", "    if (empty($arr)) {\n     \
    \   return null;\n    }\n    $sum = 0;\n    $product = 1;\n    foreach ($arr as\
    \ $value) {\n        $sum += abs($value);\n        if ($value > 0) {\n       \
    \     $product *= 1;\n        } elseif ($value < 0) {\n            $product *=\
    \ -1;\n        } else {\n            $product *= 0;\n        }\n    }\n    return\
    \ $sum * $product;\n}\necho prod_signs(array(1, 2, 2, -4));\necho \"<br>\";\n\
    echo prod_signs(array(0, 1));\necho \"<br>\";\necho prod_signs(array());\necho\
    \ \"<br>\";", "    if (empty($arr)) {\n        return null;\n    }\n    $prod\
    \ = 1;\n    $sum = 0;\n    foreach ($arr as $value) {\n        if ($value > 0)\
    \ {\n            $prod *= 1;\n            $sum += $value;\n        } elseif ($value\
    \ < 0) {\n            $prod *= -1;\n            $sum += abs($value);\n       \
    \ } else {\n            $prod *= 0;\n        }\n    }\n    return $sum * $prod;\n\
    }\necho prod_signs(array(1, 2, 2, -4));\necho prod_signs(array(0, 1));\necho prod_signs(array());",
  "\tif (empty($arr)) return null;\n\t$sum = 0;\n\t$prod = 1;\n\tforeach ($arr as\
    \ $num) {\n\t\t$sum += abs($num);\n\t\t$prod *= $num <=> 0;\n\t}\n\treturn $sum\
    \ * $prod;\n}", "    if (empty($arr)) {\n        return null;\n    }\n    $result\
    \ = 1;\n    foreach ($arr as $value) {\n        if ($value > 0) {\n          \
    \  $result *= 1;\n        } elseif ($value < 0) {\n            $result *= -1;\n\
    \        } else {\n            $result *= 0;\n        }\n    }\n    return array_sum(array_map('abs',\
    \ $arr)) * $result;\n}\necho prod_signs(array(1, 2, 2, -4));\necho prod_signs(array(0,\
    \ 1));\necho prod_signs(array());", "  $magnitude = 0;\n  $sign = 1;\n  foreach\
    \ ($arr as $value) {\n    if ($value != 0) {\n      $magnitude += abs($value);\n\
    \      $sign *= $value / abs($value);\n    }\n  }\n  return $magnitude * $sign;\n\
    }\necho prod_signs(array(1, 2, 2, -4));\necho prod_signs(array(0, 1));\necho prod_signs(array());",
  "    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function($n)\
    \ {\n        if ($n > 0) {\n            return 1;\n        } elseif ($n < 0) {\n\
    \            return -1;\n        } else {\n            return 0;\n        }\n\
    \    }, $arr);\n    $signs_prod = array_product($signs);\n    $magnitudes = array_map(function($n)\
    \ {\n        return abs($n);\n    }, $arr);\n    $magnitudes_sum = array_sum($magnitudes);\n\
    \    return $magnitudes_sum * $signs_prod;\n}", "  if (empty($arr)) return null;\n\
    \  $prod = 1;\n  $sum = 0;\n  foreach ($arr as $value) {\n    if ($value > 0)\
    \ {\n      $prod *= 1;\n      $sum += $value;\n    } elseif ($value < 0) {\n \
    \     $prod *= -1;\n      $sum += abs($value);\n    } else {\n      $prod *= 0;\n\
    \    }\n  }\n  return $prod * $sum;\n}", "    if (empty($arr)) {\n        return\
    \ null;\n    }\n    $signs = array_map(function($num) {\n        if ($num > 0)\
    \ {\n            return 1;\n        } elseif ($num < 0) {\n            return\
    \ -1;\n        } else {\n            return 0;\n        }\n    }, $arr);\n   \
    \ $magnitudes = array_map(function($num) {\n        return abs($num);\n    },\
    \ $arr);\n    $sign_prod = array_product($signs);\n    $magnitude_sum = array_sum($magnitudes);\n\
    \    return $sign_prod * $magnitude_sum;\n}", "    if (empty($arr)) {\n      \
    \  return null;\n    }\n    $signs = array_map(function($num) {\n        if ($num\
    \ > 0) {\n            return 1;\n        } elseif ($num < 0) {\n            return\
    \ -1;\n        } else {\n            return 0;\n        }\n    }, $arr);\n   \
    \ $magnitudes = array_map(function($num) {\n        return abs($num);\n    },\
    \ $arr);\n    $signs_prod = array_product($signs);\n    $magnitudes_sum = array_sum($magnitudes);\n\
    \    return $signs_prod * $magnitudes_sum;\n}\n\n/* You are given an array arr\
    \ of integers and you need to return\nsum of magnitudes of integers multiplied\
    \ by product of all signs\nof each number in the array, represented by 1, -1 or\
    \ 0.\nNote: return null for empty arr.\nExample:\n>>> prod_signs(array(1, 2, 2,\
    \ -4))\n9\n>>> prod_signs(array(0, 1))\n0\n>>> prod_signs(array())\nnull*/", "\t\
    if(empty($arr)) return null;\n\t$res = 1;\n\tforeach($arr as $v) {\n\t\tif($v\
    \ == 0) continue;\n\t\t$res *= $v / abs($v);\n\t}\n\treturn array_sum(array_map('abs',\
    \ $arr)) * $res;\n}", "    if (empty($arr)) {\n        return null;\n    }\n \
    \   $sum = 0;\n    $prod = 1;\n    foreach ($arr as $value) {\n        $sum +=\
    \ abs($value);\n        $prod *= $value > 0 ? 1 : ($value < 0 ? -1 : 0);\n   \
    \ }\n    return $sum * $prod;\n}", "    if (empty($arr)) {\n        return null;\n\
    \    }\n    $prod = 1;\n    $sum = 0;\n    foreach ($arr as $value) {\n      \
    \  if ($value > 0) {\n            $prod *= 1;\n            $sum += $value;\n \
    \       } elseif ($value < 0) {\n            $prod *= -1;\n            $sum +=\
    \ $value;\n        } else {\n            $prod *= 0;\n        }\n    }\n    return\
    \ $sum * $prod;\n}\necho prod_signs(array(1, 2, 2, -4));\necho prod_signs(array(0,\
    \ 1));\necho prod_signs(array());", "    if (empty($arr)) {\n        return null;\n\
    \    }\n    $prod = 1;\n    $sum = 0;\n    foreach ($arr as $value) {\n      \
    \  if ($value > 0) {\n            $prod *= 1;\n            $sum += $value;\n \
    \       } elseif ($value < 0) {\n            $prod *= -1;\n            $sum +=\
    \ abs($value);\n        } else {\n            $prod *= 0;\n        }\n    }\n\
    \    return $sum * $prod;\n}\necho prod_signs(array(1, 2, 2, -4));\necho \"<br>\"\
    ;\necho prod_signs(array(0, 1));\necho \"<br>\";\necho prod_signs(array());\n\
    echo \"<br>\";\necho prod_signs(array(0, 0, 0, 0));\necho \"<br>\";\necho prod_signs(array(1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10));\necho \"<br>\";\necho prod_signs(array(-1, -2,\
    \ -3, -4, -5, -6, -7, -8, -9, -10));\necho \"<br>\";\necho prod_signs(array(1,\
    \ -2, 3, -4, 5, -6, 7, -8, 9, -10));\necho \"<br>\";\necho prod_signs(array(1,\
    \ -2, 3, -4, 5, -6, 7, -8, 9, -10, 0));\necho \"<br>\";\necho prod_signs(array(1,\
    \ -2, 3, -4, 5, -6, 7, -8, 9, -10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0", "  if (empty($arr)) {\n    return null;\n\
    \  }\n  $sum = 0;\n  $prod = 1;\n  foreach ($arr as $value) {\n    $sum += abs($value);\n\
    \    if ($value > 0) {\n      $prod *= 1;\n    } elseif ($value < 0) {\n     \
    \ $prod *= -1;\n    } else {\n      $prod *= 0;\n    }\n  }\n  return $sum * $prod;\n\
    }\n\necho prod_signs(array(1, 2, 2, -4));\necho \"\\n\";\necho prod_signs(array(0,\
    \ 1));\necho \"\\n\";\necho prod_signs(array());\necho \"\\n\";\n", "    if (empty($arr))\
    \ {\n        return null;\n    }\n    $sum = 0;\n    $prod = 1;\n    foreach ($arr\
    \ as $value) {\n        if ($value > 0) {\n            $sum += $value;\n     \
    \       $prod *= 1;\n        } elseif ($value < 0) {\n            $sum += abs($value);\n\
    \            $prod *= -1;\n        } else {\n            $prod *= 0;\n       \
    \ }\n    }\n    return $sum * $prod;\n}\necho prod_signs(array(1, 2, 2, -4));\n\
    echo \"<br>\";\necho prod_signs(array(0, 1));\necho \"<br>\";\necho prod_signs(array());",
  "  if (empty($arr)) {\n    return null;\n  }\n  $sum = 0;\n  $prod = 1;\n  foreach\
    \ ($arr as $value) {\n    $sum += abs($value);\n    if ($value > 0) {\n      $prod\
    \ *= 1;\n    } elseif ($value < 0) {\n      $prod *= -1;\n    } else {\n     \
    \ $prod *= 0;\n    }\n  }\n  return $sum * $prod;\n}\necho prod_signs(array(1,\
    \ 2, 2, -4));\necho prod_signs(array(0, 1));\necho prod_signs(array());", "  if\
    \ (empty($arr)) {\n    return null;\n  }\n  $sum = 0;\n  $product = 1;\n  foreach\
    \ ($arr as $value) {\n    if ($value > 0) {\n      $product *= 1;\n    } elseif\
    \ ($value < 0) {\n      $product *= -1;\n    } else {\n      $product *= 0;\n\
    \    }\n    $sum += abs($value);\n  }\n  return $sum * $product;\n}\necho prod_signs(array(1,\
    \ 2, 2, -4));\necho \"\\n\";\necho prod_signs(array(0, 1));\necho \"\\n\";\necho\
    \ prod_signs(array());\necho \"\\n\";", "    if (empty($arr)) {\n        return\
    \ null;\n    }\n    $sum = 0;\n    $prod = 1;\n    foreach ($arr as $value) {\n\
    \        $sum += abs($value);\n        $prod *= $value < 0 ? -1 : ($value > 0\
    \ ? 1 : 0);\n    }\n    return $sum * $prod;\n}\necho prod_signs(array(1, 2, 2,\
    \ -4));\necho prod_signs(array(0, 1));\necho prod_signs(array());", "    if (empty($arr))\
    \ {\n        return null;\n    }\n    $signs = array_map(function($x) {\n    \
    \    if ($x > 0) {\n            return 1;\n        } elseif ($x < 0) {\n     \
    \       return -1;\n        } else {\n            return 0;\n        }\n    },\
    \ $arr);\n    $signs_prod = array_product($signs);\n    $magnitudes = array_map(function($x)\
    \ {\n        return abs($x);\n    }, $arr);\n    $magnitudes_sum = array_sum($magnitudes);\n\
    \    return $magnitudes_sum * $signs_prod;\n}\necho prod_signs(array(1, 2, 2,\
    \ -4));\necho prod_signs(array(0, 1));\necho prod_signs(array());", "    if(empty($arr))\
    \ {\n        return null;\n    }\n    $product = 1;\n    $sum = 0;\n    foreach($arr\
    \ as $value) {\n        if($value > 0) {\n            $product *= 1;\n       \
    \     $sum += $value;\n        } elseif($value < 0) {\n            $product *=\
    \ -1;\n            $sum += abs($value);\n        } else {\n            $product\
    \ *= 0;\n        }\n    }\n    return $sum * $product;\n}\necho prod_signs(array(1,\
    \ 2, 2, -4));\necho prod_signs(array(0, 1));\necho prod_signs(array());", "  \
    \  if(empty($arr)){\n        return null;\n    }\n    $sum = 0;\n    $prod = 1;\n\
    \    foreach($arr as $value){\n        $sum += abs($value);\n        $prod *=\
    \ $value < 0 ? -1 : ($value > 0 ? 1 : 0);\n    }\n    return $sum * $prod;\n}",
  "  if (empty($arr)) {\n    return null;\n  }\n  $sum = 0;\n  $prod = 1;\n  foreach\
    \ ($arr as $num) {\n    if ($num > 0) {\n      $prod *= 1;\n    } elseif ($num\
    \ < 0) {\n      $prod *= -1;\n    } else {\n      $prod *= 0;\n    }\n    $sum\
    \ += abs($num);\n  }\n  return $sum * $prod;\n}\necho prod_signs(array(1, 2, 2,\
    \ -4));\necho \"\\n\";\necho prod_signs(array(0, 1));\necho \"\\n\";\necho prod_signs(array());\n\
    echo \"\\n\";", "  if (empty($arr)) {\n    return null;\n  }\n  $signs = array_map(function($n)\
    \ {\n    if ($n > 0) {\n      return 1;\n    } elseif ($n < 0) {\n      return\
    \ -1;\n    } else {\n      return 0;\n    }\n  }, $arr);\n  $signs_prod = array_product($signs);\n\
    \  $magnitudes = array_map(function($n) {\n    return abs($n);\n  }, $arr);\n\
    \  $magnitudes_sum = array_sum($magnitudes);\n  return $magnitudes_sum * $signs_prod;\n\
    }", "    if (empty($arr)) {\n        return null;\n    }\n    $sum = 0;\n    $product\
    \ = 1;\n    foreach ($arr as $value) {\n        if ($value > 0) {\n          \
    \  $product *= 1;\n            $sum += $value;\n        } elseif ($value < 0)\
    \ {\n            $product *= -1;\n            $sum += abs($value);\n        }\
    \ else {\n            $product *= 0;\n        }\n    }\n    return $sum * $product;\n\
    }\necho prod_signs(array(1, 2, 2, -4));", "\tif (empty($arr)) {\n\t\treturn null;\n\
    \t}\n\t$sum = 0;\n\t$prod = 1;\n\tforeach ($arr as $value) {\n\t\t$sum += abs($value);\n\
    \t\tif ($value > 0) {\n\t\t\t$prod *= 1;\n\t\t} elseif ($value < 0) {\n\t\t\t\
    $prod *= -1;\n\t\t} else {\n\t\t\t$prod *= 0;\n\t\t}\n\t}\n\treturn $sum * $prod;\n\
    }\necho prod_signs(array(1, 2, 2, -4));\necho \"\\n\";\necho prod_signs(array(0,\
    \ 1));\necho \"\\n\";\necho prod_signs(array());\necho \"\\n\";", "  if (empty($arr))\
    \ {\n    return null;\n  }\n  $prod = 1;\n  $sum = 0;\n  foreach ($arr as $value)\
    \ {\n    if ($value > 0) {\n      $prod *= 1;\n      $sum += $value;\n    } elseif\
    \ ($value < 0) {\n      $prod *= -1;\n      $sum += abs($value);\n    } else {\n\
    \      $prod *= 0;\n    }\n  }\n  return $sum * $prod;\n}\n\n/* You are given\
    \ an array arr of integers and you need to return\nsum of magnitudes of integers\
    \ multiplied by product of all signs\nof each number in the array, represented\
    \ by 1, -1 or 0.\nNote: return null for empty arr.\nExample:\n>>> prod_signs(array(1,\
    \ 2, 2, -4))\n9\n>>> prod_signs(array(0, 1))\n0\n>>> prod_signs(array())\nnull*/",
  "    if (empty($arr)) {\n        return null;\n    }\n    $prod = 1;\n    $sum =\
    \ 0;\n    foreach ($arr as $value) {\n        if ($value > 0) {\n            $prod\
    \ *= 1;\n            $sum += $value;\n        } elseif ($value < 0) {\n      \
    \      $prod *= -1;\n            $sum += abs($value);\n        } else {\n    \
    \        $prod *= 0;\n        }\n    }\n    return $sum * $prod;\n}", "    if\
    \ (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function($n)\
    \ {\n        if ($n > 0) {\n            return 1;\n        } elseif ($n < 0) {\n\
    \            return -1;\n        } else {\n            return 0;\n        }\n\
    \    }, $arr);\n    $magnitudes = array_map(function($n) {\n        return abs($n);\n\
    \    }, $arr);\n    $sign_product = array_product($signs);\n    $magnitude_sum\
    \ = array_sum($magnitudes);\n    return $sign_product * $magnitude_sum;\n}\necho\
    \ prod_signs(array(1, 2, 2, -4));\necho prod_signs(array(0, 1));\necho prod_signs(array());",
  "    if (empty($arr)) {\n        return null;\n    }\n    $prod = 1;\n    $sum =\
    \ 0;\n    foreach ($arr as $value) {\n        if ($value > 0) {\n            $prod\
    \ *= 1;\n            $sum += $value;\n        } elseif ($value < 0) {\n      \
    \      $prod *= -1;\n            $sum += abs($value);\n        } else {\n    \
    \        $prod *= 0;\n        }\n    }\n    return $sum * $prod;\n}\necho prod_signs(array(1,\
    \ 2, 2, -4));\necho \"<br>\";\necho prod_signs(array(0, 1));\necho \"<br>\";\n\
    echo prod_signs(array());", "    if (empty($arr)) {\n        return null;\n  \
    \  }\n    $signs = array_map(function($n) {\n        if ($n > 0) {\n         \
    \   return 1;\n        } elseif ($n < 0) {\n            return -1;\n        }\
    \ else {\n            return 0;\n        }\n    }, $arr);\n    $prod = array_product($signs);\n\
    \    $magnitudes = array_map(function($n) {\n        return abs($n);\n    }, $arr);\n\
    \    $sum = array_sum($magnitudes);\n    return $sum * $prod;\n}", "\tif (empty($arr))\
    \ {\n\t\treturn null;\n\t}\n\t$sum = 0;\n\t$prod = 1;\n\tforeach ($arr as $value)\
    \ {\n\t\t$sum += abs($value);\n\t\tif ($value > 0) {\n\t\t\t$prod *= 1;\n\t\t\
    } elseif ($value < 0) {\n\t\t\t$prod *= -1;\n\t\t} else {\n\t\t\t$prod *= 0;\n\
    \t\t}\n\t}\n\treturn $sum * $prod;\n}\necho prod_signs(array(1, 2, 2, -4));\n\
    echo prod_signs(array(0, 1));\necho prod_signs(array());", "  $sum = 0;\n  $prod\
    \ = 1;\n  foreach ($arr as $value) {\n    $sum += abs($value);\n    if ($value\
    \ > 0) {\n      $prod *= 1;\n    } elseif ($value < 0) {\n      $prod *= -1;\n\
    \    } else {\n      $prod *= 0;\n    }\n  }\n  if (count($arr) == 0) {\n    return\
    \ null;\n  } else {\n    return $sum * $prod;\n  }\n}", "    if (empty($arr))\
    \ {\n        return null;\n    }\n    $prod = 1;\n    $sum = 0;\n    foreach ($arr\
    \ as $value) {\n        if ($value > 0) {\n            $prod *= 1;\n         \
    \   $sum += $value;\n        } elseif ($value < 0) {\n            $prod *= -1;\n\
    \            $sum += $value;\n        } else {\n            $prod *= 0;\n    \
    \    }\n    }\n    return $sum * $prod;\n}\necho prod_signs(array(1, 2, 2, -4));\n\
    echo \"<br>\";\necho prod_signs(array(0, 1));\necho \"<br>\";\necho prod_signs(array());",
  "    if(empty($arr)) return null;\n    $sum = 0;\n    $signs = 1;\n    foreach($arr\
    \ as $num) {\n        $sum += abs($num);\n        $signs *= $num <=> 0;\n    }\n\
    \    return $sum * $signs;\n}\n\n/*\n>>> prod_signs(array(1, 2, 2, -4))\n9\n>>>\
    \ prod_signs(array(0, 1))\n0\n>>> prod_signs(array())\nnull\n*/", "    if(empty($arr)){\n\
    \        return null;\n    }\n    $prod = 1;\n    $sum = 0;\n    foreach($arr\
    \ as $val){\n        if($val > 0){\n            $prod *= 1;\n            $sum\
    \ += $val;\n        }\n        elseif($val < 0){\n            $prod *= -1;\n \
    \           $sum += abs($val);\n        }\n        else{\n            $prod *=\
    \ 0;\n        }\n    }\n    return $sum * $prod;\n}\necho prod_signs(array(1,\
    \ 2, 2, -4));\necho \"<br>\";\necho prod_signs(array(0, 1));\necho \"<br>\";\n\
    echo prod_signs(array());", "  if (empty($arr)) {\n    return null;\n  }\n  $sum\
    \ = 0;\n  $signs = 1;\n  foreach ($arr as $value) {\n    $sum += abs($value);\n\
    \    $signs *= $value <=> 0;\n  }\n  return $sum * $signs;\n}\n\n/*\n>>> prod_signs(array(1,\
    \ 2, 2, -4))\n9\n>>> prod_signs(array(0, 1))\n0\n>>> prod_signs(array())\nnull\n\
    */", "    if (empty($arr)) {\n        return null;\n    }\n    $sum = 0;\n   \
    \ $prod = 1;\n    foreach ($arr as $value) {\n        $sum += abs($value);\n \
    \       $prod *= $value > 0 ? 1 : ($value < 0 ? -1 : 0);\n    }\n    return $sum\
    \ * $prod;\n}\necho prod_signs(array(1, 2, 2, -4));\necho prod_signs(array(0,\
    \ 1));\necho prod_signs(array());", "    if (empty($arr)) {\n        return null;\n\
    \    }\n    $signs = array_map(function($n) {\n        if ($n > 0) {\n       \
    \     return 1;\n        } elseif ($n < 0) {\n            return -1;\n       \
    \ } else {\n            return 0;\n        }\n    }, $arr);\n    $signs_prod =\
    \ array_product($signs);\n    $magnitudes = array_map(function($n) {\n       \
    \ return abs($n);\n    }, $arr);\n    $magnitudes_sum = array_sum($magnitudes);\n\
    \    return $magnitudes_sum * $signs_prod;\n}\n\n/* You are given an array arr\
    \ of integers and you need to return\nsum of magnitudes of integers multiplied\
    \ by product of all signs\nof each number in the array, represented by 1, -1 or\
    \ 0.\nNote: return null for empty arr.\nExample:\n>>> prod_signs(array(1, 2, 2,\
    \ -4))\n9\n>>> prod_signs(array(0, 1))\n0\n>>> prod_signs(array())\nnull*/", " \
    \   if (empty($arr)) {\n        return null;\n    }\n    $product = 1;\n    $sum\
    \ = 0;\n    foreach ($arr as $value) {\n        if ($value > 0) {\n          \
    \  $product *= 1;\n            $sum += $value;\n        } elseif ($value < 0)\
    \ {\n            $product *= -1;\n            $sum += abs($value);\n        }\
    \ else {\n            $product *= 0;\n        }\n    }\n    return $sum * $product;\n\
    }\necho prod_signs(array(1, 2, 2, -4));\necho prod_signs(array(0, 1));\necho prod_signs(array());",
  "  if (empty($arr)) {\n    return null;\n  }\n  $sum = 0;\n  $sign = 1;\n  foreach\
    \ ($arr as $value) {\n    if ($value > 0) {\n      $sign *= 1;\n    } elseif ($value\
    \ < 0) {\n      $sign *= -1;\n    } else {\n      $sign *= 0;\n    }\n    $sum\
    \ += abs($value);\n  }\n  return $sum * $sign;\n}\n\n/* You are given an array\
    \ arr of integers and you need to return\nsum of magnitudes of integers multiplied\
    \ by product of all signs\nof each number in the array, represented by 1, -1 or\
    \ 0.\nNote: return null for empty arr.\nExample:\n>>> prod_signs(array(1, 2, 2,\
    \ -4))\n9\n>>> prod_signs(array(0, 1))\n0\n>>> prod_signs(array())\nnull*/", "\t\
    if (empty($arr)) {\n\t\treturn null;\n\t}\n\t$sum = 0;\n\t$prod = 1;\n\tforeach\
    \ ($arr as $value) {\n\t\t$sum += abs($value);\n\t\t$prod *= $value < 0 ? -1 :\
    \ ($value > 0 ? 1 : 0);\n\t}\n\treturn $sum * $prod;\n}\necho prod_signs(array(1,\
    \ 2, 2, -4));\necho prod_signs(array(0, 1));\necho prod_signs(array());", "\t\
    if (empty($arr)) {\n\t\treturn null;\n\t}\n\t$sum = 0;\n\t$prod = 1;\n\tforeach\
    \ ($arr as $value) {\n\t\t$sum += abs($value);\n\t\tif ($value < 0) {\n\t\t\t\
    $prod *= -1;\n\t\t} elseif ($value > 0) {\n\t\t\t$prod *= 1;\n\t\t}\n\t}\n\treturn\
    \ $sum * $prod;\n}\necho prod_signs(array(1, 2, 2, -4));", "    if (empty($arr))\
    \ {\n        return null;\n    }\n    $prod = 1;\n    $sum = 0;\n    foreach ($arr\
    \ as $value) {\n        if ($value > 0) {\n            $prod *= 1;\n         \
    \   $sum += $value;\n        } elseif ($value < 0) {\n            $prod *= -1;\n\
    \            $sum += abs($value);\n        } else {\n            $prod *= 0;\n\
    \        }\n    }\n    return $sum * $prod;\n}\necho prod_signs(array(1, 2, 2,\
    \ -4));", "  if (empty($arr)) {\n    return null;\n  }\n  $product = 1;\n  $sum\
    \ = 0;\n  foreach ($arr as $value) {\n    if ($value > 0) {\n      $product *=\
    \ 1;\n      $sum += $value;\n    } elseif ($value < 0) {\n      $product *= -1;\n\
    \      $sum += abs($value);\n    } else {\n      $product *= 0;\n    }\n  }\n\
    \  return $sum * $product;\n}\n\n/* You are given an array arr of integers and\
    \ you need to return\nsum of magnitudes of integers multiplied by product of all\
    \ signs\nof each number in the array, represented by 1, -1 or 0.\nNote: return\
    \ null for empty arr.\nExample:\n>>> prod_signs(array(1, 2, 2, -4))\n9\n>>> prod_signs(array(0,\
    \ 1))\n0\n>>> prod_signs(array())\nnull*/", "  if (empty($arr)) {\n    return\
    \ null;\n  }\n  $sum = 0;\n  $sign = 1;\n  foreach ($arr as $value) {\n    if\
    \ ($value > 0) {\n      $sign *= 1;\n    } elseif ($value < 0) {\n      $sign\
    \ *= -1;\n    } else {\n      $sign *= 0;\n    }\n    $sum += abs($value);\n \
    \ }\n  return $sum * $sign;\n}\n\n/*\n * Test code\n */\necho prod_signs(array(1,\
    \ 2, 2, -4)) . \"\\n\";\necho prod_signs(array(0, 1)) . \"\\n\";\necho prod_signs(array())\
    \ . \"\\n\";", "    if (empty($arr)) {\n        return null;\n    }\n    $signs\
    \ = array_map(function($num) {\n        if ($num > 0) {\n            return 1;\n\
    \        } elseif ($num < 0) {\n            return -1;\n        } else {\n   \
    \         return 0;\n        }\n    }, $arr);\n    $magnitudes = array_map(function($num)\
    \ {\n        return abs($num);\n    }, $arr);\n    $signs_prod = array_product($signs);\n\
    \    $magnitudes_sum = array_sum($magnitudes);\n    return $signs_prod * $magnitudes_sum;\n\
    }\necho prod_signs(array(1, 2, 2, -4));\necho prod_signs(array(0, 1));\necho prod_signs(array());",
  "  if(empty($arr)) return null;\n  $sum = 0;\n  $sign = 1;\n  foreach($arr as $num)\
    \ {\n    if($num > 0) $sign *= 1;\n    elseif($num < 0) $sign *= -1;\n    else\
    \ $sign *= 0;\n    $sum += abs($num);\n  }\n  return $sum * $sign;\n}\necho prod_signs(array(1,\
    \ 2, 2, -4));\necho prod_signs(array(0, 1));\necho prod_signs(array());", "\t\
    if (empty($arr)) {\n\t\treturn null;\n\t}\n\t$sum = 0;\n\t$prod = 1;\n\tforeach\
    \ ($arr as $value) {\n\t\t$sum += abs($value);\n\t\tif ($value > 0) {\n\t\t\t\
    $prod *= 1;\n\t\t} elseif ($value < 0) {\n\t\t\t$prod *= -1;\n\t\t} else {\n\t\
    \t\t$prod *= 0;\n\t\t}\n\t}\n\treturn $sum * $prod;\n}\necho prod_signs(array(1,\
    \ 2, 2, -4));\necho \"\\n\";\necho prod_signs(array(0, 1));\necho \"\\n\";\necho\
    \ prod_signs(array());\necho \"\\n\";", "  if (empty($arr)) {\n    return null;\n\
    \  }\n  $sum = 0;\n  $sign = 1;\n  foreach ($arr as $value) {\n    if ($value\
    \ > 0) {\n      $sign *= 1;\n    } elseif ($value < 0) {\n      $sign *= -1;\n\
    \    } else {\n      $sign *= 0;\n    }\n    $sum += abs($value);\n  }\n  return\
    \ $sum * $sign;\n}\n\necho prod_signs(array(1, 2, 2, -4));\necho \"\\n\";\necho\
    \ prod_signs(array(0, 1));\necho \"\\n\";\necho prod_signs(array());\necho \"\\\
    n\";", "    if (empty($arr)) {\n        return null;\n    }\n    $sum = 0;\n \
    \   $prod = 1;\n    foreach ($arr as $value) {\n        if ($value > 0) {\n  \
    \          $sum += $value;\n            $prod *= 1;\n        } elseif ($value\
    \ < 0) {\n            $sum += $value * -1;\n            $prod *= -1;\n       \
    \ } else {\n            $prod *= 0;\n        }\n    }\n    return $sum * $prod;\n\
    }\necho prod_signs(array(1, 2, 2, -4));\necho prod_signs(array(0, 1));\necho prod_signs(array());",
  "    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function($x)\
    \ {\n        if ($x > 0) {\n            return 1;\n        } elseif ($x < 0) {\n\
    \            return -1;\n        } else {\n            return 0;\n        }\n\
    \    }, $arr);\n    $magnitudes = array_map(function($x) {\n        return abs($x);\n\
    \    }, $arr);\n    $signs_prod = array_product($signs);\n    $magnitudes_sum\
    \ = array_sum($magnitudes);\n    return $signs_prod * $magnitudes_sum;\n}", " \
    \ if (!$arr) {\n    return null;\n  }\n  $signs = array_map(function($num) {\n\
    \    if ($num > 0) {\n      return 1;\n    } elseif ($num < 0) {\n      return\
    \ -1;\n    } else {\n      return 0;\n    }\n  }, $arr);\n  $signs_prod = array_product($signs);\n\
    \  $magnitudes = array_map(function($num) {\n    return abs($num);\n  }, $arr);\n\
    \  $magnitudes_sum = array_sum($magnitudes);\n  return $magnitudes_sum * $signs_prod;\n\
    }\n\n/* You are given an array arr of integers and you need to return\nsum of\
    \ magnitudes of integers multiplied by product of all signs\nof each number in\
    \ the array, represented by 1, -1 or 0.\nNote: return null for empty arr.\nExample:\n\
    >>> prod_signs(array(1, 2, 2, -4))\n9\n>>> prod_signs(array(0, 1))\n0\n>>> prod_signs(array())\n\
    null*/", "    if (empty($arr)) {\n        return null;\n    }\n    $prod = 1;\n\
    \    $sum = 0;\n    foreach ($arr as $value) {\n        if ($value > 0) {\n  \
    \          $prod *= 1;\n            $sum += $value;\n        } elseif ($value\
    \ < 0) {\n            $prod *= -1;\n            $sum += abs($value);\n       \
    \ } else {\n            $prod *= 0;\n        }\n    }\n    return $sum * $prod;\n\
    }\necho prod_signs(array(1, 2, 2, -4));\necho \"\\n\";\necho prod_signs(array(0,\
    \ 1));\necho \"\\n\";\necho prod_signs(array());\necho \"\\n\";"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

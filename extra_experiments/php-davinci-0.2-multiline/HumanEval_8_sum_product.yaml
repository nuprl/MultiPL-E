name: HumanEval_8_sum_product
language: php
prompt: "<?php\n/* For a given array of integers, return an array consisting of a\
  \ sum and a product of all the integers in an array.\nEmpty sum should be equal\
  \ to 0 and empty product should be equal to 1.\n>>> sum_product(array())\narray(0,\
  \ 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/\nfunction sum_product($numbers)\
  \ {\n"
tests: "function candidate(...$args) {\n    return sum_product(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(array()) !== array(0, 1)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(1, 1, 1)) !== array(3, 1)) { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(array(100, 0)) !== array(100,\
  \ 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 5,\
  \ 7)) !== array(15, 105)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(10))\
  \ !== array(10, 10)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $sum = 0;\n    $product = 1;\n    foreach ($numbers as $number)\
    \ {\n        $sum += $number;\n        $product *= $number;\n    }\n    return\
    \ array($sum, $product);\n}\n\n/* For a given array of integers, return an array\
    \ consisting of a sum and a product of all the integers in an array.\nEmpty sum\
    \ should be equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum =\
    \ 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum +=\
    \ $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n\
    }\n\n/* For a given array of integers, return an array consisting of a sum and\
    \ a product of all the integers in an array.\nEmpty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n\
    >>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product\
    \ = 1;\n    foreach ($numbers as $number) {\n        $sum += $number;\n      \
    \  $product *= $number;\n    }\n    return array($sum, $product);\n}\n\n/* For\
    \ a given array of integers, return an array consisting of a sum and a product\
    \ of all the integers in an array.\nEmpty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1,\
    \ 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach\
    \ ($numbers as $number) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return array($sum, $product);\n}\n\n/* For a given array of integers,\
    \ return an array consisting of a sum and a product of all the integers in an\
    \ array.\nEmpty sum should be equal to 0 and empty product should be equal to\
    \ 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\n\
    array(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers as\
    \ $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n/* For a given array of integers, return\
    \ an array consisting of a sum and a product of all the integers in an array.\n\
    Empty sum should be equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum =\
    \ 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum +=\
    \ $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n\
    }\n\n/*\nFor a given array of integers, return an array consisting of a sum and\
    \ a product of all the integers in an array.\nEmpty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n\
    >>> sum_product(array(1, 2, 3, 4))\narray(10, 24)\n*/", "    $sum = 0;\n    $product\
    \ = 1;\n    foreach ($numbers as $number) {\n        $sum += $number;\n      \
    \  $product *= $number;\n    }\n    return array($sum, $product);\n}\n\n/* Given\
    \ a string, return a new string that has transformed based on the input:\nChange\
    \ case of every character, ie. lower case to upper case, upper case to lower case.\n\
    Reverse the order of words from the input.\nNote: You will have to handle multiple\
    \ spaces, and leading/trailing spaces.\nFor example:\n\"Example Input\" ==> \"\
    iNPUT eXAMPLE\"\nYou may assume the input only contain English alphabet and spaces.\n\
    */", "  $sum = 0;\n  $product = 1;\n  foreach ($numbers as $number) {\n    $sum\
    \ += $number;\n    $product *= $number;\n  }\n  return array($sum, $product);\n\
    }\n\n/* Given a string, return a new string with the characters in reverse order.\n\
    >>> reverse_string(\"abc\")\n\"cba\"\n>>> reverse_string(\"\")\n\"\"*/", "   \
    \ $sum = 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum\
    \ += $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n\
    }\n\n/* For a given array of integers, return an array consisting of a sum and\
    \ a product of all the integers in an array.\nEmpty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n\
    >>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product\
    \ = 1;\n    foreach ($numbers as $number) {\n        $sum += $number;\n      \
    \  $product *= $number;\n    }\n    return array($sum, $product);\n}\n\n/* For\
    \ a given array of integers, return an array consisting of a sum and a product\
    \ of all the integers in an array.\nEmpty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1,\
    \ 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach\
    \ ($numbers as $number) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return array($sum, $product);\n}\n\n/* For a given array of integers,\
    \ return an array consisting of a sum and a product of all the integers in an\
    \ array.\nEmpty sum should be equal to 0 and empty product should be equal to\
    \ 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\n\
    array(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers as\
    \ $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n/* For a given array of integers, return\
    \ an array consisting of a sum and a product of all the integers in an array.\n\
    Empty sum should be equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum =\
    \ 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum +=\
    \ $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n\
    }\n\n/* For a given array of integers, return an array consisting of a sum and\
    \ a product of all the integers in an array.\nEmpty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n\
    >>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product\
    \ = 1;\n    foreach ($numbers as $number) {\n        $sum += $number;\n      \
    \  $product *= $number;\n    }\n    return array($sum, $product);\n}\n\n/* For\
    \ a given array of integers, return an array consisting of a sum and a product\
    \ of all the integers in an array.\nEmpty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1,\
    \ 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach\
    \ ($numbers as $number) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return array($sum, $product);\n}\n\n/*\nFor a given array of integers,\
    \ return an array consisting of a sum and a product of all the integers in an\
    \ array.\nEmpty sum should be equal to 0 and empty product should be equal to\
    \ 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\n\
    array(10, 24)\n*/", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers as\
    \ $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n/* For a given array of integers, return\
    \ an array consisting of a sum and a product of all the integers in an array.\n\
    Empty sum should be equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum =\
    \ 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum +=\
    \ $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n\
    }\n\n/* For a given array of integers, return an array consisting of a sum and\
    \ a product of all the integers in an array.\nEmpty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n\
    >>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product\
    \ = 1;\n    foreach ($numbers as $number) {\n        $sum += $number;\n      \
    \  $product *= $number;\n    }\n    return array($sum, $product);\n}\n\n/* For\
    \ a given array of integers, return an array consisting of a sum and a product\
    \ of all the integers in an array.\nEmpty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1,\
    \ 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach\
    \ ($numbers as $number) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return array($sum, $product);\n}\n\n/* For a given array of integers,\
    \ return an array consisting of a sum and a product of all the integers in an\
    \ array.\nEmpty sum should be equal to 0 and empty product should be equal to\
    \ 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\n\
    array(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers as\
    \ $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n/*For a given array of integers, return\
    \ an array consisting of a sum and a product of all the integers in an array.\n\
    Empty sum should be equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum =\
    \ 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum +=\
    \ $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n\
    }\n\n/*For a given array of integers, return an array consisting of a sum and\
    \ a product of all the integers in an array.\nEmpty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n\
    >>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product\
    \ = 1;\n    foreach ($numbers as $number) {\n        $sum += $number;\n      \
    \  $product *= $number;\n    }\n    return array($sum, $product);\n}\n\n/* For\
    \ a given array of integers, return an array consisting of a sum and a product\
    \ of all the integers in an array.\nEmpty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1,\
    \ 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach\
    \ ($numbers as $number) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return array($sum, $product);\n}\n\n/* For a given array of integers,\
    \ return an array consisting of a sum and a product of all the integers in an\
    \ array.\nEmpty sum should be equal to 0 and empty product should be equal to\
    \ 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\n\
    array(10, 24)*/", "  $sum = 0;\n  $product = 1;\n  foreach ($numbers as $number)\
    \ {\n    $sum += $number;\n    $product *= $number;\n  }\n  return array($sum,\
    \ $product);\n}\n\n/* For a given array of integers, return an array consisting\
    \ of a sum and a product of all the integers in an array.\nEmpty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum =\
    \ 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum +=\
    \ $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n\
    }\n\n/* For a given array of integers, return an array consisting of a sum and\
    \ a product of all the integers in an array.\nEmpty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n\
    >>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product\
    \ = 1;\n    foreach ($numbers as $number) {\n        $sum += $number;\n      \
    \  $product *= $number;\n    }\n    return array($sum, $product);\n}\n\n/* For\
    \ a given array of integers, return an array consisting of a sum and a product\
    \ of all the integers in an array.\nEmpty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1,\
    \ 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach\
    \ ($numbers as $number) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return array($sum, $product);\n}\n\n/* For a given array of integers,\
    \ return an array consisting of a sum and a product of all the integers in an\
    \ array.\nEmpty sum should be equal to 0 and empty product should be equal to\
    \ 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\n\
    array(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers as\
    \ $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n/* For a given array of integers, return\
    \ an array consisting of a sum and a product of all the integers in an array.\n\
    Empty sum should be equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum =\
    \ 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum +=\
    \ $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n\
    }\n\n/* For a given array of integers, return an array consisting of a sum and\
    \ a product of all the integers in an array.\nEmpty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n\
    >>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product\
    \ = 1;\n    foreach ($numbers as $number) {\n        $sum += $number;\n      \
    \  $product *= $number;\n    }\n    return array($sum, $product);\n}\n\n/* Given\
    \ an array of integers, return an array of integers where each integer is multiplied\
    \ by 2.\n>>> double_array(array(1, 2, 3, 4))\narray(2, 4, 6, 8)\n>>> double_array(array(1,\
    \ 2, 3, 4, 5))\narray(2, 4, 6, 8, 10)*/", "    $sum = 0;\n    $product = 1;\n\
    \    foreach ($numbers as $number) {\n        $sum += $number;\n        $product\
    \ *= $number;\n    }\n    return array($sum, $product);\n}\n\n/* For a given array\
    \ of integers, return an array consisting of a sum and a product of all the integers\
    \ in an array.\nEmpty sum should be equal to 0 and empty product should be equal\
    \ to 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1, 2, 3,\
    \ 4))\narray(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n/* For a given array of integers, return\
    \ an array consisting of a sum and a product of all the integers in an array.\n\
    Empty sum should be equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "\t$sum = 0;\n\
    \t$product = 1;\n\tforeach ($numbers as $number) {\n\t\t$sum += $number;\n\t\t\
    $product *= $number;\n\t}\n\treturn array($sum, $product);\n}\n\n/* For a given\
    \ array of integers, return an array consisting of a sum and a product of all\
    \ the integers in an array.\nEmpty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1,\
    \ 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach\
    \ ($numbers as $number) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return array($sum, $product);\n}\n\n/* For a given array of integers,\
    \ return an array consisting of a sum and a product of all the integers in an\
    \ array.\nEmpty sum should be equal to 0 and empty product should be equal to\
    \ 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\n\
    array(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers as\
    \ $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n/* For a given array of integers, return\
    \ the sum of all the integers in an array.\nEmpty sum should be equal to 0.\n\
    >>> sum_of_integers(array())\n0\n>>> sum_of_integers(array(1, 2, 3, 4))\n10*/",
  "    $sum = 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n       \
    \ $sum += $number;\n        $product *= $number;\n    }\n    return array($sum,\
    \ $product);\n}\n\n/* For a given array of integers, return an array consisting\
    \ of a sum and a product of all the integers in an array.\nEmpty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum =\
    \ 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum +=\
    \ $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n\
    }\n\n/* For a given array of integers, return an array consisting of a sum and\
    \ a product of all the integers in an array.\nEmpty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n\
    >>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product\
    \ = 1;\n    foreach ($numbers as $number) {\n        $sum += $number;\n      \
    \  $product *= $number;\n    }\n    return array($sum, $product);\n}\n\n/* For\
    \ a given array of integers, return an array consisting of a sum and a product\
    \ of all the integers in an array.\nEmpty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1,\
    \ 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach\
    \ ($numbers as $number) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return array($sum, $product);\n}\n\n/* For a given array of integers,\
    \ return an array consisting of a sum and a product of all the integers in an\
    \ array.\nEmpty sum should be equal to 0 and empty product should be equal to\
    \ 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\n\
    array(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers as\
    \ $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n/* For a given array of integers, return\
    \ an array consisting of a sum and a product of all the integers in an array.\n\
    Empty sum should be equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum =\
    \ 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum +=\
    \ $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n\
    }\n\n/* For a given array of integers, return an array consisting of a sum and\
    \ a product of all the integers in an array.\nEmpty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n\
    >>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product\
    \ = 1;\n    foreach ($numbers as $number) {\n        $sum += $number;\n      \
    \  $product *= $number;\n    }\n    return array($sum, $product);\n}\n\n/* For\
    \ a given array of integers, return an array consisting of a sum and a product\
    \ of all the integers in an array.\nEmpty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1,\
    \ 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach\
    \ ($numbers as $number) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return array($sum, $product);\n}\n\n/* For a given array of integers,\
    \ return an array consisting of a sum and a product of all the integers in an\
    \ array.\nEmpty sum should be equal to 0 and empty product should be equal to\
    \ 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\n\
    array(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers as\
    \ $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n/*\n * Given an array of integers, return\
    \ an array consisting of the maximum value of each subarray.\n * >>> max_of_subarrays(array(1,\
    \ 2, 3, 4))\n * array(4, 4, 4, 4)\n * >>> max_of_subarrays(array(1, 2, 3, 4, 5))\n\
    \ * array(5, 5, 5, 5, 5)\n * >>> max_of_subarrays(array(4, 2, 1, 3, 5))\n * array(4,\
    \ 4, 4, 5, 5)\n * >>> max_of_subarrays(array(5, 4, 3, 2, 1))\n * array(5, 5, 5,\
    \ 5, 5)\n */", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers as $number)\
    \ {\n        $sum += $number;\n        $product *= $number;\n    }\n    return\
    \ array($sum, $product);\n}\n\n/* For a given array of integers, return an array\
    \ consisting of a sum and a product of all the integers in an array.\nEmpty sum\
    \ should be equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum =\
    \ 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum +=\
    \ $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n\
    }\n\n/* For a given array of integers, return an array consisting of a sum and\
    \ a product of all the integers in an array.\nEmpty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n\
    >>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product\
    \ = 1;\n    foreach ($numbers as $number) {\n        $sum += $number;\n      \
    \  $product *= $number;\n    }\n    return array($sum, $product);\n}\n\n/* For\
    \ a given array of integers, return an array consisting of a sum and a product\
    \ of all the integers in an array.\nEmpty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1,\
    \ 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach\
    \ ($numbers as $number) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return array($sum, $product);\n}\n\n/* For a given array of integers,\
    \ return an array consisting of a sum and a product of all the integers in an\
    \ array.\nEmpty sum should be equal to 0 and empty product should be equal to\
    \ 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\n\
    array(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers as\
    \ $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n/* For a given array of integers, return\
    \ an array consisting of a sum and a product of all the integers in an array.\n\
    Empty sum should be equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum =\
    \ 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum +=\
    \ $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n\
    }", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n \
    \       $sum += $number;\n        $product *= $number;\n    }\n    return array($sum,\
    \ $product);\n}\n\n/* For a given array of integers, return an array consisting\
    \ of a sum and a product of all the integers in an array.\nEmpty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "\t$sum = 0;\n\
    \t$product = 1;\n\tforeach ($numbers as $number) {\n\t\t$sum += $number;\n\t\t\
    $product *= $number;\n\t}\n\treturn array($sum, $product);\n}\n\n/*\nGiven an\
    \ array of integers, return an array consisting of the largest number in each\
    \ subarray.\n>>> largest_in_subarrays(array(array(1, 2, 3), array(4, 5), array(6)))\n\
    array(3, 5, 6)\n*/", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n/* Given an array of integers, return\
    \ an array of integers consisting of the absolute values of the integers in the\
    \ array.\n>>> absolute_values(array(1, -2, 3, -4))\narray(1, 2, 3, 4)\n>>> absolute_values(array())\n\
    array()*/", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers as $number)\
    \ {\n        $sum += $number;\n        $product *= $number;\n    }\n    return\
    \ array($sum, $product);\n}\n\n/* Given an array of integers, return an array\
    \ consisting of the absolute difference between each integer and the next one.\n\
    >>> diff(array(1, 2, 3, 4))\narray(1, 1, 1)\n>>> diff(array(1, 2, 3, 4, 5))\n\
    array(1, 1, 1, 1)*/", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n/* For a given array of integers, return\
    \ an array consisting of a sum and a product of all the integers in an array.\n\
    Empty sum should be equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum =\
    \ 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum +=\
    \ $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n\
    }\n\n/* For a given array of integers, return an array consisting of a sum and\
    \ a product of all the integers in an array.\nEmpty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n\
    >>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product\
    \ = 1;\n    foreach ($numbers as $number) {\n        $sum += $number;\n      \
    \  $product *= $number;\n    }\n    return array($sum, $product);\n}\n\n/* For\
    \ a given array of integers, return an array consisting of a sum and a product\
    \ of all the integers in an array.\nEmpty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1,\
    \ 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach\
    \ ($numbers as $number) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return array($sum, $product);\n}\n\n/* For a given array of integers,\
    \ return an array consisting of a sum and a product of all the integers in an\
    \ array.\nEmpty sum should be equal to 0 and empty product should be equal to\
    \ 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\n\
    array(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers as\
    \ $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n/* For a given array of integers, return\
    \ an array consisting of a sum and a product of all the integers in an array.\n\
    Empty sum should be equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum =\
    \ 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum +=\
    \ $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n\
    }\n\n/*\n * Given a string, return a string with all the vowels removed.\n * >>>\
    \ remove_vowels('Hello world!')\n * 'Hll wrld!'\n */", "    $sum = 0;\n    $product\
    \ = 1;\n    foreach ($numbers as $number) {\n        $sum += $number;\n      \
    \  $product *= $number;\n    }\n    return array($sum, $product);\n}\n\n/* For\
    \ a given array of integers, return the sum of all the integers in an array.\n\
    Empty sum should be equal to 0.\n>>> sum(array())\n0\n>>> sum(array(1, 2, 3, 4))\n\
    10*/", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n\
    \        $sum += $number;\n        $product *= $number;\n    }\n    return array($sum,\
    \ $product);\n}\n\n/* For a given array of integers, return an array consisting\
    \ of a sum and a product of all the integers in an array.\nEmpty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum =\
    \ 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum +=\
    \ $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n\
    }\n\n/* For a given array of integers, return an array consisting of a sum and\
    \ a product of all the integers in an array.\nEmpty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n\
    >>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product\
    \ = 1;\n    foreach ($numbers as $number) {\n        $sum += $number;\n      \
    \  $product *= $number;\n    }\n    return array($sum, $product);\n}\n\n/* For\
    \ a given array of integers, return an array consisting of a sum and a product\
    \ of all the integers in an array.\nEmpty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1,\
    \ 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach\
    \ ($numbers as $number) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return array($sum, $product);\n}\n\n/* For a given array of integers,\
    \ return an array consisting of a sum and a product of all the integers in an\
    \ array.\nEmpty sum should be equal to 0 and empty product should be equal to\
    \ 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\n\
    array(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers as\
    \ $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n/* Given an array of integers, return\
    \ an array of integers consisting of the absolute difference between each element\
    \ and a given integer.\n>>> diff(array(1, 2, 3, 4), 0)\narray(1, 2, 3, 4)\n>>>\
    \ diff(array(1, 2, 3, 4), 1)\narray(0, 1, 2, 3)\n>>> diff(array(1, 2, 3, 4), 2)\n\
    array(1, 0, 1, 2)\n>>> diff(array(1, 2, 3, 4), 3)\narray(2, 1, 0, 1)\n>>> diff(array(1,\
    \ 2, 3, 4), 4)\narray(3, 2, 1, 0)*/", "    $sum = 0;\n    $product = 1;\n    foreach\
    \ ($numbers as $number) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return array($sum, $product);\n}\n\n/* For a given array of integers,\
    \ return an array consisting of a sum and a product of all the integers in an\
    \ array.\nEmpty sum should be equal to 0 and empty product should be equal to\
    \ 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\n\
    array(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers as\
    \ $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n/* For a given array of integers, return\
    \ an array consisting of a sum and a product of all the integers in an array.\n\
    Empty sum should be equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum =\
    \ 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum +=\
    \ $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n\
    }\n\n/* For a given array of integers, return an array consisting of a sum and\
    \ a product of all the integers in an array.\nEmpty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n\
    >>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product\
    \ = 1;\n    foreach ($numbers as $number) {\n        $sum += $number;\n      \
    \  $product *= $number;\n    }\n    return array($sum, $product);\n}\n\n/* For\
    \ a given array of integers, return an array consisting of a sum and a product\
    \ of all the integers in an array.\nEmpty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1,\
    \ 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach\
    \ ($numbers as $number) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return array($sum, $product);\n}\n\n/* For a given array of integers,\
    \ return an array consisting of a sum and a product of all the integers in an\
    \ array.\nEmpty sum should be equal to 0 and empty product should be equal to\
    \ 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\n\
    array(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers as\
    \ $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n/* For a given array of integers, return\
    \ an array consisting of a sum and a product of all the integers in an array.\n\
    Empty sum should be equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum =\
    \ 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum +=\
    \ $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n\
    }\n\n/* For a given array of integers, return an array consisting of a sum and\
    \ a product of all the integers in an array.\nEmpty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n\
    >>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product\
    \ = 1;\n    foreach ($numbers as $number) {\n        $sum += $number;\n      \
    \  $product *= $number;\n    }\n    return array($sum, $product);\n}\n\n/* For\
    \ a given array of integers, return a new array consisting of all the elements\
    \ from the first array,\nexcept for the elements at the indexes specified in the\
    \ second array.\n>>> filter_array(array(1, 2, 3, 4, 5), array(2, 4))\narray(1,\
    \ 3, 5)\n>>> filter_array(array(1, 2, 3, 4, 5), array(2, 4, 5))\narray(1, 3)*/",
  "    $sum = 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n       \
    \ $sum += $number;\n        $product *= $number;\n    }\n    return array($sum,\
    \ $product);\n}\n\n/* For a given array of integers, return an array consisting\
    \ of a sum and a product of all the integers in an array.\nEmpty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum =\
    \ 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum +=\
    \ $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n\
    }\n\n/*\n * For a given array of integers, return an array consisting of a sum\
    \ and a product of all the integers in an array.\nEmpty sum should be equal to\
    \ 0 and empty product should be equal to 1.\n>>> sum_product(array())\narray(0,\
    \ 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)\n */", "    $sum = 0;\n\
    \    $product = 1;\n    foreach ($numbers as $number) {\n        $sum += $number;\n\
    \        $product *= $number;\n    }\n    return array($sum, $product);\n}\n\n\
    /* For a given array of integers, return an array consisting of a sum and a product\
    \ of all the integers in an array.\nEmpty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1,\
    \ 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach\
    \ ($numbers as $number) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return array($sum, $product);\n}\n\n/* Given a string, return a string\
    \ where all the vowels are replaced with the letter '*'.\n>>> replace_vowels('apple')\n\
    '*ppl*'\n>>> replace_vowels('banana')\n'b*n*n*'\n>>> replace_vowels('hello world')\n\
    'h*ll* w*rld'\n*/", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers as\
    \ $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n/* For a given array of integers, return\
    \ an array consisting of a sum and a product of all the integers in an array.\n\
    Empty sum should be equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum =\
    \ 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum +=\
    \ $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n\
    }\n\n/* For a given array of integers, return an array consisting of a sum and\
    \ a product of all the integers in an array.\nEmpty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n\
    >>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product\
    \ = 1;\n    foreach ($numbers as $number) {\n        $sum += $number;\n      \
    \  $product *= $number;\n    }\n    return array($sum, $product);\n}\n\n/* For\
    \ a given array of integers, return an array consisting of a sum and a product\
    \ of all the integers in an array.\nEmpty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1,\
    \ 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach\
    \ ($numbers as $number) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return array($sum, $product);\n}\n\n/*\nFor a given array of integers,\
    \ return an array consisting of a sum and a product of all the integers in an\
    \ array.\nEmpty sum should be equal to 0 and empty product should be equal to\
    \ 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\n\
    array(10, 24)\n*/", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers as\
    \ $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n/* For a given array of integers, return\
    \ an array consisting of a sum and a product of all the integers in an array.\n\
    Empty sum should be equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum =\
    \ 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum +=\
    \ $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n\
    }\n\n/* For a given array of integers, return an array consisting of a sum and\
    \ a product of all the integers in an array.\nEmpty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n\
    >>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product\
    \ = 1;\n    foreach ($numbers as $number) {\n        $sum += $number;\n      \
    \  $product *= $number;\n    }\n    return array($sum, $product);\n}\n\n/* For\
    \ a given array of integers, return an array consisting of a sum and a product\
    \ of all the integers in an array.\nEmpty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1,\
    \ 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach\
    \ ($numbers as $number) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return array($sum, $product);\n}\n\n/* For a given array of integers,\
    \ return an array consisting of a sum and a product of all the integers in an\
    \ array.\nEmpty sum should be equal to 0 and empty product should be equal to\
    \ 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\n\
    array(10, 24)*/", "\t$sum = 0;\n\t$product = 1;\n\tforeach ($numbers as $number)\
    \ {\n\t\t$sum += $number;\n\t\t$product *= $number;\n\t}\n\treturn array($sum,\
    \ $product);\n}\n\n/* For a given array of integers, return an array consisting\
    \ of a sum and a product of all the integers in an array.\nEmpty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum =\
    \ 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum +=\
    \ $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n\
    }\n\n/* For a given array of integers, return an array consisting of a sum and\
    \ a product of all the integers in an array.\nEmpty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n\
    >>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product\
    \ = 1;\n    foreach ($numbers as $number) {\n        $sum += $number;\n      \
    \  $product *= $number;\n    }\n    return array($sum, $product);\n}\n\n/* For\
    \ a given array of integers, return an array consisting of a sum and a product\
    \ of all the integers in an array.\nEmpty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1,\
    \ 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach\
    \ ($numbers as $number) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return array($sum, $product);\n}\n\n/* For a given array of integers,\
    \ return an array consisting of a sum and a product of all the integers in an\
    \ array.\nEmpty sum should be equal to 0 and empty product should be equal to\
    \ 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\n\
    array(10, 24)*/", "\t$sum = 0;\n\t$product = 1;\n\tforeach ($numbers as $number)\
    \ {\n\t\t$sum += $number;\n\t\t$product *= $number;\n\t}\n\treturn array($sum,\
    \ $product);\n}\n\n/* For a given array of integers, return an array consisting\
    \ of a sum and a product of all the integers in an array.\nEmpty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum =\
    \ 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum +=\
    \ $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n\
    }\n\n/* For a given array of integers, return an array consisting of a sum and\
    \ a product of all the integers in an array.\nEmpty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n\
    >>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product\
    \ = 1;\n    foreach ($numbers as $number) {\n        $sum += $number;\n      \
    \  $product *= $number;\n    }\n    return array($sum, $product);\n}\n\n/* For\
    \ a given array of integers, return an array consisting of a sum and a product\
    \ of all the integers in an array.\nEmpty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1,\
    \ 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach\
    \ ($numbers as $number) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return array($sum, $product);\n}\n\n/* For a given array of integers,\
    \ return an array consisting of a sum and a product of all the integers in an\
    \ array.\nEmpty sum should be equal to 0 and empty product should be equal to\
    \ 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\n\
    array(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers as\
    \ $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n/* For a given array of integers, return\
    \ an array consisting of a sum and a product of all the integers in an array.\n\
    Empty sum should be equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum =\
    \ 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum +=\
    \ $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n\
    }\n\n/*For a given array of integers, return an array consisting of a sum and\
    \ a product of all the integers in an array.\nEmpty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n\
    >>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product\
    \ = 1;\n    foreach ($numbers as $number) {\n        $sum += $number;\n      \
    \  $product *= $number;\n    }\n    return array($sum, $product);\n}\n\n/* For\
    \ a given array of integers, return an array consisting of a sum and a product\
    \ of all the integers in an array.\nEmpty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1,\
    \ 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach\
    \ ($numbers as $number) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return array($sum, $product);\n}\n\n/* For a given array of integers,\
    \ return an array consisting of a sum and a product of all the integers in an\
    \ array.\nEmpty sum should be equal to 0 and empty product should be equal to\
    \ 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\n\
    array(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers as\
    \ $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n/* Given a string, return a string where\
    \ all the vowels are replaced with '*'.\n>>> replace_vowels(\"Hello world!\")\n\
    \"H*ll* w*rld!\"\n>>> replace_vowels(\"aeiou\")\n\"*****\"*/", "    $sum = 0;\n\
    \    $product = 1;\n    foreach ($numbers as $number) {\n        $sum += $number;\n\
    \        $product *= $number;\n    }\n    return array($sum, $product);\n}\n\n\
    /* For a given array of integers, return an array consisting of a sum and a product\
    \ of all the integers in an array.\nEmpty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1,\
    \ 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach\
    \ ($numbers as $number) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return array($sum, $product);\n}\n\n/* For a given array of integers,\
    \ return an array consisting of a sum and a product of all the integers in an\
    \ array.\nEmpty sum should be equal to 0 and empty product should be equal to\
    \ 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\n\
    array(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers as\
    \ $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n/* For a given array of integers, return\
    \ an array consisting of a sum and a product of all the integers in an array.\n\
    Empty sum should be equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum =\
    \ 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum +=\
    \ $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n\
    }\n\n/* For a given array of integers, return an array consisting of a sum and\
    \ a product of all the integers in an array.\nEmpty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n\
    >>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product\
    \ = 1;\n    foreach ($numbers as $number) {\n        $sum += $number;\n      \
    \  $product *= $number;\n    }\n    return array($sum, $product);\n}\n\n/* For\
    \ a given array of integers, return an array consisting of a sum and a product\
    \ of all the integers in an array.\nEmpty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1,\
    \ 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach\
    \ ($numbers as $number) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return array($sum, $product);\n}\n\n/* For a given array of integers,\
    \ return an array consisting of a sum and a product of all the integers in an\
    \ array.\nEmpty sum should be equal to 0 and empty product should be equal to\
    \ 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\n\
    array(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers as\
    \ $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n/* For a given array of integers, return\
    \ an array consisting of a sum and a product of all the integers in an array.\n\
    Empty sum should be equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum =\
    \ 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum +=\
    \ $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n\
    }\n\n/* For a given array of integers, return an array consisting of a sum and\
    \ a product of all the integers in an array.\nEmpty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n\
    >>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product\
    \ = 1;\n    foreach ($numbers as $number) {\n        $sum += $number;\n      \
    \  $product *= $number;\n    }\n    return array($sum, $product);\n}\n\n/* For\
    \ a given array of integers, return an array consisting of a sum and a product\
    \ of all the integers in an array.\nEmpty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1,\
    \ 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach\
    \ ($numbers as $number) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return array($sum, $product);\n}\n\n/* For a given array of integers,\
    \ return an array consisting of a sum and a product of all the integers in an\
    \ array.\nEmpty sum should be equal to 0 and empty product should be equal to\
    \ 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\n\
    array(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers as\
    \ $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n/* For a given array of integers, return\
    \ an array consisting of a sum and a product of all the integers in an array.\n\
    Empty sum should be equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    if (empty($numbers))\
    \ {\n        return array(0, 1);\n    }\n    $sum = 0;\n    $product = 1;\n  \
    \  foreach ($numbers as $number) {\n        $sum += $number;\n        $product\
    \ *= $number;\n    }\n    return array($sum, $product);\n}\n\n/* For a given array\
    \ of integers, return an array consisting of a sum and a product of all the integers\
    \ in an array.\nEmpty sum should be equal to 0 and empty product should be equal\
    \ to 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1, 2, 3,\
    \ 4))\narray(10, 24)*/", "\t$sum = 0;\n\t$product = 1;\n\tforeach ($numbers as\
    \ $number) {\n\t\t$sum += $number;\n\t\t$product *= $number;\n\t}\n\treturn array($sum,\
    \ $product);\n}\n\n/* For a given array of integers, return the sum of all the\
    \ integers in an array.\nEmpty sum should be equal to 0.\n>>> sum(array())\n0\n\
    >>> sum(array(1, 2, 3, 4))\n10*/", "    $sum = 0;\n    $product = 1;\n    foreach\
    \ ($numbers as $number) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return array($sum, $product);\n}\n\n/* For a given array of integers,\
    \ return an array consisting of a sum and a product of all the integers in an\
    \ array.\nEmpty sum should be equal to 0 and empty product should be equal to\
    \ 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\n\
    array(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers as\
    \ $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n/* For a given array of integers, return\
    \ an array consisting of a sum and a product of all the integers in an array.\n\
    Empty sum should be equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum =\
    \ 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum +=\
    \ $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n\
    }\n\n/* For a given array of integers, return an array consisting of a sum and\
    \ a product of all the integers in an array.\nEmpty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n\
    >>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product\
    \ = 1;\n    foreach ($numbers as $number) {\n        $sum += $number;\n      \
    \  $product *= $number;\n    }\n    return array($sum, $product);\n}\n\n/* For\
    \ a given array of integers, return an array consisting of a sum and a product\
    \ of all the integers in an array.\nEmpty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1,\
    \ 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach\
    \ ($numbers as $number) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return array($sum, $product);\n}\n\n/* For a given array of integers,\
    \ return an array consisting of a sum and a product of all the integers in an\
    \ array.\nEmpty sum should be equal to 0 and empty product should be equal to\
    \ 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\n\
    array(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers as\
    \ $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n/* For a given array of integers, return\
    \ an array consisting of a sum and a product of all the integers in an array.\n\
    Empty sum should be equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum =\
    \ 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum +=\
    \ $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n\
    }\n\n/* For a given array of integers, return an array consisting of a sum and\
    \ a product of all the integers in an array.\nEmpty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n\
    >>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product\
    \ = 1;\n    foreach ($numbers as $number) {\n        $sum += $number;\n      \
    \  $product *= $number;\n    }\n    return array($sum, $product);\n}\n\n/* For\
    \ a given array of integers, return an array consisting of a sum and a product\
    \ of all the integers in an array.\nEmpty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1,\
    \ 2, 3, 4))\narray(10, 24)*/", "\t$sum = 0;\n\t$product = 1;\n\tforeach ($numbers\
    \ as $number) {\n\t\t$sum += $number;\n\t\t$product *= $number;\n\t}\n\treturn\
    \ array($sum, $product);\n}\n\n/* For a given array of integers, return an array\
    \ consisting of a sum and a product of all the integers in an array.\nEmpty sum\
    \ should be equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum =\
    \ 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum +=\
    \ $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n\
    }\n\n/* For a given array of integers, return an array consisting of a sum and\
    \ a product of all the integers in an array.\nEmpty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n\
    >>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product\
    \ = 1;\n    foreach ($numbers as $number) {\n        $sum += $number;\n      \
    \  $product *= $number;\n    }\n    return array($sum, $product);\n}\n\n/* For\
    \ a given array of integers, return an array consisting of a sum and a product\
    \ of all the integers in an array.\nEmpty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1,\
    \ 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach\
    \ ($numbers as $number) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return array($sum, $product);\n}\n\n/* For a given array of integers,\
    \ return an array consisting of a sum and a product of all the integers in an\
    \ array.\nEmpty sum should be equal to 0 and empty product should be equal to\
    \ 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\n\
    array(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers as\
    \ $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n/* For a given array of integers, return\
    \ an array consisting of a sum and a product of all the integers in an array.\n\
    Empty sum should be equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum =\
    \ 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum +=\
    \ $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n\
    }\n\n/*\nFor a given array of integers, return an array consisting of a sum and\
    \ a product of all the integers in an array.\nEmpty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n\
    >>> sum_product(array(1, 2, 3, 4))\narray(10, 24)\n*/", "  $sum = 0;\n  $product\
    \ = 1;\n  foreach ($numbers as $value) {\n    $sum += $value;\n    $product *=\
    \ $value;\n  }\n  return array($sum, $product);\n}\n\n/* For a given array of\
    \ integers, return an array consisting of a sum and a product of all the integers\
    \ in an array.\nEmpty sum should be equal to 0 and empty product should be equal\
    \ to 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1, 2, 3,\
    \ 4))\narray(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n/* For a given array of integers, return\
    \ an array consisting of a sum and a product of all the integers in an array.\n\
    Empty sum should be equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum =\
    \ 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum +=\
    \ $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n\
    }\n\n/* For a given array of integers, return an array consisting of a sum and\
    \ a product of all the integers in an array.\nEmpty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n\
    >>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product\
    \ = 1;\n    foreach ($numbers as $number) {\n        $sum += $number;\n      \
    \  $product *= $number;\n    }\n    return array($sum, $product);\n}\n\n/* For\
    \ a given array of integers, return an array consisting of a sum and a product\
    \ of all the integers in an array.\nEmpty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1,\
    \ 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach\
    \ ($numbers as $number) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return array($sum, $product);\n}\n\n/* For a given array of integers,\
    \ return an array consisting of a sum and a product of all the integers in an\
    \ array.\nEmpty sum should be equal to 0 and empty product should be equal to\
    \ 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\n\
    array(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers as\
    \ $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n/* For a given array of integers, return\
    \ an array consisting of a sum and a product of all the integers in an array.\n\
    Empty sum should be equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum =\
    \ 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum +=\
    \ $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n\
    }\n\n/* For a given array of integers, return an array consisting of a sum and\
    \ a product of all the integers in an array.\nEmpty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n\
    >>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product\
    \ = 1;\n    foreach ($numbers as $number) {\n        $sum += $number;\n      \
    \  $product *= $number;\n    }\n    return array($sum, $product);\n}\n\n/* For\
    \ a given array of integers, return an array consisting of a sum and a product\
    \ of all the integers in an array.\nEmpty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1,\
    \ 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach\
    \ ($numbers as $number) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return array($sum, $product);\n}\n\n/* For a given array of integers,\
    \ return an array consisting of a sum and a product of all the integers in an\
    \ array.\nEmpty sum should be equal to 0 and empty product should be equal to\
    \ 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\n\
    array(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers as\
    \ $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n/*\nFor a given array of integers, return\
    \ an array consisting of a sum and a product of all the integers in an array.\n\
    Empty sum should be equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)\n*/", "    $sum\
    \ = 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum +=\
    \ $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n\
    }\n\n/* For a given array of integers, return an array consisting of a sum and\
    \ a product of all the integers in an array.\nEmpty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n\
    >>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product\
    \ = 1;\n    foreach ($numbers as $number) {\n        $sum += $number;\n      \
    \  $product *= $number;\n    }\n    return array($sum, $product);\n}\n\n/* For\
    \ a given array of integers, return an array consisting of a sum and a product\
    \ of all the integers in an array.\nEmpty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1,\
    \ 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach\
    \ ($numbers as $number) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return array($sum, $product);\n}\n\n/* For a given array of integers,\
    \ return an array consisting of a sum and a product of all the integers in an\
    \ array.\nEmpty sum should be equal to 0 and empty product should be equal to\
    \ 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\n\
    array(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers as\
    \ $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n/*\nFor a given array of integers, return\
    \ an array consisting of a sum and a product of all the integers in an array.\n\
    Empty sum should be equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)\n*/", "    $sum\
    \ = 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum +=\
    \ $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n\
    }\n\n/* For a given array of integers, return an array consisting of a sum and\
    \ a product of all the integers in an array.\nEmpty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n\
    >>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product\
    \ = 1;\n    foreach ($numbers as $number) {\n        $sum += $number;\n      \
    \  $product *= $number;\n    }\n    return array($sum, $product);\n}\n\n/* For\
    \ a given array of integers, return an array consisting of a sum and a product\
    \ of all the integers in an array.\nEmpty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1,\
    \ 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach\
    \ ($numbers as $number) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return array($sum, $product);\n}\n\n/* For a given array of integers,\
    \ return an array consisting of a sum and a product of all the integers in an\
    \ array.\nEmpty sum should be equal to 0 and empty product should be equal to\
    \ 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\n\
    array(10, 24)*/", "\t$sum = 0;\n\t$product = 1;\n\tforeach ($numbers as $number)\
    \ {\n\t\t$sum += $number;\n\t\t$product *= $number;\n\t}\n\treturn array($sum,\
    \ $product);\n}\n\n/* Given a string, return a string where for every character\
    \ in the original there are three characters.\n>>> triple_trouble(\"Mississippi\"\
    )\n\"MMMiiissssssiiissssssiiippppppiii\"\n*/", "    $sum = 0;\n    $product =\
    \ 1;\n    foreach ($numbers as $number) {\n        $sum += $number;\n        $product\
    \ *= $number;\n    }\n    return array($sum, $product);\n}\n\n/* For a given array\
    \ of integers, return an array consisting of a sum and a product of all the integers\
    \ in an array.\nEmpty sum should be equal to 0 and empty product should be equal\
    \ to 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1, 2, 3,\
    \ 4))\narray(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n/* For a given array of integers, return\
    \ an array consisting of a sum and a product of all the integers in an array.\n\
    Empty sum should be equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum =\
    \ 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum +=\
    \ $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n\
    }\n\n/* For a given array of integers, return an array consisting of a sum and\
    \ a product of all the integers in an array.\nEmpty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n\
    >>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product\
    \ = 1;\n    foreach ($numbers as $number) {\n        $sum += $number;\n      \
    \  $product *= $number;\n    }\n    return array($sum, $product);\n}\n\n/* For\
    \ a given array of integers, return an array consisting of a sum and a product\
    \ of all the integers in an array.\nEmpty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1,\
    \ 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach\
    \ ($numbers as $number) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return array($sum, $product);\n}\n\n/* For a given array of integers,\
    \ return an array consisting of a sum and a product of all the integers in an\
    \ array.\nEmpty sum should be equal to 0 and empty product should be equal to\
    \ 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\n\
    array(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers as\
    \ $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n/* For a given array of integers, return\
    \ an array consisting of a sum and a product of all the integers in an array.\n\
    Empty sum should be equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum =\
    \ 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum +=\
    \ $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n\
    }\n\n/* For a given array of integers, return an array consisting of a sum and\
    \ a product of all the integers in an array.\nEmpty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n\
    >>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product\
    \ = 1;\n    foreach ($numbers as $number) {\n        $sum += $number;\n      \
    \  $product *= $number;\n    }\n    return array($sum, $product);\n}\n\n/* For\
    \ a given array of integers, return an array consisting of a sum and a product\
    \ of all the integers in an array.\nEmpty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1,\
    \ 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach\
    \ ($numbers as $number) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return array($sum, $product);\n}", "    $sum = 0;\n    $product =\
    \ 1;\n    foreach ($numbers as $number) {\n        $sum += $number;\n        $product\
    \ *= $number;\n    }\n    return array($sum, $product);\n}\n\n/* For a given array\
    \ of integers, return an array consisting of the sum of all the integers in an\
    \ array.\nEmpty sum should be equal to 0.\n>>> sum_array(array())\n0\n>>> sum_array(array(1,\
    \ 2, 3, 4))\n10*/", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers as\
    \ $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n/* For a given array of integers, return\
    \ an array consisting of a sum and a product of all the integers in an array.\n\
    Empty sum should be equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum =\
    \ 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum +=\
    \ $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n\
    }\n\n/* Given a string, return a string with all the vowels removed.\n>>> remove_vowels(\"\
    Hello, world!\")\n'Hll, wrld!'\n>>> remove_vowels(\"I am a programmer\")\n' m\
    \  prgrmmr'\n*/", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers as\
    \ $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n/* For a given array of integers, return\
    \ an array consisting of a sum and a product of all the integers in an array.\n\
    Empty sum should be equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum =\
    \ 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum +=\
    \ $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n\
    }\n\n/* For a given array of integers, return an array consisting of a sum and\
    \ a product of all the integers in an array.\nEmpty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n\
    >>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product\
    \ = 1;\n    foreach ($numbers as $number) {\n        $sum += $number;\n      \
    \  $product *= $number;\n    }\n    return array($sum, $product);\n}\n\n/* For\
    \ a given array of integers, return an array consisting of a sum and a product\
    \ of all the integers in an array.\nEmpty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1,\
    \ 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach\
    \ ($numbers as $number) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return array($sum, $product);\n}\n\n/* For a given array of integers,\
    \ return an array consisting of a sum and a product of all the integers in an\
    \ array.\nEmpty sum should be equal to 0 and empty product should be equal to\
    \ 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\n\
    array(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers as\
    \ $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n/* For a given array of integers, return\
    \ an array consisting of a sum and a product of all the integers in an array.\n\
    Empty sum should be equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum =\
    \ 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum +=\
    \ $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n\
    }\n\n/* Given an array of integers, return an array of integers where each integer\
    \ is multiplied by 2.\n>>> double_array(array(1, 2, 3, 4))\narray(2, 4, 6, 8)\n\
    >>> double_array(array(1, 2, 3, 4, 5))\narray(2, 4, 6, 8, 10)*/", "    $sum =\
    \ 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum +=\
    \ $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n\
    }\n\n/* For a given array of integers, return an array consisting of a sum and\
    \ a product of all the integers in an array.\nEmpty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n\
    >>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product\
    \ = 1;\n    foreach ($numbers as $number) {\n        $sum += $number;\n      \
    \  $product *= $number;\n    }\n    return array($sum, $product);\n}\n\n/* For\
    \ a given array of integers, return an array consisting of a sum and a product\
    \ of all the integers in an array.\nEmpty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1,\
    \ 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach\
    \ ($numbers as $number) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return array($sum, $product);\n}\n\n/* For a given array of integers,\
    \ return an array consisting of a sum and a product of all the integers in an\
    \ array.\nEmpty sum should be equal to 0 and empty product should be equal to\
    \ 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\n\
    array(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers as\
    \ $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n/* Given a string, return a string with\
    \ all the vowels removed.\n>>> remove_vowels(\"Hello world\")\n\"Hll wrld\"\n\
    >>> remove_vowels(\"Python\")\n\"Pythn\"\n>>> remove_vowels(\"The quick brown\
    \ fox jumps over the lazy dog\")\n\"Th qck brwn fx jmps vr th lzy dg\"*/", " \
    \   $sum = 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n      \
    \  $sum += $number;\n        $product *= $number;\n    }\n    return array($sum,\
    \ $product);\n}\n\n/* For a given array of integers, return an array consisting\
    \ of a sum and a product of all the integers in an array.\nEmpty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum =\
    \ 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum +=\
    \ $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n\
    }\n\n/*Given a string, return a string with the words reversed.\n>>> reverse_words(\"\
    hello world\")\n\"world hello\"*/", "    $sum = 0;\n    $product = 1;\n    foreach\
    \ ($numbers as $number) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return array($sum, $product);\n}\n\n/* For a given array of integers,\
    \ return a new array consisting of all the integers from the original array that\
    \ are greater than or equal to 100.\n>>> filter_100(array(1, 200, 100, 101, 99))\n\
    array(200, 100, 101)*/", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n/*\n * For a given array of integers,\
    \ return an array consisting of a sum and a product of all the integers in an\
    \ array.\nEmpty sum should be equal to 0 and empty product should be equal to\
    \ 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\n\
    array(10, 24)\n */", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n/* For a given array of integers, return\
    \ an array consisting of a sum and a product of all the integers in an array.\n\
    Empty sum should be equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum =\
    \ 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum +=\
    \ $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n\
    }\n\n/* Given a string, return a string where for every character in the original\
    \ there are three characters.\n>>> triple_trouble(\"Mississippi\")\n\"MMMiiissssssiiissssssiiippppppiii\"\
    */", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n\
    \        $sum += $number;\n        $product *= $number;\n    }\n    return array($sum,\
    \ $product);\n}\n\n/* For a given array of integers, return an array consisting\
    \ of a sum and a product of all the integers in an array.\nEmpty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum =\
    \ 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum +=\
    \ $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n\
    }\n\n/* For a given array of integers, return an array consisting of a sum and\
    \ a product of all the integers in an array.\nEmpty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n\
    >>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product\
    \ = 1;\n    foreach ($numbers as $number) {\n        $sum += $number;\n      \
    \  $product *= $number;\n    }\n    return array($sum, $product);\n}\n\n/* For\
    \ a given array of integers, return an array consisting of a sum and a product\
    \ of all the integers in an array.\nEmpty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1,\
    \ 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach\
    \ ($numbers as $number) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return array($sum, $product);\n}\n\n/*\nGiven a string, return a string\
    \ where each character is repeated once.\n>>> double_char(\"String\")\n\"SSttrriinngg\"\
    \n>>> double_char(\"Hello World!\")\n\"HHeelllloo  WWoorrlldd!!\"\n>>> double_char(\"\
    1234!_ \")\n\"11223344!!__  \"\n*/", "    $sum = 0;\n    $product = 1;\n    foreach\
    \ ($numbers as $number) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return array($sum, $product);\n}\n\n/* For a given array of integers,\
    \ return an array consisting of a sum and a product of all the integers in an\
    \ array.\nEmpty sum should be equal to 0 and empty product should be equal to\
    \ 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\n\
    array(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers as\
    \ $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n/* For a given array of integers, return\
    \ an array consisting of a sum and a product of all the integers in an array.\n\
    Empty sum should be equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "\t$sum = 0;\n\
    \t$product = 1;\n\tforeach ($numbers as $number) {\n\t\t$sum += $number;\n\t\t\
    $product *= $number;\n\t}\n\treturn array($sum, $product);\n}\n\n/* For a given\
    \ array of integers, return an array consisting of a sum and a product of all\
    \ the integers in an array.\nEmpty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1,\
    \ 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach\
    \ ($numbers as $number) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return array($sum, $product);\n}\n\n/* For a given array of integers,\
    \ return an array consisting of a sum and a product of all the integers in an\
    \ array.\nEmpty sum should be equal to 0 and empty product should be equal to\
    \ 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\n\
    array(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers as\
    \ $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n/*\n * For a given array of integers,\
    \ return an array consisting of a sum and a product of all the integers in an\
    \ array.\nEmpty sum should be equal to 0 and empty product should be equal to\
    \ 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\n\
    array(10, 24)\n */", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers\
    \ as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n/* For a given array of integers, return\
    \ an array consisting of a sum and a product of all the integers in an array.\n\
    Empty sum should be equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum =\
    \ 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum +=\
    \ $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n\
    }\n\n/* For a given array of integers, return an array consisting of a sum and\
    \ a product of all the integers in an array.\nEmpty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n\
    >>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product\
    \ = 1;\n    foreach ($numbers as $number) {\n        $sum += $number;\n      \
    \  $product *= $number;\n    }\n    return array($sum, $product);\n}\n\n/* For\
    \ a given array of integers, return an array consisting of a sum and a product\
    \ of all the integers in an array.\nEmpty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1,\
    \ 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach\
    \ ($numbers as $number) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return array($sum, $product);\n}\n\n/* For a given array of integers,\
    \ return an array consisting of a sum and a product of all the integers in an\
    \ array.\nEmpty sum should be equal to 0 and empty product should be equal to\
    \ 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\n\
    array(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers as\
    \ $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n/* For a given array of integers, return\
    \ an array consisting of a sum and a product of all the integers in an array.\n\
    Empty sum should be equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum =\
    \ 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum +=\
    \ $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n\
    }\n\n/* For a given array of integers, return an array consisting of a sum and\
    \ a product of all the integers in an array.\nEmpty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n\
    >>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product\
    \ = 1;\n    foreach ($numbers as $number) {\n        $sum += $number;\n      \
    \  $product *= $number;\n    }\n    return array($sum, $product);\n}\n\n/*\nFor\
    \ a given array of integers, return an array consisting of a sum and a product\
    \ of all the integers in an array.\nEmpty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1,\
    \ 2, 3, 4))\narray(10, 24)\n*/", "    $sum = 0;\n    $product = 1;\n    foreach\
    \ ($numbers as $number) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return array($sum, $product);\n}\n\n/* For a given array of integers,\
    \ return an array consisting of a sum and a product of all the integers in an\
    \ array.\nEmpty sum should be equal to 0 and empty product should be equal to\
    \ 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\n\
    array(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers as\
    \ $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n/* For a given array of integers, return\
    \ an array consisting of a sum and a product of all the integers in an array.\n\
    Empty sum should be equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "\t$sum = 0;\n\
    \t$product = 1;\n\tforeach ($numbers as $number) {\n\t\t$sum += $number;\n\t\t\
    $product *= $number;\n\t}\n\treturn array($sum, $product);\n}\n\n/* Given a string,\
    \ return a string where all the vowels are replaced with \"*\".\n>>> censor(\"\
    Hello World\")\n\"H*ll* W*rld\"\n>>> censor(\"Hey, how are you?\")\n\"Hy, hw r\
    \ y?\"\n>>> censor(\"I'm doing fine.\")\n\"I'm d*ng f*n*.\"*/", "    $sum = 0;\n\
    \    $product = 1;\n    foreach ($numbers as $number) {\n        $sum += $number;\n\
    \        $product *= $number;\n    }\n    return array($sum, $product);\n}\n\n\
    /* For a given array of integers, return an array consisting of a sum and a product\
    \ of all the integers in an array.\nEmpty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1,\
    \ 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach\
    \ ($numbers as $number) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return array($sum, $product);\n}\n\n/* For a given array of integers,\
    \ return an array consisting of a sum and a product of all the integers in an\
    \ array.\nEmpty sum should be equal to 0 and empty product should be equal to\
    \ 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\n\
    array(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers as\
    \ $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n/* For a given array of integers, return\
    \ an array consisting of a sum and a product of all the integers in an array.\n\
    Empty sum should be equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "\t$sum = 0;\n\
    \t$product = 1;\n\tforeach ($numbers as $number) {\n\t\t$sum += $number;\n\t\t\
    $product *= $number;\n\t}\n\treturn array($sum, $product);\n}\n\n/* For a given\
    \ array of integers, return an array consisting of a sum and a product of all\
    \ the integers in an array.\nEmpty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1,\
    \ 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach\
    \ ($numbers as $number) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return array($sum, $product);\n}\n\n/* For a given array of integers,\
    \ return an array consisting of a sum and a product of all the integers in an\
    \ array.\nEmpty sum should be equal to 0 and empty product should be equal to\
    \ 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\n\
    array(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach ($numbers as\
    \ $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n\
    \    return array($sum, $product);\n}\n\n/* For a given array of integers, return\
    \ an array consisting of a sum and a product of all the integers in an array.\n\
    Empty sum should be equal to 0 and empty product should be equal to 1.\n>>> sum_product(array())\n\
    array(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum =\
    \ 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum +=\
    \ $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n\
    }\n\n/* For a given array of integers, return an array consisting of a sum and\
    \ a product of all the integers in an array.\nEmpty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n\
    >>> sum_product(array(1, 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product\
    \ = 1;\n    foreach ($numbers as $number) {\n        $sum += $number;\n      \
    \  $product *= $number;\n    }\n    return array($sum, $product);\n}\n\n/* For\
    \ a given array of integers, return an array consisting of a sum and a product\
    \ of all the integers in an array.\nEmpty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1,\
    \ 2, 3, 4))\narray(10, 24)*/", "    $sum = 0;\n    $product = 1;\n    foreach\
    \ ($numbers as $number) {\n        $sum += $number;\n        $product *= $number;\n\
    \    }\n    return array($sum, $product);\n}\n\n/* For a given array of integers,\
    \ return an array consisting of a sum and a product of all the integers in an\
    \ array.\nEmpty sum should be equal to 0 and empty product should be equal to\
    \ 1.\n>>> sum_product(array())\narray(0, 1)\n>>> sum_product(array(1, 2, 3, 4))\n\
    array(10, 24)*/"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

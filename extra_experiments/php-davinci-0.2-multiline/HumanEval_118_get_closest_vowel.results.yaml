language: php
name: HumanEval_118_get_closest_vowel
results:
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\",\"e\",\"i\",\"o\",\"u\",\"A\",\"E\",\"I\",\"O\",\"\
    U\");\n\t$word = str_split($word);\n\t$vowel_pos = array();\n\tforeach ($word\
    \ as $key => $value) {\n\t\tif (in_array($value, $vowels)) {\n\t\t\t$vowel_pos[]\
    \ = $key;\n\t\t}\n\t}\n\tif (count($vowel_pos) == 0) {\n\t\treturn \"\";\n\t}\n\
    \t$last_vowel = array_pop($vowel_pos);\n\t$result = \"\";\n\t$distance = 0;\n\t\
    foreach ($vowel_pos as $key => $value) {\n\t\tif ($last_vowel - $value > $distance)\
    \ {\n\t\t\t$distance = $last_vowel - $value;\n\t\t\t$result = $word[$value];\n\
    \t\t}\n\t}\n\treturn $result;\n}\necho get_closest_vowel(\"yogurt\").\"\\n\";\n\
    echo get_closest_vowel(\"FULL\").\"\\n\";\necho get_closest_vowel(\"quick\").\"\
    \\n\";\necho get_closest_vowel(\"ab\").\"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "o\n\nu\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpevjho836.php:48\n\
    Stack trace:\n#0 /tmp/tmpevjho836.php(63): test()\n#1 {main}\n  thrown in /tmp/tmpevjho836.php\
    \ on line 48\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $closest_vowel = \"\";\n    $closest_vowel_index\
    \ = $word_length;\n    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            if ($i > 0 && $i < $word_length - 1) {\n          \
    \      if (!in_array($word[$i - 1], $vowels) && !in_array($word[$i + 1], $vowels))\
    \ {\n                    if ($i < $closest_vowel_index) {\n                  \
    \      $closest_vowel_index = $i;\n                        $closest_vowel = $word[$i];\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return $closest_vowel;\n}\n\necho get_closest_vowel(\"yogurt\");\necho get_closest_vowel(\"\
    FULL\");\necho get_closest_vowel(\"quick\");\necho get_closest_vowel(\"ab\");\n\
    function candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "ou\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu47ld4nh.php:46\n\
    Stack trace:\n#0 /tmp/tmpu47ld4nh.php(61): test()\n#1 {main}\n  thrown in /tmp/tmpu47ld4nh.php\
    \ on line 46\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$word = str_split($word);\n\t$vowel\
    \ = '';\n\tfor ($i = count($word) - 1; $i >= 0; $i--) {\n\t\tif (in_array($word[$i],\
    \ $vowels)) {\n\t\t\t$vowel = $word[$i];\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn $vowel;\n\
    }\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\n\ni\na\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpekjz_jiy.php:40\n\
    Stack trace:\n#0 /tmp/tmpekjz_jiy.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpekjz_jiy.php\
    \ on line 40\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n\t$word = str_split($word);\n\
    \t$word = array_reverse($word);\n\t$vowel = \"\";\n\t$consonant = \"\";\n\tforeach\
    \ ($word as $key => $value) {\n\t\tif (in_array($value, $vowels)) {\n\t\t\t$vowel\
    \ = $value;\n\t\t\tif ($consonant != \"\") {\n\t\t\t\treturn $vowel;\n\t\t\t}\n\
    \t\t} else {\n\t\t\t$consonant = $value;\n\t\t\tif ($vowel != \"\") {\n\t\t\t\t\
    return $vowel;\n\t\t\t}\n\t\t}\n\t}\n\treturn \"\";\n}\n\n/* You are given a string.\
    \ Your task is to find the closest vowel that stands before\na consonant from\
    \ the right side of the string (case sensitive).\nVowels in the beginning and\
    \ ending doesn't count. Return empty string if you didn't\nfind any vowel met\
    \ the above condition. \nYou may assume that the given string contains English\
    \ letter only.\nExample:\n>>> get_closest_vowel_before_consonant(\"yogurt\")\n\
    \"o\"\n>>> get_closest_vowel_before_consonant(\"FULL\")\n\"U\"\n>>> get_closest_vowel_before_consonant(\"\
    quick\")\n\"\"\n>>> get_closest_vowel_before_consonant(\"ab\")\n\"\"*/\nfunction\
    \ candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5q2txn8j.php:59\n\
    Stack trace:\n#0 /tmp/tmp5q2txn8j.php(72): test()\n#1 {main}\n  thrown in /tmp/tmp5q2txn8j.php\
    \ on line 59\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$word = strtolower($word);\n\
    \t$word = str_split($word);\n\t$vowel_index = 0;\n\t$vowel_distance = 0;\n\t$closest_vowel\
    \ = \"\";\n\tfor ($i = 0; $i < count($word); $i++) {\n\t\tif (in_array($word[$i],\
    \ $vowels)) {\n\t\t\tif ($i > 0 && !in_array($word[$i - 1], $vowels)) {\n\t\t\t\
    \tif ($vowel_distance == 0) {\n\t\t\t\t\t$vowel_distance = $i;\n\t\t\t\t\t$closest_vowel\
    \ = $word[$i];\n\t\t\t\t} else if ($i < $vowel_distance) {\n\t\t\t\t\t$vowel_distance\
    \ = $i;\n\t\t\t\t\t$closest_vowel = $word[$i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\
    }\n\treturn $closest_vowel;\n}\necho get_closest_vowel(\"yogurt\") . \"\\n\";\n\
    echo get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\"\
    ) . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "o\nu\nu\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm7n6haxe.php:47\n\
    Stack trace:\n#0 /tmp/tmpm7n6haxe.php(62): test()\n#1 {main}\n  thrown in /tmp/tmpm7n6haxe.php\
    \ on line 47\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$letters = str_split($word);\n\t\
    $vowel_index = 0;\n\t$vowel_distance = 0;\n\t$vowel_found = false;\n\tfor ($i\
    \ = count($letters) - 1; $i >= 0; $i--) {\n\t\tif (in_array($letters[$i], $vowels))\
    \ {\n\t\t\tif ($vowel_found) {\n\t\t\t\treturn $letters[$i];\n\t\t\t}\n\t\t\t\
    $vowel_index = $i;\n\t\t\t$vowel_found = true;\n\t\t} else {\n\t\t\tif ($vowel_found)\
    \ {\n\t\t\t\t$vowel_distance = $i - $vowel_index;\n\t\t\t\t$vowel_found = false;\n\
    \t\t\t}\n\t\t}\n\t}\n\treturn '';\n}\n\necho get_closest_vowel(\"yogurt\") . \"\
    \\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\n\nu\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdbyr5mlf.php:48\n\
    Stack trace:\n#0 /tmp/tmpdbyr5mlf.php(63): test()\n#1 {main}\n  thrown in /tmp/tmpdbyr5mlf.php\
    \ on line 48\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n\t$word = str_split($word);\n\
    \t$word = array_reverse($word);\n\t$vowel_index = 0;\n\t$consonant_index = 0;\n\
    \t$vowel_found = false;\n\t$consonant_found = false;\n\tfor ($i = 0; $i < count($word);\
    \ $i++) {\n\t\tif (in_array($word[$i], $vowels)) {\n\t\t\t$vowel_index = $i;\n\
    \t\t\t$vowel_found = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif ($vowel_found) {\n\t\
    \tfor ($i = $vowel_index + 1; $i < count($word); $i++) {\n\t\t\tif (!in_array($word[$i],\
    \ $vowels)) {\n\t\t\t\t$consonant_index = $i;\n\t\t\t\t$consonant_found = true;\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tif ($vowel_found && $consonant_found) {\n\
    \t\treturn $word[$vowel_index];\n\t} else {\n\t\treturn \"\";\n\t}\n}\n\necho\
    \ get_closest_vowel(\"yogurt\");\necho get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"\
    quick\");\necho get_closest_vowel(\"ab\");\nfunction candidate(...$args) {\n \
    \   return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "ui\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwg5fx96y.php:60\n\
    Stack trace:\n#0 /tmp/tmpwg5fx96y.php(71): test()\n#1 {main}\n  thrown in /tmp/tmpwg5fx96y.php\
    \ on line 60\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $word = strtolower($word);\n\
    \    $length = strlen($word);\n    $vowel_index = 0;\n    for ($i = $length -\
    \ 1; $i > 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n          \
    \  $vowel_index = $i;\n            break;\n        }\n    }\n    if ($vowel_index\
    \ == 0) {\n        return '';\n    }\n    for ($i = $vowel_index - 1; $i >= 0;\
    \ $i--) {\n        if (!in_array($word[$i], $vowels)) {\n            return $word[$vowel_index];\n\
    \        }\n    }\n    return '';\n}\n\necho get_closest_vowel(\"yogurt\");\n\
    echo get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"quick\");\necho get_closest_vowel(\"\
    ab\");\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "uui\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpctedoyx2.php:51\n\
    Stack trace:\n#0 /tmp/tmpctedoyx2.php(62): test()\n#1 {main}\n  thrown in /tmp/tmpctedoyx2.php\
    \ on line 51\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n\t$word = strtolower($word);\n\
    \t$word_length = strlen($word);\n\t$vowel_position = 0;\n\t$vowel_distance = 0;\n\
    \t$vowel_distance_temp = 0;\n\t$vowel_position_temp = 0;\n\t$vowel_position_temp_2\
    \ = 0;\n\t$vowel_distance_temp_2 = 0;\n\t$vowel_position_temp_3 = 0;\n\t$vowel_distance_temp_3\
    \ = 0;\n\t$vowel_position_temp_4 = 0;\n\t$vowel_distance_temp_4 = 0;\n\t$vowel_position_temp_5\
    \ = 0;\n\t$vowel_distance_temp_5 = 0;\n\t$vowel_position_temp_6 = 0;\n\t$vowel_distance_temp_6\
    \ = 0;\n\t$vowel_position_temp_7 = 0;\n\t$vowel_distance_temp_7 = 0;\n\t$vowel_position_temp_8\
    \ = 0;\n\t$vowel_distance_temp_8 = 0;\n\t$vowel_position_temp_9 = 0;\n\t$vowel_distance_temp_9\
    \ = 0;\n\t$vowel_position_temp_10 = 0;\n\t$vowel_distance_temp_10 = 0;\n\t$vowel_position_temp_11\
    \ = 0;\n\t$vowel_distance_temp_11 = 0;\n\t$vowel_position_temp_12 = 0;\n\t$vowel_distance_temp_12\
    \ = 0;\n\t$vowel_position_temp_13 = 0;\n\t$vowel_distance_temp_13 = 0;\n\t$vowel_position_temp_14\
    \ = 0;\n\t$vowel_distance_temp_14 = 0;\n\t$vowel_position_temp_15 = 0;\n\t$vowel_distance_temp_15\n\
    function candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmp4ammtrh8.php
    on line 52

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$word = str_split($word);\n\
    \t$last_vowel = \"\";\n\t$last_consonant = \"\";\n\t$closest_vowel = \"\";\n\t\
    $closest_vowel_distance = 0;\n\tfor ($i = count($word) - 1; $i >= 0; $i--) {\n\
    \t\tif (in_array($word[$i], $vowels)) {\n\t\t\t$last_vowel = $word[$i];\n\t\t\t\
    if ($last_consonant != \"\") {\n\t\t\t\tif ($closest_vowel_distance == 0) {\n\t\
    \t\t\t\t$closest_vowel = $last_vowel;\n\t\t\t\t\t$closest_vowel_distance = count($word)\
    \ - $i;\n\t\t\t\t} else {\n\t\t\t\t\tif (count($word) - $i < $closest_vowel_distance)\
    \ {\n\t\t\t\t\t\t$closest_vowel = $last_vowel;\n\t\t\t\t\t\t$closest_vowel_distance\
    \ = count($word) - $i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t\
    $last_consonant = $word[$i];\n\t\t}\n\t}\n\treturn $closest_vowel;\n}\n\necho\
    \ get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") .\
    \ \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\n\ni\na\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5swaz01x.php:55\n\
    Stack trace:\n#0 /tmp/tmp5swaz01x.php(68): test()\n#1 {main}\n  thrown in /tmp/tmp5swaz01x.php\
    \ on line 55\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $word = strtolower($word);\n\
    \    for ($i = strlen($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            if ($i == strlen($word) - 1) {\n                return\
    \ \"\";\n            }\n            if (!in_array($word[$i + 1], $vowels)) {\n\
    \                return $word[$i];\n            }\n        }\n    }\n    return\
    \ \"\";\n}\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nu\ni\na\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgu1grejx.php:43\n\
    Stack trace:\n#0 /tmp/tmpgu1grejx.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpgu1grejx.php\
    \ on line 43\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$word = str_split($word);\n\t$vowel_pos\
    \ = [];\n\t$consonant_pos = [];\n\tfor ($i = 0; $i < count($word); $i++) {\n\t\
    \tif (in_array($word[$i], $vowels)) {\n\t\t\t$vowel_pos[] = $i;\n\t\t} else {\n\
    \t\t\t$consonant_pos[] = $i;\n\t\t}\n\t}\n\t$vowel_pos = array_reverse($vowel_pos);\n\
    \t$consonant_pos = array_reverse($consonant_pos);\n\t$result = '';\n\tfor ($i\
    \ = 0; $i < count($vowel_pos); $i++) {\n\t\tfor ($j = 0; $j < count($consonant_pos);\
    \ $j++) {\n\t\t\tif ($vowel_pos[$i] < $consonant_pos[$j]) {\n\t\t\t\t$result =\
    \ $word[$vowel_pos[$i]];\n\t\t\t\tbreak 2;\n\t\t\t}\n\t\t}\n\t}\n\treturn $result;\n\
    }\n\n/* You are given a word. Your task is to find the closest vowel that stands\
    \ between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction candidate(...$args) {\n\
    \    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2guor7qp.php:63\n\
    Stack trace:\n#0 /tmp/tmp2guor7qp.php(76): test()\n#1 {main}\n  thrown in /tmp/tmp2guor7qp.php\
    \ on line 63\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$word = str_split($word);\n\
    \t$vowel_index = 0;\n\t$vowel_distance = 0;\n\t$vowel_distance_temp = 0;\n\t$vowel_index_temp\
    \ = 0;\n\t$vowel_index_temp_temp = 0;\n\t$vowel_distance_temp_temp = 0;\n\t$vowel_index_temp_temp_temp\
    \ = 0;\n\t$vowel_distance_temp_temp_temp = 0;\n\t$vowel_index_temp_temp_temp_temp\
    \ = 0;\n\t$vowel_distance_temp_temp_temp_temp = 0;\n\t$vowel_index_temp_temp_temp_temp_temp\
    \ = 0;\n\t$vowel_distance_temp_temp_temp_temp_temp = 0;\n\t$vowel_index_temp_temp_temp_temp_temp_temp\
    \ = 0;\n\t$vowel_distance_temp_temp_temp_temp_temp_temp = 0;\n\t$vowel_index_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n\t$vowel_distance_temp_temp_temp_temp_temp_temp_temp = 0;\n\t$vowel_index_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n\t$vowel_distance_temp_temp_temp_temp_temp_temp_temp_temp = 0;\n\t$vowel_index_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n\t$vowel_distance_temp_temp_temp_temp_temp_temp_temp_temp_temp = 0;\n\t\
    $vowel_index_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp = 0;\n\t$vowel_distance_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n\t$vowel_index_temp_temp_temp_temp\nfunction candidate(...$args) {\n \
    \   return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmp9z21q8mp.php
    on line 42

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$word = str_split($word);\n\
    \t$vowel_pos = array();\n\t$consonant_pos = array();\n\tforeach ($word as $key\
    \ => $value) {\n\t\tif (in_array($value, $vowels)) {\n\t\t\t$vowel_pos[] = $key;\n\
    \t\t} else {\n\t\t\t$consonant_pos[] = $key;\n\t\t}\n\t}\n\t$result = array();\n\
    \tforeach ($vowel_pos as $key => $value) {\n\t\t$result[] = abs($consonant_pos[count($consonant_pos)\
    \ - 1] - $value);\n\t}\n\t$min = min($result);\n\t$index = array_search($min,\
    \ $result);\n\tif ($min == 0) {\n\t\treturn \"\";\n\t} else {\n\t\treturn $word[$vowel_pos[$index]];\n\
    \t}\n}\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\n\nFatal error: Uncaught ValueError: min(): Argument #1 ($value) must\
    \ contain at least one element in /tmp/tmptm6zjta3.php:32\nStack trace:\n#0 /tmp/tmptm6zjta3.php(32):\
    \ min(Array)\n#1 /tmp/tmptm6zjta3.php(41): get_closest_vowel(Array)\n#2 {main}\n\
    \  thrown in /tmp/tmptm6zjta3.php on line 32\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$word = strtolower($word);\n\
    \t$word_length = strlen($word);\n\t$closest_vowel = '';\n\t$closest_vowel_distance\
    \ = $word_length;\n\tfor ($i = 0; $i < $word_length; $i++) {\n\t\tif (in_array($word[$i],\
    \ $vowels)) {\n\t\t\tif ($i > 0 && !in_array($word[$i - 1], $vowels)) {\n\t\t\t\
    \tif ($i < $closest_vowel_distance) {\n\t\t\t\t\t$closest_vowel_distance = $i;\n\
    \t\t\t\t\t$closest_vowel = $word[$i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ $closest_vowel;\n}\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "o\nu\nu\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpoxhha2ri.php:44\n\
    Stack trace:\n#0 /tmp/tmpoxhha2ri.php(59): test()\n#1 {main}\n  thrown in /tmp/tmpoxhha2ri.php\
    \ on line 44\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $word = strtolower($word);\n\
    \    $word = str_split($word);\n    $word = array_reverse($word);\n    $vowel_index\
    \ = null;\n    $consonant_index = null;\n    $vowel_index_array = array();\n \
    \   $consonant_index_array = array();\n    for ($i = 0; $i < count($word); $i++)\
    \ {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n\
    \            array_push($vowel_index_array, $vowel_index);\n        } else {\n\
    \            $consonant_index = $i;\n            array_push($consonant_index_array,\
    \ $consonant_index);\n        }\n    }\n    $vowel_index_array = array_reverse($vowel_index_array);\n\
    \    $consonant_index_array = array_reverse($consonant_index_array);\n    $difference_array\
    \ = array();\n    for ($i = 0; $i < count($vowel_index_array); $i++) {\n     \
    \   for ($j = 0; $j < count($consonant_index_array); $j++) {\n            if ($vowel_index_array[$i]\
    \ > $consonant_index_array[$j]) {\n                $difference = $vowel_index_array[$i]\
    \ - $consonant_index_array[$j];\n                array_push($difference_array,\
    \ $difference);\n            }\n        }\n    }\n    if (count($difference_array)\
    \ == 0) {\n        return \"\";\n    } else {\n        $min_difference = min($difference_array);\n\
    \        $min_difference_index = array_search($min_difference, $difference_array);\n\
    \        $min_difference_index = $min_difference_index + 1;\n        $vowel_index\
    \ = $vowel_index_array\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpkhz300ah.php
    on line 52

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n\
    \    $word = str_split($word);\n    $word = array_reverse($word);\n    $vowel_index\
    \ = 0;\n    $vowel_found = false;\n    $consonant_found = false;\n    for ($i\
    \ = 0; $i < count($word); $i++) {\n        if (in_array($word[$i], $vowels)) {\n\
    \            $vowel_index = $i;\n            $vowel_found = true;\n        } else\
    \ {\n            if ($vowel_found) {\n                $consonant_found = true;\n\
    \                break;\n            }\n        }\n    }\n    if ($vowel_found\
    \ && $consonant_found) {\n        return $word[$vowel_index];\n    } else {\n\
    \        return '';\n    }\n}\n\n/*\n * Test code\n */\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nu\nu\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdv2ubakw.php:58\n\
    Stack trace:\n#0 /tmp/tmpdv2ubakw.php(69): test()\n#1 {main}\n  thrown in /tmp/tmpdv2ubakw.php\
    \ on line 58\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n\
    \    $word = str_split($word);\n    $vowel_index = array();\n    $consonant_index\
    \ = array();\n    for ($i = 0; $i < count($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index[] = $i;\n        } else {\n          \
    \  $consonant_index[] = $i;\n        }\n    }\n    $result = array();\n    for\
    \ ($i = 0; $i < count($vowel_index); $i++) {\n        for ($j = 0; $j < count($consonant_index);\
    \ $j++) {\n            if ($vowel_index[$i] > $consonant_index[$j]) {\n      \
    \          $result[] = $vowel_index[$i] - $consonant_index[$j];\n            }\n\
    \        }\n    }\n    if (count($result) == 0) {\n        return \"\";\n    }\
    \ else {\n        $min = min($result);\n        $index = array_search($min, $result);\n\
    \        return $word[$vowel_index[$index]];\n    }\n}\n\necho get_closest_vowel(\"\
    yogurt\") . \"<br>\";\necho get_closest_vowel(\"FULL\") . \"<br>\";\necho get_closest_vowel(\"\
    quick\") . \"<br>\";\necho get_closest_vowel(\"ab\") . \"<br>\";\n\n/* You are\
    \ given a string. Your task is to find the closest vowel that stands between \n\
    two consonants from the right side of the string (case sensitive).\nVowels in\
    \ the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_clos\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 51 in /tmp/tmpkozim413.php on
    line 51

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$word = strtolower($word);\n\
    \t$word_length = strlen($word);\n\t$vowel_index = 0;\n\t$vowel_distance = $word_length;\n\
    \tfor ($i = 0; $i < $word_length; $i++) {\n\t\tif (in_array($word[$i], $vowels))\
    \ {\n\t\t\tif ($i > 0 && $i < $word_length - 1) {\n\t\t\t\tif (!in_array($word[$i\
    \ - 1], $vowels) && !in_array($word[$i + 1], $vowels)) {\n\t\t\t\t\tif ($i < $vowel_distance)\
    \ {\n\t\t\t\t\t\t$vowel_distance = $i;\n\t\t\t\t\t\t$vowel_index = $i;\n\t\t\t\
    \t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif ($vowel_index == 0) {\n\t\treturn\
    \ \"\";\n\t}\n\treturn $word[$vowel_index];\n}\necho get_closest_vowel(\"yogurt\"\
    );\necho get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"quick\");\necho\
    \ get_closest_vowel(\"ab\");\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "ou\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu_hd79k9.php:48\n\
    Stack trace:\n#0 /tmp/tmpu_hd79k9.php(63): test()\n#1 {main}\n  thrown in /tmp/tmpu_hd79k9.php\
    \ on line 48\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n\
    \    $word = str_split($word);\n    $vowel_index = 0;\n    $vowel_distance = 0;\n\
    \    $vowel_distance_temp = 0;\n    $vowel_index_temp = 0;\n    $vowel_found =\
    \ false;\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index_temp = $i;\n            $vowel_distance_temp\
    \ = count($word) - $i;\n            if ($vowel_distance_temp > $vowel_distance)\
    \ {\n                $vowel_distance = $vowel_distance_temp;\n               \
    \ $vowel_index = $vowel_index_temp;\n                $vowel_found = true;\n  \
    \          }\n        }\n    }\n    if ($vowel_found) {\n        return $word[$vowel_index];\n\
    \    } else {\n        return '';\n    }\n}\necho get_closest_vowel(\"yogurt\"\
    );\necho get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"quick\");\necho\
    \ get_closest_vowel(\"ab\");\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "ouua\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaaaip3ux.php:51\n\
    Stack trace:\n#0 /tmp/tmpaaaip3ux.php(66): test()\n#1 {main}\n  thrown in /tmp/tmpaaaip3ux.php\
    \ on line 51\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n\
    \    $word = str_split($word);\n    $vowel_position = array();\n    $consonant_position\
    \ = array();\n    $vowel_position_consonant = array();\n    $vowel_position_consonant_2\
    \ = array();\n    $vowel_position_consonant_3 = array();\n    $vowel_position_consonant_4\
    \ = array();\n    $vowel_position_consonant_5 = array();\n    $vowel_position_consonant_6\
    \ = array();\n    $vowel_position_consonant_7 = array();\n    $vowel_position_consonant_8\
    \ = array();\n    $vowel_position_consonant_9 = array();\n    $vowel_position_consonant_10\
    \ = array();\n    $vowel_position_consonant_11 = array();\n    $vowel_position_consonant_12\
    \ = array();\n    $vowel_position_consonant_13 = array();\n    $vowel_position_consonant_14\
    \ = array();\n    $vowel_position_consonant_15 = array();\n    $vowel_position_consonant_16\
    \ = array();\n    $vowel_position_consonant_17 = array();\n    $vowel_position_consonant_18\
    \ = array();\n    $vowel_position_consonant_19 = array();\n    $vowel_position_consonant_20\
    \ = array();\n    $vowel_position_consonant_21 = array();\n    $vowel_position_consonant_22\
    \ = array();\n    $vowel_position_consonant_23 = array();\n    $vowel_position_consonant_24\
    \ = array();\n    $vowel_position_consonant_25 = array();\n    $vowel_position_consonant_26\
    \ = array();\n    $v\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpx6d3al1i.php
    on line 49

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $vowel_index = -1;\n    for ($i = $word_length\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $vowel_index = $i;\n            break;\n        }\n    }\n    if ($vowel_index\
    \ == -1) {\n        return '';\n    }\n    for ($i = $vowel_index - 1; $i >= 0;\
    \ $i--) {\n        if (!in_array($word[$i], $vowels)) {\n            return $word[$vowel_index];\n\
    \        }\n    }\n    return '';\n}\n\n/*\nfunction candidate(...$args) {\n \
    \   return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 38 in /tmp/tmp7xv0me3d.php on
    line 38

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$consonants = ['b', 'c', 'd', 'f',\
    \ 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y',\
    \ 'z'];\n\t$word = strtolower($word);\n\t$word_array = str_split($word);\n\t$vowel_index\
    \ = 0;\n\t$consonant_index = 0;\n\t$vowel_array = [];\n\t$consonant_array = [];\n\
    \t$vowel_consonant_array = [];\n\t$vowel_consonant_array_index = 0;\n\t$vowel_consonant_array_index_2\
    \ = 0;\n\t$vowel_consonant_array_index_3 = 0;\n\t$vowel_consonant_array_index_4\
    \ = 0;\n\t$vowel_consonant_array_index_5 = 0;\n\t$vowel_consonant_array_index_6\
    \ = 0;\n\t$vowel_consonant_array_index_7 = 0;\n\t$vowel_consonant_array_index_8\
    \ = 0;\n\t$vowel_consonant_array_index_9 = 0;\n\t$vowel_consonant_array_index_10\
    \ = 0;\n\t$vowel_consonant_array_index_11 = 0;\n\t$vowel_consonant_array_index_12\
    \ = 0;\n\t$vowel_consonant_array_index_13 = 0;\n\t$vowel_consonant_array_index_14\
    \ = 0;\n\t$vowel_consonant_array_index_15 = 0;\n\t$vowel_consonant_array_index_16\
    \ = 0;\n\t$vowel_consonant_array_index_17 = 0;\n\t$vowel_consonant_array_index_18\n\
    function candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmp3l7kcypd.php
    on line 44

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split($word);\n\
    \    $closest_vowel = '';\n    $closest_vowel_index = 0;\n    $closest_vowel_distance\
    \ = 0;\n    for ($i = count($word) - 1; $i > 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            if (!in_array($word[$i - 1], $vowels)) {\n        \
    \        $closest_vowel = $word[$i];\n                $closest_vowel_index = $i;\n\
    \                $closest_vowel_distance = count($word) - $i;\n              \
    \  break;\n            }\n        }\n    }\n    for ($i = count($word) - 1; $i\
    \ > 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n            if (!in_array($word[$i\
    \ - 1], $vowels)) {\n                if (count($word) - $i < $closest_vowel_distance)\
    \ {\n                    $closest_vowel = $word[$i];\n                    $closest_vowel_index\
    \ = $i;\n                    $closest_vowel_distance = count($word) - $i;\n  \
    \              }\n            }\n        }\n    }\n    return $closest_vowel;\n\
    }\n\n/* You are given a string. Your task is to find the closest vowel that stands\
    \ between \ntwo consonants from the right side of the string (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 46 in /tmp/tmpt5xk1b6f.php on
    line 46

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$word = strtolower($word);\n\
    \t$length = strlen($word);\n\tfor ($i = $length - 1; $i > 0; $i--) {\n\t\tif (in_array($word[$i],\
    \ $vowels)) {\n\t\t\tif (!in_array($word[$i - 1], $vowels)) {\n\t\t\t\treturn\
    \ $word[$i];\n\t\t\t}\n\t\t}\n\t}\n\treturn \"\";\n}\n\necho get_closest_vowel(\"\
    yogurt\");\necho get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"quick\"\
    );\necho get_closest_vowel(\"ab\");\nfunction candidate(...$args) {\n    return\
    \ get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    full\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    easy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eAsy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ali\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bad\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "uuu\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3ykrks6u.php:43\n\
    Stack trace:\n#0 /tmp/tmp3ykrks6u.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp3ykrks6u.php\
    \ on line 43\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n\t$word = strtolower($word);\n\
    \t$word = str_split($word);\n\t$word = array_reverse($word);\n\t$vowel_pos = [];\n\
    \t$consonant_pos = [];\n\tfor ($i = 0; $i < count($word); $i++) {\n\t\tif (in_array($word[$i],\
    \ $vowels)) {\n\t\t\t$vowel_pos[] = $i;\n\t\t} else {\n\t\t\t$consonant_pos[]\
    \ = $i;\n\t\t}\n\t}\n\t$vowel_pos = array_reverse($vowel_pos);\n\t$consonant_pos\
    \ = array_reverse($consonant_pos);\n\t$result = [];\n\tfor ($i = 0; $i < count($vowel_pos);\
    \ $i++) {\n\t\tif ($vowel_pos[$i] < $consonant_pos[$i]) {\n\t\t\t$result[] = $vowel_pos[$i];\n\
    \t\t}\n\t}\n\tif (count($result) == 0) {\n\t\treturn \"\";\n\t} else {\n\t\t$result\
    \ = array_reverse($result);\n\t\t$result = $result[0];\n\t\t$result = $word[$result];\n\
    \t\treturn $result;\n\t}\n}\necho get_closest_vowel(\"yogurt\");\necho \"<br>\"\
    ;\necho get_closest_vowel(\"FULL\");\necho \"<br>\";\necho get_closest_vowel(\"\
    quick\");\necho \"<br>\";\necho get_closest_vowel(\"ab\");\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u<br>u<br>u<br>\nWarning: Undefined array key 1 in /tmp/tmpj32uidc_.php\
    \ on line 34\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpj32uidc_.php:67\n\
    Stack trace:\n#0 /tmp/tmpj32uidc_.php(74): test()\n#1 {main}\n  thrown in /tmp/tmpj32uidc_.php\
    \ on line 67\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $word = str_split($word);\n\
    \    $vowel_index = -1;\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n  \
    \      if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n \
    \           break;\n        }\n    }\n    if ($vowel_index == -1) {\n        return\
    \ '';\n    }\n    for ($i = $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            return $word[$vowel_index];\n        }\n    }\n   \
    \ return '';\n}\n\necho get_closest_vowel(\"yogurt\");\necho get_closest_vowel(\"\
    FULL\");\necho get_closest_vowel(\"quick\");\necho get_closest_vowel(\"ab\");\n\
    function candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "ui\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprw5d76x6.php:50\n\
    Stack trace:\n#0 /tmp/tmprw5d76x6.php(61): test()\n#1 {main}\n  thrown in /tmp/tmprw5d76x6.php\
    \ on line 50\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n\
    \    $word = str_split($word);\n    $vowel_index = 0;\n    $closest_vowel = '';\n\
    \    for ($i = count($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            break;\n        }\n\
    \    }\n    if ($vowel_index == 0) {\n        return $closest_vowel;\n    }\n\
    \    for ($i = $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            $closest_vowel = $word[$vowel_index];\n           \
    \ break;\n        }\n    }\n    return $closest_vowel;\n}\n\necho get_closest_vowel(\"\
    yogurt\");\necho get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"quick\"\
    );\necho get_closest_vowel(\"ab\");\nfunction candidate(...$args) {\n    return\
    \ get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    full\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    easy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eAsy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ali\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bad\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "uui\nFatal error: Uncaught Exception: Test failed! in /tmp/tmprtwasifc.php:53\n\
    Stack trace:\n#0 /tmp/tmprtwasifc.php(64): test()\n#1 {main}\n  thrown in /tmp/tmprtwasifc.php\
    \ on line 53\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$word = strtolower($word);\n\
    \t$word = str_split($word);\n\t$vowel_pos = array();\n\tfor ($i = 0; $i < count($word);\
    \ $i++) {\n\t\tif (in_array($word[$i], $vowels)) {\n\t\t\t$vowel_pos[] = $i;\n\
    \t\t}\n\t}\n\t$result = array();\n\tfor ($i = 0; $i < count($vowel_pos); $i++)\
    \ {\n\t\tif ($vowel_pos[$i] > 0 && $vowel_pos[$i] < count($word) - 1) {\n\t\t\t\
    $result[] = $vowel_pos[$i];\n\t\t}\n\t}\n\tif (count($result) == 0) {\n\t\treturn\
    \ \"\";\n\t}\n\t$min = $result[0];\n\tfor ($i = 0; $i < count($result); $i++)\
    \ {\n\t\tif ($result[$i] < $min) {\n\t\t\t$min = $result[$i];\n\t\t}\n\t}\n\t\
    return $word[$min];\n}\necho get_closest_vowel(\"yogurt\");\necho \"<br>\";\n\
    echo get_closest_vowel(\"FULL\");\necho \"<br>\";\necho get_closest_vowel(\"quick\"\
    );\necho \"<br>\";\necho get_closest_vowel(\"ab\");\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "o<br>u<br>u<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3d78dc11.php:55\n\
    Stack trace:\n#0 /tmp/tmp3d78dc11.php(70): test()\n#1 {main}\n  thrown in /tmp/tmp3d78dc11.php\
    \ on line 55\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$word = strtolower($word);\n\
    \t$word_length = strlen($word);\n\t$vowel_position = 0;\n\t$vowel_distance = $word_length;\n\
    \t$i = $word_length - 1;\n\twhile ($i >= 0) {\n\t\tif (in_array($word[$i], $vowels))\
    \ {\n\t\t\tif ($i > 0 && !in_array($word[$i - 1], $vowels)) {\n\t\t\t\tif ($i\
    \ < $word_length - 1 && !in_array($word[$i + 1], $vowels)) {\n\t\t\t\t\tif ($i\
    \ < $vowel_distance) {\n\t\t\t\t\t\t$vowel_distance = $i;\n\t\t\t\t\t\t$vowel_position\
    \ = $i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t$i--;\n\t}\n\tif ($vowel_position\
    \ == 0) {\n\t\treturn '';\n\t}\n\treturn $word[$vowel_position];\n}\n\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "o\nu\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp_ce24iq3.php:51\n\
    Stack trace:\n#0 /tmp/tmp_ce24iq3.php(66): test()\n#1 {main}\n  thrown in /tmp/tmp_ce24iq3.php\
    \ on line 51\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n\t$word = str_split($word);\n\
    \t$word = array_reverse($word);\n\t$vowel_index = 0;\n\t$consonant_index = 0;\n\
    \t$vowel_found = false;\n\t$consonant_found = false;\n\t$vowel_index_found = 0;\n\
    \t$consonant_index_found = 0;\n\t$vowel_index_found_2 = 0;\n\t$consonant_index_found_2\
    \ = 0;\n\t$vowel_found_2 = false;\n\t$consonant_found_2 = false;\n\t$vowel_found_3\
    \ = false;\n\t$consonant_found_3 = false;\n\t$vowel_index_found_3 = 0;\n\t$consonant_index_found_3\
    \ = 0;\n\tforeach ($word as $key => $value) {\n\t\tif (in_array($value, $vowels))\
    \ {\n\t\t\t$vowel_index = $key;\n\t\t\t$vowel_found = true;\n\t\t\t$vowel_index_found\
    \ = $key;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach ($word as $key => $value) {\n\t\
    \tif (in_array($value, $vowels) && $key > $vowel_index) {\n\t\t\t$vowel_index\
    \ = $key;\n\t\t\t$vowel_found_2 = true;\n\t\t\t$vowel_index_found_2 = $key;\n\t\
    \t\tbreak;\n\t\t}\n\t}\n\tforeach ($word as $key => $value) {\n\t\tif (in_array($value,\
    \ $vowels) && $key > $vowel_index_found_2) {\n\t\t\t$vowel_index = $key;\n\t\t\
    \t$vowel_found_3 = true;\n\t\t\t$vowel_index_found_3 = $key;\n\t\t\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 51 in /tmp/tmpb4ydnu5b.php on line 76

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$word = strtolower($word);\n\
    \t$word_len = strlen($word);\n\t$last_consonant = '';\n\t$closest_vowel = '';\n\
    \t$closest_vowel_index = 0;\n\tfor ($i = $word_len - 1; $i >= 0; $i--) {\n\t\t\
    if (in_array($word[$i], $vowels)) {\n\t\t\tif ($last_consonant) {\n\t\t\t\t$closest_vowel\
    \ = $word[$i];\n\t\t\t\t$closest_vowel_index = $i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\
    \t} else {\n\t\t\t$last_consonant = $word[$i];\n\t\t}\n\t}\n\treturn $closest_vowel;\n\
    }\n\necho get_closest_vowel(\"yogurt\");\necho get_closest_vowel(\"FULL\");\n\
    echo get_closest_vowel(\"quick\");\necho get_closest_vowel(\"ab\");\nfunction\
    \ candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "uuia\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptqvg8j_f.php:48\n\
    Stack trace:\n#0 /tmp/tmptqvg8j_f.php(61): test()\n#1 {main}\n  thrown in /tmp/tmptqvg8j_f.php\
    \ on line 48\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split($word);\n\
    \    $vowel_index = null;\n    $consonant_index = null;\n    for ($i = count($word)\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $vowel_index = $i;\n            break;\n        }\n    }\n    for ($i =\
    \ $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i], $vowels))\
    \ {\n            $consonant_index = $i;\n            break;\n        }\n    }\n\
    \    if ($vowel_index && $consonant_index) {\n        return $word[$vowel_index];\n\
    \    }\n    return '';\n}\n\necho get_closest_vowel(\"yogurt\");\necho get_closest_vowel(\"\
    FULL\");\necho get_closest_vowel(\"quick\");\necho get_closest_vowel(\"ab\");\n\
    function candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq78nghao.php:49\n\
    Stack trace:\n#0 /tmp/tmpq78nghao.php(63): test()\n#1 {main}\n  thrown in /tmp/tmpq78nghao.php\
    \ on line 49\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n\t$word = strtolower($word);\n\
    \t$word = str_split($word);\n\t$word = array_reverse($word);\n\t$vowel_index =\
    \ 0;\n\t$vowel_position = 0;\n\t$vowel_found = false;\n\tfor ($i = 0; $i < count($word);\
    \ $i++) {\n\t\tif (in_array($word[$i], $vowels)) {\n\t\t\t$vowel_index = $i;\n\
    \t\t\t$vowel_found = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif ($vowel_found) {\n\t\
    \tfor ($i = $vowel_index + 1; $i < count($word); $i++) {\n\t\t\tif (!in_array($word[$i],\
    \ $vowels)) {\n\t\t\t\t$vowel_position = $i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\
    \t\tif ($vowel_position) {\n\t\t\treturn $word[$vowel_index];\n\t\t}\n\t}\n\t\
    return \"\";\n}\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nu\ni\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6nj3wpat.php:57\n\
    Stack trace:\n#0 /tmp/tmp6nj3wpat.php(68): test()\n#1 {main}\n  thrown in /tmp/tmp6nj3wpat.php\
    \ on line 57\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $word = strtolower($word);\n\
    \    $word = str_split($word);\n    $word = array_reverse($word);\n    $vowel_index\
    \ = 0;\n    $vowel_index_array = [];\n    for ($i = 0; $i < count($word); $i++)\
    \ {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n\
    \            array_push($vowel_index_array, $vowel_index);\n        }\n    }\n\
    \    if (count($vowel_index_array) == 0) {\n        return \"\";\n    }\n    $vowel_index_array\
    \ = array_reverse($vowel_index_array);\n    $vowel_index = $vowel_index_array[0];\n\
    \    $vowel_index_array = array_reverse($vowel_index_array);\n    for ($i = 0;\
    \ $i < count($vowel_index_array); $i++) {\n        if ($vowel_index_array[$i]\
    \ - $vowel_index == 1) {\n            $vowel_index = $vowel_index_array[$i];\n\
    \        }\n    }\n    $vowel_index = count($word) - $vowel_index - 1;\n    return\
    \ $word[$vowel_index];\n}\necho get_closest_vowel(\"yogurt\");\necho \"<br>\"\
    ;\necho get_closest_vowel(\"FULL\");\necho \"<br>\";\necho get_closest_vowel(\"\
    quick\");\necho \"<br>\";\necho get_closest_vowel(\"ab\");\necho \"<br>\";\necho\
    \ get_closest_vowel(\"a\");\necho \"<br>\";\necho get_closest_vowel(\"e\");\n\
    echo \"<br>\";\necho get_closest_vowel(\"i\");\necho \"<br>\";\necho get_\nfunction\
    \ candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting "," or ";" in
    /tmp/tmpwm0ickx9.php on line 58

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split($word);\n\
    \    $word = array_reverse($word);\n    $vowel_index = 0;\n    $consonant_index\
    \ = 0;\n    $vowel_found = false;\n    $consonant_found = false;\n    for ($i\
    \ = 0; $i < count($word); $i++) {\n        if (in_array($word[$i], $vowels)) {\n\
    \            $vowel_index = $i;\n            $vowel_found = true;\n          \
    \  break;\n        }\n    }\n    for ($i = $vowel_index + 1; $i < count($word);\
    \ $i++) {\n        if (!in_array($word[$i], $vowels)) {\n            $consonant_index\
    \ = $i;\n            $consonant_found = true;\n            break;\n        }\n\
    \    }\n    if ($vowel_found && $consonant_found) {\n        return $word[$vowel_index];\n\
    \    } else {\n        return '';\n    }\n}\n\necho get_closest_vowel(\"yogurt\"\
    ) . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\n\ni\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1tpbv1np.php:58\n\
    Stack trace:\n#0 /tmp/tmp1tpbv1np.php(69): test()\n#1 {main}\n  thrown in /tmp/tmp1tpbv1np.php\
    \ on line 58\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$word = strtolower($word);\n\
    \t$length = strlen($word);\n\t$vowel_index = -1;\n\tfor ($i = $length - 1; $i\
    \ >= 0; $i--) {\n\t\tif (in_array($word[$i], $vowels)) {\n\t\t\t$vowel_index =\
    \ $i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif ($vowel_index == -1) {\n\t\treturn \"\"\
    ;\n\t}\n\tfor ($i = $vowel_index - 1; $i >= 0; $i--) {\n\t\tif (!in_array($word[$i],\
    \ $vowels)) {\n\t\t\treturn $word[$vowel_index];\n\t\t}\n\t}\n\treturn \"\";\n\
    }\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nu\ni\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpv9o9dy_e.php:51\n\
    Stack trace:\n#0 /tmp/tmpv9o9dy_e.php(62): test()\n#1 {main}\n  thrown in /tmp/tmpv9o9dy_e.php\
    \ on line 51\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n\t$word = strtolower($word);\n\
    \t$word = str_split($word);\n\t$vowel_index = 0;\n\t$vowel_distance = strlen($word);\n\
    \tfor ($i = strlen($word) - 1; $i >= 0; $i--) {\n\t\tif (in_array($word[$i], $vowels))\
    \ {\n\t\t\tif ($i > 0 && !in_array($word[$i - 1], $vowels)) {\n\t\t\t\tif ($i\
    \ < $vowel_distance) {\n\t\t\t\t\t$vowel_distance = $i;\n\t\t\t\t\t$vowel_index\
    \ = $i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $vowel_index > 0 ? $word[$vowel_index]\
    \ : \"\";\n}\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught TypeError: strlen(): Argument #1 ($str) must be\
    \ of type string, array given in /tmp/tmpv85ew43a.php:21\nStack trace:\n#0 /tmp/tmpv85ew43a.php(35):\
    \ get_closest_vowel(Array)\n#1 {main}\n  thrown in /tmp/tmpv85ew43a.php on line\
    \ 21\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$word = strtolower($word);\n\
    \tfor ($i = strlen($word) - 1; $i >= 0; $i--) {\n\t\tif (in_array($word[$i], $vowels))\
    \ {\n\t\t\tif ($i == 0) {\n\t\t\t\treturn \"\";\n\t\t\t}\n\t\t\tif (in_array($word[$i\
    \ - 1], $vowels)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\treturn $word[$i];\n\t\t\
    }\n\t}\n\treturn \"\";\n}\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho\
    \ get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") .\
    \ \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nu\nu\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp345c9x12.php:46\n\
    Stack trace:\n#0 /tmp/tmp345c9x12.php(57): test()\n#1 {main}\n  thrown in /tmp/tmp345c9x12.php\
    \ on line 46\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n\
    \    $word_arr = str_split($word);\n    $vowel_pos = [];\n    foreach ($word_arr\
    \ as $key => $value) {\n        if (in_array($value, $vowels)) {\n           \
    \ $vowel_pos[] = $key;\n        }\n    }\n    $vowel_pos_count = count($vowel_pos);\n\
    \    if ($vowel_pos_count == 0) {\n        return '';\n    }\n    $word_len =\
    \ strlen($word);\n    $last_vowel_pos = $vowel_pos[$vowel_pos_count - 1];\n  \
    \  if ($last_vowel_pos == $word_len - 1) {\n        return '';\n    }\n    $closest_vowel\
    \ = '';\n    $closest_vowel_pos = 0;\n    for ($i = $vowel_pos_count - 1; $i >=\
    \ 0; $i--) {\n        $vowel_pos_i = $vowel_pos[$i];\n        if ($vowel_pos_i\
    \ < $word_len - 1) {\n            $closest_vowel_pos = $vowel_pos_i;\n       \
    \     $closest_vowel = $word_arr[$vowel_pos_i];\n            break;\n        }\n\
    \    }\n    for ($i = $closest_vowel_pos + 1; $i < $word_len; $i++) {\n      \
    \  if (!in_array($word_arr[$i], $vowels)) {\n            return $closest_vowel;\n\
    \        }\n    }\n    return '';\n}\necho get_closest_vowel(\"yogurt\") . \"\\\
    n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\"\
    ) . \"\\n\";\necho get_cl\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting "," or ";" in
    /tmp/tmp7g8o0nzh.php on line 56

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $consonants\
    \ = array(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\"\
    , \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    );\n    $word = strtolower($word);\n    $word = str_split($word);\n    $word_length\
    \ = count($word);\n    $vowel_index = 0;\n    $consonant_index = 0;\n    $vowel_found\
    \ = false;\n    $consonant_found = false;\n    $vowel_found_index = 0;\n    $consonant_found_index\
    \ = 0;\n    $vowel_found_index_2 = 0;\n    $consonant_found_index_2 = 0;\n   \
    \ $vowel_found_2 = false;\n    $consonant_found_2 = false;\n    $vowel_found_index_3\
    \ = 0;\n    $consonant_found_index_3 = 0;\n    $vowel_found_3 = false;\n    $consonant_found_3\
    \ = false;\n    $vowel_found_index_4 = 0;\n    $consonant_found_index_4 = 0;\n\
    \    $vowel_found_4 = false;\n    $consonant_found_4 = false;\n    $vowel_found_index_5\
    \ = 0;\n    $consonant_found_index_5 = 0;\n    $vowel_found_5 = false;\n    $consonant_found_5\
    \ = false;\n    $vowel_found_index_6 = 0;\n    $consonant_found_index_6 = 0;\n\
    \    $vowel_found_6 = false;\n    $consonant_found_6 = false;\n    $vowel_found_index_7\
    \ = 0;\n    $consonant_found_index_7 = 0;\n    $v\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmp3zjm_bd7.php
    on line 51

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$word = strtolower($word);\n\
    \t$word_length = strlen($word);\n\t$vowel_index = 0;\n\t$vowel_distance = 0;\n\
    \tfor ($i = 0; $i < $word_length; $i++) {\n\t\tif (in_array($word[$i], $vowels))\
    \ {\n\t\t\tif ($i > 0 && $i < $word_length - 1) {\n\t\t\t\tif (!in_array($word[$i\
    \ - 1], $vowels) && !in_array($word[$i + 1], $vowels)) {\n\t\t\t\t\tif ($vowel_distance\
    \ == 0) {\n\t\t\t\t\t\t$vowel_distance = $i;\n\t\t\t\t\t\t$vowel_index = $i;\n\
    \t\t\t\t\t} else {\n\t\t\t\t\t\tif ($i < $vowel_distance) {\n\t\t\t\t\t\t\t$vowel_distance\
    \ = $i;\n\t\t\t\t\t\t\t$vowel_index = $i;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\
    }\n\t\t\t}\n\t\t}\n\t}\n\tif ($vowel_index == 0) {\n\t\treturn \"\";\n\t} else\
    \ {\n\t\treturn $word[$vowel_index];\n\t}\n}\necho get_closest_vowel(\"yogurt\"\
    );\necho \"<br>\";\necho get_closest_vowel(\"FULL\");\necho \"<br>\";\necho get_closest_vowel(\"\
    quick\");\necho \"<br>\";\necho get_closest_vowel(\"ab\");\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "o<br>u<br><br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjjoqz6vw.php:57\n\
    Stack trace:\n#0 /tmp/tmpjjoqz6vw.php(72): test()\n#1 {main}\n  thrown in /tmp/tmpjjoqz6vw.php\
    \ on line 57\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$word = str_split($word);\n\t$vowel_index\
    \ = 0;\n\t$vowel_distance = 0;\n\t$vowel_found = false;\n\tfor ($i = count($word)\
    \ - 1; $i >= 0; $i--) {\n\t\tif (in_array($word[$i], $vowels)) {\n\t\t\t$vowel_index\
    \ = $i;\n\t\t\t$vowel_found = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif ($vowel_found)\
    \ {\n\t\t$vowel_distance = count($word) - $vowel_index;\n\t\tfor ($i = $vowel_index\
    \ - 1; $i >= 0; $i--) {\n\t\t\tif (!in_array($word[$i], $vowels)) {\n\t\t\t\t\
    $vowel_distance = $vowel_index - $i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\
    return $vowel_distance ? $word[$vowel_index] : '';\n}\n\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\n\ni\na\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7vpl7ag4.php:52\n\
    Stack trace:\n#0 /tmp/tmp7vpl7ag4.php(65): test()\n#1 {main}\n  thrown in /tmp/tmp7vpl7ag4.php\
    \ on line 52\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$word = strtolower($word);\n\
    \t$word_length = strlen($word);\n\t$closest_vowel = \"\";\n\t$closest_vowel_index\
    \ = 0;\n\tfor ($i = $word_length - 1; $i > 0; $i--) {\n\t\tif (in_array($word[$i],\
    \ $vowels)) {\n\t\t\tif (!in_array($word[$i - 1], $vowels)) {\n\t\t\t\t$closest_vowel\
    \ = $word[$i];\n\t\t\t\t$closest_vowel_index = $i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\
    \t}\n\t}\n\tif ($closest_vowel_index == 0) {\n\t\treturn \"\";\n\t}\n\treturn\
    \ $closest_vowel;\n}\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nu\nu\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp62l7e953.php:50\n\
    Stack trace:\n#0 /tmp/tmp62l7e953.php(61): test()\n#1 {main}\n  thrown in /tmp/tmp62l7e953.php\
    \ on line 50\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $vowel_position = 0;\n    $vowel_distance\
    \ = 0;\n    $closest_vowel = \"\";\n    for ($i = 0; $i < $word_length; $i++)\
    \ {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_position\
    \ = $i;\n            $vowel_distance = $word_length - $vowel_position;\n     \
    \       if ($vowel_distance > 1) {\n                $closest_vowel = $word[$i];\n\
    \                break;\n            }\n        }\n    }\n    return $closest_vowel;\n\
    }\necho get_closest_vowel(\"yogurt\");\necho get_closest_vowel(\"FULL\");\necho\
    \ get_closest_vowel(\"quick\");\necho get_closest_vowel(\"ab\");\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "ouua\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppyexj9dp.php:44\n\
    Stack trace:\n#0 /tmp/tmppyexj9dp.php(59): test()\n#1 {main}\n  thrown in /tmp/tmppyexj9dp.php\
    \ on line 44\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$consonants = array(\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\");\n\t$word\
    \ = strtolower($word);\n\t$word = str_split($word);\n\t$vowel_pos = array();\n\
    \t$consonant_pos = array();\n\t$vowel_pos_right = array();\n\t$consonant_pos_right\
    \ = array();\n\t$vowel_pos_left = array();\n\t$consonant_pos_left = array();\n\
    \t$vowel_pos_left_right = array();\n\t$consonant_pos_left_right = array();\n\t\
    $vowel_pos_right_left = array();\n\t$consonant_pos_right_left = array();\n\t$vowel_pos_left_right_left\
    \ = array();\n\t$consonant_pos_left_right_left = array();\n\t$vowel_pos_right_left_right\
    \ = array();\n\t$consonant_pos_right_left_right = array();\n\t$vowel_pos_left_right_left_right\
    \ = array();\n\t$consonant_pos_left_right_left_right = array();\n\t$vowel_pos_right_left_right_left\
    \ = array();\n\t$consonant_pos_right_left_right_left = array();\n\t$vowel_pos_left_right_left_right_left\
    \ = array();\n\t$consonant_pos_left_right_left_right_left = array();\n\t$vowel_pos_right_left_right_left_right\
    \ = array();\n\t$consonant_pos_right_left_right_left_right = array();\n\t$vowel_pos_left_right_left_right_left_right\
    \ = array();\n\t$consonant_pos_left\nfunction candidate(...$args) {\n    return\
    \ get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    full\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    easy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eAsy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ali\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bad\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmp9s4plkn4.php
    on line 45

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$word = str_split($word);\n\
    \t$vowel_index = 0;\n\t$vowel_distance = 0;\n\t$vowel_distance_temp = 0;\n\t$vowel_index_temp\
    \ = 0;\n\tfor ($i = count($word) - 1; $i >= 0; $i--) {\n\t\tif (in_array($word[$i],\
    \ $vowels)) {\n\t\t\t$vowel_index_temp = $i;\n\t\t\t$vowel_distance_temp = count($word)\
    \ - $i;\n\t\t\tif ($vowel_distance_temp > $vowel_distance) {\n\t\t\t\t$vowel_distance\
    \ = $vowel_distance_temp;\n\t\t\t\t$vowel_index = $vowel_index_temp;\n\t\t\t}\n\
    \t\t}\n\t}\n\tif ($vowel_index == 0) {\n\t\treturn '';\n\t}\n\treturn $word[$vowel_index];\n\
    }\n\necho get_closest_vowel(\"yogurt\");\necho get_closest_vowel(\"FULL\");\n\
    echo get_closest_vowel(\"quick\");\necho get_closest_vowel(\"ab\");\nfunction\
    \ candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "ou\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5n49ug6y.php:48\n\
    Stack trace:\n#0 /tmp/tmp5n49ug6y.php(63): test()\n#1 {main}\n  thrown in /tmp/tmp5n49ug6y.php\
    \ on line 48\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n\
    \    $word = str_split($word);\n    $word = array_reverse($word);\n    $vowel_index\
    \ = 0;\n    $vowel_distance = 0;\n    for ($i = 0; $i < count($word); $i++) {\n\
    \        if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n\
    \            break;\n        }\n    }\n    for ($i = $vowel_index; $i < count($word);\
    \ $i++) {\n        if (!in_array($word[$i], $vowels)) {\n            $vowel_distance\
    \ = $i - $vowel_index;\n            break;\n        }\n    }\n    if ($vowel_distance\
    \ == 0) {\n        return '';\n    }\n    return $word[$vowel_index + $vowel_distance];\n\
    }\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "g\nf\nq\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxhe5fe1z.php:50\n\
    Stack trace:\n#0 /tmp/tmpxhe5fe1z.php(65): test()\n#1 {main}\n  thrown in /tmp/tmpxhe5fe1z.php\
    \ on line 50\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$word_array = str_split($word);\n\
    \t$word_array_length = count($word_array);\n\t$word_array_reversed = array_reverse($word_array);\n\
    \t$word_array_reversed_length = count($word_array_reversed);\n\t$vowel_position\
    \ = 0;\n\t$vowel_position_reversed = 0;\n\t$vowel_position_reversed_array = array();\n\
    \t$vowel_position_array = array();\n\tfor ($i = 0; $i < $word_array_length; $i++)\
    \ {\n\t\tif (in_array($word_array[$i], $vowels)) {\n\t\t\t$vowel_position = $i;\n\
    \t\t\tarray_push($vowel_position_array, $vowel_position);\n\t\t}\n\t}\n\tfor ($i\
    \ = 0; $i < $word_array_reversed_length; $i++) {\n\t\tif (in_array($word_array_reversed[$i],\
    \ $vowels)) {\n\t\t\t$vowel_position_reversed = $i;\n\t\t\tarray_push($vowel_position_reversed_array,\
    \ $vowel_position_reversed);\n\t\t}\n\t}\n\t$vowel_position_array_length = count($vowel_position_array);\n\
    \t$vowel_position_reversed_array_length = count($vowel_position_reversed_array);\n\
    \t$vowel_position_array_reversed = array_reverse($vowel_position_array);\n\t$vowel_position_reversed_array_reversed\
    \ = array_reverse($vowel_position_reversed_array);\n\t$vowel_position_array_reversed_length\
    \ = count($vowel_position_array_reversed);\n\t$vowel_position_reversed_array_reversed_length\n\
    function candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpq4hbxr81.php
    on line 44

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $word = strtolower($word);\n\
    \    $word_array = str_split($word);\n    $vowel_array = array();\n    $consonant_array\
    \ = array();\n    $vowel_index = array();\n    $consonant_index = array();\n \
    \   foreach ($word_array as $key => $value) {\n        if (in_array($value, $vowels))\
    \ {\n            $vowel_array[] = $value;\n            $vowel_index[] = $key;\n\
    \        } else {\n            $consonant_array[] = $value;\n            $consonant_index[]\
    \ = $key;\n        }\n    }\n    if (count($vowel_array) == 0) {\n        return\
    \ '';\n    }\n    if (count($vowel_array) == 1) {\n        return $vowel_array[0];\n\
    \    }\n    $vowel_index_count = count($vowel_index);\n    $consonant_index_count\
    \ = count($consonant_index);\n    $vowel_index_last = $vowel_index[$vowel_index_count\
    \ - 1];\n    $consonant_index_last = $consonant_index[$consonant_index_count -\
    \ 1];\n    $vowel_index_first = $vowel_index[0];\n    $consonant_index_first =\
    \ $consonant_index[0];\n    if ($vowel_index_last < $consonant_index_last) {\n\
    \        return $vowel_array[$vowel_index_count - 1];\n    }\n    if ($vowel_index_first\
    \ > $consonant_index_first) {\n        return $vowel_array[0];\n    }\n    $vowel_index_count\
    \ = count($vowel_index);\n    $consonant_index_count = count($consonant_index);\n\
    \    $vowel_index_last = $v\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmp7mf6phue.php
    on line 54

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n\t$word = str_split($word);\n\
    \t$word = array_reverse($word);\n\t$vowel_index = 0;\n\t$consonant_index = 0;\n\
    \t$vowel_found = false;\n\t$consonant_found = false;\n\tfor ($i = 0; $i < count($word);\
    \ $i++) {\n\t\tif (in_array($word[$i], $vowels)) {\n\t\t\t$vowel_index = $i;\n\
    \t\t\t$vowel_found = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor ($i = $vowel_index\
    \ + 1; $i < count($word); $i++) {\n\t\tif (!in_array($word[$i], $vowels)) {\n\t\
    \t\t$consonant_index = $i;\n\t\t\t$consonant_found = true;\n\t\t\tbreak;\n\t\t\
    }\n\t}\n\tif ($vowel_found && $consonant_found) {\n\t\treturn $word[$vowel_index];\n\
    \t} else {\n\t\treturn \"\";\n\t}\n}\necho get_closest_vowel(\"yogurt\");\necho\
    \ get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"quick\");\necho get_closest_vowel(\"\
    ab\");\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "ui\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiqqqtefb.php:57\n\
    Stack trace:\n#0 /tmp/tmpiqqqtefb.php(68): test()\n#1 {main}\n  thrown in /tmp/tmpiqqqtefb.php\
    \ on line 57\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$vowel_index = array();\n\
    \t$consonant_index = array();\n\t$word_array = str_split($word);\n\tfor ($i =\
    \ 0; $i < count($word_array); $i++) {\n\t\tif (in_array($word_array[$i], $vowels))\
    \ {\n\t\t\tarray_push($vowel_index, $i);\n\t\t} else {\n\t\t\tarray_push($consonant_index,\
    \ $i);\n\t\t}\n\t}\n\t$result = array();\n\tfor ($i = 0; $i < count($vowel_index);\
    \ $i++) {\n\t\tfor ($j = 0; $j < count($consonant_index); $j++) {\n\t\t\tif ($vowel_index[$i]\
    \ > $consonant_index[$j]) {\n\t\t\t\tarray_push($result, $vowel_index[$i]);\n\t\
    \t\t}\n\t\t}\n\t}\n\tif (count($result) == 0) {\n\t\treturn \"\";\n\t} else {\n\
    \t\t$min = min($result);\n\t\treturn $word_array[$min];\n\t}\n}\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "o\n\nu\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpam3xibik.php:52\n\
    Stack trace:\n#0 /tmp/tmpam3xibik.php(67): test()\n#1 {main}\n  thrown in /tmp/tmpam3xibik.php\
    \ on line 52\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $word = str_split($word);\n\
    \    $vowel_index = 0;\n    $vowel_distance = 0;\n    $current_distance = 0;\n\
    \    for ($i = count($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            $vowel_distance = $current_distance;\n\
    \            $current_distance = 0;\n        } else {\n            $current_distance++;\n\
    \        }\n    }\n    if ($vowel_distance == 0) {\n        return \"\";\n   \
    \ }\n    return $word[$vowel_index];\n}\n\n/* You are given a word. Your task\
    \ is to find the closest vowel that stands between \ntwo consonants from the right\
    \ side of the word (case sensitive).\nVowels in the beginning and ending doesn't\
    \ count. Return empty string if you didn't\nfind any vowel met the above condition.\
    \ \nYou may assume that the given string contains English letter only.\nExample:\n\
    >>> get_closest_vowel(\"yogurt\")\n\"u\"\n>>> get_closest_vowel(\"FULL\")\n\"\
    U\"\n>>> get_closest_vowel(\"quick\")\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\
    \"*/\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpm73kcxio.php:56\n\
    Stack trace:\n#0 /tmp/tmpm73kcxio.php(71): test()\n#1 {main}\n  thrown in /tmp/tmpm73kcxio.php\
    \ on line 56\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$word = strtolower($word);\n\
    \t$word_length = strlen($word);\n\t$vowel_index = 0;\n\tfor ($i = $word_length\
    \ - 1; $i > 0; $i--) {\n\t\tif (in_array($word[$i], $vowels)) {\n\t\t\t$vowel_index\
    \ = $i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif ($vowel_index == 0) {\n\t\treturn '';\n\
    \t}\n\tfor ($i = $vowel_index - 1; $i >= 0; $i--) {\n\t\tif (!in_array($word[$i],\
    \ $vowels)) {\n\t\t\treturn $word[$vowel_index];\n\t\t}\n\t}\n\treturn '';\n}\n\
    \necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\"\
    ) . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nu\ni\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxdlq_jzo.php:51\n\
    Stack trace:\n#0 /tmp/tmpxdlq_jzo.php(62): test()\n#1 {main}\n  thrown in /tmp/tmpxdlq_jzo.php\
    \ on line 51\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $vowel_index = -1;\n    for ($i = $word_length\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $vowel_index = $i;\n            break;\n        }\n    }\n    if ($vowel_index\
    \ == -1) {\n        return \"\";\n    }\n    for ($i = $vowel_index - 1; $i >=\
    \ 0; $i--) {\n        if (!in_array($word[$i], $vowels)) {\n            return\
    \ $word[$vowel_index];\n        }\n    }\n    return \"\";\n}\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nu\ni\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpx80azfuy.php:50\n\
    Stack trace:\n#0 /tmp/tmpx80azfuy.php(61): test()\n#1 {main}\n  thrown in /tmp/tmpx80azfuy.php\
    \ on line 50\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$consonants = array(\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\");\n\t$word\
    \ = strtolower($word);\n\t$word_array = str_split($word);\n\t$word_array_length\
    \ = count($word_array);\n\t$vowel_index = 0;\n\t$vowel_index_array = array();\n\
    \t$vowel_index_array_length = 0;\n\t$consonant_index = 0;\n\t$consonant_index_array\
    \ = array();\n\t$consonant_index_array_length = 0;\n\t$closest_vowel = \"\";\n\
    \t$closest_vowel_index = 0;\n\t$closest_vowel_index_array = array();\n\t$closest_vowel_index_array_length\
    \ = 0;\n\t$closest_vowel_index_array_length_min = 0;\n\t$closest_vowel_index_array_length_max\
    \ = 0;\n\t$closest_vowel_index_array_length_min_index = 0;\n\t$closest_vowel_index_array_length_max_index\
    \ = 0;\n\t$closest_vowel_index_array_length_min_index_array = array();\n\t$closest_vowel_index_array_length_max_index_array\
    \ = array();\n\t$closest_vowel_index_array_length_min_index_array_length = 0;\n\
    \t$closest_vowel_index_array_length_max_index_array_length = 0;\n\t$closest_vowel_index_array_length_min_index_array_length_min\
    \ = 0;\n\t$closest_vowel_index_array_\nfunction candidate(...$args) {\n    return\
    \ get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    full\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    easy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eAsy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ali\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bad\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmprm4ievfb.php
    on line 42

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n\t$word = str_split($word);\n\
    \t$word = array_reverse($word);\n\t$vowel_position = 0;\n\t$vowel_index = 0;\n\
    \t$consonant_count = 0;\n\t$consonant_index = 0;\n\t$vowel_count = 0;\n\t$vowel_index\
    \ = 0;\n\t$consonant_position = 0;\n\tfor ($i = 0; $i < count($word); $i++) {\n\
    \t\tif (in_array($word[$i], $vowels)) {\n\t\t\t$vowel_count++;\n\t\t\t$vowel_index\
    \ = $i;\n\t\t\tif ($vowel_count > 1) {\n\t\t\t\t$vowel_position = $i;\n\t\t\t\t\
    break;\n\t\t\t}\n\t\t}\n\t}\n\tfor ($i = 0; $i < count($word); $i++) {\n\t\tif\
    \ (!in_array($word[$i], $vowels)) {\n\t\t\t$consonant_count++;\n\t\t\t$consonant_index\
    \ = $i;\n\t\t\tif ($consonant_count > 1) {\n\t\t\t\t$consonant_position = $i;\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tif ($vowel_position > $consonant_position)\
    \ {\n\t\treturn $word[$vowel_index];\n\t} else {\n\t\treturn \"\";\n\t}\n}\necho\
    \ get_closest_vowel(\"yogurt\");\necho get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"\
    quick\");\necho get_closest_vowel(\"ab\");\nfunction candidate(...$args) {\n \
    \   return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "ou\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpppq_p67l.php:62\n\
    Stack trace:\n#0 /tmp/tmpppq_p67l.php(77): test()\n#1 {main}\n  thrown in /tmp/tmpppq_p67l.php\
    \ on line 62\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split($word);\n\
    \    $word = array_reverse($word);\n    $vowel = '';\n    $consonant = '';\n \
    \   foreach ($word as $key => $value) {\n        if (in_array($value, $vowels))\
    \ {\n            $vowel = $value;\n            break;\n        }\n        $consonant\
    \ = $value;\n    }\n    if ($vowel && $consonant) {\n        return $vowel;\n\
    \    }\n    return '';\n}\n\necho get_closest_vowel(\"yogurt\");\necho get_closest_vowel(\"\
    FULL\");\necho get_closest_vowel(\"quick\");\necho get_closest_vowel(\"ab\");\n\
    function candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "uia\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpiocseu8u.php:46\n\
    Stack trace:\n#0 /tmp/tmpiocseu8u.php(59): test()\n#1 {main}\n  thrown in /tmp/tmpiocseu8u.php\
    \ on line 46\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n\t$word = str_split($word);\n\
    \t$vowel_index = -1;\n\t$consonant_index = -1;\n\tfor ($i = count($word) - 1;\
    \ $i >= 0; $i--) {\n\t\tif (in_array($word[$i], $vowels)) {\n\t\t\t$vowel_index\
    \ = $i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor ($i = $vowel_index - 1; $i >= 0; $i--)\
    \ {\n\t\tif (!in_array($word[$i], $vowels)) {\n\t\t\t$consonant_index = $i;\n\t\
    \t\tbreak;\n\t\t}\n\t}\n\tif ($vowel_index == -1 || $consonant_index == -1) {\n\
    \t\treturn \"\";\n\t}\n\treturn $word[$vowel_index];\n}\n\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\n\ni\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsrc8k51d.php:52\n\
    Stack trace:\n#0 /tmp/tmpsrc8k51d.php(63): test()\n#1 {main}\n  thrown in /tmp/tmpsrc8k51d.php\
    \ on line 52\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$word = strtolower($word);\n\
    \t$word = str_split($word);\n\t$last_vowel = \"\";\n\t$last_consonant = \"\";\n\
    \t$closest_vowel = \"\";\n\t$closest_vowel_index = 0;\n\t$closest_vowel_distance\
    \ = 0;\n\t$word_length = count($word);\n\tfor ($i = $word_length - 1; $i >= 0;\
    \ $i--) {\n\t\tif (in_array($word[$i], $vowels)) {\n\t\t\t$last_vowel = $word[$i];\n\
    \t\t\tif ($last_consonant != \"\") {\n\t\t\t\t$distance = $word_length - $i -\
    \ 1;\n\t\t\t\tif ($closest_vowel_distance == 0 || $distance < $closest_vowel_distance)\
    \ {\n\t\t\t\t\t$closest_vowel_distance = $distance;\n\t\t\t\t\t$closest_vowel_index\
    \ = $i;\n\t\t\t\t\t$closest_vowel = $word[$i];\n\t\t\t\t}\n\t\t\t}\n\t\t} else\
    \ {\n\t\t\t$last_consonant = $word[$i];\n\t\t}\n\t}\n\treturn $closest_vowel;\n\
    }\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nu\ni\na\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9abok1bv.php:55\n\
    Stack trace:\n#0 /tmp/tmp9abok1bv.php(68): test()\n#1 {main}\n  thrown in /tmp/tmp9abok1bv.php\
    \ on line 55\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$word = strtolower($word);\n\
    \t$word_length = strlen($word);\n\t$closest_vowel = \"\";\n\t$closest_vowel_distance\
    \ = $word_length;\n\tfor ($i = 0; $i < $word_length; $i++) {\n\t\tif (in_array($word[$i],\
    \ $vowels)) {\n\t\t\tif ($i > 0 && !in_array($word[$i - 1], $vowels)) {\n\t\t\t\
    \tif ($i < $closest_vowel_distance) {\n\t\t\t\t\t$closest_vowel_distance = $i;\n\
    \t\t\t\t\t$closest_vowel = $word[$i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ $closest_vowel;\n}\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "o\nu\nu\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0w80n41j.php:44\n\
    Stack trace:\n#0 /tmp/tmp0w80n41j.php(59): test()\n#1 {main}\n  thrown in /tmp/tmp0w80n41j.php\
    \ on line 44\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $vowel_index = 0;\n    $vowel_distance\
    \ = 0;\n    $closest_vowel = \"\";\n    for ($i = $word_length - 1; $i > 0; $i--)\
    \ {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n\
    \            break;\n        }\n    }\n    if ($vowel_index > 0) {\n        $vowel_distance\
    \ = $word_length - $vowel_index;\n        $closest_vowel = $word[$vowel_index];\n\
    \        for ($i = $vowel_index - 1; $i > 0; $i--) {\n            if (in_array($word[$i],\
    \ $vowels)) {\n                $distance = $word_length - $i;\n              \
    \  if ($distance < $vowel_distance) {\n                    $vowel_distance = $distance;\n\
    \                    $closest_vowel = $word[$i];\n                }\n        \
    \    }\n        }\n    }\n    return $closest_vowel;\n}\necho get_closest_vowel(\"\
    yogurt\") . \"<br>\";\necho get_closest_vowel(\"FULL\") . \"<br>\";\necho get_closest_vowel(\"\
    quick\") . \"<br>\";\necho get_closest_vowel(\"ab\") . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u<br>u<br>i<br><br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpmbcm5nb8.php:55\n\
    Stack trace:\n#0 /tmp/tmpmbcm5nb8.php(68): test()\n#1 {main}\n  thrown in /tmp/tmpmbcm5nb8.php\
    \ on line 55\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\",\"e\",\"i\",\"o\",\"u\",\"A\",\"E\",\"I\",\"O\",\"\
    U\");\n\t$word_array = str_split($word);\n\t$word_array_reverse = array_reverse($word_array);\n\
    \t$vowel_position = array();\n\tforeach ($word_array_reverse as $key => $value)\
    \ {\n\t\tif (in_array($value, $vowels)) {\n\t\t\t$vowel_position[] = $key;\n\t\
    \t}\n\t}\n\t$vowel_position_reverse = array_reverse($vowel_position);\n\t$vowel_position_reverse_count\
    \ = count($vowel_position_reverse);\n\t$vowel_position_reverse_count_minus_one\
    \ = $vowel_position_reverse_count - 1;\n\t$vowel_position_reverse_count_minus_two\
    \ = $vowel_position_reverse_count - 2;\n\t$vowel_position_reverse_count_minus_three\
    \ = $vowel_position_reverse_count - 3;\n\t$vowel_position_reverse_count_minus_four\
    \ = $vowel_position_reverse_count - 4;\n\t$vowel_position_reverse_count_minus_five\
    \ = $vowel_position_reverse_count - 5;\n\t$vowel_position_reverse_count_minus_six\
    \ = $vowel_position_reverse_count - 6;\n\t$vowel_position_reverse_count_minus_seven\
    \ = $vowel_position_reverse_count - 7;\n\t$vowel_position_reverse_count_minus_eight\
    \ = $vowel_position_reverse_count - 8;\n\t$vowel_position_reverse_count_minus_nine\
    \ = $vowel_position_reverse_count - 9;\n\t$vowel_position_reverse_count_minus_ten\
    \ = $vowel_position_reverse_count - 10;\n\t$vowel_position_reverse_count_minus_eleven\
    \ = $vowel_position_reverse_count - 11;\n\t$vowel_position_reverse\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmp0ugfbpb7.php
    on line 40

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$word = strtolower($word);\n\
    \t$word_length = strlen($word);\n\t$last_vowel_index = -1;\n\t$last_consonant_index\
    \ = -1;\n\t$closest_vowel = \"\";\n\tfor ($i = 0; $i < $word_length; $i++) {\n\
    \t\tif (in_array($word[$i], $vowels)) {\n\t\t\t$last_vowel_index = $i;\n\t\t}\
    \ else {\n\t\t\tif ($last_vowel_index != -1) {\n\t\t\t\t$last_consonant_index\
    \ = $i;\n\t\t\t\tif ($last_consonant_index - $last_vowel_index > 1) {\n\t\t\t\t\
    \t$closest_vowel = $word[$last_vowel_index];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\
    \t}\n\t\t}\n\t}\n\treturn $closest_vowel;\n}\n\necho get_closest_vowel(\"yogurt\"\
    ) . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nu\ni\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbx7tdx6c.php:50\n\
    Stack trace:\n#0 /tmp/tmpbx7tdx6c.php(63): test()\n#1 {main}\n  thrown in /tmp/tmpbx7tdx6c.php\
    \ on line 50\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n\t$word = strtolower($word);\n\
    \t$word_length = strlen($word);\n\tfor ($i = $word_length - 1; $i > 0; $i--) {\n\
    \t\tif (in_array($word[$i], $vowels)) {\n\t\t\tif (!in_array($word[$i - 1], $vowels))\
    \ {\n\t\t\t\treturn $word[$i];\n\t\t\t}\n\t\t}\n\t}\n\treturn \"\";\n}\n\necho\
    \ get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") .\
    \ \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nu\nu\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9smh7txh.php:43\n\
    Stack trace:\n#0 /tmp/tmp9smh7txh.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp9smh7txh.php\
    \ on line 43\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$word = str_split($word);\n\
    \t$result = '';\n\t$count = count($word);\n\tfor ($i = $count - 1; $i > 0; $i--)\
    \ {\n\t\tif (in_array($word[$i], $vowels) && !in_array($word[$i - 1], $vowels))\
    \ {\n\t\t\t$result = $word[$i];\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn $result;\n\
    }\necho get_closest_vowel(\"yogurt\");\necho get_closest_vowel(\"FULL\");\necho\
    \ get_closest_vowel(\"quick\");\necho get_closest_vowel(\"ab\");\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "uu\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6kchhin9.php:42\n\
    Stack trace:\n#0 /tmp/tmp6kchhin9.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp6kchhin9.php\
    \ on line 42\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$word = strtolower($word);\n\
    \t$word_length = strlen($word);\n\t$closest_vowel = '';\n\t$closest_vowel_position\
    \ = 0;\n\t$closest_vowel_distance = 0;\n\tfor ($i = 0; $i < $word_length; $i++)\
    \ {\n\t\tif (in_array($word[$i], $vowels)) {\n\t\t\tif ($i > 0 && $i < $word_length\
    \ - 1) {\n\t\t\t\tif (!in_array($word[$i - 1], $vowels) && !in_array($word[$i\
    \ + 1], $vowels)) {\n\t\t\t\t\tif ($closest_vowel_distance == 0) {\n\t\t\t\t\t\
    \t$closest_vowel_distance = $word_length - $i;\n\t\t\t\t\t\t$closest_vowel = $word[$i];\n\
    \t\t\t\t\t\t$closest_vowel_position = $i;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif\
    \ ($word_length - $i < $closest_vowel_distance) {\n\t\t\t\t\t\t\t$closest_vowel_distance\
    \ = $word_length - $i;\n\t\t\t\t\t\t\t$closest_vowel = $word[$i];\n\t\t\t\t\t\t\
    \t$closest_vowel_position = $i;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\
    }\n\t\t}\n\t}\n\treturn $closest_vowel;\n}\n\necho get_closest_vowel(\"yogurt\"\
    ) . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") .\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmp7sryxw5v.php on line 49

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $closest_vowel = '';\n    $closest_vowel_index\
    \ = $word_length;\n    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            if ($i > 0 && $i < $word_length - 1) {\n          \
    \      if (!in_array($word[$i - 1], $vowels) && !in_array($word[$i + 1], $vowels))\
    \ {\n                    if ($i < $closest_vowel_index) {\n                  \
    \      $closest_vowel_index = $i;\n                        $closest_vowel = $word[$i];\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return $closest_vowel;\n}\n\necho get_closest_vowel(\"yogurt\") . \"\\n\"\
    ;\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\"\
    ) . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "o\nu\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp29a7vjcu.php:46\n\
    Stack trace:\n#0 /tmp/tmp29a7vjcu.php(61): test()\n#1 {main}\n  thrown in /tmp/tmp29a7vjcu.php\
    \ on line 46\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$word = strtolower($word);\n\
    \t$word_length = strlen($word);\n\t$vowel_index = 0;\n\t$vowel_distance = 0;\n\
    \t$vowel_distance_min = $word_length;\n\tfor ($i = 0; $i < $word_length; $i++)\
    \ {\n\t\tif (in_array($word[$i], $vowels)) {\n\t\t\t$vowel_distance = $word_length\
    \ - $i;\n\t\t\tif ($vowel_distance < $vowel_distance_min) {\n\t\t\t\t$vowel_distance_min\
    \ = $vowel_distance;\n\t\t\t\t$vowel_index = $i;\n\t\t\t}\n\t\t}\n\t}\n\tif ($vowel_distance_min\
    \ == $word_length) {\n\t\treturn '';\n\t}\n\treturn $word[$vowel_index];\n}\n\n\
    echo get_closest_vowel('yogurt');\necho get_closest_vowel('FULL');\necho get_closest_vowel('quick');\n\
    echo get_closest_vowel('ab');\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "uui\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnti1wvoo.php:49\n\
    Stack trace:\n#0 /tmp/tmpnti1wvoo.php(62): test()\n#1 {main}\n  thrown in /tmp/tmpnti1wvoo.php\
    \ on line 49\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $word = str_split($word);\n\
    \    $vowel_index = 0;\n    $vowel_distance = 0;\n    $vowel_distance_temp = 0;\n\
    \    $vowel_index_temp = 0;\n    $vowel_found = false;\n    for ($i = count($word)\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $vowel_index_temp = $i;\n            $vowel_distance_temp = count($word)\
    \ - $i;\n            if ($vowel_distance_temp > $vowel_distance) {\n         \
    \       $vowel_distance = $vowel_distance_temp;\n                $vowel_index\
    \ = $vowel_index_temp;\n                $vowel_found = true;\n            }\n\
    \        }\n    }\n    if ($vowel_found) {\n        return $word[$vowel_index];\n\
    \    } else {\n        return \"\";\n    }\n}\n\necho get_closest_vowel(\"yogurt\"\
    ) . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "o\n\nu\na\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8rb1mh68.php:51\n\
    Stack trace:\n#0 /tmp/tmp8rb1mh68.php(66): test()\n#1 {main}\n  thrown in /tmp/tmp8rb1mh68.php\
    \ on line 51\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$consonants = array(\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\");\n\t$word\
    \ = strtolower($word);\n\t$word_array = str_split($word);\n\t$word_array_reversed\
    \ = array_reverse($word_array);\n\t$vowel_position = 0;\n\t$consonant_position\
    \ = 0;\n\t$vowel_position_array = array();\n\t$consonant_position_array = array();\n\
    \t$vowel_position_array_reversed = array();\n\t$consonant_position_array_reversed\
    \ = array();\n\t$vowel_position_array_reversed_filtered = array();\n\t$consonant_position_array_reversed_filtered\
    \ = array();\n\t$vowel_position_array_reversed_filtered_reversed = array();\n\t\
    $consonant_position_array_reversed_filtered_reversed = array();\n\t$vowel_position_array_reversed_filtered_reversed_filtered\
    \ = array();\n\t$consonant_position_array_reversed_filtered_reversed_filtered\
    \ = array();\n\t$vowel_position_array_reversed_filtered_reversed_filtered_reversed\
    \ = array();\n\t$consonant_position_array_reversed_filtered_reversed_filtered_reversed\
    \ = array();\n\t$vowel_position_array_reversed_filtered_reversed_filtered_reversed_filtered\
    \ = array();\n\t$consonant_position_array_reversed_filtered_reversed_filtered_reversed_filtered\
    \ = array();\n\t$vowel_position_array_reversed_filtered_revers\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmp82tyewqn.php
    on line 39

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$word = strtolower($word);\n\
    \t$word = str_split($word);\n\t$word = array_reverse($word);\n\t$vowel_position\
    \ = 0;\n\t$vowel_found = false;\n\tfor ($i = 0; $i < count($word); $i++) {\n\t\
    \tif (in_array($word[$i], $vowels)) {\n\t\t\t$vowel_position = $i;\n\t\t\t$vowel_found\
    \ = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif ($vowel_found == false) {\n\t\treturn\
    \ \"\";\n\t}\n\t$consonant_found = false;\n\tfor ($i = $vowel_position + 1; $i\
    \ < count($word); $i++) {\n\t\tif (!in_array($word[$i], $vowels)) {\n\t\t\t$consonant_found\
    \ = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif ($consonant_found == false) {\n\t\t\
    return \"\";\n\t}\n\t$vowel_found = false;\n\tfor ($i = $vowel_position - 1; $i\
    \ >= 0; $i--) {\n\t\tif (in_array($word[$i], $vowels)) {\n\t\t\t$vowel_found =\
    \ true;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif ($vowel_found == false) {\n\t\treturn\
    \ \"\";\n\t}\n\treturn $word[$vowel_position];\n}\necho get_closest_vowel(\"yogurt\"\
    ) . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0cv2umka.php:64\n\
    Stack trace:\n#0 /tmp/tmp0cv2umka.php(79): test()\n#1 {main}\n  thrown in /tmp/tmp0cv2umka.php\
    \ on line 64\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split($word);\n\
    \    $vowel_index = 0;\n    $vowel_distance = 0;\n    $closest_vowel = '';\n \
    \   $closest_distance = 0;\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n\
    \        if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n\
    \            break;\n        }\n    }\n    for ($i = $vowel_index; $i >= 0; $i--)\
    \ {\n        if (!in_array($word[$i], $vowels)) {\n            $vowel_distance++;\n\
    \        } else {\n            if ($vowel_distance > $closest_distance) {\n  \
    \              $closest_distance = $vowel_distance;\n                $closest_vowel\
    \ = $word[$i];\n            }\n            $vowel_distance = 0;\n        }\n \
    \   }\n    return $closest_vowel;\n}\necho get_closest_vowel(\"yogurt\");\necho\
    \ get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"quick\");\necho get_closest_vowel(\"\
    ab\");\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "o\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkm203hxp.php:51\n\
    Stack trace:\n#0 /tmp/tmpkm203hxp.php(66): test()\n#1 {main}\n  thrown in /tmp/tmpkm203hxp.php\
    \ on line 51\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$consonants = array(\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\");\n\t$word\
    \ = strtolower($word);\n\t$vowel_index = 0;\n\t$consonant_index = 0;\n\t$vowel_index_array\
    \ = array();\n\t$consonant_index_array = array();\n\tfor ($i = 0; $i < strlen($word);\
    \ $i++) {\n\t\tif (in_array($word[$i], $vowels)) {\n\t\t\t$vowel_index_array[]\
    \ = $i;\n\t\t}\n\t\tif (in_array($word[$i], $consonants)) {\n\t\t\t$consonant_index_array[]\
    \ = $i;\n\t\t}\n\t}\n\tif (count($vowel_index_array) == 0 || count($consonant_index_array)\
    \ == 0) {\n\t\treturn \"\";\n\t}\n\t$vowel_index = $vowel_index_array[count($vowel_index_array)\
    \ - 1];\n\t$consonant_index = $consonant_index_array[count($consonant_index_array)\
    \ - 1];\n\tif ($vowel_index > $consonant_index) {\n\t\treturn \"\";\n\t}\n\treturn\
    \ $word[$vowel_index];\n}\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho\
    \ get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") .\
    \ \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nu\ni\na\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl7rehs20.php:53\n\
    Stack trace:\n#0 /tmp/tmpl7rehs20.php(66): test()\n#1 {main}\n  thrown in /tmp/tmpl7rehs20.php\
    \ on line 53\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$word = strtolower($word);\n\
    \t$length = strlen($word);\n\t$result = '';\n\tfor ($i = $length - 1; $i > 0;\
    \ $i--) {\n\t\tif (in_array($word[$i], $vowels)) {\n\t\t\tif (!in_array($word[$i\
    \ - 1], $vowels)) {\n\t\t\t\t$result = $word[$i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\
    \t}\n\t}\n\treturn $result;\n}\n\necho get_closest_vowel(\"yogurt\");\necho get_closest_vowel(\"\
    FULL\");\necho get_closest_vowel(\"quick\");\necho get_closest_vowel(\"ab\");\n\
    function candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "uuu\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8dft0r98.php:45\n\
    Stack trace:\n#0 /tmp/tmp8dft0r98.php(56): test()\n#1 {main}\n  thrown in /tmp/tmp8dft0r98.php\
    \ on line 45\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $word = str_split($word);\n\
    \    $vowel_index = 0;\n    $vowel_distance = 0;\n    $vowel_found = false;\n\
    \    $vowel_found_index = 0;\n    $vowel_found_distance = 0;\n    $vowel_found_letter\
    \ = '';\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            $vowel_distance = count($word)\
    \ - $i;\n            $vowel_found = true;\n            break;\n        }\n   \
    \ }\n    if ($vowel_found) {\n        $vowel_found_index = $vowel_index;\n   \
    \     $vowel_found_distance = $vowel_distance;\n        $vowel_found_letter =\
    \ $word[$vowel_index];\n    }\n    for ($i = $vowel_index - 1; $i >= 0; $i--)\
    \ {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n\
    \            $vowel_distance = count($word) - $i;\n            if ($vowel_distance\
    \ < $vowel_found_distance) {\n                $vowel_found_index = $vowel_index;\n\
    \                $vowel_found_distance = $vowel_distance;\n                $vowel_found_letter\
    \ = $word[$vowel_index];\n            }\n        }\n    }\n    return $vowel_found_letter;\n\
    }\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    \nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "yogurt", expecting ")" in /tmp/tmphe16_o_s.php
    on line 61

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$consonants = array(\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\");\n\t$word\
    \ = strtolower($word);\n\t$word_array = str_split($word);\n\t$word_array_length\
    \ = count($word_array);\n\t$vowel_index = 0;\n\t$consonant_index = 0;\n\t$vowel_index_array\
    \ = array();\n\t$consonant_index_array = array();\n\t$vowel_index_array_length\
    \ = 0;\n\t$consonant_index_array_length = 0;\n\t$vowel_index_array_length_array\
    \ = array();\n\t$vowel_index_array_length_array_length = 0;\n\t$vowel_index_array_length_array_length_array\
    \ = array();\n\t$vowel_index_array_length_array_length_array_length = 0;\n\t$vowel_index_array_length_array_length_array_length_array\
    \ = array();\n\t$vowel_index_array_length_array_length_array_length_array_length\
    \ = 0;\n\t$vowel_index_array_length_array_length_array_length_array_length_array\
    \ = array();\n\t$vowel_index_array_length_array_length_array_length_array_length_array_length\
    \ = 0;\n\t$vowel_index_array_length_array_length_array_length_array_length_array_length_array\
    \ = array();\n\t$vowel_index_array_length_array_length_array_length_array_length_array_length_array_length\
    \ = 0;\n\t$vowel_index_array_length_array_length_array_length_array_length_array_length_array_length_array\
    \ = array();\n\t$\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting variable or
    "{" or "$" in /tmp/tmprotupj0q.php on line 40

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n\t$word = str_split($word);\n\
    \t$i = count($word) - 1;\n\twhile ($i > 0) {\n\t\tif (in_array($word[$i], $vowels))\
    \ {\n\t\t\tif (!in_array($word[$i - 1], $vowels)) {\n\t\t\t\treturn $word[$i];\n\
    \t\t\t}\n\t\t}\n\t\t$i--;\n\t}\n\treturn \"\";\n}\necho get_closest_vowel(\"yogurt\"\
    );\necho get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"quick\");\necho\
    \ get_closest_vowel(\"ab\");\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "uu\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjwu5klrj.php:43\n\
    Stack trace:\n#0 /tmp/tmpjwu5klrj.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpjwu5klrj.php\
    \ on line 43\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$consonants = array(\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\");\n\t$word\
    \ = strtolower($word);\n\t$word = str_split($word);\n\t$last_consonant = \"\"\
    ;\n\t$last_vowel = \"\";\n\t$closest_vowel = \"\";\n\t$closest_distance = 0;\n\
    \t$distance = 0;\n\tfor ($i = count($word) - 1; $i >= 0; $i--) {\n\t\tif (in_array($word[$i],\
    \ $vowels)) {\n\t\t\t$last_vowel = $word[$i];\n\t\t\tif ($last_consonant != \"\
    \") {\n\t\t\t\t$distance = count($word) - $i;\n\t\t\t\tif ($closest_distance ==\
    \ 0 || $distance < $closest_distance) {\n\t\t\t\t\t$closest_distance = $distance;\n\
    \t\t\t\t\t$closest_vowel = $last_vowel;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (in_array($word[$i],\
    \ $consonants)) {\n\t\t\t$last_consonant = $word[$i];\n\t\t}\n\t}\n\treturn $closest_vowel;\n\
    }\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nu\ni\na\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp51sjx3fj.php:55\n\
    Stack trace:\n#0 /tmp/tmp51sjx3fj.php(68): test()\n#1 {main}\n  thrown in /tmp/tmp51sjx3fj.php\
    \ on line 55\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $word = strtolower($word);\n\
    \    $word_len = strlen($word);\n    $i = $word_len - 1;\n    $prev_char = '';\n\
    \    $next_char = '';\n    while ($i >= 0) {\n        $char = $word[$i];\n   \
    \     if (in_array($char, $vowels)) {\n            if ($prev_char && !in_array($prev_char,\
    \ $vowels)) {\n                return $char;\n            }\n        } else {\n\
    \            if ($next_char && in_array($next_char, $vowels)) {\n            \
    \    return $next_char;\n            }\n        }\n        $next_char = $char;\n\
    \        $i--;\n    }\n    return '';\n}\n\necho get_closest_vowel(\"yogurt\"\
    );\necho get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"quick\");\necho\
    \ get_closest_vowel(\"ab\");\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "uuu\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpesee4cr8.php:53\n\
    Stack trace:\n#0 /tmp/tmpesee4cr8.php(64): test()\n#1 {main}\n  thrown in /tmp/tmpesee4cr8.php\
    \ on line 53\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$word = str_split($word);\n\t$vowel_index\
    \ = 0;\n\t$vowel_distance = 0;\n\t$vowel_distance_temp = 0;\n\t$vowel_index_temp\
    \ = 0;\n\tfor ($i = count($word) - 1; $i >= 0; $i--) {\n\t\tif (in_array($word[$i],\
    \ $vowels)) {\n\t\t\t$vowel_index_temp = $i;\n\t\t\t$vowel_distance_temp = count($word)\
    \ - $i;\n\t\t\tif ($vowel_distance_temp > $vowel_distance) {\n\t\t\t\t$vowel_distance\
    \ = $vowel_distance_temp;\n\t\t\t\t$vowel_index = $vowel_index_temp;\n\t\t\t}\n\
    \t\t}\n\t}\n\tif ($vowel_index == 0) {\n\t\treturn '';\n\t}\n\treturn $word[$vowel_index];\n\
    }\n\necho get_closest_vowel(\"yogurt\") . PHP_EOL;\necho get_closest_vowel(\"\
    FULL\") . PHP_EOL;\necho get_closest_vowel(\"quick\") . PHP_EOL;\necho get_closest_vowel(\"\
    ab\") . PHP_EOL;\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "o\n\nu\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpem5kpsx2.php:48\n\
    Stack trace:\n#0 /tmp/tmpem5kpsx2.php(63): test()\n#1 {main}\n  thrown in /tmp/tmpem5kpsx2.php\
    \ on line 48\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $consonants = ['b', 'c', 'd',\
    \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
    \ 'y', 'z'];\n    $word = strtolower($word);\n    $word = str_split($word);\n\
    \    $vowel_index = [];\n    $consonant_index = [];\n    foreach ($word as $key\
    \ => $value) {\n        if (in_array($value, $vowels)) {\n            $vowel_index[]\
    \ = $key;\n        }\n        if (in_array($value, $consonants)) {\n         \
    \   $consonant_index[] = $key;\n        }\n    }\n    $result = [];\n    foreach\
    \ ($vowel_index as $key => $value) {\n        if (in_array($value - 1, $consonant_index)\
    \ && in_array($value + 1, $consonant_index)) {\n            $result[] = $value;\n\
    \        }\n    }\n    if (empty($result)) {\n        return '';\n    }\n    $result\
    \ = min($result);\n    return $word[$result];\n}\n\necho get_closest_vowel(\"\
    yogurt\");\necho get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"quick\"\
    );\necho get_closest_vowel(\"ab\");\nfunction candidate(...$args) {\n    return\
    \ get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    full\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    easy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eAsy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ali\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bad\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "ou\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8zy2ds4c.php:53\n\
    Stack trace:\n#0 /tmp/tmp8zy2ds4c.php(68): test()\n#1 {main}\n  thrown in /tmp/tmp8zy2ds4c.php\
    \ on line 53\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$word = str_split($word);\n\
    \t$vowel_index = 0;\n\t$vowel_distance = 0;\n\tfor ($i = count($word) - 1; $i\
    \ >= 0; $i--) {\n\t\tif (in_array($word[$i], $vowels)) {\n\t\t\t$vowel_index =\
    \ $i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor ($i = $vowel_index - 1; $i >= 0; $i--)\
    \ {\n\t\tif (!in_array($word[$i], $vowels)) {\n\t\t\t$vowel_distance = $vowel_index\
    \ - $i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn $vowel_distance == 1 ? $word[$vowel_index]\
    \ : '';\n}\necho get_closest_vowel(\"yogurt\");\necho get_closest_vowel(\"FULL\"\
    );\necho get_closest_vowel(\"quick\");\necho get_closest_vowel(\"ab\");\nfunction\
    \ candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpaw5jdatw.php:48\n\
    Stack trace:\n#0 /tmp/tmpaw5jdatw.php(59): test()\n#1 {main}\n  thrown in /tmp/tmpaw5jdatw.php\
    \ on line 48\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$word = strtolower($word);\n\
    \t$word = str_split($word);\n\t$word = array_reverse($word);\n\t$vowel_index =\
    \ 0;\n\t$consonant_index = 0;\n\t$vowel_found = false;\n\t$consonant_found = false;\n\
    \t$i = 0;\n\twhile ($i < count($word)) {\n\t\tif (in_array($word[$i], $vowels))\
    \ {\n\t\t\t$vowel_index = $i;\n\t\t\t$vowel_found = true;\n\t\t\tbreak;\n\t\t\
    }\n\t\t$i++;\n\t}\n\tif ($vowel_found) {\n\t\t$i = $vowel_index + 1;\n\t\twhile\
    \ ($i < count($word)) {\n\t\t\tif (!in_array($word[$i], $vowels)) {\n\t\t\t\t\
    $consonant_index = $i;\n\t\t\t\t$consonant_found = true;\n\t\t\t\tbreak;\n\t\t\
    \t}\n\t\t\t$i++;\n\t\t}\n\t}\n\tif ($vowel_found && $consonant_found) {\n\t\t\
    $word = array_reverse($word);\n\t\treturn $word[$vowel_index];\n\t}\n\treturn\
    \ \"\";\n}\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "g\nl\ni\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdjgq5ykx.php:60\n\
    Stack trace:\n#0 /tmp/tmpdjgq5ykx.php(75): test()\n#1 {main}\n  thrown in /tmp/tmpdjgq5ykx.php\
    \ on line 60\n"
  timestamp: 1660220655
- exit_code: 0
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$word = strtolower($word);\n\
    \t$word = str_split($word);\n\t$word = array_reverse($word);\n\t$word = implode($word);\n\
    \t$word = str_split($word);\n\t$i = 0;\n\t$vowel = '';\n\twhile ($i < count($word))\
    \ {\n\t\tif (in_array($word[$i], $vowels)) {\n\t\t\tif ($i > 0 && $i < count($word)\
    \ - 1) {\n\t\t\t\tif (!in_array($word[$i - 1], $vowels) && !in_array($word[$i\
    \ + 1], $vowels)) {\n\t\t\t\t\t$vowel = $word[$i];\n\t\t\t\t\tbreak;\n\t\t\t\t\
    }\n\t\t\t}\n\t\t}\n\t\t$i++;\n\t}\n\treturn $vowel;\n}\n\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'u

    u



    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n\
    \    $word = str_split($word);\n    $vowel_index = -1;\n    $consonant_index =\
    \ -1;\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            break;\n        }\n\
    \    }\n    for ($i = $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            $consonant_index = $i;\n            break;\n      \
    \  }\n    }\n    if ($vowel_index == -1 || $consonant_index == -1) {\n       \
    \ return \"\";\n    }\n    return $word[$vowel_index];\n}\n\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nu\ni\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppuxk6og8.php:53\n\
    Stack trace:\n#0 /tmp/tmppuxk6og8.php(64): test()\n#1 {main}\n  thrown in /tmp/tmppuxk6og8.php\
    \ on line 53\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split($word);\n\
    \    $word = array_reverse($word);\n    $consonants = [];\n    $vowels_in_word\
    \ = [];\n    foreach ($word as $key => $value) {\n        if (in_array($value,\
    \ $vowels)) {\n            $vowels_in_word[] = $value;\n        } else {\n   \
    \         $consonants[] = $value;\n        }\n    }\n    $vowels_in_word = array_reverse($vowels_in_word);\n\
    \    $consonants = array_reverse($consonants);\n    $result = [];\n    foreach\
    \ ($vowels_in_word as $key => $value) {\n        if (isset($consonants[$key +\
    \ 1])) {\n            $result[] = $value;\n        }\n    }\n    if (empty($result))\
    \ {\n        return '';\n    } else {\n        return $result[0];\n    }\n}\n\n\
    echo get_closest_vowel(\"yogurt\");\necho '<br>';\necho get_closest_vowel(\"FULL\"\
    );\necho '<br>';\necho get_closest_vowel(\"quick\");\necho '<br>';\necho get_closest_vowel(\"\
    ab\");\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "o<br><br>u<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3zitdgam.php:56\n\
    Stack trace:\n#0 /tmp/tmp3zitdgam.php(71): test()\n#1 {main}\n  thrown in /tmp/tmp3zitdgam.php\
    \ on line 56\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$word = strtolower($word);\n\
    \t$word_arr = str_split($word);\n\t$word_arr_rev = array_reverse($word_arr);\n\
    \t$word_arr_rev_len = count($word_arr_rev);\n\t$vowel_pos = array();\n\t$vowel_pos_rev\
    \ = array();\n\t$vowel_pos_rev_len = 0;\n\t$vowel_pos_len = 0;\n\t$vowel_pos_rev_len\
    \ = 0;\n\t$vowel_pos_len = 0;\n\t$vowel_pos_rev_len = 0;\n\t$vowel_pos_len = 0;\n\
    \t$vowel_pos_rev_len = 0;\n\t$vowel_pos_len = 0;\n\t$vowel_pos_rev_len = 0;\n\t\
    $vowel_pos_len = 0;\n\t$vowel_pos_rev_len = 0;\n\t$vowel_pos_len = 0;\n\t$vowel_pos_rev_len\
    \ = 0;\n\t$vowel_pos_len = 0;\n\t$vowel_pos_rev_len = 0;\n\t$vowel_pos_len = 0;\n\
    \t$vowel_pos_rev_len = 0;\n\t$vowel_pos_len = 0;\n\t$vowel_pos_rev_len = 0;\n\t\
    $vowel_pos_len = 0;\n\t$vowel_pos_rev_len = 0;\n\t$vowel_pos_len = 0;\n\t$vowel_pos_rev_len\
    \ = 0;\n\t$vowel_pos_len = 0;\n\t$vowel_pos_rev_len = 0;\n\t$vowel_pos_len = 0;\n\
    \t$vowel_pos_rev_len = 0;\n\t$vowel_pos_len = 0;\n\t$vowel_pos_rev_len\nfunction\
    \ candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpz5dbylwr.php
    on line 53

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $word = str_split($word);\n\
    \    $vowel_index = -1;\n    $consonant_index = -1;\n    for ($i = count($word)\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $vowel_index = $i;\n            if ($consonant_index != -1) {\n        \
    \        return $word[$vowel_index];\n            }\n        } else {\n      \
    \      $consonant_index = $i;\n            if ($vowel_index != -1) {\n       \
    \         return $word[$vowel_index];\n            }\n        }\n    }\n    return\
    \ \"\";\n}\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\n\ni\na\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpktn0khh2.php:48\n\
    Stack trace:\n#0 /tmp/tmpktn0khh2.php(61): test()\n#1 {main}\n  thrown in /tmp/tmpktn0khh2.php\
    \ on line 48\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n\
    \    $length = strlen($word);\n    for ($i = $length - 1; $i > 0; $i--) {\n  \
    \      if (in_array($word[$i], $vowels) && !in_array($word[$i - 1], $vowels))\
    \ {\n            return $word[$i];\n        }\n    }\n    return '';\n}\necho\
    \ get_closest_vowel(\"yogurt\");\necho get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"\
    quick\");\necho get_closest_vowel(\"ab\");\nfunction candidate(...$args) {\n \
    \   return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "uuu\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpkl0c6r01.php:40\n\
    Stack trace:\n#0 /tmp/tmpkl0c6r01.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpkl0c6r01.php\
    \ on line 40\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split($word);\n\
    \    $word = array_reverse($word);\n    $vowel_pos = [];\n    $consonant_pos =\
    \ [];\n    foreach ($word as $key => $value) {\n        if (in_array($value, $vowels))\
    \ {\n            $vowel_pos[] = $key;\n        } else {\n            $consonant_pos[]\
    \ = $key;\n        }\n    }\n    $vowel_pos = array_reverse($vowel_pos);\n   \
    \ $consonant_pos = array_reverse($consonant_pos);\n    $result = [];\n    foreach\
    \ ($vowel_pos as $key => $value) {\n        if (in_array($value - 1, $consonant_pos))\
    \ {\n            $result[] = $value;\n        }\n    }\n    if (empty($result))\
    \ {\n        return '';\n    } else {\n        $result = array_reverse($result);\n\
    \        return $word[$result[0]];\n    }\n}\necho get_closest_vowel(\"yogurt\"\
    );\necho \"<br>\";\necho get_closest_vowel(\"FULL\");\necho \"<br>\";\necho get_closest_vowel(\"\
    quick\");\necho \"<br>\";\necho get_closest_vowel(\"ab\");\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u<br><br>i<br>a\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpotvhii81.php:58\n\
    Stack trace:\n#0 /tmp/tmpotvhii81.php(71): test()\n#1 {main}\n  thrown in /tmp/tmpotvhii81.php\
    \ on line 58\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$word = strtolower($word);\n\
    \t$word = str_split($word);\n\t$word = array_reverse($word);\n\t$vowel_index =\
    \ 0;\n\t$vowel_distance = 0;\n\t$vowel_distance_temp = 0;\n\t$vowel_index_temp\
    \ = 0;\n\t$vowel_found = false;\n\t$consonant_found = false;\n\t$consonant_found_temp\
    \ = false;\n\t$vowel_found_temp = false;\n\t$vowel_found_temp_temp = false;\n\t\
    $vowel_index_temp_temp = 0;\n\t$vowel_distance_temp_temp = 0;\n\t$vowel_index_temp_temp_temp\
    \ = 0;\n\t$vowel_distance_temp_temp_temp = 0;\n\t$vowel_found_temp_temp_temp =\
    \ false;\n\t$vowel_found_temp_temp_temp_temp = false;\n\t$vowel_index_temp_temp_temp_temp\
    \ = 0;\n\t$vowel_distance_temp_temp_temp_temp = 0;\n\t$vowel_found_temp_temp_temp_temp_temp\
    \ = false;\n\t$vowel_index_temp_temp_temp_temp_temp = 0;\n\t$vowel_distance_temp_temp_temp_temp_temp\
    \ = 0;\n\t$vowel_found_temp_temp_temp_temp_temp_temp = false;\n\t$vowel_index_temp_temp_temp_temp_temp_temp\
    \ = 0;\n\t$vowel_distance_temp_temp_temp_temp_temp_temp = 0;\n\t$vowel_found_temp_temp_temp_temp_temp_temp_temp\
    \ = false;\n\t$vowel_index_temp_temp_temp_temp_temp_temp_temp = 0;\n\t$vowel_distance_temp_temp_temp_temp_temp_temp_temp\
    \ = 0\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpmrhzfie1.php
    on line 47

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n  $vowels = array('a', 'e', 'i', 'o', 'u');\n  $word = str_split($word);\n\
    \  $vowel_pos = array();\n  $consonant_pos = array();\n  for ($i = 0; $i < count($word);\
    \ $i++) {\n    if (in_array($word[$i], $vowels)) {\n      $vowel_pos[] = $i;\n\
    \    } else {\n      $consonant_pos[] = $i;\n    }\n  }\n  $closest_vowel = '';\n\
    \  $closest_distance = 0;\n  for ($i = 0; $i < count($vowel_pos); $i++) {\n  \
    \  for ($j = 0; $j < count($consonant_pos); $j++) {\n      if ($vowel_pos[$i]\
    \ > $consonant_pos[$j]) {\n        $distance = $vowel_pos[$i] - $consonant_pos[$j];\n\
    \        if ($closest_distance == 0 || $distance < $closest_distance) {\n    \
    \      $closest_distance = $distance;\n          $closest_vowel = $word[$vowel_pos[$i]];\n\
    \        }\n      }\n    }\n  }\n  return $closest_vowel;\n}\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "o\n\nu\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt3xw02rh.php:52\n\
    Stack trace:\n#0 /tmp/tmpt3xw02rh.php(67): test()\n#1 {main}\n  thrown in /tmp/tmpt3xw02rh.php\
    \ on line 52\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = \"aeiouAEIOU\";\n\t$vowel_pos = strlen($word);\n\tfor ($i = strlen($word)\
    \ - 1; $i >= 0; $i--) {\n\t\tif (strpos($vowels, $word[$i]) !== false) {\n\t\t\
    \t$vowel_pos = $i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif ($vowel_pos == strlen($word))\
    \ {\n\t\treturn \"\";\n\t}\n\tfor ($i = $vowel_pos - 1; $i >= 0; $i--) {\n\t\t\
    if (strpos($vowels, $word[$i]) === false) {\n\t\t\treturn $word[$vowel_pos];\n\
    \t\t}\n\t}\n\treturn \"\";\n}\n\necho get_closest_vowel(\"yogurt\") . \"\\n\"\
    ;\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\"\
    ) . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nU\ni\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpr5vwrmjw.php:49\n\
    Stack trace:\n#0 /tmp/tmpr5vwrmjw.php(60): test()\n#1 {main}\n  thrown in /tmp/tmpr5vwrmjw.php\
    \ on line 49\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$consonants = array(\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\");\n\t$word\
    \ = strtolower($word);\n\t$word_array = str_split($word);\n\t$word_length = count($word_array);\n\
    \t$vowel_index = 0;\n\t$consonant_index = 0;\n\t$vowel_found = false;\n\t$consonant_found\
    \ = false;\n\t$vowel_index_array = array();\n\t$consonant_index_array = array();\n\
    \t$vowel_index_array_length = 0;\n\t$consonant_index_array_length = 0;\n\t$closest_vowel\
    \ = \"\";\n\t$closest_vowel_index = 0;\n\t$closest_vowel_distance = 0;\n\t$closest_vowel_distance_temp\
    \ = 0;\n\t$closest_vowel_distance_temp_array = array();\n\t$closest_vowel_distance_temp_array_length\
    \ = 0;\n\t$closest_vowel_distance_temp_array_length_temp = 0;\n\t$closest_vowel_distance_temp_array_length_temp_array\
    \ = array();\n\t$closest_vowel_distance_temp_array_length_temp_array_length =\
    \ 0;\n\t$closest_vowel_distance_temp_array_length_temp_array_length_temp = 0;\n\
    \t$closest_vowel_distance_temp_array_length_temp_array_length_temp_array = array();\n\
    \t$closest_vowel_distance_temp_array_length_temp_array_length_temp_array_length\
    \ = 0;\n\t$closest_vowel_distance\nfunction candidate(...$args) {\n    return\
    \ get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    full\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    easy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eAsy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ali\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bad\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpl8u2lxap.php
    on line 43

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$word = str_split($word);\n\
    \t$vowel = '';\n\t$count = 0;\n\t$i = count($word) - 1;\n\twhile ($i >= 0) {\n\
    \t\tif (in_array($word[$i], $vowels)) {\n\t\t\t$vowel = $word[$i];\n\t\t\t$count++;\n\
    \t\t}\n\t\tif ($count == 2) {\n\t\t\treturn $vowel;\n\t\t}\n\t\t$i--;\n\t}\n\t\
    return '';\n}\necho get_closest_vowel(\"yogurt\");\necho get_closest_vowel(\"\
    FULL\");\necho get_closest_vowel(\"quick\");\necho get_closest_vowel(\"ab\");\n\
    function candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "ou\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpeahwekix.php:43\n\
    Stack trace:\n#0 /tmp/tmpeahwekix.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpeahwekix.php\
    \ on line 43\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $word = strtolower($word);\n\
    \    $word = str_split($word);\n    $result = \"\";\n    $vowel_index = 0;\n \
    \   $consonant_index = 0;\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n\
    \        if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n\
    \            break;\n        }\n    }\n    for ($i = $vowel_index - 1; $i >= 0;\
    \ $i--) {\n        if (!in_array($word[$i], $vowels)) {\n            $consonant_index\
    \ = $i;\n            break;\n        }\n    }\n    if ($consonant_index != 0)\
    \ {\n        $result = $word[$vowel_index];\n    }\n    return $result;\n}\n\n\
    echo get_closest_vowel(\"yogurt\") . \"<br>\";\necho get_closest_vowel(\"FULL\"\
    ) . \"<br>\";\necho get_closest_vowel(\"quick\") . \"<br>\";\necho get_closest_vowel(\"\
    ab\") . \"<br>\";\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u<br><br><br><br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp0_gjib9c.php:51\n\
    Stack trace:\n#0 /tmp/tmp0_gjib9c.php(65): test()\n#1 {main}\n  thrown in /tmp/tmp0_gjib9c.php\
    \ on line 51\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$word = strtolower($word);\n\
    \t$word = str_split($word);\n\t$vowel_index = 0;\n\t$vowel_distance = 0;\n\t$vowel_distance_temp\
    \ = 0;\n\t$vowel_index_temp = 0;\n\t$vowel_index_temp_2 = 0;\n\t$vowel_distance_temp_2\
    \ = 0;\n\t$vowel_index_temp_3 = 0;\n\t$vowel_distance_temp_3 = 0;\n\t$vowel_index_temp_4\
    \ = 0;\n\t$vowel_distance_temp_4 = 0;\n\t$vowel_index_temp_5 = 0;\n\t$vowel_distance_temp_5\
    \ = 0;\n\t$vowel_index_temp_6 = 0;\n\t$vowel_distance_temp_6 = 0;\n\t$vowel_index_temp_7\
    \ = 0;\n\t$vowel_distance_temp_7 = 0;\n\t$vowel_index_temp_8 = 0;\n\t$vowel_distance_temp_8\
    \ = 0;\n\t$vowel_index_temp_9 = 0;\n\t$vowel_distance_temp_9 = 0;\n\t$vowel_index_temp_10\
    \ = 0;\n\t$vowel_distance_temp_10 = 0;\n\t$vowel_index_temp_11 = 0;\n\t$vowel_distance_temp_11\
    \ = 0;\n\t$vowel_index_temp_12 = 0;\n\t$vowel_distance_temp_12 = 0;\n\t$vowel_index_temp_13\
    \ = 0;\n\t$vowel_distance_temp_13 = 0;\n\t$vowel_index_temp_14 = 0;\n\t$vowel_distance_temp_14\
    \ = 0;\n\t$vowel_index_temp_15 = 0;\n\t$vowel_distance_temp_15 =\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpf6e0ooy6.php on line 52

    '
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$word = str_split($word);\n\
    \t$word = array_reverse($word);\n\t$vowel = \"\";\n\t$consonant = \"\";\n\t$vowel_index\
    \ = 0;\n\t$consonant_index = 0;\n\tforeach ($word as $key => $value) {\n\t\tif\
    \ (in_array($value, $vowels)) {\n\t\t\t$vowel = $value;\n\t\t\t$vowel_index =\
    \ $key;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach ($word as $key => $value) {\n\t\t\
    if (!in_array($value, $vowels) && $key > $vowel_index) {\n\t\t\t$consonant = $value;\n\
    \t\t\t$consonant_index = $key;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif ($vowel != \"\"\
    \ && $consonant != \"\") {\n\t\treturn $vowel;\n\t} else {\n\t\treturn \"\";\n\
    \t}\n}\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\n\ni\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8kuhya7q.php:57\n\
    Stack trace:\n#0 /tmp/tmp8kuhya7q.php(68): test()\n#1 {main}\n  thrown in /tmp/tmp8kuhya7q.php\
    \ on line 57\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $vowel_index = -1;\n    for ($i = $word_length\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $vowel_index = $i;\n            break;\n        }\n    }\n    if ($vowel_index\
    \ == -1) {\n        return '';\n    }\n    for ($i = $vowel_index - 1; $i >= 0;\
    \ $i--) {\n        if (!in_array($word[$i], $vowels)) {\n            return $word[$vowel_index];\n\
    \        }\n    }\n    return '';\n}\n\necho get_closest_vowel(\"yogurt\") . \"\
    \\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nu\ni\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2gd9wl2s.php:51\n\
    Stack trace:\n#0 /tmp/tmp2gd9wl2s.php(62): test()\n#1 {main}\n  thrown in /tmp/tmp2gd9wl2s.php\
    \ on line 51\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$word = strtolower($word);\n\
    \t$word = str_split($word);\n\t$word = array_reverse($word);\n\t$vowel = '';\n\
    \t$count = 0;\n\tforeach ($word as $key => $value) {\n\t\tif (in_array($value,\
    \ $vowels)) {\n\t\t\t$vowel = $value;\n\t\t\t$count++;\n\t\t}\n\t\tif ($count\
    \ == 2) {\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn $vowel;\n}\necho get_closest_vowel(\"\
    yogurt\");\necho get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"quick\"\
    );\necho get_closest_vowel(\"ab\");\nfunction candidate(...$args) {\n    return\
    \ get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    full\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    easy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eAsy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ali\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bad\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "ouua\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwytmi9lg.php:43\n\
    Stack trace:\n#0 /tmp/tmpwytmi9lg.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpwytmi9lg.php\
    \ on line 43\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = array(\"a\",\"e\",\"i\",\"o\",\"u\",\"A\",\"E\",\"I\",\"O\"\
    ,\"U\");\n    $word = str_split($word);\n    $word = array_reverse($word);\n \
    \   $vowel_index = 0;\n    $vowel_index_arr = array();\n    for($i=0;$i<count($word);$i++){\n\
    \        if(in_array($word[$i],$vowels)){\n            $vowel_index_arr[] = $i;\n\
    \        }\n    }\n    if(count($vowel_index_arr) == 0){\n        return \"\"\
    ;\n    }\n    $vowel_index = $vowel_index_arr[0];\n    for($i=0;$i<count($vowel_index_arr);$i++){\n\
    \        if($vowel_index_arr[$i] > $vowel_index){\n            $vowel_index =\
    \ $vowel_index_arr[$i];\n        }\n    }\n    return $word[$vowel_index];\n}\n\
    echo get_closest_vowel(\"yogurt\");\necho \"<br>\";\necho get_closest_vowel(\"\
    FULL\");\necho \"<br>\";\necho get_closest_vowel(\"quick\");\necho \"<br>\";\n\
    echo get_closest_vowel(\"ab\");\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "o<br>U<br>u<br>a\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcaevedup.php:50\n\
    Stack trace:\n#0 /tmp/tmpcaevedup.php(65): test()\n#1 {main}\n  thrown in /tmp/tmpcaevedup.php\
    \ on line 50\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$letters = str_split($word);\n\
    \t$vowel_index = array();\n\t$consonant_index = array();\n\t$vowel_index_reverse\
    \ = array();\n\t$consonant_index_reverse = array();\n\t$vowel_index_reverse_final\
    \ = array();\n\t$consonant_index_reverse_final = array();\n\t$vowel_index_final\
    \ = array();\n\t$consonant_index_final = array();\n\t$vowel_index_final_final\
    \ = array();\n\t$consonant_index_final_final = array();\n\t$vowel_index_final_final_final\
    \ = array();\n\t$consonant_index_final_final_final = array();\n\t$vowel_index_final_final_final_final\
    \ = array();\n\t$consonant_index_final_final_final_final = array();\n\t$vowel_index_final_final_final_final_final\
    \ = array();\n\t$consonant_index_final_final_final_final_final = array();\n\t\
    $vowel_index_final_final_final_final_final_final = array();\n\t$consonant_index_final_final_final_final_final_final\
    \ = array();\n\t$vowel_index_final_final_final_final_final_final_final = array();\n\
    \t$consonant_index_final_final_final_final_final_final_final = array();\n\t$vowel_index_final_final_final_final_final_final_final_final\
    \ = array();\n\t$consonant_index_final_final_final_final_final_final_final_final\
    \ = array();\n\t$vowel_index_final_final_final_final_final_final_final_final_final\
    \ = array();\n\t$consonant_index_final_final_final_final_final_final_final_final_final\
    \ = array();\n\t$vowel_index_final_final_final_final_final_final_final\nfunction\
    \ candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpf8v8er5t.php
    on line 44

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$word = strtolower($word);\n\
    \t$word_len = strlen($word);\n\t$i = $word_len - 1;\n\twhile ($i > 0) {\n\t\t\
    if (in_array($word[$i], $vowels)) {\n\t\t\tif (!in_array($word[$i - 1], $vowels))\
    \ {\n\t\t\t\treturn $word[$i];\n\t\t\t}\n\t\t}\n\t\t$i--;\n\t}\n\treturn \"\"\
    ;\n}\n\necho get_closest_vowel(\"yogurt\");\necho \"<br>\";\necho get_closest_vowel(\"\
    FULL\");\necho \"<br>\";\necho get_closest_vowel(\"quick\");\necho \"<br>\";\n\
    echo get_closest_vowel(\"ab\");\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u<br>u<br>u<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfe1ixjv2.php:48\n\
    Stack trace:\n#0 /tmp/tmpfe1ixjv2.php(59): test()\n#1 {main}\n  thrown in /tmp/tmpfe1ixjv2.php\
    \ on line 48\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $vowel_index = -1;\n    for ($i = $word_length\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $vowel_index = $i;\n            break;\n        }\n    }\n    if ($vowel_index\
    \ == -1) {\n        return '';\n    }\n    for ($i = $vowel_index - 1; $i >= 0;\
    \ $i--) {\n        if (!in_array($word[$i], $vowels)) {\n            return $word[$vowel_index];\n\
    \        }\n    }\n    return '';\n}\n\necho get_closest_vowel(\"yogurt\") . PHP_EOL;\n\
    echo get_closest_vowel(\"FULL\") . PHP_EOL;\necho get_closest_vowel(\"quick\"\
    ) . PHP_EOL;\necho get_closest_vowel(\"ab\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nu\ni\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdkkn2c3u.php:51\n\
    Stack trace:\n#0 /tmp/tmpdkkn2c3u.php(62): test()\n#1 {main}\n  thrown in /tmp/tmpdkkn2c3u.php\
    \ on line 51\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$word = strtolower($word);\n\
    \t$word = str_split($word);\n\t$vowel_pos = array();\n\tfor ($i = 0; $i < count($word);\
    \ $i++) {\n\t\tif (in_array($word[$i], $vowels)) {\n\t\t\t$vowel_pos[] = $i;\n\
    \t\t}\n\t}\n\tif (count($vowel_pos) == 0) {\n\t\treturn \"\";\n\t}\n\t$closest_vowel\
    \ = \"\";\n\t$closest_distance = count($word);\n\tfor ($i = 0; $i < count($vowel_pos);\
    \ $i++) {\n\t\tif ($vowel_pos[$i] == 0 || $vowel_pos[$i] == count($word) - 1)\
    \ {\n\t\t\tcontinue;\n\t\t}\n\t\tif ($vowel_pos[$i] - $vowel_pos[$i - 1] < $closest_distance)\
    \ {\n\t\t\t$closest_distance = $vowel_pos[$i] - $vowel_pos[$i - 1];\n\t\t\t$closest_vowel\
    \ = $word[$vowel_pos[$i]];\n\t\t}\n\t}\n\treturn $closest_vowel;\n}\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nWarning: Undefined array key -1 in /tmp/tmpd5m_exnl.php on line 35\n\n\
    Warning: Undefined array key -1 in /tmp/tmpd5m_exnl.php on line 36\no\n\nWarning:\
    \ Undefined array key -1 in /tmp/tmpd5m_exnl.php on line 35\n\nWarning: Undefined\
    \ array key -1 in /tmp/tmpd5m_exnl.php on line 36\nu\n\nWarning: Undefined array\
    \ key -1 in /tmp/tmpd5m_exnl.php on line 35\n\nWarning: Undefined array key -1\
    \ in /tmp/tmpd5m_exnl.php on line 36\nu\n\n\nWarning: Undefined array key -1 in\
    \ /tmp/tmpd5m_exnl.php on line 35\n\nWarning: Undefined array key -1 in /tmp/tmpd5m_exnl.php\
    \ on line 36\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpd5m_exnl.php:51\n\
    Stack trace:\n#0 /tmp/tmpd5m_exnl.php(66): test()\n#1 {main}\n  thrown in /tmp/tmpd5m_exnl.php\
    \ on line 51\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split($word);\n\
    \    $word = array_reverse($word);\n    $vowel = '';\n    $consonant = '';\n \
    \   $result = '';\n    foreach ($word as $key => $value) {\n        if (in_array($value,\
    \ $vowels)) {\n            $vowel = $value;\n            break;\n        }\n \
    \   }\n    foreach ($word as $key => $value) {\n        if (!in_array($value,\
    \ $vowels)) {\n            $consonant = $value;\n            break;\n        }\n\
    \    }\n    if ($vowel != '' && $consonant != '') {\n        $result = $vowel;\n\
    \    }\n    return $result;\n}\necho get_closest_vowel(\"yogurt\");\nfunction\
    \ candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsdhib811.php:48\n\
    Stack trace:\n#0 /tmp/tmpsdhib811.php(61): test()\n#1 {main}\n  thrown in /tmp/tmpsdhib811.php\
    \ on line 48\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n\
    \    $len = strlen($word);\n    $i = $len - 1;\n    while ($i > 0) {\n       \
    \ if (in_array($word[$i], $vowels)) {\n            if (!in_array($word[$i - 1],\
    \ $vowels)) {\n                return $word[$i];\n            }\n        }\n \
    \       $i--;\n    }\n    return '';\n}\n\necho get_closest_vowel(\"yogurt\")\
    \ . PHP_EOL;\necho get_closest_vowel(\"FULL\") . PHP_EOL;\necho get_closest_vowel(\"\
    quick\") . PHP_EOL;\necho get_closest_vowel(\"ab\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nu\nu\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbm98t99n.php:45\n\
    Stack trace:\n#0 /tmp/tmpbm98t99n.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpbm98t99n.php\
    \ on line 45\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$word = str_split($word);\n\
    \t$word = array_reverse($word);\n\t$vowel = '';\n\t$consonant = '';\n\tforeach\
    \ ($word as $key => $value) {\n\t\tif (in_array($value, $vowels)) {\n\t\t\t$vowel\
    \ = $value;\n\t\t\tbreak;\n\t\t}\n\t\t$consonant = $value;\n\t}\n\tif ($vowel\
    \ == '' || $consonant == '') {\n\t\treturn '';\n\t}\n\treturn $vowel;\n}\n\necho\
    \ get_closest_vowel(\"yogurt\");\necho get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"\
    quick\");\necho get_closest_vowel(\"ab\");\nfunction candidate(...$args) {\n \
    \   return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "uia\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphxgmf36n.php:46\n\
    Stack trace:\n#0 /tmp/tmphxgmf36n.php(59): test()\n#1 {main}\n  thrown in /tmp/tmphxgmf36n.php\
    \ on line 46\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $vowel_index = -1;\n    for ($i = $word_length\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $vowel_index = $i;\n            break;\n        }\n    }\n    if ($vowel_index\
    \ == -1) {\n        return \"\";\n    }\n    for ($i = $vowel_index - 1; $i >=\
    \ 0; $i--) {\n        if (!in_array($word[$i], $vowels)) {\n            return\
    \ $word[$vowel_index];\n        }\n    }\n    return \"\";\n}\n\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nu\ni\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvk5k5dl6.php:51\n\
    Stack trace:\n#0 /tmp/tmpvk5k5dl6.php(62): test()\n#1 {main}\n  thrown in /tmp/tmpvk5k5dl6.php\
    \ on line 51\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n\
    \    $word = str_split($word);\n    $vowel_index = -1;\n    for ($i = count($word)\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $vowel_index = $i;\n            break;\n        }\n    }\n    if ($vowel_index\
    \ == -1) {\n        return \"\";\n    }\n    for ($i = $vowel_index - 1; $i >=\
    \ 0; $i--) {\n        if (!in_array($word[$i], $vowels)) {\n            return\
    \ $word[$vowel_index];\n        }\n    }\n    return \"\";\n}\n\necho get_closest_vowel(\"\
    yogurt\");\necho get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"quick\"\
    );\necho get_closest_vowel(\"ab\");\nfunction candidate(...$args) {\n    return\
    \ get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    full\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    easy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eAsy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ali\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bad\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $word = strtolower($word);\n\
    \    $word = str_split($word);\n    $vowel_pos = array();\n    $consonant_pos\
    \ = array();\n    for ($i = 0; $i < count($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_pos[] = $i;\n        } else {\n            $consonant_pos[]\
    \ = $i;\n        }\n    }\n    $result = array();\n    for ($i = 0; $i < count($vowel_pos);\
    \ $i++) {\n        for ($j = 0; $j < count($consonant_pos); $j++) {\n        \
    \    if ($vowel_pos[$i] > $consonant_pos[$j]) {\n                $result[] = $vowel_pos[$i]\
    \ - $consonant_pos[$j];\n            }\n        }\n    }\n    if (count($result)\
    \ == 0) {\n        return '';\n    } else {\n        $min = min($result);\n  \
    \      $key = array_search($min, $result);\n        $vowel_pos = $vowel_pos[$key];\n\
    \        return $word[$vowel_pos];\n    }\n}\n\necho get_closest_vowel(\"yogurt\"\
    );\necho get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"quick\");\necho\
    \ get_closest_vowel(\"ab\");\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "ouu\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzqr2tbss.php:56\n\
    Stack trace:\n#0 /tmp/tmpzqr2tbss.php(71): test()\n#1 {main}\n  thrown in /tmp/tmpzqr2tbss.php\
    \ on line 56\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $vowel_index = 0;\n    $vowel_distance\
    \ = 0;\n    for ($i = $word_length - 1; $i > 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            break;\n        }\n\
    \    }\n    for ($i = $vowel_index - 1; $i > 0; $i--) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            $vowel_distance = $vowel_index - $i;\n            break;\n\
    \        }\n    }\n    if ($vowel_distance == 0) {\n        return '';\n    }\n\
    \    return $word[$vowel_index];\n}\n\necho get_closest_vowel(\"yogurt\");\necho\
    \ get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"quick\");\necho get_closest_vowel(\"\
    ab\");\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxx5egjr2.php:50\n\
    Stack trace:\n#0 /tmp/tmpxx5egjr2.php(64): test()\n#1 {main}\n  thrown in /tmp/tmpxx5egjr2.php\
    \ on line 50\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$letters = str_split($word);\n\
    \t$vowel_index = -1;\n\t$consonant_index = -1;\n\tfor ($i = count($letters) -\
    \ 1; $i >= 0; $i--) {\n\t\tif (in_array($letters[$i], $vowels)) {\n\t\t\t$vowel_index\
    \ = $i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor ($i = $vowel_index - 1; $i >= 0; $i--)\
    \ {\n\t\tif (!in_array($letters[$i], $vowels)) {\n\t\t\t$consonant_index = $i;\n\
    \t\t\tbreak;\n\t\t}\n\t}\n\tif ($vowel_index == -1 || $consonant_index == -1)\
    \ {\n\t\treturn \"\";\n\t}\n\treturn $letters[$vowel_index];\n}\n\necho get_closest_vowel(\"\
    yogurt\");\necho get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"quick\"\
    );\necho get_closest_vowel(\"ab\");\nfunction candidate(...$args) {\n    return\
    \ get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    full\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    easy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eAsy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ali\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bad\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "ui\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptglnx00w.php:52\n\
    Stack trace:\n#0 /tmp/tmptglnx00w.php(63): test()\n#1 {main}\n  thrown in /tmp/tmptglnx00w.php\
    \ on line 52\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n\
    \    $word = str_split($word);\n    $word = array_reverse($word);\n    $vowel_index\
    \ = 0;\n    $vowel_distance = 0;\n    $vowel_distance_temp = 0;\n    $vowel_index_temp\
    \ = 0;\n    $vowel_found = false;\n    for ($i = 0; $i < count($word); $i++) {\n\
    \        if (in_array($word[$i], $vowels)) {\n            $vowel_index_temp =\
    \ $i;\n            $vowel_distance_temp = $vowel_index_temp - $vowel_index;\n\
    \            if ($vowel_distance_temp > $vowel_distance) {\n                $vowel_distance\
    \ = $vowel_distance_temp;\n                $vowel_index = $vowel_index_temp;\n\
    \                $vowel_found = true;\n            }\n        }\n    }\n    if\
    \ ($vowel_found) {\n        return $word[$vowel_index];\n    } else {\n      \
    \  return '';\n    }\n}\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho\
    \ get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") .\
    \ \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nu\ni\na\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwdes8tos.php:55\n\
    Stack trace:\n#0 /tmp/tmpwdes8tos.php(68): test()\n#1 {main}\n  thrown in /tmp/tmpwdes8tos.php\
    \ on line 55\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$word = strtolower($word);\n\
    \t$word_array = str_split($word);\n\t$word_array = array_reverse($word_array);\n\
    \t$vowel_index = 0;\n\t$vowel_found = false;\n\t$vowel_position = 0;\n\t$consonant_found\
    \ = false;\n\t$consonant_position = 0;\n\t$consonant_index = 0;\n\t$consonant_array\
    \ = array();\n\t$vowel_array = array();\n\t$vowel_position_array = array();\n\t\
    $consonant_position_array = array();\n\t$consonant_index_array = array();\n\t\
    $vowel_position_array_index = 0;\n\t$consonant_position_array_index = 0;\n\t$consonant_index_array_index\
    \ = 0;\n\t$vowel_array_index = 0;\n\t$consonant_array_index = 0;\n\t$vowel_position_array_index\
    \ = 0;\n\t$consonant_position_array_index = 0;\n\t$consonant_index_array_index\
    \ = 0;\n\t$vowel_array_index = 0;\n\t$consonant_array_index = 0;\n\t$vowel_position_array_index\
    \ = 0;\n\t$consonant_position_array_index = 0;\n\t$consonant_index_array_index\
    \ = 0;\n\t$vowel_array_index = 0;\n\t$consonant_array_index = 0;\n\t$vowel_position_array_index\
    \ = 0;\n\t$consonant_position_array_index = 0;\n\t$consonant_index_array_index\
    \ = 0;\n\t$vowel_array_index = 0;\n\t$consonant_array_index = 0;\n\t$vowel_position_array_index\
    \ = 0;\n\t$consonant_position_array_index = 0;\n\t$consonant_index\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmp6kwr_u1y.php
    on line 55

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split($word);\n\
    \    $word = array_reverse($word);\n    $vowel_position = null;\n    $consonant_position\
    \ = null;\n    $vowel_position_array = [];\n    $consonant_position_array = [];\n\
    \    for ($i = 0; $i < count($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_position = $i;\n            array_push($vowel_position_array,\
    \ $vowel_position);\n        } else {\n            $consonant_position = $i;\n\
    \            array_push($consonant_position_array, $consonant_position);\n   \
    \     }\n    }\n    $vowel_position_array = array_reverse($vowel_position_array);\n\
    \    $consonant_position_array = array_reverse($consonant_position_array);\n \
    \   $vowel_position_array = array_values($vowel_position_array);\n    $consonant_position_array\
    \ = array_values($consonant_position_array);\n    $difference_array = [];\n  \
    \  for ($i = 0; $i < count($vowel_position_array); $i++) {\n        $difference\
    \ = $vowel_position_array[$i] - $consonant_position_array[$i];\n        array_push($difference_array,\
    \ $difference);\n    }\n    $difference_array = array_values($difference_array);\n\
    \    $difference_array = array_filter($difference_array);\n    $difference_array\
    \ = array_values($difference_array);\n    $min_difference = min($difference_array);\n\
    \    $min_difference_key = array_search($min_difference, $difference_array);\n\
    \    $min_difference_key = $min_difference_key + 1;\n    $vowel_position_array\
    \ = array_reverse($vowel_position\nfunction candidate(...$args) {\n    return\
    \ get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    full\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    easy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eAsy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ali\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bad\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting ")" in /tmp/tmpler6850c.php
    on line 49

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$word = strtolower($word);\n\
    \t$word_length = strlen($word);\n\t$vowel_index = 0;\n\t$vowel_distance = $word_length;\n\
    \tfor ($i = $word_length - 1; $i > 0; $i--) {\n\t\tif (in_array($word[$i], $vowels))\
    \ {\n\t\t\t$vowel_index = $i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor ($i = $vowel_index\
    \ - 1; $i > 0; $i--) {\n\t\tif (!in_array($word[$i], $vowels)) {\n\t\t\t$vowel_distance\
    \ = $vowel_index - $i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif ($vowel_distance == $word_length)\
    \ {\n\t\treturn \"\";\n\t}\n\treturn $word[$vowel_index];\n}\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpk1m6662m.php:49\n\
    Stack trace:\n#0 /tmp/tmpk1m6662m.php(63): test()\n#1 {main}\n  thrown in /tmp/tmpk1m6662m.php\
    \ on line 49\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$word = strtolower($word);\n\t\
    $word_length = strlen($word);\n\t$closest_vowel = '';\n\t$closest_vowel_index\
    \ = 0;\n\tfor ($i = $word_length - 1; $i > 0; $i--) {\n\t\tif (in_array($word[$i],\
    \ $vowels)) {\n\t\t\tif (!in_array($word[$i - 1], $vowels)) {\n\t\t\t\t$closest_vowel\
    \ = $word[$i];\n\t\t\t\t$closest_vowel_index = $i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\
    \t}\n\t}\n\treturn $closest_vowel;\n}\n\necho get_closest_vowel(\"yogurt\");\n\
    echo get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"quick\");\necho get_closest_vowel(\"\
    ab\");\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $vowel_index = -1;\n    $vowel_distance\
    \ = $word_length;\n    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $distance = $word_length - $i;\n            if ($distance\
    \ < $vowel_distance) {\n                $vowel_distance = $distance;\n       \
    \         $vowel_index = $i;\n            }\n        }\n    }\n    if ($vowel_index\
    \ == -1) {\n        return \"\";\n    }\n    return $word[$vowel_index];\n}\n\n\
    echo get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\"\
    ) . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nu\ni\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpu03vn2sx.php:48\n\
    Stack trace:\n#0 /tmp/tmpu03vn2sx.php(61): test()\n#1 {main}\n  thrown in /tmp/tmpu03vn2sx.php\
    \ on line 48\n"
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n\t$word = str_split($word);\n\
    \t$vowel_index = null;\n\t$vowel_distance = null;\n\tfor ($i = count($word) -\
    \ 1; $i >= 0; $i--) {\n\t\tif (in_array($word[$i], $vowels)) {\n\t\t\tif ($i ==\
    \ count($word) - 1) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (in_array($word[$i\
    \ + 1], $vowels)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif ($i == 0) {\n\t\t\t\t\
    continue;\n\t\t\t}\n\t\t\tif (in_array($word[$i - 1], $vowels)) {\n\t\t\t\tcontinue;\n\
    \t\t\t}\n\t\t\tif ($vowel_index == null) {\n\t\t\t\t$vowel_index = $i;\n\t\t\t\
    \t$vowel_distance = count($word) - $i;\n\t\t\t} else {\n\t\t\t\t$distance = count($word)\
    \ - $i;\n\t\t\t\tif ($distance < $vowel_distance) {\n\t\t\t\t\t$vowel_index =\
    \ $i;\n\t\t\t\t\t$vowel_distance = $distance;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\
    \tif ($vowel_index == null) {\n\t\treturn \"\";\n\t}\n\treturn $word[$vowel_index];\n\
    }\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'u




    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $word = strtolower($word);\n\
    \    $length = strlen($word);\n    $i = $length - 1;\n    $vowel = '';\n    while\
    \ ($i > 0) {\n        if (in_array($word[$i], $vowels)) {\n            if (!in_array($word[$i\
    \ - 1], $vowels)) {\n                $vowel = $word[$i];\n                break;\n\
    \            }\n        }\n        $i--;\n    }\n    return $vowel;\n}\n\necho\
    \ get_closest_vowel(\"yogurt\");\necho get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"\
    quick\");\necho get_closest_vowel(\"ab\");\nfunction candidate(...$args) {\n \
    \   return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "uuu\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpw2jiqd0i.php:47\n\
    Stack trace:\n#0 /tmp/tmpw2jiqd0i.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpw2jiqd0i.php\
    \ on line 47\n"
  timestamp: 1660220655
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$word = strtolower($word);\n\
    \t$word_array = str_split($word);\n\t$vowel_index = 0;\n\t$vowel_position = 0;\n\
    \t$vowel_distance = 0;\n\t$vowel_distance_array = array();\n\t$vowel_position_array\
    \ = array();\n\t$vowel_index_array = array();\n\t$vowel_array = array();\n\t$vowel_distance_array_index\
    \ = 0;\n\t$vowel_position_array_index = 0;\n\t$vowel_index_array_index = 0;\n\t\
    $vowel_array_index = 0;\n\t$vowel_array_index_2 = 0;\n\t$vowel_array_index_3 =\
    \ 0;\n\t$vowel_array_index_4 = 0;\n\t$vowel_array_index_5 = 0;\n\t$vowel_array_index_6\
    \ = 0;\n\t$vowel_array_index_7 = 0;\n\t$vowel_array_index_8 = 0;\n\t$vowel_array_index_9\
    \ = 0;\n\t$vowel_array_index_10 = 0;\n\t$vowel_array_index_11 = 0;\n\t$vowel_array_index_12\
    \ = 0;\n\t$vowel_array_index_13 = 0;\n\t$vowel_array_index_14 = 0;\n\t$vowel_array_index_15\
    \ = 0;\n\t$vowel_array_index_16 = 0;\n\t$vowel_array_index_17 = 0;\n\t$vowel_array_index_18\
    \ = 0;\n\t$vowel_array_index_19 = 0;\n\t$vowel_array_index_20 = 0;\n\t$vowel_array_index_21\
    \ = 0;\n\t$vowel_array_index_22 = 0;\n\t$vowel_array\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmp5v20bmla.php
    on line 53

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n\
    \    $word = str_split($word);\n    $word = array_reverse($word);\n    $result\
    \ = \"\";\n    for ($i = 0; $i < count($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            if ($i == 0) {\n                $result = \"\";\n \
    \               break;\n            } else {\n                $result = $word[$i];\n\
    \                break;\n            }\n        }\n    }\n    return $result;\n\
    }\necho get_closest_vowel(\"yogurt\");\necho get_closest_vowel(\"FULL\");\necho\
    \ get_closest_vowel(\"quick\");\necho get_closest_vowel(\"ab\");\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "uuia\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7jb6b6uc.php:46\n\
    Stack trace:\n#0 /tmp/tmp7jb6b6uc.php(59): test()\n#1 {main}\n  thrown in /tmp/tmp7jb6b6uc.php\
    \ on line 46\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$word = strtolower($word);\n\
    \t$word = str_split($word);\n\t$word = array_reverse($word);\n\t$vowel = '';\n\
    \t$consonant = '';\n\tforeach ($word as $key => $value) {\n\t\tif (in_array($value,\
    \ $vowels)) {\n\t\t\t$vowel = $value;\n\t\t\tbreak;\n\t\t} else {\n\t\t\t$consonant\
    \ = $value;\n\t\t}\n\t}\n\tif ($vowel == '' || $consonant == '') {\n\t\treturn\
    \ '';\n\t} else {\n\t\treturn $vowel;\n\t}\n}\necho get_closest_vowel(\"yogurt\"\
    );\necho '<br>';\necho get_closest_vowel(\"FULL\");\necho '<br>';\necho get_closest_vowel(\"\
    quick\");\necho '<br>';\necho get_closest_vowel(\"ab\");\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u<br>u<br>i<br>a\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp32ey9yrr.php:51\n\
    Stack trace:\n#0 /tmp/tmp32ey9yrr.php(64): test()\n#1 {main}\n  thrown in /tmp/tmp32ey9yrr.php\
    \ on line 51\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $word = str_split($word);\n\
    \    $word = array_reverse($word);\n    $vowel = '';\n    $consonant = '';\n \
    \   foreach ($word as $key => $value) {\n        if (in_array($value, $vowels))\
    \ {\n            $vowel = $value;\n            break;\n        }\n        $consonant\
    \ = $value;\n    }\n    if ($vowel == '' || $consonant == '') {\n        return\
    \ '';\n    }\n    return $vowel;\n}\n\necho get_closest_vowel(\"yogurt\");\necho\
    \ get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"quick\");\necho get_closest_vowel(\"\
    ab\");\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "uia\nFatal error: Uncaught Exception: Test failed! in /tmp/tmph3kw0ik2.php:46\n\
    Stack trace:\n#0 /tmp/tmph3kw0ik2.php(59): test()\n#1 {main}\n  thrown in /tmp/tmph3kw0ik2.php\
    \ on line 46\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n\
    \    $word = str_split($word);\n    $vowel_pos = array();\n    $consonant_pos\
    \ = array();\n    for ($i = 0; $i < count($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_pos[] = $i;\n        } else {\n            $consonant_pos[]\
    \ = $i;\n        }\n    }\n    $result = array();\n    for ($i = 0; $i < count($vowel_pos);\
    \ $i++) {\n        for ($j = 0; $j < count($consonant_pos); $j++) {\n        \
    \    if ($vowel_pos[$i] > $consonant_pos[$j]) {\n                $result[] = $vowel_pos[$i]\
    \ - $consonant_pos[$j];\n            }\n        }\n    }\n    if (count($result)\
    \ == 0) {\n        return \"\";\n    } else {\n        $min = min($result);\n\
    \        $key = array_search($min, $result);\n        return $word[$vowel_pos[$key]];\n\
    \    }\n}\n\necho get_closest_vowel(\"yogurt\");\necho \"<br>\";\necho get_closest_vowel(\"\
    FULL\");\necho \"<br>\";\necho get_closest_vowel(\"quick\");\necho \"<br>\";\n\
    echo get_closest_vowel(\"ab\");\necho \"<br>\";\necho get_closest_vowel(\"b\"\
    );\necho \"<br>\";\necho get_closest_vowel(\"a\");\necho \"<br>\";\necho get_closest_vowel(\"\
    e\");\necho \"<br>\";\necho get_closest_vowel(\"i\");\necho \"<br>\";\necho get_closest_vowel(\"\
    o\");\necho \"<br>\";\necho get_\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting "," or ";" in
    /tmp/tmppj9_epet.php on line 65

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $closest_vowel = '';\n    $closest_vowel_distance\
    \ = $word_length;\n    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_distance = $word_length - $i;\n            if\
    \ ($vowel_distance < $closest_vowel_distance) {\n                $closest_vowel\
    \ = $word[$i];\n                $closest_vowel_distance = $vowel_distance;\n \
    \           }\n        }\n    }\n    return $closest_vowel;\n}\n\necho get_closest_vowel(\"\
    yogurt\");\necho get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"quick\"\
    );\necho get_closest_vowel(\"ab\");\nfunction candidate(...$args) {\n    return\
    \ get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    full\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    easy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eAsy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ali\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bad\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "uui\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpuaclietl.php:45\n\
    Stack trace:\n#0 /tmp/tmpuaclietl.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpuaclietl.php\
    \ on line 45\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$word = str_split($word);\n\
    \t$word = array_reverse($word);\n\t$vowel_pos = array();\n\t$consonant_pos = array();\n\
    \tforeach ($word as $key => $value) {\n\t\tif (in_array($value, $vowels)) {\n\t\
    \t\t$vowel_pos[] = $key;\n\t\t} else {\n\t\t\t$consonant_pos[] = $key;\n\t\t}\n\
    \t}\n\t$vowel_pos = array_reverse($vowel_pos);\n\t$consonant_pos = array_reverse($consonant_pos);\n\
    \t$result = array();\n\tforeach ($vowel_pos as $key => $value) {\n\t\tif (in_array($value\
    \ - 1, $consonant_pos)) {\n\t\t\t$result[] = $value;\n\t\t}\n\t}\n\tif (empty($result))\
    \ {\n\t\treturn \"\";\n\t} else {\n\t\t$result = array_reverse($result);\n\t\t\
    $result = $result[0];\n\t\t$result = $word[$result];\n\t\treturn $result;\n\t\
    }\n}\necho get_closest_vowel(\"yogurt\");\necho \"<br>\";\necho get_closest_vowel(\"\
    FULL\");\necho \"<br>\";\necho get_closest_vowel(\"quick\");\necho \"<br>\";\n\
    echo get_closest_vowel(\"ab\");\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u<br><br>i<br>a\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzxhups40.php:60\n\
    Stack trace:\n#0 /tmp/tmpzxhups40.php(73): test()\n#1 {main}\n  thrown in /tmp/tmpzxhups40.php\
    \ on line 60\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $word_array = str_split($word);\n    $vowel_index\
    \ = 0;\n    $vowel_distance = 0;\n    $closest_vowel = '';\n    for ($i = 0; $i\
    \ < $word_length; $i++) {\n        if (in_array($word_array[$i], $vowels)) {\n\
    \            $vowel_index = $i;\n            $vowel_distance = $word_length -\
    \ $vowel_index;\n            for ($j = $vowel_index; $j < $word_length; $j++)\
    \ {\n                if (!in_array($word_array[$j], $vowels)) {\n            \
    \        $vowel_distance = $j - $vowel_index;\n                    break;\n  \
    \              }\n            }\n            if ($vowel_distance > 1) {\n    \
    \            $closest_vowel = $word_array[$vowel_index];\n                break;\n\
    \            }\n        }\n    }\n    return $closest_vowel;\n}\necho get_closest_vowel(\"\
    yogurt\");\necho get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"quick\"\
    );\necho get_closest_vowel(\"ab\");\nfunction candidate(...$args) {\n    return\
    \ get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    full\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    easy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eAsy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ali\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bad\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy_j55epj.php:51\n\
    Stack trace:\n#0 /tmp/tmpy_j55epj.php(66): test()\n#1 {main}\n  thrown in /tmp/tmpy_j55epj.php\
    \ on line 51\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$word = strtolower($word);\n\
    \t$word_length = strlen($word);\n\t$vowel_index = 0;\n\t$vowel_distance = 0;\n\
    \t$closest_vowel = \"\";\n\tfor ($i = 0; $i < $word_length; $i++) {\n\t\tif (in_array($word[$i],\
    \ $vowels)) {\n\t\t\tif ($i > 0 && $i < $word_length - 1) {\n\t\t\t\tif (!in_array($word[$i\
    \ - 1], $vowels) && !in_array($word[$i + 1], $vowels)) {\n\t\t\t\t\tif ($vowel_distance\
    \ == 0) {\n\t\t\t\t\t\t$vowel_distance = $i;\n\t\t\t\t\t\t$closest_vowel = $word[$i];\n\
    \t\t\t\t\t} else {\n\t\t\t\t\t\tif ($i < $vowel_distance) {\n\t\t\t\t\t\t\t$vowel_distance\
    \ = $i;\n\t\t\t\t\t\t\t$closest_vowel = $word[$i];\n\t\t\t\t\t\t}\n\t\t\t\t\t\
    }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $closest_vowel;\n}\n\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "o\nu\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbdwtoxke.php:52\n\
    Stack trace:\n#0 /tmp/tmpbdwtoxke.php(67): test()\n#1 {main}\n  thrown in /tmp/tmpbdwtoxke.php\
    \ on line 52\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$word = strtolower($word);\n\
    \t$word_length = strlen($word);\n\t$vowel_index = 0;\n\tfor ($i = $word_length\
    \ - 1; $i > 0; $i--) {\n\t\tif (in_array($word[$i], $vowels)) {\n\t\t\t$vowel_index\
    \ = $i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif ($vowel_index == 0) {\n\t\treturn \"\"\
    ;\n\t}\n\tfor ($i = $vowel_index - 1; $i >= 0; $i--) {\n\t\tif (!in_array($word[$i],\
    \ $vowels)) {\n\t\t\treturn $word[$vowel_index];\n\t\t}\n\t}\n\treturn \"\";\n\
    }\n\necho get_closest_vowel(\"yogurt\");\necho \"<br>\";\necho get_closest_vowel(\"\
    FULL\");\necho \"<br>\";\necho get_closest_vowel(\"quick\");\necho \"<br>\";\n\
    echo get_closest_vowel(\"ab\");\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u<br>u<br>i<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpn9m1icsk.php:54\n\
    Stack trace:\n#0 /tmp/tmpn9m1icsk.php(65): test()\n#1 {main}\n  thrown in /tmp/tmpn9m1icsk.php\
    \ on line 54\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split($word);\n\
    \    $word = array_reverse($word);\n    $vowel_index = 0;\n    $consonant_index\
    \ = 0;\n    $vowel_found = false;\n    $consonant_found = false;\n    foreach\
    \ ($word as $key => $value) {\n        if (in_array($value, $vowels)) {\n    \
    \        $vowel_index = $key;\n            $vowel_found = true;\n        }\n \
    \       if (!in_array($value, $vowels)) {\n            $consonant_index = $key;\n\
    \            $consonant_found = true;\n        }\n        if ($vowel_found &&\
    \ $consonant_found) {\n            break;\n        }\n    }\n    if ($vowel_found\
    \ && $consonant_found) {\n        return $word[$vowel_index];\n    } else {\n\
    \        return '';\n    }\n}\necho get_closest_vowel(\"yogurt\") . PHP_EOL;\n\
    echo get_closest_vowel(\"FULL\") . PHP_EOL;\necho get_closest_vowel(\"quick\"\
    ) . PHP_EOL;\necho get_closest_vowel(\"ab\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\n\ni\na\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptle90rrx.php:54\n\
    Stack trace:\n#0 /tmp/tmptle90rrx.php(67): test()\n#1 {main}\n  thrown in /tmp/tmptle90rrx.php\
    \ on line 54\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = \"aeiouAEIOU\";\n    $word = str_split($word);\n    $result\
    \ = \"\";\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n        if (strpos($vowels,\
    \ $word[$i]) !== false) {\n            $result = $word[$i];\n            break;\n\
    \        }\n    }\n    return $result;\n}\necho get_closest_vowel(\"yogurt\");\n\
    echo get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"quick\");\necho get_closest_vowel(\"\
    ab\");\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "uUia\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp4qi3riob.php:39\n\
    Stack trace:\n#0 /tmp/tmp4qi3riob.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp4qi3riob.php\
    \ on line 39\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$word = strtolower($word);\n\
    \t$word_length = strlen($word);\n\t$closest_vowel = '';\n\t$closest_vowel_distance\
    \ = 0;\n\tfor ($i = $word_length - 1; $i > 0; $i--) {\n\t\tif (in_array($word[$i],\
    \ $vowels)) {\n\t\t\tif (!in_array($word[$i - 1], $vowels)) {\n\t\t\t\t$closest_vowel\
    \ = $word[$i];\n\t\t\t\t$closest_vowel_distance = $word_length - $i;\n\t\t\t\t\
    break;\n\t\t\t}\n\t\t}\n\t}\n\treturn $closest_vowel;\n}\n\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $word = str_split($word);\n\
    \    $word = array_reverse($word);\n    $vowel_pos = 0;\n    $consonant_pos =\
    \ 0;\n    $vowel_pos_arr = array();\n    $consonant_pos_arr = array();\n    foreach\
    \ ($word as $key => $value) {\n        if (in_array($value, $vowels)) {\n    \
    \        $vowel_pos_arr[] = $key;\n        } else {\n            $consonant_pos_arr[]\
    \ = $key;\n        }\n    }\n    if (count($vowel_pos_arr) == 0 || count($consonant_pos_arr)\
    \ == 0) {\n        return \"\";\n    }\n    foreach ($vowel_pos_arr as $key =>\
    \ $value) {\n        if ($value > $consonant_pos_arr[0]) {\n            $vowel_pos\
    \ = $value;\n            break;\n        }\n    }\n    foreach ($consonant_pos_arr\
    \ as $key => $value) {\n        if ($value < $vowel_pos) {\n            $consonant_pos\
    \ = $value;\n            break;\n        }\n    }\n    if ($vowel_pos == 0 ||\
    \ $consonant_pos == 0) {\n        return \"\";\n    }\n    return $word[$vowel_pos];\n\
    }\n\necho get_closest_vowel(\"yogurt\");\necho get_closest_vowel(\"FULL\");\n\
    echo get_closest_vowel(\"quick\");\necho get_closest_vowel(\"ab\");\nfunction\
    \ candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpdgias704.php:61\n\
    Stack trace:\n#0 /tmp/tmpdgias704.php(76): test()\n#1 {main}\n  thrown in /tmp/tmpdgias704.php\
    \ on line 61\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n\t$word = str_split($word);\n\
    \t$result = \"\";\n\t$i = count($word) - 1;\n\twhile ($i > 0) {\n\t\tif (in_array($word[$i],\
    \ $vowels)) {\n\t\t\tif (!in_array($word[$i - 1], $vowels)) {\n\t\t\t\t$result\
    \ = $word[$i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t$i--;\n\t}\n\treturn $result;\n\
    }\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\"\
    ) . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\n\nu\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp85fgtshb.php:45\n\
    Stack trace:\n#0 /tmp/tmp85fgtshb.php(56): test()\n#1 {main}\n  thrown in /tmp/tmp85fgtshb.php\
    \ on line 45\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$word = str_split($word);\n\t$last_vowel\
    \ = '';\n\t$last_consonant = '';\n\t$result = '';\n\tfor ($i = count($word) -\
    \ 1; $i >= 0; $i--) {\n\t\tif (in_array($word[$i], $vowels)) {\n\t\t\t$last_vowel\
    \ = $word[$i];\n\t\t\tif ($last_consonant != '') {\n\t\t\t\t$result = $last_vowel;\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\t$last_consonant = $word[$i];\n\t\t\
    \tif ($last_vowel != '') {\n\t\t\t\t$result = $last_vowel;\n\t\t\t\tbreak;\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn $result;\n}\necho get_closest_vowel(\"yogurt\");\n\
    echo get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"quick\");\necho get_closest_vowel(\"\
    ab\");\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "uia\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzl0n45b7.php:50\n\
    Stack trace:\n#0 /tmp/tmpzl0n45b7.php(63): test()\n#1 {main}\n  thrown in /tmp/tmpzl0n45b7.php\
    \ on line 50\n"
  timestamp: 1660220656
- exit_code: 0
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$word = strtolower($word);\n\
    \t$word_length = strlen($word);\n\t$vowel_position = 0;\n\t$vowel_distance = 0;\n\
    \t$closest_vowel = \"\";\n\tfor ($i = 0; $i < $word_length; $i++) {\n\t\tif (in_array($word[$i],\
    \ $vowels)) {\n\t\t\t$vowel_position = $i;\n\t\t\tif ($vowel_position > 0 && $vowel_position\
    \ < $word_length - 1) {\n\t\t\t\tif (!in_array($word[$vowel_position - 1], $vowels)\
    \ && !in_array($word[$vowel_position + 1], $vowels)) {\n\t\t\t\t\t$vowel_distance\
    \ = $word_length - $vowel_position;\n\t\t\t\t\tif ($closest_vowel == \"\") {\n\
    \t\t\t\t\t\t$closest_vowel = $word[$vowel_position];\n\t\t\t\t\t} else {\n\t\t\
    \t\t\t\tif ($vowel_distance < $word_length - strpos($word, $closest_vowel)) {\n\
    \t\t\t\t\t\t\t$closest_vowel = $word[$vowel_position];\n\t\t\t\t\t\t}\n\t\t\t\t\
    \t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $closest_vowel;\n}\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: 'u

    u



    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    for ($i = $word_length - 1; $i > 0; $i--)\
    \ {\n        if (in_array($word[$i], $vowels) && !in_array($word[$i - 1], $vowels))\
    \ {\n            return $word[$i];\n        }\n    }\n    return '';\n}\n\necho\
    \ get_closest_vowel(\"yogurt\");\necho get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"\
    quick\");\necho get_closest_vowel(\"ab\");\nfunction candidate(...$args) {\n \
    \   return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "uuu\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpyo8mql7z.php:41\n\
    Stack trace:\n#0 /tmp/tmpyo8mql7z.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpyo8mql7z.php\
    \ on line 41\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = str_split($word);\n\
    \    $word = array_reverse($word);\n    $consonants = array();\n    $vowels_in_word\
    \ = array();\n    $vowels_in_word_index = array();\n    $consonants_index = array();\n\
    \    $closest_vowel = \"\";\n    $closest_vowel_index = 0;\n    $closest_vowel_distance\
    \ = 0;\n    $closest_vowel_distance_temp = 0;\n    $closest_vowel_index_temp =\
    \ 0;\n    $closest_vowel_temp = \"\";\n    $closest_vowel_index_temp = 0;\n  \
    \  $closest_vowel_distance_temp = 0;\n    $closest_vowel_temp = \"\";\n    $closest_vowel_index_temp\
    \ = 0;\n    $closest_vowel_distance_temp = 0;\n    $closest_vowel_temp = \"\"\
    ;\n    $closest_vowel_index_temp = 0;\n    $closest_vowel_distance_temp = 0;\n\
    \    $closest_vowel_temp = \"\";\n    $closest_vowel_index_temp = 0;\n    $closest_vowel_distance_temp\
    \ = 0;\n    $closest_vowel_temp = \"\";\n    $closest_vowel_index_temp = 0;\n\
    \    $closest_vowel_distance_temp = 0;\n    $closest_vowel_temp = \"\";\n    $closest_vowel_index_temp\
    \ = 0;\n    $closest_vowel_distance_temp = 0;\n    $closest_vowel_temp = \"\"\
    ;\n    $closest_vowel_index_temp = 0;\n    $closest_vowel_distance_temp = 0\n\
    function candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpvzqfabqa.php
    on line 50

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $consonants\
    \ = array(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\"\
    , \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    );\n    $word = strtolower($word);\n    $word = str_split($word);\n    $vowel_index\
    \ = 0;\n    $consonant_index = 0;\n    $vowel_index_array = array();\n    $consonant_index_array\
    \ = array();\n    for ($i = 0; $i < count($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            array_push($vowel_index_array,\
    \ $vowel_index);\n        }\n        if (in_array($word[$i], $consonants)) {\n\
    \            $consonant_index = $i;\n            array_push($consonant_index_array,\
    \ $consonant_index);\n        }\n    }\n    $vowel_index_array = array_reverse($vowel_index_array);\n\
    \    $consonant_index_array = array_reverse($consonant_index_array);\n    $closest_vowel\
    \ = \"\";\n    $closest_vowel_index = 0;\n    for ($i = 0; $i < count($vowel_index_array);\
    \ $i++) {\n        for ($j = 0; $j < count($consonant_index_array); $j++) {\n\
    \            if ($vowel_index_array[$i] < $consonant_index_array[$j]) {\n    \
    \            $closest_vowel_index = $vowel_index_array[$i];\n                $closest_vowel\
    \ = $word[$closest_vowel_index];\n                break 2;\n            }\n  \
    \      }\n\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 39 in /tmp/tmp1ltwyqvo.php on line 68

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$consonants = ['b', 'c', 'd', 'f',\
    \ 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y',\
    \ 'z'];\n\t$word = strtolower($word);\n\t$word_array = str_split($word);\n\t$vowel_index\
    \ = [];\n\t$consonant_index = [];\n\tforeach ($word_array as $key => $value) {\n\
    \t\tif (in_array($value, $vowels)) {\n\t\t\t$vowel_index[] = $key;\n\t\t}\n\t\t\
    if (in_array($value, $consonants)) {\n\t\t\t$consonant_index[] = $key;\n\t\t}\n\
    \t}\n\t$vowel_index = array_reverse($vowel_index);\n\t$consonant_index = array_reverse($consonant_index);\n\
    \t$result = [];\n\tforeach ($vowel_index as $key => $value) {\n\t\tforeach ($consonant_index\
    \ as $key2 => $value2) {\n\t\t\tif ($value2 < $value) {\n\t\t\t\t$result[] = $value;\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tif (empty($result)) {\n\t\treturn '';\n\
    \t}\n\t$result = array_reverse($result);\n\t$result = $result[0];\n\treturn $word_array[$result];\n\
    }\necho get_closest_vowel(\"yogurt\");\necho get_closest_vowel(\"FULL\");\necho\
    \ get_closest_vowel(\"quick\");\necho get_closest_vowel(\"ab\");\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "ouu\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpl3z__d03.php:58\n\
    Stack trace:\n#0 /tmp/tmpl3z__d03.php(73): test()\n#1 {main}\n  thrown in /tmp/tmpl3z__d03.php\
    \ on line 58\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$word = strtolower($word);\n\
    \t$word_length = strlen($word);\n\t$i = $word_length - 1;\n\t$vowel_position =\
    \ array();\n\twhile ($i >= 0) {\n\t\tif (in_array($word[$i], $vowels)) {\n\t\t\
    \tarray_push($vowel_position, $i);\n\t\t}\n\t\t$i--;\n\t}\n\t$vowel_position_length\
    \ = count($vowel_position);\n\tif ($vowel_position_length == 0) {\n\t\treturn\
    \ '';\n\t}\n\t$i = $vowel_position_length - 1;\n\twhile ($i >= 0) {\n\t\tif ($vowel_position[$i]\
    \ == 0) {\n\t\t\t$i--;\n\t\t\tcontinue;\n\t\t}\n\t\tif ($vowel_position[$i] ==\
    \ $word_length - 1) {\n\t\t\t$i--;\n\t\t\tcontinue;\n\t\t}\n\t\tif (!in_array($word[$vowel_position[$i]\
    \ - 1], $vowels) && !in_array($word[$vowel_position[$i] + 1], $vowels)) {\n\t\t\
    \treturn $word[$vowel_position[$i]];\n\t\t}\n\t\t$i--;\n\t}\n\treturn '';\n}\n\
    \necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\"\
    ) . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "o\nu\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp25i11a38.php:59\n\
    Stack trace:\n#0 /tmp/tmp25i11a38.php(74): test()\n#1 {main}\n  thrown in /tmp/tmp25i11a38.php\
    \ on line 59\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$word = strtolower($word);\n\
    \t$word_length = strlen($word);\n\t$vowel_index = 0;\n\t$vowel_distance = 0;\n\
    \t$closest_vowel = '';\n\tfor ($i = $word_length - 1; $i > 0; $i--) {\n\t\tif\
    \ (in_array($word[$i], $vowels)) {\n\t\t\t$vowel_index = $i;\n\t\t\tbreak;\n\t\
    \t}\n\t}\n\tfor ($i = $vowel_index - 1; $i > 0; $i--) {\n\t\tif (!in_array($word[$i],\
    \ $vowels)) {\n\t\t\t$vowel_distance = $vowel_index - $i;\n\t\t\tbreak;\n\t\t\
    }\n\t}\n\tif ($vowel_distance > 0) {\n\t\t$closest_vowel = $word[$vowel_index];\n\
    \t}\n\treturn $closest_vowel;\n}\n\necho get_closest_vowel(\"yogurt\") . \"\\\
    n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\"\
    ) . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8dg82fnf.php:51\n\
    Stack trace:\n#0 /tmp/tmp8dg82fnf.php(65): test()\n#1 {main}\n  thrown in /tmp/tmp8dg82fnf.php\
    \ on line 51\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$word = strtolower($word);\n\
    \t$word = str_split($word);\n\t$vowel_pos = array();\n\t$consonant_pos = array();\n\
    \tfor ($i = 0; $i < count($word); $i++) {\n\t\tif (in_array($word[$i], $vowels))\
    \ {\n\t\t\t$vowel_pos[] = $i;\n\t\t} else {\n\t\t\t$consonant_pos[] = $i;\n\t\t\
    }\n\t}\n\t$closest_vowel = \"\";\n\tfor ($i = 0; $i < count($vowel_pos); $i++)\
    \ {\n\t\tfor ($j = 0; $j < count($consonant_pos); $j++) {\n\t\t\tif ($vowel_pos[$i]\
    \ > $consonant_pos[$j]) {\n\t\t\t\tif ($closest_vowel == \"\") {\n\t\t\t\t\t$closest_vowel\
    \ = $word[$vowel_pos[$i]];\n\t\t\t\t} else {\n\t\t\t\t\tif ($vowel_pos[$i] < array_search($closest_vowel,\
    \ $word)) {\n\t\t\t\t\t\t$closest_vowel = $word[$vowel_pos[$i]];\n\t\t\t\t\t}\n\
    \t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $closest_vowel;\n}\n\necho get_closest_vowel(\"\
    yogurt\");\necho \"<br>\";\necho get_closest_vowel(\"FULL\");\necho \"<br>\";\n\
    echo get_closest_vowel(\"quick\");\necho \"<br>\";\necho get_closest_vowel(\"\
    ab\");\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "o<br>u<br>u<br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7wdro0s2.php:58\n\
    Stack trace:\n#0 /tmp/tmp7wdro0s2.php(73): test()\n#1 {main}\n  thrown in /tmp/tmp7wdro0s2.php\
    \ on line 58\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $word = str_split($word);\n\
    \    $vowel_index = 0;\n    $vowel_distance = 0;\n    $vowel_found = false;\n\
    \    for ($i = count($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            $vowel_found = true;\n\
    \            break;\n        }\n    }\n    if ($vowel_found) {\n        for ($i\
    \ = $vowel_index + 1; $i < count($word); $i++) {\n            if (!in_array($word[$i],\
    \ $vowels)) {\n                $vowel_distance = $i - $vowel_index;\n        \
    \        break;\n            }\n        }\n        if ($vowel_distance == 0) {\n\
    \            return \"\";\n        }\n        return $word[$vowel_index];\n  \
    \  }\n    return \"\";\n}\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho\
    \ get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") .\
    \ \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\n\ni\na\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzkvkpi9b.php:55\n\
    Stack trace:\n#0 /tmp/tmpzkvkpi9b.php(68): test()\n#1 {main}\n  thrown in /tmp/tmpzkvkpi9b.php\
    \ on line 55\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n\
    \    $word_arr = str_split($word);\n    $vowel_arr = array();\n    $consonant_arr\
    \ = array();\n    $vowel_pos = array();\n    $consonant_pos = array();\n    $vowel_pos_arr\
    \ = array();\n    $consonant_pos_arr = array();\n    $vowel_pos_arr_rev = array();\n\
    \    $consonant_pos_arr_rev = array();\n    $vowel_pos_arr_rev_final = array();\n\
    \    $consonant_pos_arr_rev_final = array();\n    $final_pos = array();\n    $final_pos_rev\
    \ = array();\n    $final_pos_rev_final = array();\n    $final_pos_rev_final_final\
    \ = array();\n    $final_pos_rev_final_final_final = array();\n    $final_pos_rev_final_final_final_final\
    \ = array();\n    $final_pos_rev_final_final_final_final_final = array();\n  \
    \  $final_pos_rev_final_final_final_final_final_final = array();\n    $final_pos_rev_final_final_final_final_final_final_final\
    \ = array();\n    $final_pos_rev_final_final_final_final_final_final_final_final\
    \ = array();\n    $final_pos_rev_final_final_final_final_final_final_final_final_final\
    \ = array();\n    $final_pos_rev_final_final_final_final_final_final_final_final_final_final\
    \ = array();\n    $final_pos_rev_final_final_final_final_final_final_final_final_final_final_final\
    \ = array();\n    $final_pos_rev_final_final_final_final_final_final_final_final_final_final_final_final\
    \ = array();\n    $final_pos_rev_final_final_final_final_final_final_final\nfunction\
    \ candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpqjwgjkw2.php
    on line 45

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $word = str_split($word);\n\
    \    $word = array_reverse($word);\n    $vowel_index = 0;\n    $vowel_found =\
    \ false;\n    for ($i = 0; $i < count($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            $vowel_found = true;\n\
    \            break;\n        }\n    }\n    if ($vowel_found) {\n        $vowel_found\
    \ = false;\n        for ($i = $vowel_index + 1; $i < count($word); $i++) {\n \
    \           if (!in_array($word[$i], $vowels)) {\n                $vowel_found\
    \ = true;\n                break;\n            }\n        }\n    }\n    if ($vowel_found)\
    \ {\n        return $word[$vowel_index];\n    } else {\n        return \"\";\n\
    \    }\n}\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\n\ni\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpfq4m3vmt.php:58\n\
    Stack trace:\n#0 /tmp/tmpfq4m3vmt.php(69): test()\n#1 {main}\n  thrown in /tmp/tmpfq4m3vmt.php\
    \ on line 58\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $word = strtolower($word);\n\
    \    $len = strlen($word);\n    for ($i = $len - 1; $i > 0; $i--) {\n        if\
    \ (in_array($word[$i], $vowels) && !in_array($word[$i - 1], $vowels)) {\n    \
    \        return $word[$i];\n        }\n    }\n    return '';\n}\n\necho get_closest_vowel(\"\
    yogurt\") . PHP_EOL;\necho get_closest_vowel(\"FULL\") . PHP_EOL;\necho get_closest_vowel(\"\
    quick\") . PHP_EOL;\necho get_closest_vowel(\"ab\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nu\nu\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpxc2dkc6p.php:41\n\
    Stack trace:\n#0 /tmp/tmpxc2dkc6p.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpxc2dkc6p.php\
    \ on line 41\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\",\"e\",\"i\",\"o\",\"u\",\"A\",\"E\",\"I\",\"O\",\"\
    U\");\n\t$word = str_split($word);\n\t$vowel_index = 0;\n\t$vowel_distance = 0;\n\
    \t$vowel_distance_temp = 0;\n\t$vowel_index_temp = 0;\n\t$vowel_found = false;\n\
    \tfor ($i=count($word)-1; $i >= 0; $i--) { \n\t\tif (in_array($word[$i], $vowels))\
    \ {\n\t\t\t$vowel_index_temp = $i;\n\t\t\t$vowel_distance_temp = count($word)-$i;\n\
    \t\t\t$vowel_found = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif ($vowel_found) {\n\t\
    \tfor ($i=count($word)-1; $i >= 0; $i--) { \n\t\t\tif (in_array($word[$i], $vowels))\
    \ {\n\t\t\t\tif ($vowel_distance_temp > count($word)-$i) {\n\t\t\t\t\t$vowel_distance_temp\
    \ = count($word)-$i;\n\t\t\t\t\t$vowel_index_temp = $i;\n\t\t\t\t}\n\t\t\t}\n\t\
    \t}\n\t\treturn $word[$vowel_index_temp];\n\t}\n\telse {\n\t\treturn \"\";\n\t\
    }\n}\necho get_closest_vowel(\"yogurt\").\"\\n\";\necho get_closest_vowel(\"FULL\"\
    ).\"\\n\";\necho get_closest_vowel(\"quick\").\"\\n\";\necho get_closest_vowel(\"\
    ab\").\"\\n\";\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nU\ni\na\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpy3u1pg9a.php:58\n\
    Stack trace:\n#0 /tmp/tmpy3u1pg9a.php(71): test()\n#1 {main}\n  thrown in /tmp/tmpy3u1pg9a.php\
    \ on line 58\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$word = strtolower($word);\n\
    \t$word_len = strlen($word);\n\t$vowel_pos = array();\n\tfor ($i = 0; $i < $word_len;\
    \ $i++) {\n\t\tif (in_array($word[$i], $vowels)) {\n\t\t\t$vowel_pos[] = $i;\n\
    \t\t}\n\t}\n\t$vowel_pos_len = count($vowel_pos);\n\tif ($vowel_pos_len == 0)\
    \ {\n\t\treturn \"\";\n\t}\n\t$last_vowel_pos = $vowel_pos[$vowel_pos_len - 1];\n\
    \t$last_vowel = $word[$last_vowel_pos];\n\t$last_vowel_pos_index = $vowel_pos_len\
    \ - 1;\n\tfor ($i = $vowel_pos_len - 1; $i >= 0; $i--) {\n\t\tif ($vowel_pos[$i]\
    \ == $last_vowel_pos) {\n\t\t\tcontinue;\n\t\t}\n\t\tif ($vowel_pos[$i] == $last_vowel_pos\
    \ - 1) {\n\t\t\t$last_vowel_pos_index = $i;\n\t\t\tbreak;\n\t\t}\n\t\tif ($vowel_pos[$i]\
    \ < $last_vowel_pos - 1) {\n\t\t\t$last_vowel_pos_index = $i;\n\t\t\tbreak;\n\t\
    \t}\n\t}\n\tif ($last_vowel_pos_index == $vowel_pos_len - 1) {\n\t\treturn \"\"\
    ;\n\t}\n\treturn $word[$vowel_pos[$last_vowel_pos_index]];\n}\n\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "yogurt", expecting "," or ";"
    in /tmp/tmptgzwcbs8.php on line 59

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $vowel_index = 0;\n    for ($i = $word_length\
    \ - 1; $i > 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n        \
    \    $vowel_index = $i;\n            break;\n        }\n    }\n    if ($vowel_index\
    \ == 0) {\n        return \"\";\n    }\n    for ($i = $vowel_index - 1; $i >=\
    \ 0; $i--) {\n        if (!in_array($word[$i], $vowels)) {\n            return\
    \ $word[$vowel_index];\n        }\n    }\n    return \"\";\n}\n\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nu\ni\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpceuhsofy.php:51\n\
    Stack trace:\n#0 /tmp/tmpceuhsofy.php(62): test()\n#1 {main}\n  thrown in /tmp/tmpceuhsofy.php\
    \ on line 51\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $word = strtolower($word);\n\
    \    $vowel_index = 0;\n    $consonant_index = 0;\n    $vowel_count = 0;\n   \
    \ $consonant_count = 0;\n    $vowel_indexes = [];\n    $consonant_indexes = [];\n\
    \    for ($i = 0; $i < strlen($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_indexes[] = $i;\n            $vowel_count++;\n\
    \        } else {\n            $consonant_indexes[] = $i;\n            $consonant_count++;\n\
    \        }\n    }\n    if ($vowel_count <= 1 || $consonant_count <= 1) {\n   \
    \     return \"\";\n    }\n    for ($i = 0; $i < count($vowel_indexes); $i++)\
    \ {\n        for ($j = 0; $j < count($consonant_indexes); $j++) {\n          \
    \  if ($vowel_indexes[$i] > $consonant_indexes[$j]) {\n                if ($vowel_indexes[$i]\
    \ < $consonant_indexes[$j + 1]) {\n                    $vowel_index = $vowel_indexes[$i];\n\
    \                    $consonant_index = $consonant_indexes[$j + 1];\n        \
    \            break;\n                }\n            }\n        }\n    }\n    if\
    \ ($vowel_index == 0 || $consonant_index == 0) {\n        return \"\";\n    }\n\
    \    return $word[$vowel_index];\n}\necho get_closest_vowel(\"yogurt\") . \"\\\
    n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\"\
    ) . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\n\ni\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmptqie1dqr.php:63\n\
    Stack trace:\n#0 /tmp/tmptqie1dqr.php(77): test()\n#1 {main}\n  thrown in /tmp/tmptqie1dqr.php\
    \ on line 63\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$word = strtolower($word);\n\
    \t$word_array = str_split($word);\n\t$vowel_index = 0;\n\t$vowel_distance = 0;\n\
    \t$closest_vowel = \"\";\n\t$closest_vowel_index = 0;\n\t$closest_vowel_distance\
    \ = 0;\n\t$closest_vowel_found = false;\n\t$vowel_found = false;\n\t$consonant_found\
    \ = false;\n\t$consonant_index = 0;\n\t$consonant_distance = 0;\n\t$consonant_count\
    \ = 0;\n\t$vowel_count = 0;\n\t$closest_vowel_count = 0;\n\t$closest_vowel_distance_count\
    \ = 0;\n\t$closest_vowel_index_count = 0;\n\t$vowel_distance_count = 0;\n\t$vowel_index_count\
    \ = 0;\n\t$consonant_distance_count = 0;\n\t$consonant_index_count = 0;\n\t$closest_vowel_distance_count\
    \ = 0;\n\t$closest_vowel_index_count = 0;\n\t$closest_vowel_count = 0;\n\t$vowel_distance_count\
    \ = 0;\n\t$vowel_index_count = 0;\n\t$consonant_distance_count = 0;\n\t$consonant_index_count\
    \ = 0;\n\t$closest_vowel_distance_count = 0;\n\t$closest_vowel_index_count = 0;\n\
    \t$closest_vowel_count = 0;\n\t$vowel_distance_count = 0;\n\t$vowel_index_count\
    \ = 0;\n\t$consonant_distance_count = 0;\n\t$consonant_index_count = 0;\n\t$closest_vowel_distance_count\
    \ =\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmpudoiwvnl.php on line 54

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$word = strtolower($word);\n\
    \t$word_length = strlen($word);\n\t$closest_vowel = '';\n\t$closest_vowel_index\
    \ = 0;\n\tfor ($i = $word_length - 1; $i > 0; $i--) {\n\t\tif (in_array($word[$i],\
    \ $vowels)) {\n\t\t\tif (!in_array($word[$i - 1], $vowels)) {\n\t\t\t\t$closest_vowel\
    \ = $word[$i];\n\t\t\t\t$closest_vowel_index = $i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\
    \t}\n\t}\n\treturn $closest_vowel;\n}\n\necho get_closest_vowel(\"yogurt\");\n\
    echo get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"quick\");\necho get_closest_vowel(\"\
    ab\");\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "uuu\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpsucg4cd0.php:47\n\
    Stack trace:\n#0 /tmp/tmpsucg4cd0.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpsucg4cd0.php\
    \ on line 47\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n\t$word = str_split($word);\n\
    \t$word = array_reverse($word);\n\t$vowel_index = 0;\n\t$consonant_index = 0;\n\
    \tforeach ($word as $key => $value) {\n\t\tif (in_array($value, $vowels)) {\n\t\
    \t\t$vowel_index = $key;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach ($word as $key =>\
    \ $value) {\n\t\tif (!in_array($value, $vowels) && $key > $vowel_index) {\n\t\t\
    \t$consonant_index = $key;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif ($vowel_index == 0\
    \ || $consonant_index == 0) {\n\t\treturn \"\";\n\t}\n\treturn $word[$vowel_index];\n\
    }\necho get_closest_vowel(\"yogurt\");\necho get_closest_vowel(\"FULL\");\necho\
    \ get_closest_vowel(\"quick\");\necho get_closest_vowel(\"ab\");\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "ui\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpnxnappv_.php:57\n\
    Stack trace:\n#0 /tmp/tmpnxnappv_.php(63): test()\n#1 {main}\n  thrown in /tmp/tmpnxnappv_.php\
    \ on line 57\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$word = strtolower($word);\n\
    \t$word_length = strlen($word);\n\t$vowel_position = array();\n\tfor ($i = 0;\
    \ $i < $word_length; $i++) {\n\t\tif (in_array($word[$i], $vowels)) {\n\t\t\t\
    $vowel_position[] = $i;\n\t\t}\n\t}\n\t$vowel_position_length = count($vowel_position);\n\
    \tif ($vowel_position_length == 0) {\n\t\treturn '';\n\t}\n\t$closest_vowel =\
    \ '';\n\t$closest_vowel_position = 0;\n\tfor ($i = 0; $i < $vowel_position_length;\
    \ $i++) {\n\t\tif ($vowel_position[$i] > $closest_vowel_position) {\n\t\t\t$closest_vowel_position\
    \ = $vowel_position[$i];\n\t\t\t$closest_vowel = $word[$vowel_position[$i]];\n\
    \t\t}\n\t}\n\treturn $closest_vowel;\n}\n\necho get_closest_vowel(\"yogurt\")\
    \ . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nu\ni\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpejf77eka.php:52\n\
    Stack trace:\n#0 /tmp/tmpejf77eka.php(65): test()\n#1 {main}\n  thrown in /tmp/tmpejf77eka.php\
    \ on line 52\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $closest_vowel = '';\n    $closest_vowel_index\
    \ = $word_length;\n    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            if ($i > 0 && $i < $word_length - 1) {\n          \
    \      if (!in_array($word[$i - 1], $vowels) && !in_array($word[$i + 1], $vowels))\
    \ {\n                    if ($i < $closest_vowel_index) {\n                  \
    \      $closest_vowel_index = $i;\n                        $closest_vowel = $word[$i];\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return $closest_vowel;\n}\n\necho get_closest_vowel(\"yogurt\");\necho get_closest_vowel(\"\
    FULL\");\necho get_closest_vowel(\"quick\");\necho get_closest_vowel(\"ab\");\n\
    function candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "ou\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3xse5izj.php:46\n\
    Stack trace:\n#0 /tmp/tmp3xse5izj.php(61): test()\n#1 {main}\n  thrown in /tmp/tmp3xse5izj.php\
    \ on line 46\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$word = strtolower($word);\n\t\
    $word_length = strlen($word);\n\t$vowel_index = 0;\n\t$vowel_distance = 0;\n\t\
    for ($i = 0; $i < $word_length; $i++) {\n\t\tif (in_array($word[$i], $vowels))\
    \ {\n\t\t\tif ($i == 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif ($i == $word_length\
    \ - 1) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (in_array($word[$i - 1], $vowels))\
    \ {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (in_array($word[$i + 1], $vowels)) {\n\
    \t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif ($vowel_distance == 0) {\n\t\t\t\t$vowel_distance\
    \ = $i;\n\t\t\t\t$vowel_index = $i;\n\t\t\t} else {\n\t\t\t\tif ($i < $vowel_distance)\
    \ {\n\t\t\t\t\t$vowel_distance = $i;\n\t\t\t\t\t$vowel_index = $i;\n\t\t\t\t}\n\
    \t\t\t}\n\t\t}\n\t}\n\tif ($vowel_distance == 0) {\n\t\treturn '';\n\t}\n\treturn\
    \ $word[$vowel_index];\n}\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho\
    \ get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") .\
    \ \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "o\nu\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp49o0jayg.php:62\n\
    Stack trace:\n#0 /tmp/tmp49o0jayg.php(77): test()\n#1 {main}\n  thrown in /tmp/tmp49o0jayg.php\
    \ on line 62\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\",\"e\",\"i\",\"o\",\"u\",\"A\",\"E\",\"I\",\"O\",\"\
    U\");\n\t$word = str_split($word);\n\t$vowel = \"\";\n\t$count = 0;\n\t$count2\
    \ = 0;\n\t$count3 = 0;\n\t$count4 = 0;\n\t$count5 = 0;\n\t$count6 = 0;\n\t$count7\
    \ = 0;\n\t$count8 = 0;\n\t$count9 = 0;\n\t$count10 = 0;\n\t$count11 = 0;\n\t$count12\
    \ = 0;\n\t$count13 = 0;\n\t$count14 = 0;\n\t$count15 = 0;\n\t$count16 = 0;\n\t\
    $count17 = 0;\n\t$count18 = 0;\n\t$count19 = 0;\n\t$count20 = 0;\n\t$count21 =\
    \ 0;\n\t$count22 = 0;\n\t$count23 = 0;\n\t$count24 = 0;\n\t$count25 = 0;\n\t$count26\
    \ = 0;\n\t$count27 = 0;\n\t$count28 = 0;\n\t$count29 = 0;\n\t$count30 = 0;\n\t\
    $count31 = 0;\n\t$count32 = 0;\n\t$count33 = 0;\n\t$count34 = 0;\n\t$count35 =\
    \ 0;\n\t$count36 = 0;\n\t$count37 = 0;\n\t$count38 = 0;\n\t$count39 = 0;\n\t$count40\
    \ = 0;\n\t$count41 = 0;\n\t$count42 = 0;\n\t$count43 = 0;\n\t$count44 = 0;\n\t\
    $count45 = 0;\n\t$count46 = 0;\n\t$count47 = 0;\n\t$count48 = 0;\n\t$count49 =\
    \ 0;\n\t$count50 = 0;\n\t$count51 = 0;\n\t$count52 = 0;\n\t$count53 = 0;\n\t$count54\
    \ = 0;\n\t$count55 = 0;\n\t$count56 = 0;\n\t$count57 = 0;\n\t$count58 = 0;\nfunction\
    \ candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unclosed ''{'' on line 16 in /tmp/tmpz4j7ked2.php on line 98

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$word = strtolower($word);\n\t\
    $word = str_split($word);\n\t$word = array_reverse($word);\n\t$vowel_position\
    \ = 0;\n\t$vowel_found = false;\n\tforeach ($word as $key => $value) {\n\t\tif\
    \ (in_array($value, $vowels)) {\n\t\t\t$vowel_position = $key;\n\t\t\t$vowel_found\
    \ = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif ($vowel_found) {\n\t\tif ($vowel_position\
    \ == 0) {\n\t\t\treturn '';\n\t\t} else {\n\t\t\t$vowel_position = $vowel_position\
    \ - 1;\n\t\t\tif (in_array($word[$vowel_position], $vowels)) {\n\t\t\t\treturn\
    \ '';\n\t\t\t} else {\n\t\t\t\t$vowel_position = $vowel_position + 1;\n\t\t\t\t\
    return $word[$vowel_position];\n\t\t\t}\n\t\t}\n\t} else {\n\t\treturn '';\n\t\
    }\n}\necho get_closest_vowel(\"yogurt\");\necho \"\\n\";\necho get_closest_vowel(\"\
    FULL\");\necho \"\\n\";\necho get_closest_vowel(\"quick\");\necho \"\\n\";\necho\
    \ get_closest_vowel(\"ab\");\necho \"\\n\";\nfunction candidate(...$args) {\n\
    \    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nu\ni\na\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp5hn2bv1t.php:61\n\
    Stack trace:\n#0 /tmp/tmp5hn2bv1t.php(74): test()\n#1 {main}\n  thrown in /tmp/tmp5hn2bv1t.php\
    \ on line 61\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$word = strtolower($word);\n\
    \t$word_length = strlen($word);\n\t$vowel_index = 0;\n\t$vowel_distance = 0;\n\
    \tfor ($i = 0; $i < $word_length; $i++) {\n\t\tif (in_array($word[$i], $vowels))\
    \ {\n\t\t\tif ($i > 0 && $i < $word_length - 1) {\n\t\t\t\tif (!in_array($word[$i\
    \ - 1], $vowels) && !in_array($word[$i + 1], $vowels)) {\n\t\t\t\t\tif ($vowel_distance\
    \ == 0) {\n\t\t\t\t\t\t$vowel_distance = $i;\n\t\t\t\t\t\t$vowel_index = $i;\n\
    \t\t\t\t\t} else if ($i < $vowel_distance) {\n\t\t\t\t\t\t$vowel_distance = $i;\n\
    \t\t\t\t\t\t$vowel_index = $i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\
    if ($vowel_index > 0) {\n\t\treturn $word[$vowel_index];\n\t} else {\n\t\treturn\
    \ \"\";\n\t}\n}\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "o\nu\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbwszmz4k.php:53\n\
    Stack trace:\n#0 /tmp/tmpbwszmz4k.php(68): test()\n#1 {main}\n  thrown in /tmp/tmpbwszmz4k.php\
    \ on line 53\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $closest_vowel = '';\n    $closest_vowel_index\
    \ = $word_length;\n    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            if ($i > 0 && $i < $word_length - 1) {\n          \
    \      if (!in_array($word[$i - 1], $vowels) && !in_array($word[$i + 1], $vowels))\
    \ {\n                    if ($i < $closest_vowel_index) {\n                  \
    \      $closest_vowel_index = $i;\n                        $closest_vowel = $word[$i];\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return $closest_vowel;\n}\n\necho get_closest_vowel(\"yogurt\") . PHP_EOL;\n\
    echo get_closest_vowel(\"FULL\") . PHP_EOL;\necho get_closest_vowel(\"quick\"\
    ) . PHP_EOL;\necho get_closest_vowel(\"ab\") . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "o\nu\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpf3ttq3cb.php:46\n\
    Stack trace:\n#0 /tmp/tmpf3ttq3cb.php(61): test()\n#1 {main}\n  thrown in /tmp/tmpf3ttq3cb.php\
    \ on line 46\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split($word);\n\
    \    $vowel_index = 0;\n    $vowel_distance = 0;\n    $vowel_distance_temp = 0;\n\
    \    $vowel_index_temp = 0;\n    $vowel_found = false;\n    for ($i = count($word)\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $vowel_index_temp = $i;\n            $vowel_distance_temp = count($word)\
    \ - $i;\n            if ($vowel_found) {\n                if ($vowel_distance_temp\
    \ > $vowel_distance) {\n                    $vowel_index = $vowel_index_temp;\n\
    \                    $vowel_distance = $vowel_distance_temp;\n               \
    \ }\n            } else {\n                $vowel_index = $vowel_index_temp;\n\
    \                $vowel_distance = $vowel_distance_temp;\n                $vowel_found\
    \ = true;\n            }\n        }\n    }\n    if ($vowel_found) {\n        return\
    \ $word[$vowel_index];\n    } else {\n        return '';\n    }\n}\n\n/*\n * Test\
    \ code\n */\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "o\n\nu\na\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpbhona_c6.php:59\n\
    Stack trace:\n#0 /tmp/tmpbhona_c6.php(74): test()\n#1 {main}\n  thrown in /tmp/tmpbhona_c6.php\
    \ on line 59\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $closest_vowel = \"\";\n    $closest_vowel_distance\
    \ = 0;\n    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_distance = $word_length - $i;\n            if\
    \ ($vowel_distance > $closest_vowel_distance) {\n                $closest_vowel_distance\
    \ = $vowel_distance;\n                $closest_vowel = $word[$i];\n          \
    \  }\n        }\n    }\n    return $closest_vowel;\n}\necho get_closest_vowel(\"\
    yogurt\");\necho get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"quick\"\
    );\necho get_closest_vowel(\"ab\");\nfunction candidate(...$args) {\n    return\
    \ get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    full\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    easy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eAsy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ali\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bad\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "ouua\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6bz_xgl_.php:42\n\
    Stack trace:\n#0 /tmp/tmp6bz_xgl_.php(57): test()\n#1 {main}\n  thrown in /tmp/tmp6bz_xgl_.php\
    \ on line 42\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n\t$word = strtolower($word);\n\
    \t$word = str_split($word);\n\t$word = array_reverse($word);\n\t$vowel_index =\
    \ 0;\n\t$vowel_index_array = [];\n\t$vowel_index_array_index = 0;\n\tforeach ($word\
    \ as $key => $value) {\n\t\tif (in_array($value, $vowels)) {\n\t\t\t$vowel_index\
    \ = $key;\n\t\t\t$vowel_index_array[$vowel_index_array_index] = $vowel_index;\n\
    \t\t\t$vowel_index_array_index++;\n\t\t}\n\t}\n\t$vowel_index_array = array_reverse($vowel_index_array);\n\
    \t$vowel_index_array_index = 0;\n\t$vowel_index_array_length = count($vowel_index_array);\n\
    \t$vowel_index_array_length--;\n\t$vowel_index_array_length_minus_one = $vowel_index_array_length\
    \ - 1;\n\t$vowel_index_array_length_minus_two = $vowel_index_array_length - 2;\n\
    \t$vowel_index_array_length_minus_three = $vowel_index_array_length - 3;\n\t$vowel_index_array_length_minus_four\
    \ = $vowel_index_array_length - 4;\n\t$vowel_index_array_length_minus_five = $vowel_index_array_length\
    \ - 5;\n\t$vowel_index_array_length_minus_six = $vowel_index_array_length - 6;\n\
    \t$vowel_index_array_length_minus_seven = $vowel_index_array_length - 7;\n\t$vowel_index_array_length_minus_eight\
    \ = $vowel_index_array_length - 8;\n\t$\nfunction candidate(...$args) {\n    return\
    \ get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    full\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    easy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eAsy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ali\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bad\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function", expecting variable or
    "{" or "$" in /tmp/tmp2n0sn4xt.php on line 44

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$word = str_split($word);\n\
    \t$vowel_index = 0;\n\t$consonant_index = 0;\n\t$vowel_index_array = array();\n\
    \t$consonant_index_array = array();\n\t$vowel_index_array_length = 0;\n\t$consonant_index_array_length\
    \ = 0;\n\t$closest_vowel = \"\";\n\t$closest_vowel_index = 0;\n\t$closest_vowel_index_difference\
    \ = 0;\n\t$closest_vowel_index_difference_temp = 0;\n\t$closest_vowel_index_difference_temp_2\
    \ = 0;\n\t$closest_vowel_index_difference_temp_3 = 0;\n\t$closest_vowel_index_difference_temp_4\
    \ = 0;\n\t$closest_vowel_index_difference_temp_5 = 0;\n\t$closest_vowel_index_difference_temp_6\
    \ = 0;\n\t$closest_vowel_index_difference_temp_7 = 0;\n\t$closest_vowel_index_difference_temp_8\
    \ = 0;\n\t$closest_vowel_index_difference_temp_9 = 0;\n\t$closest_vowel_index_difference_temp_10\
    \ = 0;\n\t$closest_vowel_index_difference_temp_11 = 0;\n\t$closest_vowel_index_difference_temp_12\
    \ = 0;\n\t$closest_vowel_index_difference_temp_13 = 0;\n\t$closest_vowel_index_difference_temp_14\
    \ = 0;\n\t$closest_vowel_index_difference_temp_15 = 0;\n\t$closest_vowel_index_difference_temp_16\
    \ = 0;\n\t$cl\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmps5usgvpv.php
    on line 45

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n\t$word = strtolower($word);\n\
    \t$word_length = strlen($word);\n\t$vowel_index = 0;\n\t$vowel_distance = 0;\n\
    \t$vowel_distance_min = $word_length;\n\t$vowel_index_min = 0;\n\tfor ($i = 0;\
    \ $i < $word_length; $i++) {\n\t\tif (in_array($word[$i], $vowels)) {\n\t\t\t\
    $vowel_index = $i;\n\t\t\t$vowel_distance = $word_length - $vowel_index;\n\t\t\
    \tif ($vowel_distance < $vowel_distance_min) {\n\t\t\t\t$vowel_distance_min =\
    \ $vowel_distance;\n\t\t\t\t$vowel_index_min = $vowel_index;\n\t\t\t}\n\t\t}\n\
    \t}\n\tif ($vowel_index_min == 0) {\n\t\treturn \"\";\n\t}\n\telse {\n\t\treturn\
    \ $word[$vowel_index_min];\n\t}\n}\necho get_closest_vowel(\"yogurt\") . \"<br>\"\
    ;\necho get_closest_vowel(\"FULL\") . \"<br>\";\necho get_closest_vowel(\"quick\"\
    ) . \"<br>\";\necho get_closest_vowel(\"ab\") . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u<br>u<br>i<br><br>\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1cf4lkdq.php:52\n\
    Stack trace:\n#0 /tmp/tmp1cf4lkdq.php(65): test()\n#1 {main}\n  thrown in /tmp/tmp1cf4lkdq.php\
    \ on line 52\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word_array = str_split($word);\n\
    \    $word_length = count($word_array);\n    $vowel_index = 0;\n    $vowel_distance\
    \ = 0;\n    $vowel_distance_temp = 0;\n    $vowel_index_temp = 0;\n    for ($i\
    \ = $word_length - 1; $i > 0; $i--) {\n        if (in_array($word_array[$i], $vowels))\
    \ {\n            $vowel_index_temp = $i;\n            $vowel_distance_temp = $word_length\
    \ - $i;\n            if (in_array($word_array[$i - 1], $vowels)) {\n         \
    \       continue;\n            } else {\n                if ($vowel_distance_temp\
    \ > $vowel_distance) {\n                    $vowel_distance = $vowel_distance_temp;\n\
    \                    $vowel_index = $vowel_index_temp;\n                }\n  \
    \          }\n        }\n    }\n    if ($vowel_index == 0) {\n        return '';\n\
    \    } else {\n        return $word_array[$vowel_index];\n    }\n}\n\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "o\n\nu\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpqlbgmp_r.php:54\n\
    Stack trace:\n#0 /tmp/tmpqlbgmp_r.php(69): test()\n#1 {main}\n  thrown in /tmp/tmpqlbgmp_r.php\
    \ on line 54\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$word = strtolower($word);\n\
    \t$word_length = strlen($word);\n\t$vowel_index = 0;\n\t$vowel_distance = $word_length;\n\
    \tfor ($i = $word_length - 1; $i > 0; $i--) {\n\t\tif (in_array($word[$i], $vowels))\
    \ {\n\t\t\tif (!in_array($word[$i - 1], $vowels)) {\n\t\t\t\tif ($i < $vowel_distance)\
    \ {\n\t\t\t\t\t$vowel_distance = $i;\n\t\t\t\t\t$vowel_index = $i;\n\t\t\t\t}\n\
    \t\t\t}\n\t\t}\n\t}\n\tif ($vowel_index == 0) {\n\t\treturn \"\";\n\t}\n\treturn\
    \ $word[$vowel_index];\n}\necho get_closest_vowel(\"yogurt\");\necho get_closest_vowel(\"\
    FULL\");\necho get_closest_vowel(\"quick\");\necho get_closest_vowel(\"ab\");\n\
    function candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "ouu\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpjrgh1f3r.php:46\n\
    Stack trace:\n#0 /tmp/tmpjrgh1f3r.php(61): test()\n#1 {main}\n  thrown in /tmp/tmpjrgh1f3r.php\
    \ on line 46\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$word = strtolower($word);\n\
    \t$word_len = strlen($word);\n\t$last_vowel = \"\";\n\tfor ($i = $word_len - 1;\
    \ $i >= 0; $i--) {\n\t\tif (in_array($word[$i], $vowels)) {\n\t\t\t$last_vowel\
    \ = $word[$i];\n\t\t\tbreak;\n\t\t}\n\t}\n\tif ($last_vowel == \"\") {\n\t\treturn\
    \ \"\";\n\t}\n\t$last_consonant = \"\";\n\tfor ($i = $word_len - 1; $i >= 0; $i--)\
    \ {\n\t\tif (!in_array($word[$i], $vowels)) {\n\t\t\t$last_consonant = $word[$i];\n\
    \t\t\tbreak;\n\t\t}\n\t}\n\tif ($last_consonant == \"\") {\n\t\treturn \"\";\n\
    \t}\n\t$first_consonant = \"\";\n\tfor ($i = $word_len - 1; $i >= 0; $i--) {\n\
    \t\tif (!in_array($word[$i], $vowels) && $word[$i] != $last_consonant) {\n\t\t\
    \t$first_consonant = $word[$i];\n\t\t\tbreak;\n\t\t}\n\t}\n\tif ($first_consonant\
    \ == \"\") {\n\t\treturn \"\";\n\t}\n\t$first_vowel = \"\";\n\tfor ($i = $word_len\
    \ - 1; $i >= 0; $i--) {\n\t\tif (in_array($word[$i], $vowels) && $word[$i] !=\
    \ $last_vowel) {\n\t\t\t$first_vowel = $word[$i];\n\t\t\tbreak;\n\t\t}\n\t}\n\t\
    if ($first_vowel == \"\") {\n\t\treturn \"\";\n\t}\n\t$first_vowel_pos =\nfunction\
    \ candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "candidate", expecting "(" in
    /tmp/tmprk0ep6dh.php on line 61

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split($word);\n\
    \    $word = array_reverse($word);\n    $vowel_index = 0;\n    $vowel_found =\
    \ false;\n    for ($i = 0; $i < count($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            $vowel_found = true;\n\
    \            break;\n        }\n    }\n    if ($vowel_found) {\n        if ($vowel_index\
    \ == 0) {\n            return $word[$vowel_index];\n        } else {\n       \
    \     if (in_array($word[$vowel_index - 1], $vowels)) {\n                return\
    \ '';\n            } else {\n                return $word[$vowel_index];\n   \
    \         }\n        }\n    } else {\n        return '';\n    }\n}\n\n/*\n * Test\
    \ code\n */\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\n\ni\na\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp2gu7iezo.php:58\n\
    Stack trace:\n#0 /tmp/tmp2gu7iezo.php(71): test()\n#1 {main}\n  thrown in /tmp/tmp2gu7iezo.php\
    \ on line 58\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word_array\
    \ = str_split($word);\n    $word_length = count($word_array);\n    $closest_vowel\
    \ = \"\";\n    $closest_vowel_index = 0;\n    $closest_vowel_distance = 0;\n \
    \   for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word_array[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            $vowel_distance = $word_length\
    \ - $vowel_index;\n            if ($vowel_distance > $closest_vowel_distance)\
    \ {\n                $closest_vowel_distance = $vowel_distance;\n            \
    \    $closest_vowel_index = $vowel_index;\n                $closest_vowel = $word_array[$vowel_index];\n\
    \            }\n        }\n    }\n    if ($closest_vowel_index == 0) {\n     \
    \   return \"\";\n    } else {\n        return $closest_vowel;\n    }\n}\n\necho\
    \ get_closest_vowel(\"yogurt\");\necho get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"\
    quick\");\necho get_closest_vowel(\"ab\");\nfunction candidate(...$args) {\n \
    \   return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "ou\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp8x4v0410.php:50\n\
    Stack trace:\n#0 /tmp/tmp8x4v0410.php(65): test()\n#1 {main}\n  thrown in /tmp/tmp8x4v0410.php\
    \ on line 50\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$word_array = str_split($word);\n\
    \t$word_array_reverse = array_reverse($word_array);\n\t$vowel_index = 0;\n\t$vowel_index_array\
    \ = array();\n\t$vowel_index_array_reverse = array();\n\tfor ($i = 0; $i < count($word_array);\
    \ $i++) {\n\t\tif (in_array($word_array[$i], $vowels)) {\n\t\t\t$vowel_index_array[]\
    \ = $i;\n\t\t}\n\t}\n\tfor ($i = 0; $i < count($word_array_reverse); $i++) {\n\
    \t\tif (in_array($word_array_reverse[$i], $vowels)) {\n\t\t\t$vowel_index_array_reverse[]\
    \ = $i;\n\t\t}\n\t}\n\tfor ($i = 0; $i < count($vowel_index_array); $i++) {\n\t\
    \tif ($vowel_index_array[$i] > $vowel_index_array_reverse[$i]) {\n\t\t\t$vowel_index\
    \ = $vowel_index_array[$i];\n\t\t\tbreak;\n\t\t}\n\t}\n\tif ($vowel_index == 0)\
    \ {\n\t\treturn \"\";\n\t}\n\treturn $word_array[$vowel_index];\n}\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7fnydauf.php:53\n\
    Stack trace:\n#0 /tmp/tmp7fnydauf.php(68): test()\n#1 {main}\n  thrown in /tmp/tmp7fnydauf.php\
    \ on line 53\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $consonants\
    \ = array(\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\"\
    , \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    );\n    $word = strtolower($word);\n    $word_array = str_split($word);\n    $vowel_index\
    \ = 0;\n    $consonant_index = 0;\n    $vowel_array = array();\n    $consonant_array\
    \ = array();\n    $result = \"\";\n    for ($i = 0; $i < count($word_array); $i++)\
    \ {\n        if (in_array($word_array[$i], $vowels)) {\n            $vowel_array[$vowel_index]\
    \ = $i;\n            $vowel_index++;\n        }\n        if (in_array($word_array[$i],\
    \ $consonants)) {\n            $consonant_array[$consonant_index] = $i;\n    \
    \        $consonant_index++;\n        }\n    }\n    if (count($vowel_array) ==\
    \ 0 || count($consonant_array) == 0) {\n        return $result;\n    }\n    if\
    \ ($vowel_array[0] > $consonant_array[count($consonant_array) - 1]) {\n      \
    \  return $result;\n    }\n    for ($i = 0; $i < count($vowel_array); $i++) {\n\
    \        for ($j = 0; $j < count($consonant_array); $j++) {\n            if ($vowel_array[$i]\
    \ > $consonant_array[$j]) {\n                $result = $word_array[$vowel_array[$i]];\n\
    \                break;\n            }\n        }\n    }\n    return $result;\n\
    }\n\necho get_closest_vowel(\"yogurt\");\necho \"<br>\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "yogurt", expecting "," or ";"
    in /tmp/tmpp63u331z.php on line 60

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$consonants = array(\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\");\n\t$word\
    \ = strtolower($word);\n\t$word_array = str_split($word);\n\t$vowel_index = array();\n\
    \t$consonant_index = array();\n\t$result = \"\";\n\t$result_index = 0;\n\tforeach\
    \ ($word_array as $key => $value) {\n\t\tif (in_array($value, $vowels)) {\n\t\t\
    \t$vowel_index[] = $key;\n\t\t}\n\t\tif (in_array($value, $consonants)) {\n\t\t\
    \t$consonant_index[] = $key;\n\t\t}\n\t}\n\tif (count($vowel_index) == 0 || count($consonant_index)\
    \ == 0) {\n\t\treturn \"\";\n\t}\n\tforeach ($vowel_index as $key => $value) {\n\
    \t\tif ($value > $consonant_index[count($consonant_index) - 1]) {\n\t\t\treturn\
    \ \"\";\n\t\t}\n\t\tif ($value < $consonant_index[count($consonant_index) - 1])\
    \ {\n\t\t\t$result_index = $value;\n\t\t\tbreak;\n\t\t}\n\t}\n\tforeach ($vowel_index\
    \ as $key => $value) {\n\t\tif ($value > $consonant_index[count($consonant_index)\
    \ - 1]) {\n\t\t\tbreak;\n\t\t}\n\t\tif ($value > $result_index) {\n\t\t\t$result_index\
    \ = $value;\n\t\t}\n\t}\n\t$result = $word_array[$result_index];\n\treturn $result;\n\
    }\necho get_closest_vowel(\"y\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "yogurt", expecting ")" in /tmp/tmp0uhregoo.php
    on line 62

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n\t$word = strtolower($word);\n\
    \t$word = str_split($word);\n\t$word = array_reverse($word);\n\t$vowel_index =\
    \ 0;\n\t$vowel_distance = 0;\n\tfor ($i = 0; $i < count($word); $i++) {\n\t\t\
    if (in_array($word[$i], $vowels)) {\n\t\t\t$vowel_index = $i;\n\t\t\tbreak;\n\t\
    \t}\n\t}\n\tfor ($i = $vowel_index + 1; $i < count($word); $i++) {\n\t\tif (!in_array($word[$i],\
    \ $vowels)) {\n\t\t\t$vowel_distance = $i - $vowel_index;\n\t\t\tbreak;\n\t\t\
    }\n\t}\n\tif ($vowel_distance == 0) {\n\t\treturn \"\";\n\t}\n\treturn $word[$vowel_index];\n\
    }\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\"\
    ) . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nu\ni\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp6m2vxjgm.php:53\n\
    Stack trace:\n#0 /tmp/tmp6m2vxjgm.php(64): test()\n#1 {main}\n  thrown in /tmp/tmp6m2vxjgm.php\
    \ on line 53\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split($word);\n\
    \    $vowel_index = 0;\n    $vowel_distance = 0;\n    for ($i = count($word) -\
    \ 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n         \
    \   $vowel_index = $i;\n            break;\n        }\n    }\n    for ($i = $vowel_index\
    \ - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i], $vowels)) {\n      \
    \      $vowel_distance = $vowel_index - $i;\n            break;\n        }\n \
    \   }\n    if ($vowel_distance == 0) {\n        return '';\n    }\n    return\
    \ $word[$vowel_index];\n}\necho get_closest_vowel(\"yogurt\");\necho get_closest_vowel(\"\
    FULL\");\necho get_closest_vowel(\"quick\");\necho get_closest_vowel(\"ab\");\n\
    function candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "ui\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpp38nithp.php:51\n\
    Stack trace:\n#0 /tmp/tmpp38nithp.php(62): test()\n#1 {main}\n  thrown in /tmp/tmpp38nithp.php\
    \ on line 51\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$word = strtolower($word);\n\
    \t$word_length = strlen($word);\n\t$vowel_index = 0;\n\t$vowel_distance = 0;\n\
    \t$vowel_distance_min = $word_length;\n\tfor ($i = 0; $i < $word_length; $i++)\
    \ {\n\t\tif (in_array($word[$i], $vowels)) {\n\t\t\t$vowel_distance = $word_length\
    \ - $i;\n\t\t\tif ($vowel_distance < $vowel_distance_min) {\n\t\t\t\t$vowel_distance_min\
    \ = $vowel_distance;\n\t\t\t\t$vowel_index = $i;\n\t\t\t}\n\t\t}\n\t}\n\tif ($vowel_distance_min\
    \ == $word_length) {\n\t\treturn \"\";\n\t}\n\treturn $word[$vowel_index];\n}\n\
    echo get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\"\
    ) . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nu\ni\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp3iikli8n.php:48\n\
    Stack trace:\n#0 /tmp/tmp3iikli8n.php(61): test()\n#1 {main}\n  thrown in /tmp/tmp3iikli8n.php\
    \ on line 48\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$word = strtolower($word);\n\
    \t$word = str_split($word);\n\t$vowel_index = 0;\n\t$vowel_distance = 0;\n\t$vowel_distance_temp\
    \ = 0;\n\t$vowel_index_temp = 0;\n\t$vowel_found = false;\n\t$vowel_found_temp\
    \ = false;\n\t$vowel_found_final = false;\n\t$vowel_index_final = 0;\n\t$vowel_distance_final\
    \ = 0;\n\t$vowel_found_final = false;\n\t$vowel_index_final = 0;\n\t$vowel_distance_final\
    \ = 0;\n\t$vowel_found_final = false;\n\t$vowel_index_final = 0;\n\t$vowel_distance_final\
    \ = 0;\n\t$vowel_found_final = false;\n\t$vowel_index_final = 0;\n\t$vowel_distance_final\
    \ = 0;\n\t$vowel_found_final = false;\n\t$vowel_index_final = 0;\n\t$vowel_distance_final\
    \ = 0;\n\t$vowel_found_final = false;\n\t$vowel_index_final = 0;\n\t$vowel_distance_final\
    \ = 0;\n\t$vowel_found_final = false;\n\t$vowel_index_final = 0;\n\t$vowel_distance_final\
    \ = 0;\n\t$vowel_found_final = false;\n\t$vowel_index_final = 0;\n\t$vowel_distance_final\
    \ = 0;\n\t$vowel_found_final = false;\n\t$vowel_index_final = 0;\n\t$vowel_distance_final\
    \ = 0;\n\t$vowel_found_final = false;\n\t$vowel_index_final = 0;\n\t$vowel_distance_final\
    \ = 0;\n\t$v\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmp93y0mgts.php
    on line 57

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n  $vowels = ['a', 'e', 'i', 'o', 'u'];\n  $word = strtolower($word);\n  $word_length\
    \ = strlen($word);\n  $word_array = str_split($word);\n  $vowel_index = 0;\n \
    \ $vowel_distance = 0;\n  $closest_vowel = '';\n  for ($i = 0; $i < $word_length;\
    \ $i++) {\n    if (in_array($word_array[$i], $vowels)) {\n      $vowel_index =\
    \ $i;\n      $vowel_distance = $word_length - $vowel_index;\n      for ($j = $vowel_index\
    \ + 1; $j < $word_length; $j++) {\n        if (!in_array($word_array[$j], $vowels))\
    \ {\n          $closest_vowel = $word_array[$vowel_index];\n          break;\n\
    \        }\n      }\n    }\n  }\n  return $closest_vowel;\n}\necho get_closest_vowel(\"\
    yogurt\");\necho get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"quick\"\
    );\necho get_closest_vowel(\"ab\");\nfunction candidate(...$args) {\n    return\
    \ get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    full\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    easy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    eAsy\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ali\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    bad\") !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "uuia\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp397xuxzk.php:49\n\
    Stack trace:\n#0 /tmp/tmp397xuxzk.php(62): test()\n#1 {main}\n  thrown in /tmp/tmp397xuxzk.php\
    \ on line 49\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$word = strtolower($word);\n\
    \t$len = strlen($word);\n\t$i = $len - 1;\n\t$vowel_pos = -1;\n\twhile ($i >=\
    \ 0) {\n\t\tif (in_array($word[$i], $vowels)) {\n\t\t\t$vowel_pos = $i;\n\t\t\t\
    break;\n\t\t}\n\t\t$i--;\n\t}\n\tif ($vowel_pos == -1) {\n\t\treturn \"\";\n\t\
    }\n\t$i = $vowel_pos - 1;\n\twhile ($i >= 0) {\n\t\tif (!in_array($word[$i], $vowels))\
    \ {\n\t\t\treturn $word[$vowel_pos];\n\t\t}\n\t\t$i--;\n\t}\n\treturn \"\";\n\
    }\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nu\ni\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmphnl2a0bk.php:55\n\
    Stack trace:\n#0 /tmp/tmphnl2a0bk.php(66): test()\n#1 {main}\n  thrown in /tmp/tmphnl2a0bk.php\
    \ on line 55\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = str_split($word);\n\
    \    $result = \"\";\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n     \
    \   if (in_array($word[$i], $vowels)) {\n            $result = $word[$i];\n  \
    \          break;\n        }\n    }\n    return $result;\n}\necho get_closest_vowel(\"\
    yogurt\");\necho \"<br>\";\necho get_closest_vowel(\"FULL\");\necho \"<br>\";\n\
    echo get_closest_vowel(\"quick\");\necho \"<br>\";\necho get_closest_vowel(\"\
    ab\");\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u<br><br>i<br>a\nFatal error: Uncaught Exception: Test failed! in /tmp/tmppgqfqmzf.php:42\n\
    Stack trace:\n#0 /tmp/tmppgqfqmzf.php(55): test()\n#1 {main}\n  thrown in /tmp/tmppgqfqmzf.php\
    \ on line 42\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$word = str_split($word);\n\t$vowel_index\
    \ = 0;\n\tfor ($i = count($word) - 1; $i >= 0; $i--) {\n\t\tif (in_array($word[$i],\
    \ $vowels)) {\n\t\t\t$vowel_index = $i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif ($vowel_index\
    \ == 0) {\n\t\treturn '';\n\t}\n\tfor ($i = $vowel_index - 1; $i >= 0; $i--) {\n\
    \t\tif (!in_array($word[$i], $vowels)) {\n\t\t\treturn $word[$vowel_index];\n\t\
    \t}\n\t}\n\treturn '';\n}\n\necho get_closest_vowel(\"yogurt\");\necho get_closest_vowel(\"\
    FULL\");\necho get_closest_vowel(\"quick\");\necho get_closest_vowel(\"ab\");\n\
    function candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "ui\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpek73a34y.php:50\n\
    Stack trace:\n#0 /tmp/tmpek73a34y.php(61): test()\n#1 {main}\n  thrown in /tmp/tmpek73a34y.php\
    \ on line 50\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n\t$word = strtolower($word);\n\
    \t$word_array = str_split($word);\n\t$vowel_index = 0;\n\t$vowel_index_array =\
    \ [];\n\t$vowel_index_array_2 = [];\n\t$vowel_index_array_3 = [];\n\t$vowel_index_array_4\
    \ = [];\n\t$vowel_index_array_5 = [];\n\t$vowel_index_array_6 = [];\n\t$vowel_index_array_7\
    \ = [];\n\t$vowel_index_array_8 = [];\n\t$vowel_index_array_9 = [];\n\t$vowel_index_array_10\
    \ = [];\n\t$vowel_index_array_11 = [];\n\t$vowel_index_array_12 = [];\n\t$vowel_index_array_13\
    \ = [];\n\t$vowel_index_array_14 = [];\n\t$vowel_index_array_15 = [];\n\t$vowel_index_array_16\
    \ = [];\n\t$vowel_index_array_17 = [];\n\t$vowel_index_array_18 = [];\n\t$vowel_index_array_19\
    \ = [];\n\t$vowel_index_array_20 = [];\n\t$vowel_index_array_21 = [];\n\t$vowel_index_array_22\
    \ = [];\n\t$vowel_index_array_23 = [];\n\t$vowel_index_array_24 = [];\n\t$vowel_index_array_25\
    \ = [];\n\t$vowel_index_array_26 = [];\n\t$vowel_index_array_27 = [];\n\t$vowel_index_array_28\
    \ = [];\n\t$vowel_index_array_29 = [];\n\t$vowel_index_array_30 = [];\n\t$vowel_index_array_31\
    \ = [];\n\t$vowel_index_array_32 = [];\n\t$vowel_\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected token "function" in /tmp/tmpygzu4te_.php
    on line 54

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$word = strtolower($word);\n\
    \t$word_len = strlen($word);\n\t$last_vowel = '';\n\t$last_consonant = '';\n\t\
    $closest_vowel = '';\n\t$closest_vowel_index = $word_len;\n\tfor ($i = 0; $i <\
    \ $word_len; $i++) {\n\t\tif (in_array($word[$i], $vowels)) {\n\t\t\t$last_vowel\
    \ = $word[$i];\n\t\t\tif ($last_consonant != '') {\n\t\t\t\tif ($i < $closest_vowel_index)\
    \ {\n\t\t\t\t\t$closest_vowel = $last_vowel;\n\t\t\t\t\t$closest_vowel_index =\
    \ $i;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t$last_consonant = $word[$i];\n\t\
    \t}\n\t}\n\treturn $closest_vowel;\n}\n\necho get_closest_vowel(\"yogurt\") .\
    \ \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "o\nu\nu\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpz4vg33nk.php:49\n\
    Stack trace:\n#0 /tmp/tmpz4vg33nk.php(64): test()\n#1 {main}\n  thrown in /tmp/tmpz4vg33nk.php\
    \ on line 49\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n\
    \    $length = strlen($word);\n    $i = $length - 1;\n    $found = false;\n  \
    \  while ($i > 0 && !$found) {\n        if (in_array($word[$i], $vowels)) {\n\
    \            if (!in_array($word[$i - 1], $vowels)) {\n                $found\
    \ = true;\n            }\n        }\n        $i--;\n    }\n    if ($found) {\n\
    \        return $word[$i + 1];\n    } else {\n        return \"\";\n    }\n}\n\
    \necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\"\
    ) . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nu\nu\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpcp39782z.php:50\n\
    Stack trace:\n#0 /tmp/tmpcp39782z.php(61): test()\n#1 {main}\n  thrown in /tmp/tmpcp39782z.php\
    \ on line 50\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$word = str_split($word);\n\t$len\
    \ = count($word);\n\tfor ($i = $len - 1; $i > 0; $i--) {\n\t\tif (in_array($word[$i],\
    \ $vowels) && !in_array($word[$i - 1], $vowels)) {\n\t\t\treturn $word[$i];\n\t\
    \t}\n\t}\n\treturn '';\n}\n\necho get_closest_vowel(\"yogurt\");\necho get_closest_vowel(\"\
    FULL\");\necho get_closest_vowel(\"quick\");\necho get_closest_vowel(\"ab\");\n\
    function candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "uu\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpzv4ync13.php:41\n\
    Stack trace:\n#0 /tmp/tmpzv4ync13.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpzv4ync13.php\
    \ on line 41\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$word = strtolower($word);\n\
    \t$word = str_split($word);\n\t$word = array_reverse($word);\n\t$vowel_index =\
    \ 0;\n\t$vowel_count = 0;\n\t$consonant_count = 0;\n\t$consonant_index = 0;\n\t\
    $vowel_index_array = array();\n\t$consonant_index_array = array();\n\tfor ($i\
    \ = 0; $i < count($word); $i++) {\n\t\tif (in_array($word[$i], $vowels)) {\n\t\
    \t\t$vowel_count++;\n\t\t\t$vowel_index_array[] = $i;\n\t\t} else {\n\t\t\t$consonant_count++;\n\
    \t\t\t$consonant_index_array[] = $i;\n\t\t}\n\t}\n\tif ($vowel_count == 0 || $consonant_count\
    \ == 0) {\n\t\treturn \"\";\n\t}\n\tfor ($i = 0; $i < count($vowel_index_array);\
    \ $i++) {\n\t\tfor ($j = 0; $j < count($consonant_index_array); $j++) {\n\t\t\t\
    if ($vowel_index_array[$i] > $consonant_index_array[$j]) {\n\t\t\t\t$vowel_index\
    \ = $vowel_index_array[$i];\n\t\t\t\t$consonant_index = $consonant_index_array[$j];\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tif ($vowel_index == 0 || $consonant_index\
    \ == 0) {\n\t\treturn \"\";\n\t}\n\t$word = array_reverse($word);\n\treturn $word[$vowel_index];\n\
    }\necho get_closest_vowel(\"yogurt\");\necho \"<br>\";\necho get_closest_vowel(\"\
    FULL\");\necho \"<\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: syntax error, unexpected identifier "yogurt", expecting "," or ";"
    in /tmp/tmpbcnxuotw.php on line 63

    '
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$word = strtolower($word);\n\
    \t$word_len = strlen($word);\n\t$vowel_pos = array();\n\tfor ($i = 0; $i < $word_len;\
    \ $i++) {\n\t\tif (in_array($word[$i], $vowels)) {\n\t\t\t$vowel_pos[] = $i;\n\
    \t\t}\n\t}\n\t$vowel_pos_len = count($vowel_pos);\n\tif ($vowel_pos_len == 0)\
    \ {\n\t\treturn \"\";\n\t}\n\t$closest_vowel = \"\";\n\t$closest_vowel_pos = $word_len;\n\
    \tfor ($i = 0; $i < $vowel_pos_len; $i++) {\n\t\tif ($vowel_pos[$i] > 0 && $vowel_pos[$i]\
    \ < $word_len - 1) {\n\t\t\tif ($word[$vowel_pos[$i] - 1] != $word[$vowel_pos[$i]\
    \ + 1]) {\n\t\t\t\tif ($vowel_pos[$i] < $closest_vowel_pos) {\n\t\t\t\t\t$closest_vowel_pos\
    \ = $vowel_pos[$i];\n\t\t\t\t\t$closest_vowel = $word[$vowel_pos[$i]];\n\t\t\t\
    \t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $closest_vowel;\n}\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "o\nu\nu\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpscxwwvi0.php:53\n\
    Stack trace:\n#0 /tmp/tmpscxwwvi0.php(68): test()\n#1 {main}\n  thrown in /tmp/tmpscxwwvi0.php\
    \ on line 53\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $vowel_index = 0;\n    $vowel_distance\
    \ = 0;\n    $closest_vowel = '';\n    for ($i = 0; $i < $word_length; $i++) {\n\
    \        if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n\
    \            $vowel_distance = $word_length - $vowel_index;\n            for ($j\
    \ = $vowel_index; $j < $word_length; $j++) {\n                if (!in_array($word[$j],\
    \ $vowels)) {\n                    $vowel_distance = $j - $vowel_index;\n    \
    \                break;\n                }\n            }\n            if ($closest_vowel\
    \ == '') {\n                $closest_vowel = $word[$vowel_index];\n          \
    \  } else {\n                if ($vowel_distance < $word_length - strpos($word,\
    \ $closest_vowel)) {\n                    $closest_vowel = $word[$vowel_index];\n\
    \                }\n            }\n        }\n    }\n    return $closest_vowel;\n\
    }\n\necho get_closest_vowel(\"yogurt\");\necho get_closest_vowel(\"FULL\");\n\
    echo get_closest_vowel(\"quick\");\necho get_closest_vowel(\"ab\");\nfunction\
    \ candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "uuia\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp64_k98qp.php:56\n\
    Stack trace:\n#0 /tmp/tmp64_k98qp.php(69): test()\n#1 {main}\n  thrown in /tmp/tmp64_k98qp.php\
    \ on line 56\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$word = str_split($word);\n\
    \t$vowel_index = 0;\n\t$consonant_index = 0;\n\t$vowel_index_array = array();\n\
    \t$consonant_index_array = array();\n\tfor ($i = 0; $i < count($word); $i++) {\n\
    \t\tif (in_array($word[$i], $vowels)) {\n\t\t\t$vowel_index = $i;\n\t\t\tarray_push($vowel_index_array,\
    \ $vowel_index);\n\t\t} else {\n\t\t\t$consonant_index = $i;\n\t\t\tarray_push($consonant_index_array,\
    \ $consonant_index);\n\t\t}\n\t}\n\tif (count($vowel_index_array) == 0 || count($consonant_index_array)\
    \ == 0) {\n\t\treturn \"\";\n\t}\n\t$vowel_index_array = array_reverse($vowel_index_array);\n\
    \t$consonant_index_array = array_reverse($consonant_index_array);\n\tfor ($i =\
    \ 0; $i < count($vowel_index_array); $i++) {\n\t\tif ($vowel_index_array[$i] <\
    \ $consonant_index_array[$i]) {\n\t\t\treturn $word[$vowel_index_array[$i]];\n\
    \t\t}\n\t}\n\treturn \"\";\n}\necho get_closest_vowel(\"yogurt\") . \"\\n\";\n\
    echo get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\"\
    ) . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\n\ni\na\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpazpcot33.php:55\n\
    Stack trace:\n#0 /tmp/tmpazpcot33.php(68): test()\n#1 {main}\n  thrown in /tmp/tmpazpcot33.php\
    \ on line 55\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n\
    \    $word_length = strlen($word);\n    $i = $word_length - 1;\n    while ($i\
    \ >= 0) {\n        if (in_array($word[$i], $vowels)) {\n            if ($i ==\
    \ $word_length - 1) {\n                return \"\";\n            } else {\n  \
    \              return $word[$i];\n            }\n        }\n        $i--;\n  \
    \  }\n    return \"\";\n}\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho\
    \ get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") .\
    \ \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nu\ni\na\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpvgtyn9a0.php:45\n\
    Stack trace:\n#0 /tmp/tmpvgtyn9a0.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpvgtyn9a0.php\
    \ on line 45\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$word = strtolower($word);\n\
    \t$word_length = strlen($word);\n\t$vowel_position = 0;\n\t$vowel_distance = $word_length;\n\
    \tfor ($i = 0; $i < $word_length; $i++) {\n\t\tif (in_array($word[$i], $vowels))\
    \ {\n\t\t\tif ($i > 0 && $i < $word_length - 1) {\n\t\t\t\tif (!in_array($word[$i\
    \ - 1], $vowels) && !in_array($word[$i + 1], $vowels)) {\n\t\t\t\t\tif ($i < $vowel_distance)\
    \ {\n\t\t\t\t\t\t$vowel_distance = $i;\n\t\t\t\t\t\t$vowel_position = $i;\n\t\t\
    \t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif ($vowel_position == 0) {\n\t\treturn\
    \ \"\";\n\t} else {\n\t\treturn $word[$vowel_position];\n\t}\n}\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "o\nu\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmplkibtvna.php:49\n\
    Stack trace:\n#0 /tmp/tmplkibtvna.php(64): test()\n#1 {main}\n  thrown in /tmp/tmplkibtvna.php\
    \ on line 49\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strtolower($word);\n\
    \    $word_len = strlen($word);\n    for ($i = $word_len - 1; $i > 0; $i--) {\n\
    \        if (in_array($word[$i], $vowels) && !in_array($word[$i - 1], $vowels))\
    \ {\n            return $word[$i];\n        }\n    }\n    return '';\n}\n\necho\
    \ get_closest_vowel(\"yogurt\");\necho get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"\
    quick\");\necho get_closest_vowel(\"ab\");\nfunction candidate(...$args) {\n \
    \   return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "uuu\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp7cg6ht7s.php:41\n\
    Stack trace:\n#0 /tmp/tmp7cg6ht7s.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp7cg6ht7s.php\
    \ on line 41\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$word = strtolower($word);\n\
    \t$word_length = strlen($word);\n\t$vowel_index = 0;\n\t$vowel_distance = 0;\n\
    \tfor ($i = $word_length - 1; $i > 0; $i--) {\n\t\tif (in_array($word[$i], $vowels))\
    \ {\n\t\t\t$vowel_index = $i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor ($i = $vowel_index\
    \ - 1; $i > 0; $i--) {\n\t\tif (!in_array($word[$i], $vowels)) {\n\t\t\t$vowel_distance\
    \ = $vowel_index - $i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif ($vowel_distance == 0)\
    \ {\n\t\treturn \"\";\n\t} else {\n\t\treturn $word[$vowel_index];\n\t}\n}\necho\
    \ get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") .\
    \ \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\n\n\n\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpq0liv7u6.php:50\n\
    Stack trace:\n#0 /tmp/tmpq0liv7u6.php(64): test()\n#1 {main}\n  thrown in /tmp/tmpq0liv7u6.php\
    \ on line 50\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$word = str_split($word);\n\
    \t$word = array_reverse($word);\n\t$vowel_pos = -1;\n\t$consonant_pos = -1;\n\t\
    for ($i = 0; $i < count($word); $i++) {\n\t\tif (in_array($word[$i], $vowels))\
    \ {\n\t\t\t$vowel_pos = $i;\n\t\t\tif ($consonant_pos != -1) {\n\t\t\t\treturn\
    \ $word[$vowel_pos];\n\t\t\t}\n\t\t} else {\n\t\t\t$consonant_pos = $i;\n\t\t\t\
    if ($vowel_pos != -1) {\n\t\t\t\treturn $word[$vowel_pos];\n\t\t\t}\n\t\t}\n\t\
    }\n\treturn \"\";\n}\n\necho get_closest_vowel(\"yogurt\");\necho get_closest_vowel(\"\
    FULL\");\necho get_closest_vowel(\"quick\");\necho get_closest_vowel(\"ab\");\n\
    function candidate(...$args) {\n    return get_closest_vowel(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "uia\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpgi5gmogk.php:49\n\
    Stack trace:\n#0 /tmp/tmpgi5gmogk.php(62): test()\n#1 {main}\n  thrown in /tmp/tmpgi5gmogk.php\
    \ on line 49\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$word = str_split($word);\n\t$word\
    \ = array_reverse($word);\n\t$result = '';\n\t$flag = false;\n\tforeach ($word\
    \ as $key => $value) {\n\t\tif (in_array($value, $vowels)) {\n\t\t\tif ($flag)\
    \ {\n\t\t\t\t$result = $value;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} else {\n\t\t\t\
    $flag = true;\n\t\t}\n\t}\n\treturn $result;\n}\n\necho get_closest_vowel(\"yogurt\"\
    );\necho get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"quick\");\necho\
    \ get_closest_vowel(\"ab\");\nfunction candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\
    \") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\"\
    ) !== \"a\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    most\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ab\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ba\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    quick\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    anime\") !== \"i\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Asia\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Above\") !== \"o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "uia\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpwig6n46w.php:46\n\
    Stack trace:\n#0 /tmp/tmpwig6n46w.php(59): test()\n#1 {main}\n  thrown in /tmp/tmpwig6n46w.php\
    \ on line 46\n"
  timestamp: 1660220656
- exit_code: 255
  program: "<?php\n/* You are given a word. Your task is to find the closest vowel\
    \ that stands between \ntwo consonants from the right side of the word (case sensitive).\n\
    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n\
    find any vowel met the above condition. \nYou may assume that the given string\
    \ contains English letter only.\nExample:\n>>> get_closest_vowel(\"yogurt\")\n\
    \"u\"\n>>> get_closest_vowel(\"FULL\")\n\"U\"\n>>> get_closest_vowel(\"quick\"\
    )\n\"\"\n>>> get_closest_vowel(\"ab\")\n\"\"*/\nfunction get_closest_vowel($word)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\t$word = strtolower($word);\n\
    \t$word = str_split($word);\n\t$word = array_reverse($word);\n\t$vowel = \"\"\
    ;\n\t$consonant = \"\";\n\t$vowel_pos = 0;\n\t$consonant_pos = 0;\n\tfor ($i =\
    \ 0; $i < count($word); $i++) {\n\t\tif (in_array($word[$i], $vowels)) {\n\t\t\
    \t$vowel = $word[$i];\n\t\t\t$vowel_pos = $i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor\
    \ ($i = 0; $i < count($word); $i++) {\n\t\tif (!in_array($word[$i], $vowels))\
    \ {\n\t\t\t$consonant = $word[$i];\n\t\t\t$consonant_pos = $i;\n\t\t\tbreak;\n\
    \t\t}\n\t}\n\tif ($vowel_pos > $consonant_pos) {\n\t\treturn $vowel;\n\t} else\
    \ {\n\t\treturn \"\";\n\t}\n}\necho get_closest_vowel(\"yogurt\") . \"\\n\";\n\
    echo get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\"\
    ) . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return get_closest_vowel(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(\"yogurt\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"full\") !== \"u\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"easy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"eAsy\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ali\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"bad\") !== \"a\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"most\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ab\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ba\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"quick\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"anime\") !== \"i\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Asia\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Above\") !== \"o\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "u\nu\ni\na\n\nFatal error: Uncaught Exception: Test failed! in /tmp/tmpt65w8e5i.php:56\n\
    Stack trace:\n#0 /tmp/tmpt65w8e5i.php(69): test()\n#1 {main}\n  thrown in /tmp/tmpt65w8e5i.php\
    \ on line 56\n"
  timestamp: 1660220656

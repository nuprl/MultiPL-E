language: php
name: HumanEval_51_remove_vowels
results:
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels is a function that takes string and returns string without\
    \ vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\
    \n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>>\
    \ remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* is_palindrome is a function that takes string and returns true if it is\
    \ a palindrome.\n>>> is_palindrome(\"\")\nTrue\n>>> is_palindrome(\"a\")\nTrue\n\
    >>> is_palindrome(\"aa\")\nTrue\n>>> is_palindrome(\"ab\")\nFalse\n>>> is_palindrome(\"\
    aba\")\nTrue\n>>> is_palindrome(\"abba\")\nTrue\n>>> is_palindrome(\"abcba\")\n\
    True\n>>> is_palindrome(\"abcdba\")\nFalse\n>>> is_palindrome(\"abcdcba\")\nTrue*/\n\
    function candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* is_palindrome is a function that takes string and returns true if it is\
    \ palindrome, false otherwise.\n>>> is_palindrome(\"\")\nTrue\n>>> is_palindrome(\"\
    a\")\nTrue\n>>> is_palindrome(\"ab\")\nFalse\n>>> is_palindrome(\"aba\")\nTrue\n\
    >>> is_palindrome(\"abba\")\nTrue\n>>> is_palindrome(\"abcd\")\nFalse\n>>> is_palindrome(\"\
    abcba\")\nTrue\n>>> is_palindrome(\"aBcBa\")\nTrue\n>>> is_palindrome(\"aBcba\"\
    )\nTrue\n>>> is_palindrome(\"aBcB\")\nFalse\n>>> is_palindrome(\"aBcBb\")\nTrue\n\
    >>> is_palindrome(\"aBcBbb\")\nFalse*/\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* is_palindrome is a function that takes string and returns true if it is\
    \ palindrome.\n>>> is_palindrome(\"\")\nTrue\n>>> is_palindrome(\"a\")\nTrue\n\
    >>> is_palindrome(\"ab\")\nFalse\n>>> is_palindrome(\"aba\")\nTrue\n>>> is_palindrome(\"\
    abba\")\nTrue\n>>> is_palindrome(\"abcba\")\nTrue\n>>> is_palindrome(\"abcde\"\
    )\nFalse\n>>> is_palindrome(\"abcba\")\nTrue\n>>> is_palindrome(\"aBcba\")\nTrue\n\
    >>> is_palindrome(\"aBcBa\")\nTrue\n>>> is_palindrome(\"aBcBd\")\nFalse\n>>> is_palindrome(\"\
    aBcBdE\")\nFalse\n>>> is_palindrome(\"aBcBdEe\")\nTrue\n>>> is_palindrome(\"aBcBdEeF\"\
    )\nFalse\n>>> is_palindrome(\"aBcBdEeFf\")\nTrue\n>>> is_palindrome(\"aBcBdEeFfG\"\
    )\nFalse\n>>> is_palindrome(\"aBcBdEeFfGg\")\nTrue\n>>> is_palindrome(\"aBcBdEeFfGgH\"\
    )\nFalse\n>>> is_palindrome(\"aBcBdEeFfGgHh\")\nTrue\n>>> is_palindrome(\"aBcBdEeFfGgHhI\"\
    )\nFalse\n>>> is_palindrome(\"aBcBdEeFfGgHhIi\")\nTrue\n>>> is_palindrome(\"aBcBdEeFfGgHhIiJ\"\
    )\nFalse\n>>> is_palindrome(\"aBcBdEeFfGgHhIiJj\")\nTrue\n>>> is_palindrome(\"\
    aB\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 19 in /tmp/tmpgmnnjvz4.php on
    line 19

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/*\n * remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n * >>> remove_vowels_regex(\"\")\n * \"\"\n * >>> remove_vowels_regex(\"\
    abcdef\")\n * \"bcdf\"\n * >>> remove_vowels_regex(\"aaaaa\")\n * \"\"\n * >>>\
    \ remove_vowels_regex(\"aaBAA\")\n * \"B\"\n * >>> remove_vowels_regex(\"zbcd\"\
    )\n * \"zbcd\"\n */\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* is_palindrome is a function that takes string and returns true if string\
    \ is palindrome.\n>>> is_palindrome(\"\")\nTrue\n>>> is_palindrome(\"a\")\nTrue\n\
    >>> is_palindrome(\"aa\")\nTrue\n>>> is_palindrome(\"ab\")\nFalse\n>>> is_palindrome(\"\
    aba\")\nTrue\n>>> is_palindrome(\"abba\")\nTrue\n>>> is_palindrome(\"abcba\")\n\
    True\n>>> is_palindrome(\"abcdba\")\nFalse\n>>> is_palindrome(\"abcdcba\")\nTrue*/\n\
    function candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\
    \n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>>\
    \ remove_vowels(\"zbcd\")\n\"zbcd\"\n*/\n\necho remove_vowels(\"\") . \"\\n\"\
    ;\necho remove_vowels(\"abcdef\") . \"\\n\";\necho remove_vowels(\"aaaaa\") .\
    \ \"\\n\";\necho remove_vowels(\"aaBAA\") . \"\\n\";\necho remove_vowels(\"zbcd\"\
    ) . \"\\n\";\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    bcdf


    B

    zbcd

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\
    \n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>>\
    \ remove_vowels(\"zbcd\")\n\"zbcd\"\n*/\n\necho remove_vowels(\"\") . \"\\n\"\
    ;\necho remove_vowels(\"abcdef\") . \"\\n\";\necho remove_vowels(\"aaaaa\") .\
    \ \"\\n\";\necho remove_vowels(\"aaBAA\") . \"\\n\";\necho remove_vowels(\"zbcd\"\
    ) . \"\\n\";\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    bcdf


    B

    zbcd

    '
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* is_palindrome is a function that takes string and returns true if the\
    \ string is a palindrome, false otherwise.\n>>> is_palindrome(\"\")\nTrue\n>>>\
    \ is_palindrome(\"a\")\nTrue\n>>> is_palindrome(\"aa\")\nTrue\n>>> is_palindrome(\"\
    ab\")\nFalse\n>>> is_palindrome(\"aba\")\nTrue\n>>> is_palindrome(\"abba\")\n\
    True\n>>> is_palindrome(\"abcba\")\nTrue\n>>> is_palindrome(\"abcdba\")\nFalse\n\
    >>> is_palindrome(\"abcdcba\")\nTrue\n>>> is_palindrome(\"abcdcbA\")\nFalse\n\
    >>> is_palindrome(\"abcdcbaA\")\nFalse\n>>> is_palindrome(\"abcdcbaa\")\nFalse\n\
    >>> is_palindrome(\"abcdcbaab\")\nFalse\n>>> is_palindrome(\"abcdcbaabc\")\nFalse\n\
    >>> is_palindrome(\"abcdcbaabcd\")\nFalse\n>>> is_palindrome(\"abcdcbaabcdcba\"\
    )\nTrue\n>>> is_palindrome(\"abcdcbaabcdcbA\")\nFalse\n>>> is_palindrome(\"abcdcbaabcdcbaA\"\
    )\nFalse\n>>> is_palindrome(\"abcdcbaabcdcbaa\")\nFalse\n>>> is_palindrome(\"\
    abcdcbaabcdcbaab\")\nFalse\n>>> is_palindrome(\"abcdcbaabcdcbaabc\")\nFalse\n\
    >>> is_palindrome(\"abcdcbaabcdcbaabcd\")\nFalse\n>>> is_palindrome(\"abcdcbaabcdcbaabcdcba\"\
    )\nTrue\n>>> is_palindrome(\"abcdcbaabcdcbaabcdcbA\")\nFalse\n>>> is_palindrome(\"\
    abcdcbaabcdcbaabcdcbaA\")\nFalse\n\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 19 in /tmp/tmpvoa_y780.php on
    line 19

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* is_palindrome is a function that takes string and returns true if string\
    \ is palindrome.\n>>> is_palindrome(\"\")\nTrue\n>>> is_palindrome(\"a\")\nTrue\n\
    >>> is_palindrome(\"ab\")\nFalse\n>>> is_palindrome(\"aba\")\nTrue\n>>> is_palindrome(\"\
    abba\")\nTrue\n>>> is_palindrome(\"abcba\")\nTrue\n>>> is_palindrome(\"abcde\"\
    )\nFalse\n>>> is_palindrome(\"abcbaa\")\nFalse\n>>> is_palindrome(\"abcbaab\"\
    )\nFalse*/\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* is_palindrome is a function that takes string and returns true if it is\
    \ a palindrome.\n>>> is_palindrome(\"\")\nTrue\n>>> is_palindrome(\"a\")\nTrue\n\
    >>> is_palindrome(\"aa\")\nTrue\n>>> is_palindrome(\"aba\")\nTrue\n>>> is_palindrome(\"\
    abba\")\nTrue\n>>> is_palindrome(\"abcdcba\")\nTrue\n>>> is_palindrome(\"abcd\"\
    )\nFalse\n>>> is_palindrome(\"abcdcbaa\")\nFalse\n>>> is_palindrome(\"abcddcba\"\
    )\nFalse*/\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$new_text = str_replace($vowels, \"\", $text);\n\treturn $new_text;\n\
    }\n\n/* is_palindrome is a function that takes string and returns true if it is\
    \ a palindrome.\n>>> is_palindrome(\"\")\nTrue\n>>> is_palindrome(\"a\")\nTrue\n\
    >>> is_palindrome(\"ab\")\nFalse\n>>> is_palindrome(\"aba\")\nTrue\n>>> is_palindrome(\"\
    abba\")\nTrue\n>>> is_palindrome(\"abcba\")\nTrue\n>>> is_palindrome(\"abccba\"\
    )\nTrue\n>>> is_palindrome(\"abcdcba\")\nTrue\n>>> is_palindrome(\"abcdecba\"\
    )\nFalse\n>>> is_palindrome(\"abcdeedcba\")\nFalse\n>>> is_palindrome(\"abcdeedcbab\"\
    )\nFalse\n>>> is_palindrome(\"abcdeedcbaab\")\nFalse\n>>> is_palindrome(\"abcdeedcbaab\"\
    )\nFalse\n>>> is_palindrome(\"abcdeedcbaab\")\nFalse\n>>> is_palindrome(\"abcdeedcbaab\"\
    )\nFalse\n>>> is_palindrome(\"abcdeedcbaab\")\nFalse\n>>> is_palindrome(\"abcdeedcbaab\"\
    )\nFalse\n>>> is_palindrome(\"abcdeedcbaab\")\nFalse\n>>> is_palindrome(\"abcdeedcbaab\"\
    )\nFalse\n>>> is_palindrome(\"abcdeedcbaab\")\nFalse\n>>> is_palindrome(\"abcdeedcbaab\"\
    )\nFalse\n>>> is_palindrome(\"abcdeedcbaab\")\nFalse\n>>> is_palindrome(\"abcdeedcbaab\"\
    )\nFalse\n>>> is_palindrome(\"abcdeedcbaab\")\nFalse\n>>> is_palindrome(\"abcdeedcbaab\"\
    )\nFalse\n>>> is_palindrome(\"abcdeedcbaab\")\nFalse\n>>> is_palindrome(\"abcdeedcbaab\"\
    )\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 19 in /tmp/tmp8vb7hjg1.php on
    line 19

    '
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* is_palindrome is a function that takes string and returns true if it is\
    \ a palindrome, false otherwise.\n>>> is_palindrome(\"\")\nTrue\n>>> is_palindrome(\"\
    a\")\nTrue\n>>> is_palindrome(\"aa\")\nTrue\n>>> is_palindrome(\"ab\")\nFalse\n\
    >>> is_palindrome(\"aba\")\nTrue\n>>> is_palindrome(\"abba\")\nTrue\n>>> is_palindrome(\"\
    abcba\")\nTrue\n>>> is_palindrome(\"abccba\")\nTrue\n>>> is_palindrome(\"abcdcba\"\
    )\nTrue\n>>> is_palindrome(\"abcddcba\")\nTrue\n>>> is_palindrome(\"abcdedcba\"\
    )\nTrue\n>>> is_palindrome(\"abcdefedcba\")\nTrue\n>>> is_palindrome(\"abcdefgfedcba\"\
    )\nTrue\n>>> is_palindrome(\"abcdefghgfedcba\")\nTrue\n>>> is_palindrome(\"abcdefghihgfedcba\"\
    )\nTrue\n>>> is_palindrome(\"abcdefghijhgfedcba\")\nTrue\n>>> is_palindrome(\"\
    abcdefghijihgfedcba\")\nTrue\n>>> is_palindrome(\"abcdefghijjihgfedcba\")\nTrue\n\
    >>> is_palindrome(\"abcdefghijkjjihgfedcba\")\nTrue\n>>> is_palindrome(\"abcdefghijklkjjihgfedcba\"\
    )\nTrue\n>>> is_palindrome(\"abcdefghijklmlkjjihgfedcba\")\nTrue\n>>> is_palindrome(\"\
    abcdefghijklmnmlkjjihgfedcba\")\nTrue\n>>> is_palindrome(\"abcdefghijklmnonmlkjjihgfedcba\"\
    )\nTrue\n>>> is_palindrome(\"abcdefghijklmnoponmlkjjihgfedcba\")\nTrue\nfunction\
    \ candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\") !==\
    \ \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 19 in /tmp/tmpij5p_f6f.php on
    line 19

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$result = \"\";\n\tfor ($i = 0; $i < strlen($text); $i++)\
    \ {\n\t\tif (!in_array($text[$i], $vowels)) {\n\t\t\t$result .= $text[$i];\n\t\
    \t}\n\t}\n\treturn $result;\n}\n\n/*\n>>> is_palindrome(\"\")\nTrue\n>>> is_palindrome(\"\
    a\")\nTrue\n>>> is_palindrome(\"aa\")\nTrue\n>>> is_palindrome(\"ab\")\nFalse\n\
    >>> is_palindrome(\"aba\")\nTrue\n>>> is_palindrome(\"abba\")\nTrue\n>>> is_palindrome(\"\
    abab\")\nFalse\n>>> is_palindrome(\"ababa\")\nTrue\n>>> is_palindrome(\"ababba\"\
    )\nFalse\n>>> is_palindrome(\"ababab\")\nFalse\n>>> is_palindrome(\"abababa\"\
    )\nTrue\n>>> is_palindrome(\"abababba\")\nFalse\n>>> is_palindrome(\"abababab\"\
    )\nFalse\n>>> is_palindrome(\"ababababa\")\nTrue\n>>> is_palindrome(\"ababababba\"\
    )\nFalse\n>>> is_palindrome(\"ababababab\")\nFalse\n>>> is_palindrome(\"abababababa\"\
    )\nTrue\n>>> is_palindrome(\"abababababba\")\nFalse\n>>> is_palindrome(\"abababababab\"\
    )\nFalse\n>>> is_palindrome(\"ababababababa\")\nTrue\n>>> is_palindrome(\"ababababababba\"\
    )\nFalse\n>>> is_palindrome(\"ababababababab\")\nFalse\n>>> is_palindrome(\"abababababababa\"\
    )\nTrue\n>>> is_palindrome(\"abababababababba\")\nFalse\n>>> is_palindrome(\"\
    abababababababab\")\nFalse\n>>> is_palindrome(\"ababababababababa\")\nTrue\n>>>\
    \ is_palindrome\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 24 in /tmp/tmpiz3dm24n.php on
    line 24

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* remove_vowels is a function that takes string and returns string without\
    \ vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\
    \n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>>\
    \ remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* is_palindrome is a function that takes string and returns true if it is\
    \ palindrome.\n>>> is_palindrome(\"\")\nTrue\n>>> is_palindrome(\"a\")\nTrue\n\
    >>> is_palindrome(\"ab\")\nFalse\n>>> is_palindrome(\"aba\")\nTrue\n>>> is_palindrome(\"\
    abba\")\nTrue\n>>> is_palindrome(\"abcba\")\nTrue\n>>> is_palindrome(\"abcdba\"\
    )\nFalse*/\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\
    \n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>>\
    \ remove_vowels(\"zbcd\")\n\"zbcd\"\n*/\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n\
    >>> remove_vowels(\"abcdef\")\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n\
    >>> remove_vowels(\"aaBAA\")\n\"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"\n*/\n\
    \n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\n\
    >>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>> remove_vowels(\"\
    zbcd\")\n\"zbcd\"\n*/\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"\n*/\n\n/*\n>>> remove_vowels(\"\
    \")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\"\
    )\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>> remove_vowels(\"zbcd\")\n\"\
    zbcd\"\n*/\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 84 in /tmp/tmp38671il6.php on
    line 84

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* remove_vowels is a function that takes string and returns string without\
    \ vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\
    \n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>>\
    \ remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* is_palindrome is a function that takes string and returns true if it is\
    \ a palindrome, false otherwise.\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"\
    a\")\ntrue\n>>> is_palindrome(\"aa\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n\
    >>> is_palindrome(\"abba\")\ntrue\n>>> is_palindrome(\"abcd\")\nfalse\n>>> is_palindrome(\"\
    abcba\")\ntrue\n>>> is_palindrome(\"abccba\")\ntrue\n>>> is_palindrome(\"abcddcba\"\
    )\ntrue\n>>> is_palindrome(\"abcddcbA\")\nfalse*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* is_palindrome is a function that takes string and returns true if string\
    \ is palindrome.\n>>> is_palindrome(\"\")\nTrue\n>>> is_palindrome(\"a\")\nTrue\n\
    >>> is_palindrome(\"ab\")\nFalse\n>>> is_palindrome(\"aba\")\nTrue\n>>> is_palindrome(\"\
    abba\")\nTrue\n>>> is_palindrome(\"abcba\")\nTrue\n>>> is_palindrome(\"abccba\"\
    )\nTrue\n>>> is_palindrome(\"abcdcba\")\nTrue\n>>> is_palindrome(\"abcddcba\"\
    )\nTrue\n>>> is_palindrome(\"abcdedcba\")\nTrue\n>>> is_palindrome(\"abcdefedcba\"\
    )\nTrue\n>>> is_palindrome(\"abcdefgfedcba\")\nTrue\n>>> is_palindrome(\"abcdefghgfedcba\"\
    )\nTrue\n>>> is_palindrome(\"abcdefghihgfedcba\")\nTrue\n>>> is_palindrome(\"\
    abcdefghijhgfedcba\")\nTrue\n>>> is_palindrome(\"abcdefghijihgfedcba\")\nTrue\n\
    >>> is_palindrome(\"abcdefghijjihgfedcba\")\nTrue\n>>> is_palindrome(\"abcdefghijkjjihgfedcba\"\
    )\nTrue\n>>> is_palindrome(\"abcdefghijklkjihgfedcba\")\nTrue\n>>> is_palindrome(\"\
    abcdefghijklkkjihgfedcba\")\nTrue\n>>> is_palindrome(\"abcdefghijklkllkjihgfedcba\"\
    )\nTrue\n>>> is_palindrome(\"abcdefghijklklmlkjihgfedcba\")\nTrue\n>>> is_palindrome(\"\
    abcdefghijklklmmlkjihgfedcba\")\nTrue\n>>> is_palindrome(\"abcdefghijklklmnmlkjihgfedcba\"\
    )\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 19 in /tmp/tmpiyqctnnf.php on
    line 19

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels is a function that takes string and returns string without\
    \ vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\
    \n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>>\
    \ remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $result = str_replace($vowels, \"\", $text);\n    return\
    \ $result;\n}\n\n/* is_palindrome is a function that takes string and returns\
    \ true if it is a palindrome.\n>>> is_palindrome(\"\")\nTrue\n>>> is_palindrome(\"\
    a\")\nTrue\n>>> is_palindrome(\"aa\")\nTrue\n>>> is_palindrome(\"ab\")\nFalse\n\
    >>> is_palindrome(\"aba\")\nTrue\n>>> is_palindrome(\"abba\")\nTrue\n>>> is_palindrome(\"\
    abcba\")\nTrue\n>>> is_palindrome(\"abccba\")\nTrue\n>>> is_palindrome(\"abcdcba\"\
    )\nTrue\n>>> is_palindrome(\"abcddcba\")\nTrue\n>>> is_palindrome(\"abcdedcba\"\
    )\nTrue\n>>> is_palindrome(\"abcdefedcba\")\nTrue\n>>> is_palindrome(\"abcdefgfedcba\"\
    )\nTrue\n>>> is_palindrome(\"abcdefghgfedcba\")\nTrue\n>>> is_palindrome(\"abcdefghihgfedcba\"\
    )\nTrue\n>>> is_palindrome(\"abcdefghijhgfedcba\")\nTrue\n>>> is_palindrome(\"\
    abcdefghijihgfedcba\")\nTrue\n>>> is_palindrome(\"abcdefghijjihgfedcba\")\nTrue\n\
    >>> is_palindrome(\"abcdefghijkjjihgfedcba\")\nTrue\n>>> is_palindrome(\"abcdefghijklkjjihgfedcba\"\
    )\nTrue\n>>> is_palindrome(\"abcdefghijklmlkjjihgfedcba\")\nTrue\n>>> is_palindrome(\"\
    abcdefghijklmnmlkjjihgfedcba\")\nTrue\n>>> is_palindrome(\"abcdefghijklmnonmlkjjihgfedcba\"\
    )\nTrue\n>>> is_palindrome(\"abcdefghijklmnoponmlkjjihgfedcba\")\nTrue\n>>> is\n\
    function candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 19 in /tmp/tmpv6rmv_i_.php on
    line 19

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels is a function that takes string and returns string without\
    \ vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\
    \n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>>\
    \ remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/*\n * is_palindrome is a function that takes string and returns true if\
    \ string is palindrome, false otherwise.\n>>> is_palindrome(\"\")\nTrue\n>>> is_palindrome(\"\
    a\")\nTrue\n>>> is_palindrome(\"aa\")\nTrue\n>>> is_palindrome(\"ab\")\nFalse\n\
    >>> is_palindrome(\"aba\")\nTrue\n>>> is_palindrome(\"abba\")\nTrue\n>>> is_palindrome(\"\
    abcba\")\nTrue\n>>> is_palindrome(\"abcde\")\nFalse\n>>> is_palindrome(\"abcbaa\"\
    )\nFalse\n>>> is_palindrome(\"abcbaab\")\nFalse\n>>> is_palindrome(\"abcbaabc\"\
    )\nFalse\n>>> is_palindrome(\"abcbaabca\")\nTrue\n>>> is_palindrome(\"abcbaabcaa\"\
    )\nFalse\n>>> is_palindrome(\"abcbaabcaab\")\nFalse\n>>> is_palindrome(\"abcbaabcaabc\"\
    )\nFalse\n>>> is_palindrome(\"abcbaabcaabca\")\nTrue\n>>> is_palindrome(\"abcbaabcaabcaa\"\
    )\nFalse\n>>> is_palindrome(\"abcbaabcaabcaab\")\nFalse\n>>> is_palindrome(\"\
    abcbaabcaabcaabc\")\nFalse\n>>> is_palindrome(\"abcbaabcaabcaabca\")\nTrue\n>>>\
    \ is_palindrome(\"abcbaabcaabcaabcaa\")\nFalse\n>>> is_palindrome(\"abcbaabcaabcaabcaab\"\
    )\nFalse\n>>> is_palindrome(\"abcbaabcaabcaabcaabc\")\nFalse\n>>> is_palindrome(\"\
    abcbaabcaabcaabcaabca\")\nTrue\n>>> is_palindrome(\"abcbaabcaabcaabcaabcaa\")\n\
    False\n>>> is_palindrome(\"abcbaabcaabcaabcaabcaab\")\nFalse\n>>>\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 19 in /tmp/tmpuo8ilewx.php on
    line 19

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* remove_consonants is a function that takes string and returns string without\
    \ consonants.\n>>> remove_consonants(\"\")\n\"\"\n>>> remove_consonants(\"abcdef\"\
    )\n\"aei\"\n>>> remove_consonants(\"aaaaa\")\n\"aaaaa\"\n>>> remove_consonants(\"\
    aaBAA\")\n\"aaa\"\n>>> remove_consonants(\"zbcd\")\n\"z\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/*\n * remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n * >>> remove_vowels_regex(\"\")\n * \"\"\n * >>> remove_vowels_regex(\"\
    abcdef\")\n * \"bcdf\"\n * >>> remove_vowels_regex(\"aaaaa\")\n * \"\"\n * >>>\
    \ remove_vowels_regex(\"aaBAA\")\n * \"B\"\n * >>> remove_vowels_regex(\"zbcd\"\
    )\n * \"zbcd\"\n */\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\
    \n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>>\
    \ remove_vowels(\"zbcd\")\n\"zbcd\"\n*/\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n\
    >>> remove_vowels(\"abcdef\")\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n\
    >>> remove_vowels(\"aaBAA\")\n\"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"\n*/\n\
    \n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\n\
    >>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>> remove_vowels(\"\
    zbcd\")\n\"zbcd\"\n*/\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"\n*/\n\n/*\n>>> remove_vowels(\"\
    \")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\"\
    )\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>> remove_vowels(\"zbcd\")\n\"\
    zbcd\"\n*/\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 84 in /tmp/tmpgj__kxfe.php on
    line 84

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/*\n>>> is_palindrome(\"\")\nTrue\n>>> is_palindrome(\"a\")\nTrue\n>>> is_palindrome(\"\
    aa\")\nTrue\n>>> is_palindrome(\"ab\")\nFalse\n>>> is_palindrome(\"aba\")\nTrue\n\
    >>> is_palindrome(\"abba\")\nTrue\n>>> is_palindrome(\"abcba\")\nTrue\n>>> is_palindrome(\"\
    abccba\")\nTrue\n>>> is_palindrome(\"abcdcba\")\nTrue\n>>> is_palindrome(\"abcdedcba\"\
    )\nTrue\n>>> is_palindrome(\"abcdefedcba\")\nTrue\n>>> is_palindrome(\"abcdefgfedcba\"\
    )\nTrue\n>>> is_palindrome(\"abcdefghgfedcba\")\nTrue\n>>> is_palindrome(\"abcdefghihgfedcba\"\
    )\nTrue\n>>> is_palindrome(\"abcdefghijhgfedcba\")\nTrue\n>>> is_palindrome(\"\
    abcdefghijihgfedcba\")\nTrue\n>>> is_palindrome(\"abcdefghijjihgfedcba\")\nTrue\n\
    >>> is_palindrome(\"abcdefghijkjjihgfedcba\")\nTrue\n>>> is_palindrome(\"abcdefghijklkjihgfedcba\"\
    )\nTrue\n>>> is_palindrome(\"abcdefghijklkkjihgfedcba\")\nTrue\n>>> is_palindrome(\"\
    abcdefghijklkllkjihgfedcba\")\nTrue\n>>> is_palindrome(\"abcdefghijklklmlkjihgfedcba\"\
    )\nTrue\n>>> is_palindrome(\"abcdefghijklklmmlkjihgfedcba\")\nTrue\n>>> is_palindrome(\"\
    abcdefghijklklmmmkljihgfedcba\")\nTrue\n>>> is_palindrome(\"abcdefghijklklmmmmlkjihgfedcba\n\
    function candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 19 in /tmp/tmpp5r21ug4.php on
    line 19

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U');\n\t\
    $text = str_replace($vowels, '', $text);\n\treturn $text;\n}\n\n/*\n>>> remove_vowels(\"\
    \")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\"\
    )\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>> remove_vowels(\"zbcd\")\n\"\
    zbcd\"\n*/\n\necho remove_vowels(\"\");\necho remove_vowels(\"abcdef\");\necho\
    \ remove_vowels(\"aaaaa\");\necho remove_vowels(\"aaBAA\");\necho remove_vowels(\"\
    zbcd\");\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: bcdfBzbcd
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_2 is a function that takes string and returns string without\
    \ vowels.\n>>> remove_vowels_2(\"\")\n\"\"\n>>> remove_vowels_2(\"abcdef\")\n\"\
    bcdf\"\n>>> remove_vowels_2(\"aaaaa\")\n\"\"\n>>> remove_vowels_2(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels_2(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/*\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"\n*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\
    \n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>>\
    \ remove_vowels(\"zbcd\")\n\"zbcd\"\n*/\necho remove_vowels(\"\");\necho remove_vowels(\"\
    abcdef\");\necho remove_vowels(\"aaaaa\");\necho remove_vowels(\"aaBAA\");\necho\
    \ remove_vowels(\"zbcd\");\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: bcdfBzbcd
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* is_palindrome is a function that takes string and returns true if string\
    \ is palindrome.\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"a\")\ntrue\n\
    >>> is_palindrome(\"ab\")\nfalse\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"\
    abba\")\ntrue\n>>> is_palindrome(\"abcba\")\ntrue\n>>> is_palindrome(\"abcde\"\
    )\nfalse\n>>> is_palindrome(\"abcbaa\")\nfalse\n>>> is_palindrome(\"abcbaab\"\
    )\nfalse\n>>> is_palindrome(\"abcbaabc\")\nfalse\n>>> is_palindrome(\"abcbaabca\"\
    )\ntrue\n>>> is_palindrome(\"abcbaabcaa\")\nfalse\n>>> is_palindrome(\"abcbaabcaab\"\
    )\nfalse\n>>> is_palindrome(\"abcbaabcaabc\")\nfalse\n>>> is_palindrome(\"abcbaabcaabca\"\
    )\ntrue\n>>> is_palindrome(\"abcbaabcaabcaa\")\nfalse\n>>> is_palindrome(\"abcbaabcaabcaab\"\
    )\nfalse\n>>> is_palindrome(\"abcbaabcaabcaabc\")\nfalse\n>>> is_palindrome(\"\
    abcbaabcaabcaabca\")\ntrue\n>>> is_palindrome(\"abcbaabcaabcaabcaa\")\nfalse\n\
    >>> is_palindrome(\"abcbaabcaabcaabcaab\")\nfalse\n>>> is_palindrome(\"abcbaabcaabcaabcaabc\"\
    )\nfalse\n>>> is_palindrome(\"abcbaabcaabcaabcaabca\")\ntrue\n>>> is_palindrome(\"\
    abcbaabcaabcaabcaabcaa\")\nfalse\n>>> is_palindrome(\"abcbaabcaabcaabcaabcaab\"\
    )\nfalse\n>>> is_palindrome(\"abcbaabcaabcaabcaabcaabc\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 19 in /tmp/tmpmf3qjgb4.php on
    line 19

    '
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\
    \n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>>\
    \ remove_vowels(\"zbcd\")\n\"zbcd\"\n*/\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n\
    >>> remove_vowels(\"abcdef\")\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n\
    >>> remove_vowels(\"aaBAA\")\n\"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"\n*/\n\
    \n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\n\
    >>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>> remove_vowels(\"\
    zbcd\")\n\"zbcd\"\n*/\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"\n*/\n\n/*\n>>> remove_vowels(\"\
    \")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\"\
    )\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>> remove_vowels(\"zbcd\")\n\"\
    zbcd\"\n*/\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 84 in /tmp/tmpgj__kxfe.php on
    line 84

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* is_palindrome is a function that takes string and returns true if string\
    \ is palindrome.\n>>> is_palindrome(\"\")\nTrue\n>>> is_palindrome(\"a\")\nTrue\n\
    >>> is_palindrome(\"aa\")\nTrue\n>>> is_palindrome(\"ab\")\nFalse\n>>> is_palindrome(\"\
    aba\")\nTrue\n>>> is_palindrome(\"abba\")\nTrue\n>>> is_palindrome(\"abcd\")\n\
    False\n>>> is_palindrome(\"abcba\")\nTrue\n>>> is_palindrome(\"abccba\")\nTrue\n\
    >>> is_palindrome(\"abcddcba\")\nTrue\n>>> is_palindrome(\"abcddcbA\")\nFalse*/\n\
    function candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_consonants is a function that takes string and returns string without\
    \ consonants.\n>>> remove_consonants(\"\")\n\"\"\n>>> remove_consonants(\"abcdef\"\
    )\n\"aei\"\n>>> remove_consonants(\"aaaaa\")\n\"aaaaa\"\n>>> remove_consonants(\"\
    aaBAA\")\n\"aaAA\"\n>>> remove_consonants(\"zbcd\")\n\"z\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\
    \n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>>\
    \ remove_vowels(\"zbcd\")\n\"zbcd\"\n*/\n\necho remove_vowels(\"\");\necho remove_vowels(\"\
    abcdef\");\necho remove_vowels(\"aaaaa\");\necho remove_vowels(\"aaBAA\");\necho\
    \ remove_vowels(\"zbcd\");\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: bcdfBzbcd
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels is a function that takes string and returns string without\
    \ vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\
    \n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>>\
    \ remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $result = '';\n    for ($i\
    \ = 0; $i < strlen($text); $i++) {\n        if (!in_array($text[$i], $vowels))\
    \ {\n            $result .= $text[$i];\n        }\n    }\n    return $result;\n\
    }\n\n/*\n>>> is_palindrome(\"\")\nTrue\n>>> is_palindrome(\"a\")\nTrue\n>>> is_palindrome(\"\
    aa\")\nTrue\n>>> is_palindrome(\"aba\")\nTrue\n>>> is_palindrome(\"abba\")\nTrue\n\
    >>> is_palindrome(\"abcdcba\")\nTrue\n>>> is_palindrome(\"abc\")\nFalse\n>>> is_palindrome(\"\
    abca\")\nFalse\n>>> is_palindrome(\"abcd\")\nFalse\n*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9tul_j7a.php:53\n\
    Stack trace:\n#0 /tmp/tmp9tul_j7a.php(58): test()\n#1 {main}\n  thrown in /tmp/tmp9tul_j7a.php\
    \ on line 53\n"
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\
    \n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>>\
    \ remove_vowels(\"zbcd\")\n\"zbcd\"\n*/\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n\
    >>> remove_vowels(\"abcdef\")\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n\
    >>> remove_vowels(\"aaBAA\")\n\"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"\n*/\n\
    \n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\n\
    >>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>> remove_vowels(\"\
    zbcd\")\n\"zbcd\"\n*/\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"\n*/\n\n/*\n>>> remove_vowels(\"\
    \")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\"\
    )\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>> remove_vowels(\"zbcd\")\n\"\
    zbcd\"\n*/\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 84 in /tmp/tmpgj__kxfe.php on
    line 84

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\
    \n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>>\
    \ remove_vowels(\"zbcd\")\n\"zbcd\"\n*/\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n\
    >>> remove_vowels(\"abcdef\")\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n\
    >>> remove_vowels(\"aaBAA\")\n\"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"\n*/\n\
    \n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\n\
    >>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>> remove_vowels(\"\
    zbcd\")\n\"zbcd\"\n*/\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"\n*/\n\n/*\n>>> remove_vowels(\"\
    \")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\"\
    )\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>> remove_vowels(\"zbcd\")\n\"\
    zbcd\"\n*/\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 84 in /tmp/tmpgj__kxfe.php on
    line 84

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\
    \n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>>\
    \ remove_vowels(\"zbcd\")\n\"zbcd\"\n*/\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n\
    >>> remove_vowels(\"abcdef\")\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n\
    >>> remove_vowels(\"aaBAA\")\n\"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"\n*/\n\
    \n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\n\
    >>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>> remove_vowels(\"\
    zbcd\")\n\"zbcd\"\n*/\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"\n*/\n\n/*\n>>> remove_vowels(\"\
    \")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\"\
    )\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>> remove_vowels(\"zbcd\")\n\"\
    zbcd\"\n*/\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 84 in /tmp/tmpgj__kxfe.php on
    line 84

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels is a function that takes string and returns string without\
    \ vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\
    \n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>>\
    \ remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U');\n\
    \    $text = str_replace($vowels, '', $text);\n    return $text;\n}\n\n/* remove_vowels_regex\
    \ is a function that takes string and returns string without vowels.\n>>> remove_vowels_regex(\"\
    \")\n\"\"\n>>> remove_vowels_regex(\"abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"\
    aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"\
    zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\
    \n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>>\
    \ remove_vowels(\"zbcd\")\n\"zbcd\"\n*/\n\nfunction candidate(...$args) {\n  \
    \  return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\
    \n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>>\
    \ remove_vowels(\"zbcd\")\n\"zbcd\"\n*/\n\necho remove_vowels(\"\");\necho remove_vowels(\"\
    abcdef\");\necho remove_vowels(\"aaaaa\");\necho remove_vowels(\"aaBAA\");\necho\
    \ remove_vowels(\"zbcd\");\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: bcdfBzbcd
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/*\n * is_palindrome is a function that takes string and returns true if\
    \ it is palindrome, false otherwise.\n * >>> is_palindrome(\"\")\n * true\n *\
    \ >>> is_palindrome(\"a\")\n * true\n * >>> is_palindrome(\"ab\")\n * false\n\
    \ * >>> is_palindrome(\"aba\")\n * true\n * >>> is_palindrome(\"abba\")\n * true\n\
    \ * >>> is_palindrome(\"abcd\")\n * false\n * >>> is_palindrome(\"abcdcba\")\n\
    \ * true\n * >>> is_palindrome(\"abcddcba\")\n * true\n */\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\
    \n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>>\
    \ remove_vowels(\"zbcd\")\n\"zbcd\"\n*/\n\necho remove_vowels(\"\");\necho remove_vowels(\"\
    abcdef\");\necho remove_vowels(\"aaaaa\");\necho remove_vowels(\"aaBAA\");\necho\
    \ remove_vowels(\"zbcd\");\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: bcdfBzbcd
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\
    \n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>>\
    \ remove_vowels(\"zbcd\")\n\"zbcd\"\n*/\n\nfunction candidate(...$args) {\n  \
    \  return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* is_palindrome is a function that takes string and returns true if string\
    \ is palindrome.\n>>> is_palindrome(\"\")\nTrue\n>>> is_palindrome(\"a\")\nTrue\n\
    >>> is_palindrome(\"aa\")\nTrue\n>>> is_palindrome(\"aba\")\nTrue\n>>> is_palindrome(\"\
    abba\")\nTrue\n>>> is_palindrome(\"abcd\")\nFalse\n>>> is_palindrome(\"abcba\"\
    )\nTrue\n>>> is_palindrome(\"abcdba\")\nFalse\n>>> is_palindrome(\"abcde\")\n\
    False*/\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* is_palindrome is a function that takes string and returns true if it is\
    \ palindrome, false otherwise.\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"\
    a\")\ntrue\n>>> is_palindrome(\"ab\")\nfalse\n>>> is_palindrome(\"aba\")\ntrue\n\
    >>> is_palindrome(\"abba\")\ntrue\n>>> is_palindrome(\"abcba\")\ntrue\n>>> is_palindrome(\"\
    abcde\")\nfalse\n>>> is_palindrome(\"abcbaa\")\nfalse*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\
    \n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>>\
    \ remove_vowels(\"zbcd\")\n\"zbcd\"\n*/\n\necho remove_vowels(\"\");\necho remove_vowels(\"\
    abcdef\");\necho remove_vowels(\"aaaaa\");\necho remove_vowels(\"aaBAA\");\necho\
    \ remove_vowels(\"zbcd\");\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: bcdfBzbcd
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U');\n\t\
    $text = str_replace($vowels, '', $text);\n\treturn $text;\n}\n\n/*\n>>> remove_vowels(\"\
    \")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\"\
    )\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>> remove_vowels(\"zbcd\")\n\"\
    zbcd\"\n*/\n\necho remove_vowels(\"\") . \"\\n\";\necho remove_vowels(\"abcdef\"\
    ) . \"\\n\";\necho remove_vowels(\"aaaaa\") . \"\\n\";\necho remove_vowels(\"\
    aaBAA\") . \"\\n\";\necho remove_vowels(\"zbcd\") . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    bcdf


    B

    zbcd

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_numbers is a function that takes string and returns string without\
    \ numbers.\n>>> remove_numbers(\"\")\n\"\"\n>>> remove_numbers(\"abcdef\")\n\"\
    abcdef\"\n>>> remove_numbers(\"aaaaa\")\n\"aaaaa\"\n>>> remove_numbers(\"aaBAA\"\
    )\n\"aaBAA\"\n>>> remove_numbers(\"zbcd\")\n\"zbcd\"\n>>> remove_numbers(\"12345\"\
    )\n\"\"\n>>> remove_numbers(\"a1b2c3d4\")\n\"abcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* is_palindrome is a function that takes string and returns true if it is\
    \ palindrome, false otherwise.\n>>> is_palindrome(\"\")\nTrue\n>>> is_palindrome(\"\
    a\")\nTrue\n>>> is_palindrome(\"aa\")\nTrue\n>>> is_palindrome(\"ab\")\nFalse\n\
    >>> is_palindrome(\"aba\")\nTrue\n>>> is_palindrome(\"abba\")\nTrue\n>>> is_palindrome(\"\
    abcba\")\nTrue\n>>> is_palindrome(\"abcdba\")\nFalse\n>>> is_palindrome(\"abcdcba\"\
    )\nTrue\n>>> is_palindrome(\"abcdcbA\")\nFalse\n>>> is_palindrome(\"abcdcbAa\"\
    )\nFalse\n>>> is_palindrome(\"abcdcbAaA\")\nTrue*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* is_palindrome is a function that takes string and returns true if it is\
    \ palindrome.\n>>> is_palindrome(\"\")\nTrue\n>>> is_palindrome(\"a\")\nTrue\n\
    >>> is_palindrome(\"ab\")\nFalse\n>>> is_palindrome(\"aba\")\nTrue\n>>> is_palindrome(\"\
    abba\")\nTrue\n>>> is_palindrome(\"abcba\")\nTrue\n>>> is_palindrome(\"abcde\"\
    )\nFalse*/\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\
    \n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>>\
    \ remove_vowels(\"zbcd\")\n\"zbcd\"\n*/\n\necho remove_vowels(\"\");\necho remove_vowels(\"\
    abcdef\");\necho remove_vowels(\"aaaaa\");\necho remove_vowels(\"aaBAA\");\necho\
    \ remove_vowels(\"zbcd\");\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: bcdfBzbcd
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* is_palindrome is a function that takes string and returns true if string\
    \ is palindrome.\n>>> is_palindrome(\"\")\nTrue\n>>> is_palindrome(\"a\")\nTrue\n\
    >>> is_palindrome(\"aa\")\nTrue\n>>> is_palindrome(\"aba\")\nTrue\n>>> is_palindrome(\"\
    abba\")\nTrue\n>>> is_palindrome(\"abcd\")\nFalse\n>>> is_palindrome(\"abcdcba\"\
    )\nTrue\n>>> is_palindrome(\"abcddcba\")\nTrue\n>>> is_palindrome(\"abcddcbA\"\
    )\nFalse*/\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/*\n * is_palindrome is a function that takes string and returns true if\
    \ it is a palindrome.\n>>> is_palindrome(\"\")\nTrue\n>>> is_palindrome(\"a\"\
    )\nTrue\n>>> is_palindrome(\"ab\")\nFalse\n>>> is_palindrome(\"aba\")\nTrue\n\
    >>> is_palindrome(\"abba\")\nTrue\n>>> is_palindrome(\"abcba\")\nTrue\n>>> is_palindrome(\"\
    abccba\")\nTrue\n>>> is_palindrome(\"aBccba\")\nTrue\n>>> is_palindrome(\"abccbA\"\
    )\nTrue\n>>> is_palindrome(\"abccbaa\")\nFalse\n>>> is_palindrome(\"abccbaa\"\
    )\nFalse\n>>> is_palindrome(\"abccbaa\")\nFalse\n>>> is_palindrome(\"abccbaa\"\
    )\nFalse\n>>> is_palindrome(\"abccbaa\")\nFalse\n>>> is_palindrome(\"abccbaa\"\
    )\nFalse\n>>> is_palindrome(\"abccbaa\")\nFalse\n>>> is_palindrome(\"abccbaa\"\
    )\nFalse\n>>> is_palindrome(\"abccbaa\")\nFalse\n>>> is_palindrome(\"abccbaa\"\
    )\nFalse\n>>> is_palindrome(\"abccbaa\")\nFalse\n>>> is_palindrome(\"abccbaa\"\
    )\nFalse\n>>> is_palindrome(\"abccbaa\")\nFalse\n>>> is_palindrome(\"abccbaa\"\
    )\nFalse\n>>> is_palindrome(\"abccbaa\")\nFalse\n>>> is_palindrome(\"abccbaa\"\
    )\nFalse\n>>> is_palindrome(\"abccbaa\")\nFalse\n>>> is_palindrome(\"abccbaa\"\
    )\nFalse\n>>> is_palindrome(\"abccbaa\")\nFalse\n>>> is_palindrome(\"abccbaa\"\
    )\nFalse\n>>> is_pal\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 19 in /tmp/tmp6399hlok.php on
    line 19

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* is_palindrome is a function that takes string and returns true if string\
    \ is palindrome.\n>>> is_palindrome(\"\")\nTrue\n>>> is_palindrome(\"a\")\nTrue\n\
    >>> is_palindrome(\"aa\")\nTrue\n>>> is_palindrome(\"ab\")\nFalse\n>>> is_palindrome(\"\
    aba\")\nTrue\n>>> is_palindrome(\"abba\")\nTrue\n>>> is_palindrome(\"abcba\")\n\
    True\n>>> is_palindrome(\"abcde\")\nFalse\n>>> is_palindrome(\"abcba\")\nTrue\n\
    >>> is_palindrome(\"Abcba\")\nFalse\n>>> is_palindrome(\"Abcba\")\nFalse\n>>>\
    \ is_palindrome(\"Abcba\")\nFalse\n>>> is_palindrome(\"Abcba\")\nFalse\n>>> is_palindrome(\"\
    Abcba\")\nFalse\n>>> is_palindrome(\"Abcba\")\nFalse\n>>> is_palindrome(\"Abcba\"\
    )\nFalse\n>>> is_palindrome(\"Abcba\")\nFalse\n>>> is_palindrome(\"Abcba\")\n\
    False\n>>> is_palindrome(\"Abcba\")\nFalse\n>>> is_palindrome(\"Abcba\")\nFalse\n\
    >>> is_palindrome(\"Abcba\")\nFalse\n>>> is_palindrome(\"Abcba\")\nFalse\n>>>\
    \ is_palindrome(\"Abcba\")\nFalse\n>>> is_palindrome(\"Abcba\")\nFalse\n>>> is_palindrome(\"\
    Abcba\")\nFalse\n>>> is_palindrome(\"Abcba\")\nFalse\n>>> is_palindrome(\"Abcba\"\
    )\nFalse\n>>> is_palindrome(\"Abcba\")\nFalse\n>>> is_palindrome(\"Abcba\")\n\
    False\n>>> is_palindrome(\"Abcba\")\nFalse\n>>> is_palindrome(\"Abcba\")\nFalse\n\
    >>> is_palind\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 19 in /tmp/tmpigy8jb32.php on
    line 19

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* is_palindrome is a function that takes string and returns true if it is\
    \ palindrome, false otherwise.\n>>> is_palindrome(\"\")\nTrue\n>>> is_palindrome(\"\
    a\")\nTrue\n>>> is_palindrome(\"aa\")\nTrue\n>>> is_palindrome(\"ab\")\nFalse\n\
    >>> is_palindrome(\"aba\")\nTrue\n>>> is_palindrome(\"abba\")\nTrue\n>>> is_palindrome(\"\
    abcba\")\nTrue\n>>> is_palindrome(\"abcdba\")\nFalse*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* is_palindrome is a function that takes string and returns true if it is\
    \ a palindrome, false otherwise.\n>>> is_palindrome(\"\")\nTrue\n>>> is_palindrome(\"\
    abcdef\")\nFalse\n>>> is_palindrome(\"aaaaa\")\nTrue\n>>> is_palindrome(\"aaBAA\"\
    )\nFalse\n>>> is_palindrome(\"zbcdcbz\")\nTrue*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\
    \n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>>\
    \ remove_vowels(\"zbcd\")\n\"zbcd\"\n*/\n\necho remove_vowels(\"\");\necho remove_vowels(\"\
    abcdef\");\necho remove_vowels(\"aaaaa\");\necho remove_vowels(\"aaBAA\");\necho\
    \ remove_vowels(\"zbcd\");\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: bcdfBzbcd
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\
    \n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>>\
    \ remove_vowels(\"zbcd\")\n\"zbcd\"\n*/\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n\
    >>> remove_vowels(\"abcdef\")\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n\
    >>> remove_vowels(\"aaBAA\")\n\"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"\n*/\n\
    \n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\n\
    >>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>> remove_vowels(\"\
    zbcd\")\n\"zbcd\"\n*/\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"\n*/\n\n/*\n>>> remove_vowels(\"\
    \")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\"\
    )\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>> remove_vowels(\"zbcd\")\n\"\
    zbcd\"\n*/\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 84 in /tmp/tmpgj__kxfe.php on
    line 84

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* is_palindrome is a function that takes string and returns true if it is\
    \ a palindrome.\n>>> is_palindrome(\"\")\nTrue\n>>> is_palindrome(\"a\")\nTrue\n\
    >>> is_palindrome(\"aa\")\nTrue\n>>> is_palindrome(\"ab\")\nFalse\n>>> is_palindrome(\"\
    aba\")\nTrue\n>>> is_palindrome(\"abba\")\nTrue\n>>> is_palindrome(\"abcba\")\n\
    True\n>>> is_palindrome(\"abcdba\")\nFalse\n>>> is_palindrome(\"abcdcba\")\nTrue*/\n\
    function candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\
    \n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>>\
    \ remove_vowels(\"zbcd\")\n\"zbcd\"\n*/\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n\
    >>> remove_vowels(\"abcdef\")\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n\
    >>> remove_vowels(\"aaBAA\")\n\"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"\n*/\n\
    \n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\n\
    >>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>> remove_vowels(\"\
    zbcd\")\n\"zbcd\"\n*/\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"\n*/\n\n/*\n>>> remove_vowels(\"\
    \")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\"\
    )\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>> remove_vowels(\"zbcd\")\n\"\
    zbcd\"\n*/\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 84 in /tmp/tmpgj__kxfe.php on
    line 84

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* remove_vowels_2 is a function that takes string and returns string without\
    \ vowels.\n>>> remove_vowels_2(\"\")\n\"\"\n>>> remove_vowels_2(\"abcdef\")\n\"\
    bcdf\"\n>>> remove_vowels_2(\"aaaaa\")\n\"\"\n>>> remove_vowels_2(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels_2(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/*\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"\n*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\
    \n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>>\
    \ remove_vowels(\"zbcd\")\n\"zbcd\"\n*/\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n\
    >>> remove_vowels(\"abcdef\")\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n\
    >>> remove_vowels(\"aaBAA\")\n\"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"\n*/\n\
    \n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\n\
    >>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>> remove_vowels(\"\
    zbcd\")\n\"zbcd\"\n*/\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"\n*/\n\n/*\n>>> remove_vowels(\"\
    \")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\"\
    )\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>> remove_vowels(\"zbcd\")\n\"\
    zbcd\"\n*/\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 84 in /tmp/tmpgj__kxfe.php on
    line 84

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* is_palindrome is a function that takes string and returns true if it is\
    \ palindrome.\n>>> is_palindrome(\"\")\nTrue\n>>> is_palindrome(\"a\")\nTrue\n\
    >>> is_palindrome(\"aa\")\nTrue\n>>> is_palindrome(\"ab\")\nFalse\n>>> is_palindrome(\"\
    aba\")\nTrue\n>>> is_palindrome(\"abba\")\nTrue\n>>> is_palindrome(\"abcba\")\n\
    True\n>>> is_palindrome(\"abcde\")\nFalse\n>>> is_palindrome(\"abcbaa\")\nFalse\n\
    >>> is_palindrome(\"abcbaab\")\nFalse*/\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* is_palindrome is a function that takes string and returns true if it is\
    \ palindrome.\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"a\")\ntrue\n\
    >>> is_palindrome(\"ab\")\nfalse\n>>> is_palindrome(\"aba\")\ntrue\n>>> is_palindrome(\"\
    abba\")\ntrue\n>>> is_palindrome(\"abcba\")\ntrue\n>>> is_palindrome(\"abcdba\"\
    )\nfalse*/\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/*\n>>> is_palindrome(\"\")\nTrue\n>>> is_palindrome(\"a\")\nTrue\n>>> is_palindrome(\"\
    aa\")\nTrue\n>>> is_palindrome(\"ab\")\nFalse\n>>> is_palindrome(\"aba\")\nTrue\n\
    >>> is_palindrome(\"abba\")\nTrue\n>>> is_palindrome(\"abab\")\nFalse\n>>> is_palindrome(\"\
    ababa\")\nTrue\n>>> is_palindrome(\"ababb\")\nFalse\n>>> is_palindrome(\"ababba\"\
    )\nTrue\n>>> is_palindrome(\"ababbb\")\nFalse\n>>> is_palindrome(\"ababbba\")\n\
    True\n>>> is_palindrome(\"ababbbb\")\nFalse\n>>> is_palindrome(\"ababbbba\")\n\
    True\n>>> is_palindrome(\"ababbbbb\")\nFalse\n>>> is_palindrome(\"ababbbbba\"\
    )\nTrue\n>>> is_palindrome(\"ababbbbbb\")\nFalse\n>>> is_palindrome(\"ababbbbbba\"\
    )\nTrue\n>>> is_palindrome(\"ababbbbbbb\")\nFalse\n>>> is_palindrome(\"ababbbbbbba\"\
    )\nTrue\n>>> is_palindrome(\"ababbbbbbbb\")\nFalse\n>>> is_palindrome(\"ababbbbbbbba\"\
    )\nTrue\n>>> is_palindrome(\"ababbbbbbbbb\")\nFalse\n>>> is_palindrome(\"ababbbbbbbbba\"\
    )\nTrue\n>>> is_palindrome(\"ababbbbbbbbbb\")\nFalse\n>>> is_palindrome(\"ababbbbbbbbbba\"\
    )\nTrue\n>>> is_palindrome(\"ababbbbbbbbbbb\")\nFalse\n>>> is_palindrome(\"ababbbbbbbbbbba\"\
    )\nTrue\n>>> is_palindrome(\"ababbbbbbbbbbbb\")\nFalse\n>>> is_palindrome(\"ababbbbbbbbbbbba\n\
    function candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\treturn str_replace($vowels, \"\", $text);\n}\n\n/* remove_vowels_regex\
    \ is a function that takes string and returns string without vowels.\n>>> remove_vowels_regex(\"\
    \")\n\"\"\n>>> remove_vowels_regex(\"abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"\
    aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"\
    zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* is_palindrome is a function that takes string and returns true if it is\
    \ palindrome, false otherwise.\n>>> is_palindrome(\"\")\nTrue\n>>> is_palindrome(\"\
    a\")\nTrue\n>>> is_palindrome(\"ab\")\nFalse\n>>> is_palindrome(\"aba\")\nTrue\n\
    >>> is_palindrome(\"abba\")\nTrue\n>>> is_palindrome(\"abcba\")\nTrue\n>>> is_palindrome(\"\
    abcde\")\nFalse\n>>> is_palindrome(\"abcbaa\")\nFalse\n>>> is_palindrome(\"abcbaab\"\
    )\nFalse\n>>> is_palindrome(\"abcbaabc\")\nFalse\n>>> is_palindrome(\"abcbaabca\"\
    )\nTrue*/\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/*\n * is_palindrome is a function that takes string and returns true if\
    \ it is a palindrome.\n>>> is_palindrome(\"\")\nTrue\n>>> is_palindrome(\"a\"\
    )\nTrue\n>>> is_palindrome(\"ab\")\nFalse\n>>> is_palindrome(\"aba\")\nTrue\n\
    >>> is_palindrome(\"abba\")\nTrue\n>>> is_palindrome(\"abcba\")\nTrue\n>>> is_palindrome(\"\
    abcdba\")\nFalse\n */\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/*\n>>> is_palindrome(\"\")\nTrue\n>>> is_palindrome(\"a\")\nTrue\n>>> is_palindrome(\"\
    aa\")\nTrue\n>>> is_palindrome(\"aba\")\nTrue\n>>> is_palindrome(\"abba\")\nTrue\n\
    >>> is_palindrome(\"abab\")\nFalse\n>>> is_palindrome(\"ababa\")\nTrue\n>>> is_palindrome(\"\
    ababab\")\nFalse\n>>> is_palindrome(\"abababa\")\nTrue\n>>> is_palindrome(\"abababab\"\
    )\nFalse\n>>> is_palindrome(\"ababababa\")\nTrue\n>>> is_palindrome(\"ababababab\"\
    )\nFalse\n>>> is_palindrome(\"abababababa\")\nTrue\n>>> is_palindrome(\"abababababab\"\
    )\nFalse\n>>> is_palindrome(\"ababababababa\")\nTrue\n>>> is_palindrome(\"ababababababab\"\
    )\nFalse\n>>> is_palindrome(\"abababababababa\")\nTrue\n>>> is_palindrome(\"abababababababab\"\
    )\nFalse\n>>> is_palindrome(\"ababababababababa\")\nTrue\n>>> is_palindrome(\"\
    ababababababababab\")\nFalse\n>>> is_palindrome(\"abababababababababa\")\nTrue\n\
    >>> is_palindrome(\"abababababababababab\")\nFalse\n>>> is_palindrome(\"ababababababababababa\"\
    )\nTrue\n>>> is_palindrome(\"ababababababababababab\")\nFalse\n>>> is_palindrome(\"\
    abababababababababababa\")\nTrue\n>>> is_palindrome(\"abababababababababababab\"\
    )\nFalse\n>>> is_palindrome(\"ababababab\nfunction candidate(...$args) {\n   \
    \ return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 19 in /tmp/tmphycureq0.php on
    line 19

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* is_palindrome is a function that takes string and returns true if string\
    \ is palindrome.\n>>> is_palindrome(\"\")\nTrue\n>>> is_palindrome(\"a\")\nTrue\n\
    >>> is_palindrome(\"aa\")\nTrue\n>>> is_palindrome(\"ab\")\nFalse\n>>> is_palindrome(\"\
    aba\")\nTrue\n>>> is_palindrome(\"abba\")\nTrue\n>>> is_palindrome(\"abcba\")\n\
    True\n>>> is_palindrome(\"abcdba\")\nFalse*/\nfunction candidate(...$args) {\n\
    \    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\
    \n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>>\
    \ remove_vowels(\"zbcd\")\n\"zbcd\"\n*/\n\necho remove_vowels(\"\") . \"\\n\"\
    ;\necho remove_vowels(\"abcdef\") . \"\\n\";\necho remove_vowels(\"aaaaa\") .\
    \ \"\\n\";\necho remove_vowels(\"aaBAA\") . \"\\n\";\necho remove_vowels(\"zbcd\"\
    ) . \"\\n\";\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    bcdf


    B

    zbcd

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/*\n>>> is_palindrome(\"\")\nTrue\n>>> is_palindrome(\"a\")\nTrue\n>>> is_palindrome(\"\
    aa\")\nTrue\n>>> is_palindrome(\"ab\")\nFalse\n>>> is_palindrome(\"aba\")\nTrue\n\
    >>> is_palindrome(\"abba\")\nTrue\n>>> is_palindrome(\"abab\")\nFalse\n>>> is_palindrome(\"\
    ababa\")\nTrue\n>>> is_palindrome(\"ababba\")\nFalse\n>>> is_palindrome(\"ababbaba\"\
    )\nTrue\n*/\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* is_palindrome is a function that takes string and returns boolean.\n>>>\
    \ is_palindrome(\"\")\nTrue\n>>> is_palindrome(\"a\")\nTrue\n>>> is_palindrome(\"\
    aa\")\nTrue\n>>> is_palindrome(\"ab\")\nFalse\n>>> is_palindrome(\"aba\")\nTrue\n\
    >>> is_palindrome(\"abba\")\nTrue\n>>> is_palindrome(\"abcba\")\nTrue\n>>> is_palindrome(\"\
    abcdba\")\nFalse\n>>> is_palindrome(\"abcdcba\")\nTrue\n>>> is_palindrome(\"abcdcbA\"\
    )\nFalse*/\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_from_array is a function that takes array of strings and\
    \ returns array of strings without vowels.\n>>> remove_vowels_from_array(array(\"\
    abcdef\", \"aaaaa\", \"aaBAA\", \"zbcd\"))\narray(\"bcdf\", \"\", \"B\", \"zbcd\"\
    )*/\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_consonants is a function that takes string and returns string without\
    \ consonants.\n>>> remove_consonants(\"\")\n\"\"\n>>> remove_consonants(\"abcdef\"\
    )\n\"ae\"\n>>> remove_consonants(\"aaaaa\")\n\"aaaaa\"\n>>> remove_consonants(\"\
    aaBAA\")\n\"aaAA\"\n>>> remove_consonants(\"zbcd\")\n\"z\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* is_palindrome is a function that takes string and returns true if string\
    \ is palindrome, false otherwise.\n>>> is_palindrome(\"\")\nTrue\n>>> is_palindrome(\"\
    a\")\nTrue\n>>> is_palindrome(\"aa\")\nTrue\n>>> is_palindrome(\"ab\")\nFalse\n\
    >>> is_palindrome(\"aba\")\nTrue\n>>> is_palindrome(\"abba\")\nTrue\n>>> is_palindrome(\"\
    abcd\")\nFalse\n>>> is_palindrome(\"abcdcba\")\nTrue\n>>> is_palindrome(\"abcdcbA\"\
    )\nFalse\n>>> is_palindrome(\"abcdefghijklmnopqrstuvwxyzyxwvutsrqponmlkjihgfedcba\"\
    )\nTrue\n>>> is_palindrome(\"abcdefghijklmnopqrstuvwxyzyxwvutsrqponmlkjihgfedcbA\"\
    )\nFalse*/\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* is_palindrome is a function that takes string and returns true if string\
    \ is palindrome.\n>>> is_palindrome(\"\")\nTrue\n>>> is_palindrome(\"a\")\nTrue\n\
    >>> is_palindrome(\"aa\")\nTrue\n>>> is_palindrome(\"ab\")\nFalse\n>>> is_palindrome(\"\
    aba\")\nTrue\n>>> is_palindrome(\"abba\")\nTrue\n>>> is_palindrome(\"abcba\")\n\
    True\n>>> is_palindrome(\"abcdba\")\nFalse\n>>> is_palindrome(\"abcdcba\")\nTrue\n\
    >>> is_palindrome(\"abcdcbA\")\nFalse\n>>> is_palindrome(\"abcdcbaa\")\nFalse\n\
    >>> is_palindrome(\"abcdcbAa\")\nFalse\n>>> is_palindrome(\"abcdcbaaa\")\nFalse\n\
    >>> is_palindrome(\"abcdcbAaa\")\nFalse\n>>> is_palindrome(\"abcdcbaaaa\")\nFalse\n\
    >>> is_palindrome(\"abcdcbAaaa\")\nFalse\n>>> is_palindrome(\"abcdcbaaaaa\")\n\
    False\n>>> is_palindrome(\"abcdcbAaaaa\")\nFalse\n>>> is_palindrome(\"abcdcbaaaaaa\"\
    )\nFalse\n>>> is_palindrome(\"abcdcbAaaaaa\")\nFalse\n>>> is_palindrome(\"abcdcbaaaaaaa\"\
    )\nFalse\n>>> is_palindrome(\"abcdcbAaaaaaa\")\nFalse\n>>> is_palindrome(\"abcdcbaaaaaaaa\"\
    )\nFalse\n>>> is_palindrome(\"abcdcbAaaaaaaa\")\nFalse\n>>> is_palindrome(\"abcdcbaaaaaaaaa\"\
    )\nFalse\n>>> is_palindrome(\"abcdcbAaaaaaaaa\")\nFalse\n>>> is_palindrome(\"\
    abcdcbaaaaaaaaaa\")\nFalse\n>>> is_palindrome(\"abcdcbAaaaaaaaa\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 19 in /tmp/tmphuqn1juu.php on
    line 19

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* is_palindrome is a function that takes string and returns true if it is\
    \ palindrome, false otherwise.\n>>> is_palindrome(\"\")\ntrue\n>>> is_palindrome(\"\
    a\")\ntrue\n>>> is_palindrome(\"aa\")\ntrue\n>>> is_palindrome(\"aba\")\ntrue\n\
    >>> is_palindrome(\"abba\")\ntrue\n>>> is_palindrome(\"abcd\")\nfalse\n>>> is_palindrome(\"\
    abba\")\ntrue\n>>> is_palindrome(\"abbaa\")\nfalse\n>>> is_palindrome(\"abbccbba\"\
    )\ntrue\n>>> is_palindrome(\"abbccbbc\")\nfalse*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/*\n * is_palindrome is a function that takes string and returns true if\
    \ it is palindrome.\n * >>> is_palindrome(\"\")\n * true\n * >>> is_palindrome(\"\
    a\")\n * true\n * >>> is_palindrome(\"aa\")\n * true\n * >>> is_palindrome(\"\
    ab\")\n * false\n * >>> is_palindrome(\"aba\")\n * true\n * >>> is_palindrome(\"\
    abba\")\n * true\n * >>> is_palindrome(\"abcdba\")\n * false\n * >>> is_palindrome(\"\
    abcdcba\")\n * true\n * >>> is_palindrome(\"abcdcbA\")\n * false\n * >>> is_palindrome(\"\
    abcdcbaa\")\n * false\n * >>> is_palindrome(\"abcdcbAa\")\n * false\n * >>> is_palindrome(\"\
    abcdcbaA\")\n * false\n * >>> is_palindrome(\"abcdcbAA\")\n * false\n * >>> is_palindrome(\"\
    abcdcbAaa\")\n * false\n * >>> is_palindrome(\"abcdcbAaA\")\n * false\n * >>>\
    \ is_palindrome(\"abcdcbAaB\")\n * false\n * >>> is_palindrome(\"abcdcbAaBa\"\
    )\n * false\n * >>> is_palindrome(\"abcdcbAaBb\")\n * false\n * >>> is_palindrome(\"\
    abcdcbAaBba\")\n * false\n * >>> is_palindrome(\"abcdcbAaBbA\")\n * false\n *\
    \ >>> is_palindrome(\"abcdcbAaBbAb\")\n * false\n * >>> is_palindrome(\"abcdcbAaBbAba\"\
    )\n * false\n * >>> is_palindrome(\"abcdcbAaBbAbb\")\n * false\n * >>> is_palindrome(\"\
    abcdcbAaBbAb\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 19 in /tmp/tmpdrq7xfrx.php on
    line 19

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/*\n>>> count_vowels(\"\")\n0\n>>> count_vowels(\"abcdef\")\n2\n>>> count_vowels(\"\
    aaaaa\")\n5\n>>> count_vowels(\"aaBAA\")\n3\n>>> count_vowels(\"zbcd\")\n1\n*/\n\
    function candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels is a function that takes string and returns string without\
    \ vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\
    \n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>>\
    \ remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args) {\n    return\
    \ remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\
    \n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>>\
    \ remove_vowels(\"zbcd\")\n\"zbcd\"\n*/\n\nfunction candidate(...$args) {\n  \
    \  return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\
    \n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>>\
    \ remove_vowels(\"zbcd\")\n\"zbcd\"\n*/\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n\
    >>> remove_vowels(\"abcdef\")\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n\
    >>> remove_vowels(\"aaBAA\")\n\"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"\n*/\n\
    \n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\n\
    >>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>> remove_vowels(\"\
    zbcd\")\n\"zbcd\"\n*/\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"\n*/\n\n/*\n>>> remove_vowels(\"\
    \")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\"\
    )\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>> remove_vowels(\"zbcd\")\n\"\
    zbcd\"\n*/\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 84 in /tmp/tmpgj__kxfe.php on
    line 84

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/*\nremove_vowels_2 is a function that takes string and returns string without\
    \ vowels.\n>>> remove_vowels_2(\"\")\n\"\"\n>>> remove_vowels_2(\"abcdef\")\n\"\
    bcdf\"\n>>> remove_vowels_2(\"aaaaa\")\n\"\"\n>>> remove_vowels_2(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels_2(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\
    \n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>>\
    \ remove_vowels(\"zbcd\")\n\"zbcd\"\n*/\n\necho remove_vowels(\"\") . \"\\n\"\
    ;\necho remove_vowels(\"abcdef\") . \"\\n\";\necho remove_vowels(\"aaaaa\") .\
    \ \"\\n\";\necho remove_vowels(\"aaBAA\") . \"\\n\";\necho remove_vowels(\"zbcd\"\
    ) . \"\\n\";\n\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: '

    bcdf


    B

    zbcd

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* is_palindrome is a function that takes string and returns true if it is\
    \ a palindrome.\n>>> is_palindrome(\"\")\nTrue\n>>> is_palindrome(\"a\")\nTrue\n\
    >>> is_palindrome(\"ab\")\nFalse\n>>> is_palindrome(\"aba\")\nTrue\n>>> is_palindrome(\"\
    abba\")\nTrue\n>>> is_palindrome(\"abbaa\")\nFalse\n>>> is_palindrome(\"abbccbba\"\
    )\nTrue\n>>> is_palindrome(\"abbccbbaa\")\nFalse*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/*\n>>> is_palindrome(\"\")\nTrue\n>>> is_palindrome(\"a\")\nTrue\n>>> is_palindrome(\"\
    aa\")\nTrue\n>>> is_palindrome(\"ab\")\nFalse\n>>> is_palindrome(\"aba\")\nTrue\n\
    >>> is_palindrome(\"abba\")\nTrue\n>>> is_palindrome(\"abcba\")\nTrue\n>>> is_palindrome(\"\
    abcdba\")\nFalse\n>>> is_palindrome(\"abcdcba\")\nTrue\n>>> is_palindrome(\"abcdefghijklmnopqrstuvwxyz\"\
    )\nFalse\n>>> is_palindrome(\"abcdefghijklmnopqrstuvwxyzyxwvutsrqponmlkjihgfedcba\"\
    )\nTrue\n*/\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* is_palindrome is a function that takes string and returns true if it is\
    \ palindrome.\n>>> is_palindrome(\"\")\nTrue\n>>> is_palindrome(\"a\")\nTrue\n\
    >>> is_palindrome(\"ab\")\nFalse\n>>> is_palindrome(\"aba\")\nTrue\n>>> is_palindrome(\"\
    abba\")\nTrue\n>>> is_palindrome(\"abcd\")\nFalse\n>>> is_palindrome(\"abcdcba\"\
    )\nTrue\n>>> is_palindrome(\"abcdcbaa\")\nFalse\n>>> is_palindrome(\"abcdcbaa\"\
    )\nFalse\n>>> is_palindrome(\"abcdcbaab\")\nFalse\n>>> is_palindrome(\"abcdcbaabc\"\
    )\nFalse\n>>> is_palindrome(\"abcdcbaabcd\")\nFalse\n>>> is_palindrome(\"abcdcbaabcdcba\"\
    )\nTrue\n>>> is_palindrome(\"abcdcbaabcdcbaa\")\nFalse\n>>> is_palindrome(\"abcdcbaabcdcbaab\"\
    )\nFalse\n>>> is_palindrome(\"abcdcbaabcdcbaabc\")\nFalse\n>>> is_palindrome(\"\
    abcdcbaabcdcbaabcd\")\nFalse\n>>> is_palindrome(\"abcdcbaabcdcbaabcdcba\")\nTrue\n\
    >>> is_palindrome(\"abcdcbaabcdcbaabcdcbaa\")\nFalse\n>>> is_palindrome(\"abcdcbaabcdcbaabcdcbaab\"\
    )\nFalse\n>>> is_palindrome(\"abcdcbaabcdcbaabcdcbaabc\")\nFalse\n>>> is_palindrome(\"\
    abcdcbaabcdcbaabcdcbaabcd\")\nFalse\n>>> is_palindrome(\"abcdcbaabcdcbaabcdcbaabcdcba\"\
    )\nTrue\n>>> is_palindrome(\"ab\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 19 in /tmp/tmpuj6o44iv.php on
    line 19

    '
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/*\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\")\n\"bcdf\"\
    \n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\"B\"\n>>>\
    \ remove_vowels(\"zbcd\")\n\"zbcd\"\n*/\n\n/*\n>>> is_palindrome(\"\")\nTrue\n\
    >>> is_palindrome(\"a\")\nTrue\n>>> is_palindrome(\"aa\")\nTrue\n>>> is_palindrome(\"\
    ab\")\nFalse\n>>> is_palindrome(\"aba\")\nTrue\n>>> is_palindrome(\"abba\")\n\
    True\n>>> is_palindrome(\"abcba\")\nTrue\n>>> is_palindrome(\"abccba\")\nTrue\n\
    >>> is_palindrome(\"abcdcba\")\nTrue\n>>> is_palindrome(\"abcdcbA\")\nFalse\n\
    >>> is_palindrome(\"abcdcbA\")\nFalse\n>>> is_palindrome(\"abcdcbA\")\nFalse\n\
    >>> is_palindrome(\"abcdcbA\")\nFalse\n>>> is_palindrome(\"abcdcbA\")\nFalse\n\
    >>> is_palindrome(\"abcdcbA\")\nFalse\n>>> is_palindrome(\"abcdcbA\")\nFalse\n\
    >>> is_palindrome(\"abcdcbA\")\nFalse\n>>> is_palindrome(\"abcdcbA\")\nFalse\n\
    >>> is_palindrome(\"abcdcbA\")\nFalse\n>>> is_palindrome(\"abcdcbA\")\nFalse\n\
    >>> is_palindrome(\"abcdcbA\")\nFalse\n>>> is_palindrome(\"abcdcbA\")\nFalse\n\
    >>> is_palindrome(\"abcdcbA\")\nFalse\n>>> is_palindrome(\"abcdcbA\")\nFalse\n\
    >>> is_palindrome(\"abcdcbA\")\nFalse\n>>> is_palindrome(\"abcdcbA\")\nFalse\n\
    function candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 32 in /tmp/tmp8y0u2mr1.php on
    line 32

    '
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* is_palindrome is a function that takes string and returns true if it is\
    \ palindrome.\n>>> is_palindrome(\"\")\nTrue\n>>> is_palindrome(\"a\")\nTrue\n\
    >>> is_palindrome(\"aa\")\nTrue\n>>> is_palindrome(\"ab\")\nFalse\n>>> is_palindrome(\"\
    aba\")\nTrue\n>>> is_palindrome(\"abba\")\nTrue\n>>> is_palindrome(\"abcba\")\n\
    True\n>>> is_palindrome(\"abccba\")\nTrue\n>>> is_palindrome(\"abcdcba\")\nTrue\n\
    >>> is_palindrome(\"abcddcba\")\nTrue\n>>> is_palindrome(\"abcdedcba\")\nTrue\n\
    >>> is_palindrome(\"abcdefedcba\")\nTrue\n>>> is_palindrome(\"abcdefgfedcba\"\
    )\nTrue\n>>> is_palindrome(\"abcdefghgfedcba\")\nTrue\n>>> is_palindrome(\"abcdefghihgfedcba\"\
    )\nTrue\n>>> is_palindrome(\"abcdefghijhgfedcba\")\nTrue\n>>> is_palindrome(\"\
    abcdefghijihgfedcba\")\nTrue\n>>> is_palindrome(\"abcdefghijjihgfedcba\")\nTrue\n\
    >>> is_palindrome(\"abcdefghijkjjihgfedcba\")\nTrue\n>>> is_palindrome(\"abcdefghijklkkjihgfedcba\"\
    )\nTrue\n>>> is_palindrome(\"abcdefghijklkjjihgfedcba\")\nTrue\n>>> is_palindrome(\"\
    abcdefghijklkjihgfedcba\")\nTrue\n>>> is_palindrome(\"abcdefghijkljihgfedcba\"\
    )\nTrue\n>>> is_palindrome(\"abcdefghijklihgfedcba\")\nTrue\n>>> is_palindrome(\"\
    abcdefghijkihgfedcba\")\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 19 in /tmp/tmp85fgp0qz.php on
    line 19

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\treturn str_replace($vowels, \"\", $text);\n}\n\n/* remove_vowels_regex\
    \ is a function that takes string and returns string without vowels.\n>>> remove_vowels_regex(\"\
    \")\n\"\"\n>>> remove_vowels_regex(\"abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"\
    aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"\
    zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 255
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* is_palindrome is a function that takes string and returns true if the\
    \ string is palindrome.\n>>> is_palindrome(\"\")\nTrue\n>>> is_palindrome(\"a\"\
    )\nTrue\n>>> is_palindrome(\"ab\")\nFalse\n>>> is_palindrome(\"aba\")\nTrue\n\
    >>> is_palindrome(\"abba\")\nTrue\n>>> is_palindrome(\"abcba\")\nTrue\n>>> is_palindrome(\"\
    abcdba\")\nFalse\n>>> is_palindrome(\"abcdcba\")\nTrue\n>>> is_palindrome(\"abcdcbA\"\
    )\nFalse\n>>> is_palindrome(\"abcddcba\")\nTrue\n>>> is_palindrome(\"abcddcbA\"\
    )\nFalse\n>>> is_palindrome(\"abcddcbB\")\nFalse\n>>> is_palindrome(\"abcddcbb\"\
    )\nFalse\n>>> is_palindrome(\"abcddcbaa\")\nFalse\n>>> is_palindrome(\"abcddcbab\"\
    )\nFalse\n>>> is_palindrome(\"abcddcbba\")\nFalse\n>>> is_palindrome(\"abcddcbbb\"\
    )\nFalse\n>>> is_palindrome(\"abcddcbbc\")\nFalse\n>>> is_palindrome(\"abcddcbbd\"\
    )\nFalse\n>>> is_palindrome(\"abcddcbbe\")\nFalse\n>>> is_palindrome(\"abcddcbbf\"\
    )\nFalse\n>>> is_palindrome(\"abcddcbbg\")\nFalse\n>>> is_palindrome(\"abcddcbbh\"\
    )\nFalse\n>>> is_palindrome(\"abcddcbbi\")\nFalse\n>>> is_palindrome(\"abcddcbbj\"\
    )\nFalse\n>>> is_palindrome(\"abcddcbbk\")\nFalse\n>>> is_palindrome(\"abcddcbbL\"\
    )\nFalse\n>>> is_palindrome(\"abcddcbbm\")\nFalse\n>>> is_palindrome(\"abcddcb\n\
    function candidate(...$args) {\n    return remove_vowels(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: '

    Parse error: Unterminated comment starting line 19 in /tmp/tmplisfsilx.php on
    line 19

    '
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* is_palindrome is a function that takes string and returns true if the\
    \ string is a palindrome, false otherwise.\n>>> is_palindrome(\"\")\nTrue\n>>>\
    \ is_palindrome(\"a\")\nTrue\n>>> is_palindrome(\"aa\")\nTrue\n>>> is_palindrome(\"\
    aba\")\nTrue\n>>> is_palindrome(\"abba\")\nTrue\n>>> is_palindrome(\"abcd\")\n\
    False\n>>> is_palindrome(\"abcba\")\nTrue\n>>> is_palindrome(\"abccba\")\nTrue\n\
    >>> is_palindrome(\"abcda\")\nFalse\n>>> is_palindrome(\"abcdcba\")\nTrue\n>>>\
    \ is_palindrome(\"abcdefghijklmnopqrstuvwxyz\")\nFalse\n>>> is_palindrome(\"abcdefghijklmnopqrstuvwxyzzyxwvutsrqponmlkjihgfedcba\"\
    )\nTrue\n>>> is_palindrome(\"abcdefghijklmnopqrstuvwxyzzyxwvutsrqponmlkjihgfedcbA\"\
    )\nFalse*/\nfunction candidate(...$args) {\n    return remove_vowels(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"fedcba\") !==\
    \ \"fdcb\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"eeeee\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"acBAA\"\
    ) !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    EcBOO\") !== \"cB\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ybcd\") !== \"ybcd\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n\t$vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n\t$text = str_replace($vowels, \"\", $text);\n\treturn $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777
- exit_code: 0
  program: "<?php\n/* remove_vowels is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels(\"\")\n\"\"\n>>> remove_vowels(\"abcdef\"\
    )\n\"bcdf\"\n>>> remove_vowels(\"aaaaa\")\n\"\"\n>>> remove_vowels(\"aaBAA\")\n\
    \"B\"\n>>> remove_vowels(\"zbcd\")\n\"zbcd\"*/\nfunction remove_vowels($text)\
    \ {\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\"\
    , \"O\", \"U\");\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n\
    }\n\n/* remove_vowels_regex is a function that takes string and returns string\
    \ without vowels.\n>>> remove_vowels_regex(\"\")\n\"\"\n>>> remove_vowels_regex(\"\
    abcdef\")\n\"bcdf\"\n>>> remove_vowels_regex(\"aaaaa\")\n\"\"\n>>> remove_vowels_regex(\"\
    aaBAA\")\n\"B\"\n>>> remove_vowels_regex(\"zbcd\")\n\"zbcd\"*/\nfunction candidate(...$args)\
    \ {\n    return remove_vowels(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"abcdef\\nghijklm\") !== \"bcdf\\nghjklm\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"fedcba\") !== \"fdcb\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"eeeee\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"acBAA\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"EcBOO\") !== \"cB\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ybcd\") !== \"ybcd\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220777

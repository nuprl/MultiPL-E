language: php
name: HumanEval_36_fizz_buzz
results:
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $num = $i;\n            while ($num > 0) {\n                if ($num\
    \ % 10 == 7) {\n                    $count++;\n                }\n           \
    \     $num = (int)($num / 10);\n            }\n        }\n    }\n    return $count;\n\
    }\n\n/*\nReturn the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3\n*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/*\nReturn the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3\n*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n  $count = 0;\n  for ($i\
    \ = 1; $i < $n; $i++) {\n    if ($i % 11 == 0 || $i % 13 == 0) {\n      $count\
    \ += substr_count((string)$i, '7');\n    }\n  }\n  return $count;\n}\n\n/* Return\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n2\n>>> fizz_buzz(79)\n\
    3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the sum of the digits of the number n.\n>>> sum_digits(123)\n\
    6\n>>> sum_digits(0)\n0\n>>> sum_digits(1)\n1\n>>> sum_digits(123456789)\n45*/\n\
    function candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, \"7\");\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count($i, '7');\n        }\n    }\n    return $count;\n\
    }\n\n/* Return the sum of all integers less than n which are divisible by 11 or\
    \ 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n2\n>>> fizz_buzz(79)\n3*/\nfunction\
    \ candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n\t$count = 0;\n\tfor ($i\
    \ = 0; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13 == 0) {\n\t\t\t$count\
    \ += substr_count((string)$i, '7');\n\t\t}\n\t}\n\treturn $count;\n}\n\n/* Return\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n2\n>>> fizz_buzz(79)\n\
    3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n\t$count = 0;\n\tfor ($i\
    \ = 1; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13 == 0) {\n\t\t\t$count\
    \ += substr_count((string)$i, '7');\n\t\t}\n\t}\n\treturn $count;\n}\n\n/* Return\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n2\n>>> fizz_buzz(79)\n\
    3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n\t$count = 0;\n\tfor ($i\
    \ = 0; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13 == 0) {\n\t\t\t$count\
    \ += substr_count((string)$i, '7');\n\t\t}\n\t}\n\treturn $count;\n}\n\n/* Return\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n2\n>>> fizz_buzz(79)\n\
    3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n\t$count = 0;\n\tfor ($i\
    \ = 1; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13 == 0) {\n\t\t\t$count\
    \ += substr_count($i, '7');\n\t\t}\n\t}\n\treturn $count;\n}\n\n/* Return the\
    \ number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n2\n>>> fizz_buzz(79)\n\
    3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n\t$count = 0;\n\tfor ($i\
    \ = 0; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13 == 0) {\n\t\t\t$count\
    \ += substr_count((string)$i, '7');\n\t\t}\n\t}\n\treturn $count;\n}\n\n/* Return\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n2\n>>> fizz_buzz(79)\n\
    3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n\t$count = 0;\n\tfor ($i\
    \ = 1; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13 == 0) {\n\t\t\t$count\
    \ += substr_count((string)$i, '7');\n\t\t}\n\t}\n\treturn $count;\n}\n\n/* Return\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n2\n>>> fizz_buzz(79)\n\
    3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n\t$count = 0;\n\tfor ($i\
    \ = 1; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13 == 0) {\n\t\t\t$count\
    \ += substr_count((string)$i, '7');\n\t\t}\n\t}\n\treturn $count;\n}\n\n/* Return\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n2\n>>> fizz_buzz(79)\n\
    3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        if (($i % 11 == 0) || ($i % 13 == 0)) {\n\
    \            $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n\t$count = 0;\n\tfor ($i\
    \ = 1; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13 == 0) {\n\t\t\t$count\
    \ += substr_count((string)$i, '7');\n\t\t}\n\t}\n\treturn $count;\n}\n\n/* Return\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n2\n>>> fizz_buzz(79)\n\
    3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n\t$count = 0;\n\tfor ($i\
    \ = 0; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13 == 0) {\n\t\t\t$count\
    \ += substr_count((string)$i, '7');\n\t\t}\n\t}\n\treturn $count;\n}\n\n/* Return\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n2\n>>> fizz_buzz(79)\n\
    3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n\t$count = 0;\n\tfor ($i\
    \ = 0; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13 == 0) {\n\t\t\t$count\
    \ += substr_count((string)$i, '7');\n\t\t}\n\t}\n\treturn $count;\n}\n\n/* Return\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n2\n>>> fizz_buzz(79)\n\
    3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if (($i % 11 == 0) || ($i % 13 == 0)) {\n\
    \            $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n\t$count = 0;\n\tfor ($i\
    \ = 0; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13 == 0) {\n\t\t\t$count\
    \ += substr_count((string)$i, '7');\n\t\t}\n\t}\n\treturn $count;\n}\n\n/* Return\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n2\n>>> fizz_buzz(79)\n\
    3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the sum of the digits of the integer n.\n>>> digit_sum(123)\n\
    6\n>>> digit_sum(999)\n27\n>>> digit_sum(1234)\n10*/\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n\t$count = 0;\n\tfor ($i\
    \ = 1; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13 == 0) {\n\t\t\t$count\
    \ += substr_count((string)$i, '7');\n\t\t}\n\t}\n\treturn $count;\n}\n\n/* Return\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n2\n>>> fizz_buzz(79)\n\
    3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count($i, '7');\n        }\n    }\n    return $count;\n\
    }\n\n/* Return the number of times the digit 7 appears in integers less than n\
    \ which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n\t$count = 0;\n\tfor ($i\
    \ = 1; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13 == 0) {\n\t\t\t$count\
    \ += substr_count((string)$i, '7');\n\t\t}\n\t}\n\treturn $count;\n}\n\n/* Return\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n2\n>>> fizz_buzz(79)\n\
    3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n\t$count = 0;\n\tfor ($i\
    \ = 1; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13 == 0) {\n\t\t\t$count\
    \ += substr_count((string)$i, '7');\n\t\t}\n\t}\n\treturn $count;\n}\n\n/* Return\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n2\n>>> fizz_buzz(79)\n\
    3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        if (($i % 11 == 0 || $i % 13 == 0) && strpos($i,\
    \ '7') !== false) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\n/* Return the sum of the digits of the integer n.\n>>> sum_digits(0)\n0\n\
    >>> sum_digits(1)\n1\n>>> sum_digits(12345)\n15*/\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp9c2w3e_s.php:32\n\
    Stack trace:\n#0 /tmp/tmp9c2w3e_s.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp9c2w3e_s.php\
    \ on line 32\n"
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the sum of the digits of the integer n.\n>>> digital_sum(1337)\n\
    14\n>>> digital_sum(123456789)\n45*/\nfunction candidate(...$args) {\n    return\
    \ fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50) !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !== 2)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4000) !== 192) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(10000) !== 639) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count($i, '7');\n        }\n    }\n    return $count;\n\
    }\n\n/*\nReturn the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3\n*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n\t$count = 0;\n\tfor ($i\
    \ = 1; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13 == 0) {\n\t\t\t$count\
    \ += substr_count((string)$i, '7');\n\t\t}\n\t}\n\treturn $count;\n}\n\n/* Return\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n2\n>>> fizz_buzz(79)\n\
    3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n\t$count = 0;\n\tfor ($i\
    \ = 1; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13 == 0) {\n\t\t\t$count\
    \ += substr_count((string)$i, '7');\n\t\t}\n\t}\n\treturn $count;\n}\n\n/* Return\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n2\n>>> fizz_buzz(79)\n\
    3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the sum of the digits of n.\n>>> digit_sum(1234)\n10\n\
    >>> digit_sum(0)\n0\n>>> digit_sum(123456789)\n45*/\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n\t$count = 0;\n\tfor ($i\
    \ = 0; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13 == 0) {\n\t\t\t$count\
    \ += substr_count((string)$i, '7');\n\t\t}\n\t}\n\treturn $count;\n}\n\n/* Return\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n2\n>>> fizz_buzz(79)\n\
    3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if (($i % 11 == 0) || ($i % 13 == 0)) {\n\
    \            $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n\t$count = 0;\n\tfor ($i\
    \ = 0; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13 == 0) {\n\t\t\t$count\
    \ += substr_count((string)$i, '7');\n\t\t}\n\t}\n\treturn $count;\n}\n\n/* Return\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n2\n>>> fizz_buzz(79)\n\
    3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count($i, 7);\n        }\n    }\n    return $count;\n\
    }\n\n/* Return the number of times the digit 7 appears in integers less than n\
    \ which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n\t$count = 0;\n\tfor ($i\
    \ = 1; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13 == 0) {\n\t\t\t$count\
    \ += substr_count((string)$i, '7');\n\t\t}\n\t}\n\treturn $count;\n}\n\n/* Return\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n2\n>>> fizz_buzz(79)\n\
    3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count($i, 7);\n        }\n    }\n    return $count;\n\
    }\n\n/* Return the number of times the digit 7 appears in integers less than n\
    \ which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count($i, '7');\n        }\n    }\n    return $count;\n\
    }\n\n/* Return the number of times the digit 7 appears in integers less than n\
    \ which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n\t$count = 0;\n\tfor ($i\
    \ = 1; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13 == 0) {\n\t\t\t$count\
    \ += substr_count((string)$i, '7');\n\t\t}\n\t}\n\treturn $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the sum of the digits of the integer n.\n>>> digital_sum(1337)\n\
    14\n>>> digital_sum(0)\n0\n>>> digital_sum(123456789)\n45*/\nfunction candidate(...$args)\
    \ {\n    return fizz_buzz(...$args);\n}\n\nfunction test(): void {\n    if (candidate(50)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(78) !==\
    \ 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(79) !== 3)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(200) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4000) !== 192) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10000) !== 639) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(100000) !== 8026) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n\t$count = 0;\n\tfor ($i\
    \ = 0; $i < $n; $i++) {\n\t\tif ($i % 11 == 0 || $i % 13 == 0) {\n\t\t\t$count\
    \ += substr_count((string)$i, '7');\n\t\t}\n\t}\n\treturn $count;\n}\n\n/* Return\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n2\n>>> fizz_buzz(79)\n\
    3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4000)\
    \ !== 192) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10000)\
    \ !== 639) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100000)\
    \ !== 8026) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 255
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if (($i % 11 == 0 || $i % 13 == 0) && strpos($i,\
    \ '7') !== false) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\n/* Return the number of times the digit 7 appears in integers less than n\
    \ which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: Exception
  stderr: ''
  stdout: "\nFatal error: Uncaught Exception: Test failed! in /tmp/tmp1czmd86v.php:32\n\
    Stack trace:\n#0 /tmp/tmp1czmd86v.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp1czmd86v.php\
    \ on line 32\n"
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
- exit_code: 0
  program: "<?php\n/* Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction fizz_buzz($n) {\n    $count = 0;\n    for\
    \ ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n   \
    \         $count += substr_count((string)$i, '7');\n        }\n    }\n    return\
    \ $count;\n}\n\n/* Return the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3*/\nfunction candidate(...$args) {\n    return fizz_buzz(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(50) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(78) !== 2) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(79) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(100) !== 3) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(200) !== 6) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(4000) !== 192) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(10000) !== 639) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100000) !== 8026) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660220717
